{
	"id": "ccdde299651caff05ad6f878f3c28f8e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Signs 2/SignsToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"./ISigns.sol\";\r\nimport \"./ISignsNFT.sol\";\r\n\r\n/**\r\n * @title SignToken\r\n * @dev ERC20 token for the Signs game economy, managing sign balances and wage payments\r\n */\r\ncontract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {\r\n    // Contract references\r\n    ISignsNFT public signsNFT;\r\n    address public signsNFTContract;\r\n    \r\n    // Commission settings\r\n    uint256 public commissionPercent; // Commission in basis points (1% = 100)\r\n    address public commissionTreasury;\r\n    \r\n    // Constants\r\n    uint256 private constant BASIS_POINTS = 10000; // 100% = 10000\r\n    \r\n    // Sign balances\r\n    mapping(uint256 => uint256) public signBalances;  // tokenId => balance\r\n    \r\n    // Events\r\n    event SignBalanceCharged(uint256 indexed tokenId, uint256 amount);\r\n    event SignBalanceWithdrawn(uint256 indexed tokenId, address indexed owner, uint256 amount);\r\n    event WagePaid(uint256 indexed tokenId, address indexed carrier, uint256 amount);\r\n    event NFTContractUpdated(address newAddress);\r\n    event CommissionUpdated(uint256 newCommissionPercent);\r\n    event CommissionTreasuryUpdated(address newTreasury);\r\n    event CommissionPaid(uint256 indexed tokenId, uint256 amount);\r\n    \r\n    // Errors\r\n    error UnauthorizedCaller();\r\n    error InvalidCommission();\r\n    error InvalidTreasuryAddress();\r\n    error InsufficientSignBalance();\r\n    error InsufficientBalance();\r\n    error InvalidAmount();\r\n    error InvalidNFTContract();\r\n    error UnauthorizedOwner();\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        address _signsNFTContract,\r\n        address _commissionTreasury\r\n    ) ERC20(name, symbol) Ownable(msg.sender) {\r\n        if (_signsNFTContract == address(0)) revert InvalidNFTContract();\r\n        if (_commissionTreasury == address(0)) revert InvalidTreasuryAddress();\r\n        \r\n        signsNFTContract = _signsNFTContract;\r\n        commissionTreasury = _commissionTreasury;\r\n        commissionPercent = 500; // Default 5% commission\r\n\r\n        _mint(msg.sender, 1_000_000 * 10**decimals());\r\n    }\r\n\r\n    // Modifiers\r\n    modifier onlySignsNFT() {\r\n        if (msg.sender != signsNFTContract) revert UnauthorizedCaller();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Charges a sign's balance with tokens\r\n     * @param tokenId The ID of the sign to charge\r\n     * @param amount Amount of tokens to charge\r\n     */\r\n    function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {\r\n        if (amount == 0) revert InvalidAmount();\r\n        \r\n        address sender = msg.sender;\r\n        \r\n        // Transfer tokens from user to SignsNFT contract\r\n        //bool success = transferFrom(sender, signsNFTContract, amount);\r\n        bool success = transfer(signsNFTContract, amount);\r\n        require(success, \"Token transfer failed\");\r\n        \r\n        // Update sign balance\r\n        signBalances[tokenId] += amount;\r\n        \r\n        emit SignBalanceCharged(tokenId, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws tokens from a sign's balance back to the owner\r\n     * @param tokenId The ID of the sign\r\n     * @param amount Amount to withdraw\r\n     */\r\n    function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {\r\n        // Check if caller owns the sign using SignsNFT contract\r\n        if (!_isSignOwner(msg.sender, tokenId)) revert UnauthorizedOwner();\r\n        \r\n        if (amount == 0) revert InvalidAmount();\r\n        if (signBalances[tokenId] < amount) revert InsufficientSignBalance();\r\n        \r\n        // Update balance before transfer\r\n        signBalances[tokenId] -= amount;\r\n        \r\n        // Transfer tokens from SignsNFT contract to owner\r\n        bool success = transferFrom(signsNFTContract, msg.sender, amount);\r\n        require(success, \"Transfer failed\");\r\n        \r\n        emit SignBalanceWithdrawn(tokenId, msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Pays wage to carrier from sign's balance\r\n     * @param tokenId The ID of the sign\r\n     * @param carrier Address of the carrier to pay\r\n     * @param amount Amount of wage to pay\r\n     */\r\n    struct WagePaymentResult {\r\n        uint256 paidAmount;      // Actual amount paid\r\n        uint256 remainingWage;   // Unpaid amount\r\n        bool isPartialPayment;   // Whether this was a partial payment\r\n    }\r\n\r\n    event LowSignBalance(uint256 indexed tokenId, uint256 currentBalance, uint256 requiredAmount);\r\n    event PartialWagePaid(\r\n        uint256 indexed tokenId, \r\n        address indexed carrier, \r\n        uint256 paidAmount, \r\n        uint256 remainingUnpaid\r\n    );\r\n\r\n    /**\r\n     * @dev Pays wage to carrier from sign's balance, handles partial payments\r\n     * @param tokenId The ID of the sign\r\n     * @param carrier Address of the carrier to pay\r\n     * @param amount Amount of wage to pay\r\n     * @return result WagePaymentResult struct with payment details\r\n     */\r\n    function payWage(\r\n        uint256 tokenId,\r\n        address carrier,\r\n        uint256 amount\r\n    ) external onlySignsNFT nonReentrant whenNotPaused returns (WagePaymentResult memory) {\r\n        if (amount == 0) revert InvalidAmount();\r\n        \r\n        uint256 currentBalance = signBalances[tokenId];\r\n        bool isFullPayment = currentBalance >= amount;\r\n        uint256 paymentAmount;\r\n        uint256 commissionAmount;\r\n        \r\n        //bool success = transferFrom(signsNFTContract, carrier, 100000);\r\n        //bool success = transfer(carrier, amount);\r\n        if (isFullPayment) {\r\n            // Calculate commission\r\n            commissionAmount = (amount * commissionPercent) / BASIS_POINTS;\r\n            paymentAmount = amount - commissionAmount;\r\n            \r\n            // Update balance before transfers\r\n            signBalances[tokenId] = currentBalance - amount;\r\n            \r\n            // Transfer commission from SignsNFT contract\r\n            if (commissionAmount > 0) {\r\n                //bool commissionSuccess = transferFrom(signsNFTContract, commissionTreasury, commissionAmount);\r\n                bool commissionSuccess = transfer(commissionTreasury, commissionAmount);\r\n                require(commissionSuccess, \"Commission transfer failed\");\r\n                emit CommissionPaid(tokenId, commissionAmount);\r\n            }\r\n            \r\n            // Transfer wage from SignsNFT contract to carrier\r\n            //bool success = transferFrom(signsNFTContract, carrier, paymentAmount);\r\n            bool success = transfer(carrier, paymentAmount);\r\n            require(success, \"Wage transfer failed\");\r\n            \r\n            emit WagePaid(tokenId, carrier, paymentAmount);\r\n        } else {\r\n            // For partial payments, no commission\r\n            paymentAmount = currentBalance;\r\n            commissionAmount = 0;\r\n            \r\n            // Update balance before transfer\r\n            signBalances[tokenId] = 0;\r\n            \r\n            if (paymentAmount > 0) {\r\n                // Transfer all available balance from SignsNFT contract to carrier\r\n                //bool success = transferFrom(signsNFTContract, carrier, paymentAmount);\r\n                bool success = transfer(carrier, paymentAmount);\r\n                require(success, \"Partial wage transfer failed\");\r\n                \r\n                emit PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount);\r\n            }\r\n            \r\n            emit LowSignBalance(tokenId, currentBalance, amount);\r\n        }\r\n        \r\n        return WagePaymentResult({\r\n            paidAmount: paymentAmount,\r\n            remainingWage: amount - paymentAmount,\r\n            isPartialPayment: !isFullPayment\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the SignsNFT contract address\r\n     * @param _newAddress New contract address\r\n     */\r\n    function updateSignsNFTContract(address _newAddress) external onlyOwner {\r\n        if (_newAddress == address(0)) revert InvalidNFTContract();\r\n        signsNFTContract = _newAddress;\r\n        signsNFT = ISignsNFT(_newAddress);\r\n        emit NFTContractUpdated(_newAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if an address owns a specific sign\r\n     * @param owner Address to check\r\n     * @param tokenId Sign ID to check\r\n     */\r\n    function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\r\n        // This should integrate with your SignsNFT contract\r\n        // Implementation depends on your NFT contract interface\r\n        return true; // Placeholder - implement actual check\r\n    }\r\n\r\n    // Pause/unpause functionality\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the commission percentage\r\n     * @param newCommissionPercent New commission in basis points (1% = 100)\r\n     */\r\n    function updateCommission(uint256 newCommissionPercent) external onlyOwner {\r\n        if (newCommissionPercent > BASIS_POINTS) revert InvalidCommission();\r\n        commissionPercent = newCommissionPercent;\r\n        emit CommissionUpdated(newCommissionPercent);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the commission treasury address\r\n     * @param newTreasury New treasury address\r\n     */\r\n    function updateCommissionTreasury(address newTreasury) external onlyOwner {\r\n        if (newTreasury == address(0)) revert InvalidTreasuryAddress();\r\n        commissionTreasury = newTreasury;\r\n        emit CommissionTreasuryUpdated(newTreasury);\r\n    }\r\n\r\n    // Override transfer functions to check for pause state\r\n    function transfer(address to, uint256 amount) \r\n        public \r\n        virtual \r\n        override \r\n        whenNotPaused \r\n        returns (bool) \r\n    {\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n        function getApprovalInfo(address owner) external view returns (\r\n        uint256 balance,\r\n        uint256 contractAllowance\r\n    ) {\r\n        return (\r\n            balanceOf(owner),\r\n            allowance(owner, address(this))\r\n        );\r\n    }\r\n}"
			},
			"Signs 2/ISignsNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"./ISigns.sol\";\r\n\r\ninterface ISignsNFT {\r\n    struct Sign {\r\n        ISigns.Location home;\r\n        ISigns.Location current;\r\n        uint256 totalMoves;\r\n        uint256 totalDistanceMeters;\r\n        uint256 weight;\r\n        address owner;\r\n        bool isPickedUp;\r\n        bytes32 contentHash;\r\n        uint256 signWage;\r\n    }\r\n    \r\n    function signs(uint256 tokenId) external view returns (\r\n        ISigns.Location memory home,\r\n        ISigns.Location memory current,\r\n        uint256 totalMoves,\r\n        uint256 totalDistanceMeters,\r\n        uint256 weight,\r\n        address owner,\r\n        bool isPickedUp,\r\n        bytes32 contentHash,\r\n        uint256 signWage\r\n    );\r\n}"
			},
			"Signs 2/ISigns.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ninterface ISigns {\r\n    struct Location {\r\n        int64 latitude;    // ~4 decimal places precision (-90 to +90)\r\n        int64 longitude;   // ~4 decimal places precision (-180 to +180)\r\n        uint64 timestamp;  // Good until year 2554\r\n    }\r\n\r\n    struct MovementRecord {\r\n        Location fromLocation;\r\n        Location toLocation;\r\n        address carrier;\r\n        uint96 wage;\r\n    }\r\n\r\n    function recordMovement(\r\n        uint256 tokenId,\r\n        address carrier,\r\n        Location calldata fromLoc,\r\n        Location calldata toLoc,\r\n        uint256 wage,\r\n        bytes32 contentHash\r\n    ) external;\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Signs 2/ISigns.sol": {
				"ISigns": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "int64",
											"name": "latitude",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "longitude",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "timestamp",
											"type": "uint64"
										}
									],
									"internalType": "struct ISigns.Location",
									"name": "fromLoc",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int64",
											"name": "latitude",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "longitude",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "timestamp",
											"type": "uint64"
										}
									],
									"internalType": "struct ISigns.Location",
									"name": "toLoc",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "wage",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "contentHash",
									"type": "bytes32"
								}
							],
							"name": "recordMovement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"recordMovement(uint256,address,(int64,int64,uint64),(int64,int64,uint64),uint256,bytes32)": "080807be"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"latitude\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"longitude\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct ISigns.Location\",\"name\":\"fromLoc\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"latitude\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"longitude\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct ISigns.Location\",\"name\":\"toLoc\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"wage\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"contentHash\",\"type\":\"bytes32\"}],\"name\":\"recordMovement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Signs 2/ISigns.sol\":\"ISigns\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Signs 2/ISigns.sol\":{\"keccak256\":\"0x9c0bef879fb7feff9e671c7da1d5ee05635a3efd3828c3fa2c0ca8bf45c30fe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14d373e0f2aa9296521a57c7eb51c1df0bf1a86b189b0c05bf4dc4254b7c0ad4\",\"dweb:/ipfs/Qmcmh3KGqJ1efv8EQUf2h18saPd4PUvtAqcqnde2KsdETr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Signs 2/ISignsNFT.sol": {
				"ISignsNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "signs",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "latitude",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "longitude",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "timestamp",
											"type": "uint64"
										}
									],
									"internalType": "struct ISigns.Location",
									"name": "home",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int64",
											"name": "latitude",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "longitude",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "timestamp",
											"type": "uint64"
										}
									],
									"internalType": "struct ISigns.Location",
									"name": "current",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "totalMoves",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDistanceMeters",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isPickedUp",
									"type": "bool"
								},
								{
									"internalType": "bytes32",
									"name": "contentHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "signWage",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"signs(uint256)": "cb75b997"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"signs\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"latitude\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"longitude\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct ISigns.Location\",\"name\":\"home\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"latitude\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"longitude\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct ISigns.Location\",\"name\":\"current\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"totalMoves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDistanceMeters\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPickedUp\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"contentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"signWage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Signs 2/ISignsNFT.sol\":\"ISignsNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Signs 2/ISigns.sol\":{\"keccak256\":\"0x9c0bef879fb7feff9e671c7da1d5ee05635a3efd3828c3fa2c0ca8bf45c30fe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14d373e0f2aa9296521a57c7eb51c1df0bf1a86b189b0c05bf4dc4254b7c0ad4\",\"dweb:/ipfs/Qmcmh3KGqJ1efv8EQUf2h18saPd4PUvtAqcqnde2KsdETr\"]},\"Signs 2/ISignsNFT.sol\":{\"keccak256\":\"0x0b60a8c4fc04df1d276f2cecdce1cf978aafa1523eb70fbf4799f21d579a5245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d32b9c158e6f97269d96dfe2a1b56ba4760e660cdc9a6e6181aa9d15d078729\",\"dweb:/ipfs/QmaP7HD3v7jLcdc1zxU5LVLA7Zw59uQMm2q157zf8c8MJh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Signs 2/SignsToken.sol": {
				"SignToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_signsNFTContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_commissionTreasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientSignBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCommission",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNFTContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTreasuryAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CommissionPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "CommissionTreasuryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCommissionPercent",
									"type": "uint256"
								}
							],
							"name": "CommissionUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requiredAmount",
									"type": "uint256"
								}
							],
							"name": "LowSignBalance",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "NFTContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paidAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "remainingUnpaid",
									"type": "uint256"
								}
							],
							"name": "PartialWagePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SignBalanceCharged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SignBalanceWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WagePaid",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "chargeSignBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commissionPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commissionTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getApprovalInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractAllowance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "payWage",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "paidAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "remainingWage",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isPartialPayment",
											"type": "bool"
										}
									],
									"internalType": "struct SignToken.WagePaymentResult",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "signBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signsNFT",
							"outputs": [
								{
									"internalType": "contract ISignsNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signsNFTContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCommissionPercent",
									"type": "uint256"
								}
							],
							"name": "updateCommission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "updateCommissionTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAddress",
									"type": "address"
								}
							],
							"name": "updateSignsNFTContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawSignBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token for the Signs game economy, managing sign balances and wage payments",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"chargeSignBalance(uint256,uint256)": {
								"details": "Charges a sign's balance with tokens",
								"params": {
									"amount": "Amount of tokens to charge",
									"tokenId": "The ID of the sign to charge"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"payWage(uint256,address,uint256)": {
								"details": "Pays wage to carrier from sign's balance, handles partial payments",
								"params": {
									"amount": "Amount of wage to pay",
									"carrier": "Address of the carrier to pay",
									"tokenId": "The ID of the sign"
								},
								"returns": {
									"_0": "result WagePaymentResult struct with payment details"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateCommission(uint256)": {
								"details": "Updates the commission percentage",
								"params": {
									"newCommissionPercent": "New commission in basis points (1% = 100)"
								}
							},
							"updateCommissionTreasury(address)": {
								"details": "Updates the commission treasury address",
								"params": {
									"newTreasury": "New treasury address"
								}
							},
							"updateSignsNFTContract(address)": {
								"details": "Updates the SignsNFT contract address",
								"params": {
									"_newAddress": "New contract address"
								}
							},
							"withdrawSignBalance(uint256,uint256)": {
								"details": "Withdraws tokens from a sign's balance back to the owner",
								"params": {
									"amount": "Amount to withdraw",
									"tokenId": "The ID of the sign"
								}
							}
						},
						"title": "SignToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Signs 2/SignsToken.sol\":467:10594  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Signs 2/SignsToken.sol\":1792:2374  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Signs 2/SignsToken.sol\":1973:1983  msg.sender */\n  caller\n    /* \"Signs 2/SignsToken.sol\":1951:1955  name */\n  dup5\n    /* \"Signs 2/SignsToken.sol\":1957:1963  symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2029:2030  0 */\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2000:2031  _signsNFTContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Signs 2/SignsToken.sol\":2000:2017  _signsNFTContract */\n  dup3\n    /* \"Signs 2/SignsToken.sol\":2000:2031  _signsNFTContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Signs 2/SignsToken.sol\":1996:2060  if (_signsNFTContract == address(0)) revert InvalidNFTContract() */\n  tag_22\n  jumpi\n    /* \"Signs 2/SignsToken.sol\":2040:2060  InvalidNFTContract() */\n  mload(0x40)\n  0xf8af67e500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Signs 2/SignsToken.sol\":1996:2060  if (_signsNFTContract == address(0)) revert InvalidNFTContract() */\ntag_22:\n    /* \"Signs 2/SignsToken.sol\":2106:2107  0 */\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2075:2108  _commissionTreasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Signs 2/SignsToken.sol\":2075:2094  _commissionTreasury */\n  dup2\n    /* \"Signs 2/SignsToken.sol\":2075:2108  _commissionTreasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Signs 2/SignsToken.sol\":2071:2141  if (_commissionTreasury == address(0)) revert InvalidTreasuryAddress() */\n  tag_23\n  jumpi\n    /* \"Signs 2/SignsToken.sol\":2117:2141  InvalidTreasuryAddress() */\n  mload(0x40)\n  0xcfe2ea6300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Signs 2/SignsToken.sol\":2071:2141  if (_commissionTreasury == address(0)) revert InvalidTreasuryAddress() */\ntag_23:\n    /* \"Signs 2/SignsToken.sol\":2181:2198  _signsNFTContract */\n  dup2\n    /* \"Signs 2/SignsToken.sol\":2162:2178  signsNFTContract */\n  0x08\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2162:2198  signsNFTContract = _signsNFTContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2230:2249  _commissionTreasury */\n  dup1\n    /* \"Signs 2/SignsToken.sol\":2209:2227  commissionTreasury */\n  0x0a\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2209:2249  commissionTreasury = _commissionTreasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2280:2283  500 */\n  0x01f4\n    /* \"Signs 2/SignsToken.sol\":2260:2277  commissionPercent */\n  0x09\n    /* \"Signs 2/SignsToken.sol\":2260:2283  commissionPercent = 500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2321:2366  _mint(msg.sender, 1_000_000 * 10**decimals()) */\n  tag_24\n    /* \"Signs 2/SignsToken.sol\":2327:2337  msg.sender */\n  caller\n    /* \"Signs 2/SignsToken.sol\":2355:2365  decimals() */\n  tag_25\n    /* \"Signs 2/SignsToken.sol\":2355:2363  decimals */\n  shl(0x20, tag_26)\n    /* \"Signs 2/SignsToken.sol\":2355:2365  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Signs 2/SignsToken.sol\":2351:2353  10 */\n  0x0a\n    /* \"Signs 2/SignsToken.sol\":2351:2365  10**decimals() */\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"Signs 2/SignsToken.sol\":2339:2348  1_000_000 */\n  0x0f4240\n    /* \"Signs 2/SignsToken.sol\":2339:2365  1_000_000 * 10**decimals() */\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"Signs 2/SignsToken.sol\":2321:2326  _mint */\n  shl(0x20, tag_31)\n    /* \"Signs 2/SignsToken.sol\":2321:2366  _mint(msg.sender, 1_000_000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Signs 2/SignsToken.sol\":1792:2374  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Signs 2/SignsToken.sol\":467:10594  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_44)\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_46\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_49)\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_52:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_53:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_54:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_55:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_56:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_57:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_58:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_59:\n    /* \"#utility.yul\":957:984   */\n  tag_104\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_106\n  tag_58\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1030:1118   */\ntag_105:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_60:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_108\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_109\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_61:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_112\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1434:1490   */\ntag_111:\n    /* \"#utility.yul\":1508:1537   */\n  tag_113\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_57\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_62:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_63:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_116\n    /* \"#utility.yul\":1885:1934   */\n  tag_117\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_61\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1869:1935   */\n  tag_60\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_119\n  tag_56\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2010:2122   */\ntag_118:\n    /* \"#utility.yul\":2131:2183   */\n  tag_120\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_62\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_64:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_123\n  tag_55\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2292:2414   */\ntag_122:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_124\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_63\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_65:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_66:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_127\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_65\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_67:\n    /* \"#utility.yul\":2877:2901   */\n  tag_129\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_66\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_130:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_68:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_132\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4247   */\ntag_3:\n    /* \"#utility.yul\":3198:3204   */\n  0x00\n    /* \"#utility.yul\":3206:3212   */\n  dup1\n    /* \"#utility.yul\":3214:3220   */\n  0x00\n    /* \"#utility.yul\":3222:3228   */\n  dup1\n    /* \"#utility.yul\":3271:3274   */\n  0x80\n    /* \"#utility.yul\":3259:3268   */\n  dup6\n    /* \"#utility.yul\":3250:3257   */\n  dup8\n    /* \"#utility.yul\":3246:3269   */\n  sub\n    /* \"#utility.yul\":3242:3275   */\n  slt\n    /* \"#utility.yul\":3239:3359   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":3278:3357   */\n  tag_135\n  tag_53\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3239:3359   */\ntag_134:\n    /* \"#utility.yul\":3419:3420   */\n  0x00\n    /* \"#utility.yul\":3408:3417   */\n  dup6\n    /* \"#utility.yul\":3404:3421   */\n  add\n    /* \"#utility.yul\":3398:3422   */\n  mload\n    /* \"#utility.yul\":3449:3467   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3441:3447   */\n  dup2\n    /* \"#utility.yul\":3438:3468   */\n  gt\n    /* \"#utility.yul\":3435:3552   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3471:3550   */\n  tag_137\n  tag_54\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3435:3552   */\ntag_136:\n    /* \"#utility.yul\":3576:3650   */\n  tag_138\n    /* \"#utility.yul\":3642:3649   */\n  dup8\n    /* \"#utility.yul\":3633:3639   */\n  dup3\n    /* \"#utility.yul\":3622:3631   */\n  dup9\n    /* \"#utility.yul\":3618:3640   */\n  add\n    /* \"#utility.yul\":3576:3650   */\n  tag_64\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3566:3650   */\n  swap5\n  pop\n    /* \"#utility.yul\":3369:3660   */\n  pop\n    /* \"#utility.yul\":3720:3722   */\n  0x20\n    /* \"#utility.yul\":3709:3718   */\n  dup6\n    /* \"#utility.yul\":3705:3723   */\n  add\n    /* \"#utility.yul\":3699:3724   */\n  mload\n    /* \"#utility.yul\":3751:3769   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3743:3749   */\n  dup2\n    /* \"#utility.yul\":3740:3770   */\n  gt\n    /* \"#utility.yul\":3737:3854   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":3773:3852   */\n  tag_140\n  tag_54\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3737:3854   */\ntag_139:\n    /* \"#utility.yul\":3878:3952   */\n  tag_141\n    /* \"#utility.yul\":3944:3951   */\n  dup8\n    /* \"#utility.yul\":3935:3941   */\n  dup3\n    /* \"#utility.yul\":3924:3933   */\n  dup9\n    /* \"#utility.yul\":3920:3942   */\n  add\n    /* \"#utility.yul\":3878:3952   */\n  tag_64\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3868:3952   */\n  swap4\n  pop\n    /* \"#utility.yul\":3670:3962   */\n  pop\n    /* \"#utility.yul\":4001:4003   */\n  0x40\n    /* \"#utility.yul\":4027:4091   */\n  tag_142\n    /* \"#utility.yul\":4083:4090   */\n  dup8\n    /* \"#utility.yul\":4074:4080   */\n  dup3\n    /* \"#utility.yul\":4063:4072   */\n  dup9\n    /* \"#utility.yul\":4059:4081   */\n  add\n    /* \"#utility.yul\":4027:4091   */\n  tag_68\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4017:4091   */\n  swap3\n  pop\n    /* \"#utility.yul\":3972:4101   */\n  pop\n    /* \"#utility.yul\":4140:4142   */\n  0x60\n    /* \"#utility.yul\":4166:4230   */\n  tag_143\n    /* \"#utility.yul\":4222:4229   */\n  dup8\n    /* \"#utility.yul\":4213:4219   */\n  dup3\n    /* \"#utility.yul\":4202:4211   */\n  dup9\n    /* \"#utility.yul\":4198:4220   */\n  add\n    /* \"#utility.yul\":4166:4230   */\n  tag_68\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4156:4230   */\n  swap2\n  pop\n    /* \"#utility.yul\":4111:4240   */\n  pop\n    /* \"#utility.yul\":3081:4247   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4253:4352   */\ntag_69:\n    /* \"#utility.yul\":4305:4311   */\n  0x00\n    /* \"#utility.yul\":4339:4344   */\n  dup2\n    /* \"#utility.yul\":4333:4345   */\n  mload\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4253:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4538   */\ntag_70:\n    /* \"#utility.yul\":4406:4483   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4403:4404   */\n  0x00\n    /* \"#utility.yul\":4396:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x22\n    /* \"#utility.yul\":4500:4501   */\n  0x04\n    /* \"#utility.yul\":4493:4508   */\n  mstore\n    /* \"#utility.yul\":4527:4531   */\n  0x24\n    /* \"#utility.yul\":4524:4525   */\n  0x00\n    /* \"#utility.yul\":4517:4532   */\n  revert\n    /* \"#utility.yul\":4544:4864   */\ntag_71:\n    /* \"#utility.yul\":4588:4594   */\n  0x00\n    /* \"#utility.yul\":4625:4626   */\n  0x02\n    /* \"#utility.yul\":4619:4623   */\n  dup3\n    /* \"#utility.yul\":4615:4627   */\n  div\n    /* \"#utility.yul\":4605:4627   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4673   */\n  0x01\n    /* \"#utility.yul\":4666:4670   */\n  dup3\n    /* \"#utility.yul\":4662:4674   */\n  and\n    /* \"#utility.yul\":4693:4711   */\n  dup1\n    /* \"#utility.yul\":4683:4764   */\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4749:4753   */\n  0x7f\n    /* \"#utility.yul\":4741:4747   */\n  dup3\n    /* \"#utility.yul\":4737:4754   */\n  and\n    /* \"#utility.yul\":4727:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4764   */\ntag_147:\n    /* \"#utility.yul\":4811:4813   */\n  0x20\n    /* \"#utility.yul\":4803:4809   */\n  dup3\n    /* \"#utility.yul\":4800:4814   */\n  lt\n    /* \"#utility.yul\":4780:4798   */\n  dup2\n    /* \"#utility.yul\":4777:4815   */\n  sub\n    /* \"#utility.yul\":4774:4858   */\n  tag_148\n  jumpi\n    /* \"#utility.yul\":4830:4848   */\n  tag_149\n  tag_70\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4774:4858   */\ntag_148:\n    /* \"#utility.yul\":4595:4864   */\n  pop\n    /* \"#utility.yul\":4544:4864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4870:5011   */\ntag_72:\n    /* \"#utility.yul\":4919:4923   */\n  0x00\n    /* \"#utility.yul\":4942:4945   */\n  dup2\n    /* \"#utility.yul\":4934:4945   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:4968   */\n  dup2\n    /* \"#utility.yul\":4962:4963   */\n  0x00\n    /* \"#utility.yul\":4955:4969   */\n  mstore\n    /* \"#utility.yul\":4999:5003   */\n  0x20\n    /* \"#utility.yul\":4996:4997   */\n  0x00\n    /* \"#utility.yul\":4986:5004   */\n  keccak256\n    /* \"#utility.yul\":4978:5004   */\n  swap1\n  pop\n    /* \"#utility.yul\":4870:5011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5017:5110   */\ntag_73:\n    /* \"#utility.yul\":5054:5060   */\n  0x00\n    /* \"#utility.yul\":5101:5103   */\n  0x20\n    /* \"#utility.yul\":5096:5098   */\n  0x1f\n    /* \"#utility.yul\":5089:5094   */\n  dup4\n    /* \"#utility.yul\":5085:5099   */\n  add\n    /* \"#utility.yul\":5081:5104   */\n  div\n    /* \"#utility.yul\":5071:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5017:5110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5116:5223   */\ntag_74:\n    /* \"#utility.yul\":5160:5168   */\n  0x00\n    /* \"#utility.yul\":5210:5215   */\n  dup3\n    /* \"#utility.yul\":5204:5208   */\n  dup3\n    /* \"#utility.yul\":5200:5216   */\n  shl\n    /* \"#utility.yul\":5179:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5116:5223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5622   */\ntag_75:\n    /* \"#utility.yul\":5298:5304   */\n  0x00\n    /* \"#utility.yul\":5348:5349   */\n  0x08\n    /* \"#utility.yul\":5336:5346   */\n  dup4\n    /* \"#utility.yul\":5332:5350   */\n  mul\n    /* \"#utility.yul\":5371:5468   */\n  tag_154\n    /* \"#utility.yul\":5401:5467   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5390:5399   */\n  dup3\n    /* \"#utility.yul\":5371:5468   */\n  tag_74\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5489:5528   */\n  tag_155\n    /* \"#utility.yul\":5519:5527   */\n  dup7\n    /* \"#utility.yul\":5508:5517   */\n  dup4\n    /* \"#utility.yul\":5489:5528   */\n  tag_74\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5477:5528   */\n  swap6\n  pop\n    /* \"#utility.yul\":5561:5565   */\n  dup1\n    /* \"#utility.yul\":5557:5566   */\n  not\n    /* \"#utility.yul\":5550:5555   */\n  dup5\n    /* \"#utility.yul\":5546:5567   */\n  and\n    /* \"#utility.yul\":5537:5567   */\n  swap4\n  pop\n    /* \"#utility.yul\":5610:5614   */\n  dup1\n    /* \"#utility.yul\":5600:5608   */\n  dup7\n    /* \"#utility.yul\":5596:5615   */\n  and\n    /* \"#utility.yul\":5589:5594   */\n  dup5\n    /* \"#utility.yul\":5586:5616   */\n  or\n    /* \"#utility.yul\":5576:5616   */\n  swap3\n  pop\n    /* \"#utility.yul\":5305:5622   */\n  pop\n  pop\n    /* \"#utility.yul\":5229:5622   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5628:5705   */\ntag_76:\n    /* \"#utility.yul\":5665:5672   */\n  0x00\n    /* \"#utility.yul\":5694:5699   */\n  dup2\n    /* \"#utility.yul\":5683:5699   */\n  swap1\n  pop\n    /* \"#utility.yul\":5628:5705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5711:5771   */\ntag_77:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5765   */\n  dup2\n    /* \"#utility.yul\":5753:5765   */\n  swap1\n  pop\n    /* \"#utility.yul\":5711:5771   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5777:5919   */\ntag_78:\n    /* \"#utility.yul\":5827:5836   */\n  0x00\n    /* \"#utility.yul\":5860:5913   */\n  tag_159\n    /* \"#utility.yul\":5878:5912   */\n  tag_160\n    /* \"#utility.yul\":5887:5911   */\n  tag_161\n    /* \"#utility.yul\":5905:5910   */\n  dup5\n    /* \"#utility.yul\":5887:5911   */\n  tag_76\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5878:5912   */\n  tag_77\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5860:5913   */\n  tag_76\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5847:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5777:5919   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5925:6000   */\ntag_79:\n    /* \"#utility.yul\":5968:5971   */\n  0x00\n    /* \"#utility.yul\":5989:5994   */\n  dup2\n    /* \"#utility.yul\":5982:5994   */\n  swap1\n  pop\n    /* \"#utility.yul\":5925:6000   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6275   */\ntag_80:\n    /* \"#utility.yul\":6116:6155   */\n  tag_164\n    /* \"#utility.yul\":6147:6154   */\n  dup4\n    /* \"#utility.yul\":6116:6155   */\n  tag_78\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6177:6268   */\n  tag_165\n    /* \"#utility.yul\":6226:6267   */\n  tag_166\n    /* \"#utility.yul\":6250:6266   */\n  dup3\n    /* \"#utility.yul\":6226:6267   */\n  tag_79\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6218:6224   */\n  dup5\n    /* \"#utility.yul\":6211:6215   */\n  dup5\n    /* \"#utility.yul\":6205:6216   */\n  sload\n    /* \"#utility.yul\":6177:6268   */\n  tag_75\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6171:6175   */\n  dup3\n    /* \"#utility.yul\":6164:6269   */\n  sstore\n    /* \"#utility.yul\":6082:6275   */\n  pop\n    /* \"#utility.yul\":6006:6275   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6281:6354   */\ntag_81:\n    /* \"#utility.yul\":6326:6329   */\n  0x00\n    /* \"#utility.yul\":6281:6354   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6360:6549   */\ntag_82:\n    /* \"#utility.yul\":6437:6469   */\n  tag_169\n  tag_81\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6478:6543   */\n  tag_170\n    /* \"#utility.yul\":6536:6542   */\n  dup2\n    /* \"#utility.yul\":6528:6534   */\n  dup5\n    /* \"#utility.yul\":6522:6526   */\n  dup5\n    /* \"#utility.yul\":6478:6543   */\n  tag_80\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6413:6549   */\n  pop\n    /* \"#utility.yul\":6360:6549   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6741   */\ntag_83:\n    /* \"#utility.yul\":6615:6735   */\ntag_172:\n    /* \"#utility.yul\":6632:6635   */\n  dup2\n    /* \"#utility.yul\":6625:6630   */\n  dup2\n    /* \"#utility.yul\":6622:6636   */\n  lt\n    /* \"#utility.yul\":6615:6735   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":6686:6725   */\n  tag_175\n    /* \"#utility.yul\":6723:6724   */\n  0x00\n    /* \"#utility.yul\":6716:6721   */\n  dup3\n    /* \"#utility.yul\":6686:6725   */\n  tag_82\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6659:6660   */\n  0x01\n    /* \"#utility.yul\":6652:6657   */\n  dup2\n    /* \"#utility.yul\":6648:6661   */\n  add\n    /* \"#utility.yul\":6639:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6735   */\n  jump(tag_172)\ntag_174:\n    /* \"#utility.yul\":6555:6741   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6747:7290   */\ntag_84:\n    /* \"#utility.yul\":6848:6850   */\n  0x1f\n    /* \"#utility.yul\":6843:6846   */\n  dup3\n    /* \"#utility.yul\":6840:6851   */\n  gt\n    /* \"#utility.yul\":6837:7283   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":6882:6920   */\n  tag_178\n    /* \"#utility.yul\":6914:6919   */\n  dup2\n    /* \"#utility.yul\":6882:6920   */\n  tag_72\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6966:6995   */\n  tag_179\n    /* \"#utility.yul\":6984:6994   */\n  dup5\n    /* \"#utility.yul\":6966:6995   */\n  tag_73\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6956:6964   */\n  dup2\n    /* \"#utility.yul\":6952:6996   */\n  add\n    /* \"#utility.yul\":7149:7151   */\n  0x20\n    /* \"#utility.yul\":7137:7147   */\n  dup6\n    /* \"#utility.yul\":7134:7152   */\n  lt\n    /* \"#utility.yul\":7131:7180   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7170:7178   */\n  dup2\n    /* \"#utility.yul\":7155:7178   */\n  swap1\n  pop\n    /* \"#utility.yul\":7131:7180   */\ntag_180:\n    /* \"#utility.yul\":7193:7273   */\n  tag_181\n    /* \"#utility.yul\":7249:7271   */\n  tag_182\n    /* \"#utility.yul\":7267:7270   */\n  dup6\n    /* \"#utility.yul\":7249:7271   */\n  tag_73\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7239:7247   */\n  dup4\n    /* \"#utility.yul\":7235:7272   */\n  add\n    /* \"#utility.yul\":7222:7233   */\n  dup3\n    /* \"#utility.yul\":7193:7273   */\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6852:7283   */\n  pop\n  pop\n    /* \"#utility.yul\":6837:7283   */\ntag_177:\n    /* \"#utility.yul\":6747:7290   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7296:7413   */\ntag_85:\n    /* \"#utility.yul\":7350:7358   */\n  0x00\n    /* \"#utility.yul\":7400:7405   */\n  dup3\n    /* \"#utility.yul\":7394:7398   */\n  dup3\n    /* \"#utility.yul\":7390:7406   */\n  shr\n    /* \"#utility.yul\":7369:7406   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7413   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7588   */\ntag_86:\n    /* \"#utility.yul\":7463:7469   */\n  0x00\n    /* \"#utility.yul\":7496:7547   */\n  tag_185\n    /* \"#utility.yul\":7544:7545   */\n  0x00\n    /* \"#utility.yul\":7540:7546   */\n  not\n    /* \"#utility.yul\":7532:7537   */\n  dup5\n    /* \"#utility.yul\":7529:7530   */\n  0x08\n    /* \"#utility.yul\":7525:7538   */\n  mul\n    /* \"#utility.yul\":7496:7547   */\n  tag_85\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7492:7548   */\n  not\n    /* \"#utility.yul\":7577:7581   */\n  dup1\n    /* \"#utility.yul\":7571:7575   */\n  dup4\n    /* \"#utility.yul\":7567:7582   */\n  and\n    /* \"#utility.yul\":7557:7582   */\n  swap2\n  pop\n    /* \"#utility.yul\":7470:7588   */\n  pop\n    /* \"#utility.yul\":7419:7588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7593:7888   */\ntag_87:\n    /* \"#utility.yul\":7669:7673   */\n  0x00\n    /* \"#utility.yul\":7815:7844   */\n  tag_187\n    /* \"#utility.yul\":7840:7843   */\n  dup4\n    /* \"#utility.yul\":7834:7838   */\n  dup4\n    /* \"#utility.yul\":7815:7844   */\n  tag_86\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7807:7844   */\n  swap2\n  pop\n    /* \"#utility.yul\":7877:7880   */\n  dup3\n    /* \"#utility.yul\":7874:7875   */\n  0x02\n    /* \"#utility.yul\":7870:7881   */\n  mul\n    /* \"#utility.yul\":7864:7868   */\n  dup3\n    /* \"#utility.yul\":7861:7882   */\n  or\n    /* \"#utility.yul\":7853:7882   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7893:9288   */\ntag_11:\n    /* \"#utility.yul\":8010:8047   */\n  tag_189\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8010:8047   */\n  tag_69\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8112:8130   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8104:8110   */\n  dup2\n    /* \"#utility.yul\":8101:8131   */\n  gt\n    /* \"#utility.yul\":8098:8154   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":8134:8152   */\n  tag_191\n  tag_58\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8098:8154   */\ntag_190:\n    /* \"#utility.yul\":8178:8216   */\n  tag_192\n    /* \"#utility.yul\":8210:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8215   */\n  sload\n    /* \"#utility.yul\":8178:8216   */\n  tag_71\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8263:8330   */\n  tag_193\n    /* \"#utility.yul\":8323:8329   */\n  dup3\n    /* \"#utility.yul\":8315:8321   */\n  dup3\n    /* \"#utility.yul\":8309:8313   */\n  dup6\n    /* \"#utility.yul\":8263:8330   */\n  tag_84\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8357:8358   */\n  0x00\n    /* \"#utility.yul\":8381:8385   */\n  0x20\n    /* \"#utility.yul\":8368:8385   */\n  swap1\n  pop\n    /* \"#utility.yul\":8413:8415   */\n  0x1f\n    /* \"#utility.yul\":8405:8411   */\n  dup4\n    /* \"#utility.yul\":8402:8416   */\n  gt\n    /* \"#utility.yul\":8430:8431   */\n  0x01\n    /* \"#utility.yul\":8425:9043   */\n  dup2\n  eq\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9087:9088   */\n  0x00\n    /* \"#utility.yul\":9104:9110   */\n  dup5\n    /* \"#utility.yul\":9101:9178   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9153:9162   */\n  dup3\n    /* \"#utility.yul\":9148:9151   */\n  dup8\n    /* \"#utility.yul\":9144:9163   */\n  add\n    /* \"#utility.yul\":9138:9164   */\n  mload\n    /* \"#utility.yul\":9129:9164   */\n  swap1\n  pop\n    /* \"#utility.yul\":9101:9178   */\ntag_196:\n    /* \"#utility.yul\":9204:9271   */\n  tag_197\n    /* \"#utility.yul\":9264:9270   */\n  dup6\n    /* \"#utility.yul\":9257:9262   */\n  dup3\n    /* \"#utility.yul\":9204:9271   */\n  tag_87\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9198:9202   */\n  dup7\n    /* \"#utility.yul\":9191:9272   */\n  sstore\n    /* \"#utility.yul\":9060:9282   */\n  pop\n    /* \"#utility.yul\":8395:9282   */\n  jump(tag_194)\n    /* \"#utility.yul\":8425:9043   */\ntag_195:\n    /* \"#utility.yul\":8477:8481   */\n  0x1f\n    /* \"#utility.yul\":8473:8482   */\n  not\n    /* \"#utility.yul\":8465:8471   */\n  dup5\n    /* \"#utility.yul\":8461:8483   */\n  and\n    /* \"#utility.yul\":8511:8548   */\n  tag_198\n    /* \"#utility.yul\":8543:8547   */\n  dup7\n    /* \"#utility.yul\":8511:8548   */\n  tag_72\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8570:8571   */\n  0x00\n    /* \"#utility.yul\":8584:8792   */\ntag_199:\n    /* \"#utility.yul\":8598:8605   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup2\n    /* \"#utility.yul\":8592:8606   */\n  lt\n    /* \"#utility.yul\":8584:8792   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8677:8686   */\n  dup5\n    /* \"#utility.yul\":8672:8675   */\n  dup10\n    /* \"#utility.yul\":8668:8687   */\n  add\n    /* \"#utility.yul\":8662:8688   */\n  mload\n    /* \"#utility.yul\":8654:8660   */\n  dup3\n    /* \"#utility.yul\":8647:8689   */\n  sstore\n    /* \"#utility.yul\":8728:8729   */\n  0x01\n    /* \"#utility.yul\":8720:8726   */\n  dup3\n    /* \"#utility.yul\":8716:8730   */\n  add\n    /* \"#utility.yul\":8706:8730   */\n  swap2\n  pop\n    /* \"#utility.yul\":8775:8777   */\n  0x20\n    /* \"#utility.yul\":8764:8773   */\n  dup6\n    /* \"#utility.yul\":8760:8778   */\n  add\n    /* \"#utility.yul\":8747:8778   */\n  swap5\n  pop\n    /* \"#utility.yul\":8621:8625   */\n  0x20\n    /* \"#utility.yul\":8618:8619   */\n  dup2\n    /* \"#utility.yul\":8614:8626   */\n  add\n    /* \"#utility.yul\":8609:8626   */\n  swap1\n  pop\n    /* \"#utility.yul\":8584:8792   */\n  jump(tag_199)\ntag_201:\n    /* \"#utility.yul\":8820:8826   */\n  dup7\n    /* \"#utility.yul\":8811:8818   */\n  dup4\n    /* \"#utility.yul\":8808:8827   */\n  lt\n    /* \"#utility.yul\":8805:8984   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8878:8887   */\n  dup5\n    /* \"#utility.yul\":8873:8876   */\n  dup10\n    /* \"#utility.yul\":8869:8888   */\n  add\n    /* \"#utility.yul\":8863:8889   */\n  mload\n    /* \"#utility.yul\":8921:8969   */\n  tag_203\n    /* \"#utility.yul\":8963:8967   */\n  0x1f\n    /* \"#utility.yul\":8955:8961   */\n  dup10\n    /* \"#utility.yul\":8951:8968   */\n  and\n    /* \"#utility.yul\":8940:8949   */\n  dup3\n    /* \"#utility.yul\":8921:8969   */\n  tag_86\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8913:8919   */\n  dup4\n    /* \"#utility.yul\":8906:8970   */\n  sstore\n    /* \"#utility.yul\":8828:8984   */\n  pop\n    /* \"#utility.yul\":8805:8984   */\ntag_202:\n    /* \"#utility.yul\":9030:9031   */\n  0x01\n    /* \"#utility.yul\":9026:9027   */\n  0x02\n    /* \"#utility.yul\":9018:9024   */\n  dup9\n    /* \"#utility.yul\":9014:9028   */\n  mul\n    /* \"#utility.yul\":9010:9032   */\n  add\n    /* \"#utility.yul\":9004:9008   */\n  dup9\n    /* \"#utility.yul\":8997:9033   */\n  sstore\n    /* \"#utility.yul\":8432:9043   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8395:9282   */\ntag_194:\n  pop\n    /* \"#utility.yul\":7985:9288   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7893:9288   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9294:9412   */\ntag_88:\n    /* \"#utility.yul\":9381:9405   */\n  tag_205\n    /* \"#utility.yul\":9399:9404   */\n  dup2\n    /* \"#utility.yul\":9381:9405   */\n  tag_66\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9376:9379   */\n  dup3\n    /* \"#utility.yul\":9369:9406   */\n  mstore\n    /* \"#utility.yul\":9294:9412   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9418:9640   */\ntag_17:\n    /* \"#utility.yul\":9511:9515   */\n  0x00\n    /* \"#utility.yul\":9549:9551   */\n  0x20\n    /* \"#utility.yul\":9538:9547   */\n  dup3\n    /* \"#utility.yul\":9534:9552   */\n  add\n    /* \"#utility.yul\":9526:9552   */\n  swap1\n  pop\n    /* \"#utility.yul\":9562:9633   */\n  tag_207\n    /* \"#utility.yul\":9630:9631   */\n  0x00\n    /* \"#utility.yul\":9619:9628   */\n  dup4\n    /* \"#utility.yul\":9615:9632   */\n  add\n    /* \"#utility.yul\":9606:9612   */\n  dup5\n    /* \"#utility.yul\":9562:9633   */\n  tag_88\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9418:9640   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9646:9826   */\ntag_89:\n    /* \"#utility.yul\":9694:9771   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9691:9692   */\n  0x00\n    /* \"#utility.yul\":9684:9772   */\n  mstore\n    /* \"#utility.yul\":9791:9795   */\n  0x11\n    /* \"#utility.yul\":9788:9789   */\n  0x04\n    /* \"#utility.yul\":9781:9796   */\n  mstore\n    /* \"#utility.yul\":9815:9819   */\n  0x24\n    /* \"#utility.yul\":9812:9813   */\n  0x00\n    /* \"#utility.yul\":9805:9820   */\n  revert\n    /* \"#utility.yul\":9832:9934   */\ntag_90:\n    /* \"#utility.yul\":9874:9882   */\n  0x00\n    /* \"#utility.yul\":9921:9926   */\n  dup2\n    /* \"#utility.yul\":9918:9919   */\n  0x01\n    /* \"#utility.yul\":9914:9927   */\n  shr\n    /* \"#utility.yul\":9893:9927   */\n  swap1\n  pop\n    /* \"#utility.yul\":9832:9934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9940:10788   */\ntag_91:\n    /* \"#utility.yul\":10001:10006   */\n  0x00\n    /* \"#utility.yul\":10008:10012   */\n  dup1\n    /* \"#utility.yul\":10032:10038   */\n  dup3\n    /* \"#utility.yul\":10023:10038   */\n  swap2\n  pop\n    /* \"#utility.yul\":10056:10061   */\n  dup4\n    /* \"#utility.yul\":10047:10061   */\n  swap1\n  pop\n    /* \"#utility.yul\":10070:10782   */\ntag_211:\n    /* \"#utility.yul\":10091:10092   */\n  0x01\n    /* \"#utility.yul\":10081:10089   */\n  dup6\n    /* \"#utility.yul\":10078:10093   */\n  gt\n    /* \"#utility.yul\":10070:10782   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":10186:10190   */\n  dup1\n    /* \"#utility.yul\":10181:10184   */\n  dup7\n    /* \"#utility.yul\":10177:10191   */\n  div\n    /* \"#utility.yul\":10171:10175   */\n  dup2\n    /* \"#utility.yul\":10168:10192   */\n  gt\n    /* \"#utility.yul\":10165:10215   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":10195:10213   */\n  tag_215\n  tag_89\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10165:10215   */\ntag_214:\n    /* \"#utility.yul\":10245:10246   */\n  0x01\n    /* \"#utility.yul\":10235:10243   */\n  dup6\n    /* \"#utility.yul\":10231:10247   */\n  and\n    /* \"#utility.yul\":10228:10679   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":10660:10664   */\n  dup1\n    /* \"#utility.yul\":10653:10658   */\n  dup3\n    /* \"#utility.yul\":10649:10665   */\n  mul\n    /* \"#utility.yul\":10640:10665   */\n  swap2\n  pop\n    /* \"#utility.yul\":10228:10679   */\ntag_216:\n    /* \"#utility.yul\":10710:10714   */\n  dup1\n    /* \"#utility.yul\":10704:10708   */\n  dup2\n    /* \"#utility.yul\":10700:10715   */\n  mul\n    /* \"#utility.yul\":10692:10715   */\n  swap1\n  pop\n    /* \"#utility.yul\":10740:10772   */\n  tag_217\n    /* \"#utility.yul\":10763:10771   */\n  dup6\n    /* \"#utility.yul\":10740:10772   */\n  tag_90\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10728:10772   */\n  swap5\n  pop\n    /* \"#utility.yul\":10070:10782   */\n  jump(tag_211)\ntag_213:\n    /* \"#utility.yul\":9940:10788   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10794:11867   */\ntag_92:\n    /* \"#utility.yul\":10848:10853   */\n  0x00\n    /* \"#utility.yul\":11039:11047   */\n  dup3\n    /* \"#utility.yul\":11029:11069   */\n  tag_219\n  jumpi\n    /* \"#utility.yul\":11060:11061   */\n  0x01\n    /* \"#utility.yul\":11051:11061   */\n  swap1\n  pop\n    /* \"#utility.yul\":11062:11067   */\n  jump(tag_218)\n    /* \"#utility.yul\":11029:11069   */\ntag_219:\n    /* \"#utility.yul\":11088:11092   */\n  dup2\n    /* \"#utility.yul\":11078:11114   */\n  tag_220\n  jumpi\n    /* \"#utility.yul\":11105:11106   */\n  0x00\n    /* \"#utility.yul\":11096:11106   */\n  swap1\n  pop\n    /* \"#utility.yul\":11107:11112   */\n  jump(tag_218)\n    /* \"#utility.yul\":11078:11114   */\ntag_220:\n    /* \"#utility.yul\":11174:11178   */\n  dup2\n    /* \"#utility.yul\":11222:11223   */\n  0x01\n    /* \"#utility.yul\":11217:11244   */\n  dup2\n  eq\n  tag_222\n  jumpi\n    /* \"#utility.yul\":11258:11259   */\n  0x02\n    /* \"#utility.yul\":11253:11444   */\n  dup2\n  eq\n  tag_223\n  jumpi\n    /* \"#utility.yul\":11167:11444   */\n  jump(tag_221)\n    /* \"#utility.yul\":11217:11244   */\ntag_222:\n    /* \"#utility.yul\":11235:11236   */\n  0x01\n    /* \"#utility.yul\":11226:11236   */\n  swap2\n  pop\n    /* \"#utility.yul\":11237:11242   */\n  pop\n  jump(tag_218)\n    /* \"#utility.yul\":11253:11444   */\ntag_223:\n    /* \"#utility.yul\":11298:11301   */\n  0xff\n    /* \"#utility.yul\":11288:11296   */\n  dup5\n    /* \"#utility.yul\":11285:11302   */\n  gt\n    /* \"#utility.yul\":11282:11325   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":11305:11323   */\n  tag_225\n  tag_89\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11282:11325   */\ntag_224:\n    /* \"#utility.yul\":11354:11362   */\n  dup4\n    /* \"#utility.yul\":11351:11352   */\n  0x02\n    /* \"#utility.yul\":11347:11363   */\n  exp\n    /* \"#utility.yul\":11338:11363   */\n  swap2\n  pop\n    /* \"#utility.yul\":11389:11392   */\n  dup5\n    /* \"#utility.yul\":11382:11387   */\n  dup3\n    /* \"#utility.yul\":11379:11393   */\n  gt\n    /* \"#utility.yul\":11376:11416   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":11396:11414   */\n  tag_227\n  tag_89\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11376:11416   */\ntag_226:\n    /* \"#utility.yul\":11429:11434   */\n  pop\n  jump(tag_218)\n    /* \"#utility.yul\":11167:11444   */\ntag_221:\n  pop\n    /* \"#utility.yul\":11553:11555   */\n  0x20\n    /* \"#utility.yul\":11543:11551   */\n  dup4\n    /* \"#utility.yul\":11540:11556   */\n  lt\n    /* \"#utility.yul\":11534:11537   */\n  0x0133\n    /* \"#utility.yul\":11528:11532   */\n  dup4\n    /* \"#utility.yul\":11525:11538   */\n  lt\n    /* \"#utility.yul\":11521:11557   */\n  and\n    /* \"#utility.yul\":11503:11505   */\n  0x4e\n    /* \"#utility.yul\":11493:11501   */\n  dup5\n    /* \"#utility.yul\":11490:11506   */\n  lt\n    /* \"#utility.yul\":11485:11487   */\n  0x0b\n    /* \"#utility.yul\":11479:11483   */\n  dup5\n    /* \"#utility.yul\":11476:11488   */\n  lt\n    /* \"#utility.yul\":11472:11507   */\n  and\n    /* \"#utility.yul\":11456:11567   */\n  or\n    /* \"#utility.yul\":11453:11699   */\n  iszero\n  tag_228\n  jumpi\n    /* \"#utility.yul\":11609:11617   */\n  dup3\n    /* \"#utility.yul\":11603:11607   */\n  dup3\n    /* \"#utility.yul\":11599:11618   */\n  exp\n    /* \"#utility.yul\":11590:11618   */\n  swap1\n  pop\n    /* \"#utility.yul\":11644:11647   */\n  dup4\n    /* \"#utility.yul\":11637:11642   */\n  dup2\n    /* \"#utility.yul\":11634:11648   */\n  gt\n    /* \"#utility.yul\":11631:11671   */\n  iszero\n  tag_229\n  jumpi\n    /* \"#utility.yul\":11651:11669   */\n  tag_230\n  tag_89\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":11631:11671   */\ntag_229:\n    /* \"#utility.yul\":11684:11689   */\n  jump(tag_218)\n    /* \"#utility.yul\":11453:11699   */\ntag_228:\n    /* \"#utility.yul\":11724:11766   */\n  tag_231\n    /* \"#utility.yul\":11762:11765   */\n  dup5\n    /* \"#utility.yul\":11752:11760   */\n  dup5\n    /* \"#utility.yul\":11746:11750   */\n  dup5\n    /* \"#utility.yul\":11743:11744   */\n  0x01\n    /* \"#utility.yul\":11724:11766   */\n  tag_91\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11709:11766   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11798:11802   */\n  dup2\n    /* \"#utility.yul\":11793:11796   */\n  dup5\n    /* \"#utility.yul\":11789:11803   */\n  div\n    /* \"#utility.yul\":11782:11787   */\n  dup2\n    /* \"#utility.yul\":11779:11804   */\n  gt\n    /* \"#utility.yul\":11776:11827   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":11807:11825   */\n  tag_233\n  tag_89\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11776:11827   */\ntag_232:\n    /* \"#utility.yul\":11856:11860   */\n  dup2\n    /* \"#utility.yul\":11849:11854   */\n  dup2\n    /* \"#utility.yul\":11845:11861   */\n  mul\n    /* \"#utility.yul\":11836:11861   */\n  swap1\n  pop\n    /* \"#utility.yul\":10794:11867   */\ntag_218:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11873:11959   */\ntag_93:\n    /* \"#utility.yul\":11908:11915   */\n  0x00\n    /* \"#utility.yul\":11948:11952   */\n  0xff\n    /* \"#utility.yul\":11941:11946   */\n  dup3\n    /* \"#utility.yul\":11937:11953   */\n  and\n    /* \"#utility.yul\":11926:11953   */\n  swap1\n  pop\n    /* \"#utility.yul\":11873:11959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11965:12246   */\ntag_28:\n    /* \"#utility.yul\":12023:12028   */\n  0x00\n    /* \"#utility.yul\":12047:12070   */\n  tag_236\n    /* \"#utility.yul\":12065:12069   */\n  dup3\n    /* \"#utility.yul\":12047:12070   */\n  tag_76\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12039:12070   */\n  swap2\n  pop\n    /* \"#utility.yul\":12091:12116   */\n  tag_237\n    /* \"#utility.yul\":12107:12115   */\n  dup4\n    /* \"#utility.yul\":12091:12116   */\n  tag_93\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":12079:12116   */\n  swap3\n  pop\n    /* \"#utility.yul\":12135:12239   */\n  tag_238\n    /* \"#utility.yul\":12172:12238   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12162:12170   */\n  dup5\n    /* \"#utility.yul\":12156:12160   */\n  dup5\n    /* \"#utility.yul\":12135:12239   */\n  tag_92\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12126:12239   */\n  swap1\n  pop\n    /* \"#utility.yul\":11965:12246   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12252:12662   */\ntag_30:\n    /* \"#utility.yul\":12292:12299   */\n  0x00\n    /* \"#utility.yul\":12315:12335   */\n  tag_240\n    /* \"#utility.yul\":12333:12334   */\n  dup3\n    /* \"#utility.yul\":12315:12335   */\n  tag_76\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12310:12335   */\n  swap2\n  pop\n    /* \"#utility.yul\":12349:12369   */\n  tag_241\n    /* \"#utility.yul\":12367:12368   */\n  dup4\n    /* \"#utility.yul\":12349:12369   */\n  tag_76\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":12344:12369   */\n  swap3\n  pop\n    /* \"#utility.yul\":12404:12405   */\n  dup3\n    /* \"#utility.yul\":12401:12402   */\n  dup3\n    /* \"#utility.yul\":12397:12406   */\n  mul\n    /* \"#utility.yul\":12426:12456   */\n  tag_242\n    /* \"#utility.yul\":12444:12455   */\n  dup2\n    /* \"#utility.yul\":12426:12456   */\n  tag_76\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12415:12456   */\n  swap2\n  pop\n    /* \"#utility.yul\":12605:12606   */\n  dup3\n    /* \"#utility.yul\":12596:12603   */\n  dup3\n    /* \"#utility.yul\":12592:12607   */\n  div\n    /* \"#utility.yul\":12589:12590   */\n  dup5\n    /* \"#utility.yul\":12586:12608   */\n  eq\n    /* \"#utility.yul\":12566:12567   */\n  dup4\n    /* \"#utility.yul\":12559:12568   */\n  iszero\n    /* \"#utility.yul\":12539:12622   */\n  or\n    /* \"#utility.yul\":12516:12655   */\n  tag_243\n  jumpi\n    /* \"#utility.yul\":12635:12653   */\n  tag_244\n  tag_89\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12516:12655   */\ntag_243:\n    /* \"#utility.yul\":12300:12662   */\n  pop\n    /* \"#utility.yul\":12252:12662   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12668:12859   */\ntag_43:\n    /* \"#utility.yul\":12708:12711   */\n  0x00\n    /* \"#utility.yul\":12727:12747   */\n  tag_246\n    /* \"#utility.yul\":12745:12746   */\n  dup3\n    /* \"#utility.yul\":12727:12747   */\n  tag_76\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12722:12747   */\n  swap2\n  pop\n    /* \"#utility.yul\":12761:12781   */\n  tag_247\n    /* \"#utility.yul\":12779:12780   */\n  dup4\n    /* \"#utility.yul\":12761:12781   */\n  tag_76\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":12756:12781   */\n  swap3\n  pop\n    /* \"#utility.yul\":12804:12805   */\n  dup3\n    /* \"#utility.yul\":12801:12802   */\n  dup3\n    /* \"#utility.yul\":12797:12806   */\n  add\n    /* \"#utility.yul\":12790:12806   */\n  swap1\n  pop\n    /* \"#utility.yul\":12825:12828   */\n  dup1\n    /* \"#utility.yul\":12822:12823   */\n  dup3\n    /* \"#utility.yul\":12819:12829   */\n  gt\n    /* \"#utility.yul\":12816:12852   */\n  iszero\n  tag_248\n  jumpi\n    /* \"#utility.yul\":12832:12850   */\n  tag_249\n  tag_89\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12816:12852   */\ntag_248:\n    /* \"#utility.yul\":12668:12859   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12865:12983   */\ntag_94:\n    /* \"#utility.yul\":12952:12976   */\n  tag_251\n    /* \"#utility.yul\":12970:12975   */\n  dup2\n    /* \"#utility.yul\":12952:12976   */\n  tag_76\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":12947:12950   */\n  dup3\n    /* \"#utility.yul\":12940:12977   */\n  mstore\n    /* \"#utility.yul\":12865:12983   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12989:13431   */\ntag_47:\n    /* \"#utility.yul\":13138:13142   */\n  0x00\n    /* \"#utility.yul\":13176:13178   */\n  0x60\n    /* \"#utility.yul\":13165:13174   */\n  dup3\n    /* \"#utility.yul\":13161:13179   */\n  add\n    /* \"#utility.yul\":13153:13179   */\n  swap1\n  pop\n    /* \"#utility.yul\":13189:13260   */\n  tag_253\n    /* \"#utility.yul\":13257:13258   */\n  0x00\n    /* \"#utility.yul\":13246:13255   */\n  dup4\n    /* \"#utility.yul\":13242:13259   */\n  add\n    /* \"#utility.yul\":13233:13239   */\n  dup7\n    /* \"#utility.yul\":13189:13260   */\n  tag_88\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":13270:13342   */\n  tag_254\n    /* \"#utility.yul\":13338:13340   */\n  0x20\n    /* \"#utility.yul\":13327:13336   */\n  dup4\n    /* \"#utility.yul\":13323:13341   */\n  add\n    /* \"#utility.yul\":13314:13320   */\n  dup6\n    /* \"#utility.yul\":13270:13342   */\n  tag_94\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":13352:13424   */\n  tag_255\n    /* \"#utility.yul\":13420:13422   */\n  0x40\n    /* \"#utility.yul\":13409:13418   */\n  dup4\n    /* \"#utility.yul\":13405:13423   */\n  add\n    /* \"#utility.yul\":13396:13402   */\n  dup5\n    /* \"#utility.yul\":13352:13424   */\n  tag_94\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":12989:13431   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13437:13659   */\ntag_51:\n    /* \"#utility.yul\":13530:13534   */\n  0x00\n    /* \"#utility.yul\":13568:13570   */\n  0x20\n    /* \"#utility.yul\":13557:13566   */\n  dup3\n    /* \"#utility.yul\":13553:13571   */\n  add\n    /* \"#utility.yul\":13545:13571   */\n  swap1\n  pop\n    /* \"#utility.yul\":13581:13652   */\n  tag_257\n    /* \"#utility.yul\":13649:13650   */\n  0x00\n    /* \"#utility.yul\":13638:13647   */\n  dup4\n    /* \"#utility.yul\":13634:13651   */\n  add\n    /* \"#utility.yul\":13625:13631   */\n  dup5\n    /* \"#utility.yul\":13581:13652   */\n  tag_94\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":13437:13659   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Signs 2/SignsToken.sol\":467:10594  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Signs 2/SignsToken.sol\":467:10594  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x74612f19\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe95850df\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xef9ecc1d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9b493e0\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xca525485\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9d55fba7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa3262ea2\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x74612f19\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x77d3550b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x2fcdc5fd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5c975abb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5e182096\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x2fcdc5fd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ec48cf7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2a26c9cd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":10345:10591  function getApprovalInfo(address owner) external view returns (... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":10104:10333  function transferFrom(address from, address to, uint256 amount)... */\n    tag_7:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":566:591  ISignsNFT public signsNFT */\n    tag_8:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":8120:8401  function updateSignsNFTContract(address _newAddress) external onlyOwner {... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":8956:9023  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":2695:3297  function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_13:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"Signs 2/SignsToken.sol\":9568:9820  function updateCommissionTreasury(address newTreasury) external onlyOwner {... */\n    tag_16:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"Signs 2/SignsToken.sol\":670:702  uint256 public commissionPercent */\n    tag_17:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":8885:8948  function pause() external onlyOwner {... */\n    tag_18:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":9174:9441  function updateCommission(uint256 newCommissionPercent) external onlyOwner {... */\n    tag_21:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \"Signs 2/SignsToken.sol\":598:629  address public signsNFTContract */\n    tag_22:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":9889:10096  function transfer(address to, uint256 amount) ... */\n    tag_23:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":3476:4226  function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_24:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"Signs 2/SignsToken.sol\":910:957  mapping(uint256 => uint256) public signBalances */\n    tag_25:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":750:783  address public commissionTreasury */\n    tag_27:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":5242:7995  function payWage(... */\n    tag_28:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_139\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":10345:10591  function getApprovalInfo(address owner) external view returns (... */\n    tag_53:\n        /* \"Signs 2/SignsToken.sol\":10418:10433  uint256 balance */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":10444:10469  uint256 contractAllowance */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":10510:10526  balanceOf(owner) */\n      tag_151\n        /* \"Signs 2/SignsToken.sol\":10520:10525  owner */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":10510:10519  balanceOf */\n      tag_83\n        /* \"Signs 2/SignsToken.sol\":10510:10526  balanceOf(owner) */\n      jump\t// in\n    tag_151:\n        /* \"Signs 2/SignsToken.sol\":10541:10572  allowance(owner, address(this)) */\n      tag_152\n        /* \"Signs 2/SignsToken.sol\":10551:10556  owner */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10566:10570  this */\n      address\n        /* \"Signs 2/SignsToken.sol\":10541:10550  allowance */\n      tag_123\n        /* \"Signs 2/SignsToken.sol\":10541:10572  allowance(owner, address(this)) */\n      jump\t// in\n    tag_152:\n        /* \"Signs 2/SignsToken.sol\":10488:10583  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Signs 2/SignsToken.sol\":10345:10591  function getApprovalInfo(address owner) external view returns (... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":10104:10333  function transferFrom(address from, address to, uint256 amount)... */\n    tag_59:\n        /* \"Signs 2/SignsToken.sol\":10260:10264  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_154\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_155\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_154:\n        /* \"Signs 2/SignsToken.sol\":10289:10325  super.transferFrom(from, to, amount) */\n      tag_157\n        /* \"Signs 2/SignsToken.sol\":10308:10312  from */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10314:10316  to */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10318:10324  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10289:10307  super.transferFrom */\n      tag_158\n        /* \"Signs 2/SignsToken.sol\":10289:10325  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_157:\n        /* \"Signs 2/SignsToken.sol\":10282:10325  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":10104:10333  function transferFrom(address from, address to, uint256 amount)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":566:591  ISignsNFT public signsNFT */\n    tag_62:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8120:8401  function updateSignsNFTContract(address _newAddress) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"Signs 2/SignsToken.sol\":8230:8231  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8207:8232  _newAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":8207:8218  _newAddress */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":8207:8232  _newAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Signs 2/SignsToken.sol\":8203:8261  if (_newAddress == address(0)) revert InvalidNFTContract() */\n      tag_163\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":8241:8261  InvalidNFTContract() */\n      mload(0x40)\n      0xf8af67e500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":8203:8261  if (_newAddress == address(0)) revert InvalidNFTContract() */\n    tag_163:\n        /* \"Signs 2/SignsToken.sol\":8291:8302  _newAddress */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":8272:8288  signsNFTContract */\n      0x08\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8272:8302  signsNFTContract = _newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":8334:8345  _newAddress */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":8313:8321  signsNFT */\n      0x07\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8313:8346  signsNFT = ISignsNFT(_newAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":8362:8393  NFTContractUpdated(_newAddress) */\n      0xf2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9\n        /* \"Signs 2/SignsToken.sol\":8381:8392  _newAddress */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":8362:8393  NFTContractUpdated(_newAddress) */\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":8120:8401  function updateSignsNFTContract(address _newAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8956:9023  function unpause() external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"Signs 2/SignsToken.sol\":9005:9015  _unpause() */\n      tag_169\n        /* \"Signs 2/SignsToken.sol\":9005:9013  _unpause */\n      tag_170\n        /* \"Signs 2/SignsToken.sol\":9005:9015  _unpause() */\n      jump\t// in\n    tag_169:\n        /* \"Signs 2/SignsToken.sol\":8956:9023  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":2695:3297  function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_176\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_155\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_176:\n        /* \"Signs 2/SignsToken.sol\":2816:2817  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":2806:2812  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":2806:2817  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":2802:2841  if (amount == 0) revert InvalidAmount() */\n      tag_178\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":2826:2841  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":2802:2841  if (amount == 0) revert InvalidAmount() */\n    tag_178:\n        /* \"Signs 2/SignsToken.sol\":2862:2876  address sender */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":2879:2889  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":2862:2889  address sender = msg.sender */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":3043:3055  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3058:3092  transfer(signsNFTContract, amount) */\n      tag_179\n        /* \"Signs 2/SignsToken.sol\":3067:3083  signsNFTContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3085:3091  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3058:3066  transfer */\n      tag_111\n        /* \"Signs 2/SignsToken.sol\":3058:3092  transfer(signsNFTContract, amount) */\n      jump\t// in\n    tag_179:\n        /* \"Signs 2/SignsToken.sol\":3043:3092  bool success = transfer(signsNFTContract, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":3111:3118  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3103:3144  require(success, \"Token transfer failed\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"Signs 2/SignsToken.sol\":3222:3228  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":3197:3209  signBalances */\n      0x0b\n        /* \"Signs 2/SignsToken.sol\":3197:3218  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3210:3217  tokenId */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":3197:3218  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3197:3228  signBalances[tokenId] += amount */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":3273:3280  tokenId */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":3254:3289  SignBalanceCharged(tokenId, amount) */\n      0x577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd\n        /* \"Signs 2/SignsToken.sol\":3282:3288  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3254:3289  SignBalanceCharged(tokenId, amount) */\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":2791:3297  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_186\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_186:\n        /* \"Signs 2/SignsToken.sol\":2695:3297  function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9568:9820  function updateCommissionTreasury(address newTreasury) external onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"Signs 2/SignsToken.sol\":9680:9681  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":9657:9682  newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":9657:9668  newTreasury */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9657:9682  newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Signs 2/SignsToken.sol\":9653:9715  if (newTreasury == address(0)) revert InvalidTreasuryAddress() */\n      tag_197\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":9691:9715  InvalidTreasuryAddress() */\n      mload(0x40)\n      0xcfe2ea6300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":9653:9715  if (newTreasury == address(0)) revert InvalidTreasuryAddress() */\n    tag_197:\n        /* \"Signs 2/SignsToken.sol\":9747:9758  newTreasury */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":9726:9744  commissionTreasury */\n      0x0a\n      0x00\n        /* \"Signs 2/SignsToken.sol\":9726:9758  commissionTreasury = newTreasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":9774:9812  CommissionTreasuryUpdated(newTreasury) */\n      0x4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f\n        /* \"Signs 2/SignsToken.sol\":9800:9811  newTreasury */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9774:9812  CommissionTreasuryUpdated(newTreasury) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":9568:9820  function updateCommissionTreasury(address newTreasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":670:702  uint256 public commissionPercent */\n    tag_91:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8885:8948  function pause() external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"Signs 2/SignsToken.sol\":8932:8940  _pause() */\n      tag_202\n        /* \"Signs 2/SignsToken.sol\":8932:8938  _pause */\n      tag_203\n        /* \"Signs 2/SignsToken.sol\":8932:8940  _pause() */\n      jump\t// in\n    tag_202:\n        /* \"Signs 2/SignsToken.sol\":8885:8948  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_139\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_207\n      swap1\n      tag_139\n      jump\t// in\n    tag_207:\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_209\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_208)\n    tag_209:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_210:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_210\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9174:9441  function updateCommission(uint256 newCommissionPercent) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"Signs 2/SignsToken.sol\":854:859  10000 */\n      0x2710\n        /* \"Signs 2/SignsToken.sol\":9264:9284  newCommissionPercent */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9264:9299  newCommissionPercent > BASIS_POINTS */\n      gt\n        /* \"Signs 2/SignsToken.sol\":9260:9327  if (newCommissionPercent > BASIS_POINTS) revert InvalidCommission() */\n      iszero\n      tag_214\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":9308:9327  InvalidCommission() */\n      mload(0x40)\n      0xdc81db8500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":9260:9327  if (newCommissionPercent > BASIS_POINTS) revert InvalidCommission() */\n    tag_214:\n        /* \"Signs 2/SignsToken.sol\":9358:9378  newCommissionPercent */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":9338:9355  commissionPercent */\n      0x09\n        /* \"Signs 2/SignsToken.sol\":9338:9378  commissionPercent = newCommissionPercent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":9394:9433  CommissionUpdated(newCommissionPercent) */\n      0x13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e\n        /* \"Signs 2/SignsToken.sol\":9412:9432  newCommissionPercent */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9394:9433  CommissionUpdated(newCommissionPercent) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":9174:9441  function updateCommission(uint256 newCommissionPercent) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":598:629  address public signsNFTContract */\n    tag_107:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9889:10096  function transfer(address to, uint256 amount) ... */\n    tag_111:\n        /* \"Signs 2/SignsToken.sol\":10032:10036  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_217\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_155\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_217:\n        /* \"Signs 2/SignsToken.sol\":10062:10088  super.transfer(to, amount) */\n      tag_219\n        /* \"Signs 2/SignsToken.sol\":10077:10079  to */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":10081:10087  amount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":10062:10076  super.transfer */\n      tag_220\n        /* \"Signs 2/SignsToken.sol\":10062:10088  super.transfer(to, amount) */\n      jump\t// in\n    tag_219:\n        /* \"Signs 2/SignsToken.sol\":10055:10088  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":9889:10096  function transfer(address to, uint256 amount) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":3476:4226  function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_222\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_224\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_155\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_224:\n        /* \"Signs 2/SignsToken.sol\":3656:3689  _isSignOwner(msg.sender, tokenId) */\n      tag_226\n        /* \"Signs 2/SignsToken.sol\":3669:3679  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3681:3688  tokenId */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":3656:3668  _isSignOwner */\n      tag_227\n        /* \"Signs 2/SignsToken.sol\":3656:3689  _isSignOwner(msg.sender, tokenId) */\n      jump\t// in\n    tag_226:\n        /* \"Signs 2/SignsToken.sol\":3651:3717  if (!_isSignOwner(msg.sender, tokenId)) revert UnauthorizedOwner() */\n      tag_228\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3698:3717  UnauthorizedOwner() */\n      mload(0x40)\n      0xde271cf500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3651:3717  if (!_isSignOwner(msg.sender, tokenId)) revert UnauthorizedOwner() */\n    tag_228:\n        /* \"Signs 2/SignsToken.sol\":3752:3753  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3742:3748  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":3742:3753  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":3738:3777  if (amount == 0) revert InvalidAmount() */\n      tag_229\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3762:3777  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3738:3777  if (amount == 0) revert InvalidAmount() */\n    tag_229:\n        /* \"Signs 2/SignsToken.sol\":3816:3822  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3792:3804  signBalances */\n      0x0b\n        /* \"Signs 2/SignsToken.sol\":3792:3813  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3805:3812  tokenId */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3792:3813  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":3792:3822  signBalances[tokenId] < amount */\n      lt\n        /* \"Signs 2/SignsToken.sol\":3788:3856  if (signBalances[tokenId] < amount) revert InsufficientSignBalance() */\n      iszero\n      tag_230\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3831:3856  InsufficientSignBalance() */\n      mload(0x40)\n      0xa77130ef00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3788:3856  if (signBalances[tokenId] < amount) revert InsufficientSignBalance() */\n    tag_230:\n        /* \"Signs 2/SignsToken.sol\":3945:3951  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3920:3932  signBalances */\n      0x0b\n        /* \"Signs 2/SignsToken.sol\":3920:3941  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3933:3940  tokenId */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3920:3941  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3920:3951  signBalances[tokenId] -= amount */\n      dup3\n      dup3\n      sload\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":4032:4044  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":4047:4097  transferFrom(signsNFTContract, msg.sender, amount) */\n      tag_233\n        /* \"Signs 2/SignsToken.sol\":4060:4076  signsNFTContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":4078:4088  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":4090:4096  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":4047:4059  transferFrom */\n      tag_59\n        /* \"Signs 2/SignsToken.sol\":4047:4097  transferFrom(signsNFTContract, msg.sender, amount) */\n      jump\t// in\n    tag_233:\n        /* \"Signs 2/SignsToken.sol\":4032:4097  bool success = transferFrom(signsNFTContract, msg.sender, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":4116:4123  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":4108:4143  require(success, \"Transfer failed\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"Signs 2/SignsToken.sol\":4199:4209  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":4169:4218  SignBalanceWithdrawn(tokenId, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":4190:4197  tokenId */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":4169:4218  SignBalanceWithdrawn(tokenId, msg.sender, amount) */\n      0x4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb\n        /* \"Signs 2/SignsToken.sol\":4211:4217  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":4169:4218  SignBalanceWithdrawn(tokenId, msg.sender, amount) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":3574:4226  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_238\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_238:\n        /* \"Signs 2/SignsToken.sol\":3476:4226  function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":910:957  mapping(uint256 => uint256) public signBalances */\n    tag_118:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":750:783  address public commissionTreasury */\n    tag_126:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":5242:7995  function payWage(... */\n    tag_131:\n        /* \"Signs 2/SignsToken.sol\":5401:5425  WagePaymentResult memory */\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"Signs 2/SignsToken.sol\":2453:2469  signsNFTContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":2439:2469  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":2439:2449  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":2439:2469  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Signs 2/SignsToken.sol\":2435:2498  if (msg.sender != signsNFTContract) revert UnauthorizedCaller() */\n      tag_243\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":2478:2498  UnauthorizedCaller() */\n      mload(0x40)\n      0x5c427cd900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":2435:2498  if (msg.sender != signsNFTContract) revert UnauthorizedCaller() */\n    tag_243:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_247\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_155\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_247:\n        /* \"Signs 2/SignsToken.sol\":5452:5453  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5442:5448  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5442:5453  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":5438:5477  if (amount == 0) revert InvalidAmount() */\n      tag_249\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":5462:5477  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":5438:5477  if (amount == 0) revert InvalidAmount() */\n    tag_249:\n        /* \"Signs 2/SignsToken.sol\":5498:5520  uint256 currentBalance */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5523:5535  signBalances */\n      0x0b\n        /* \"Signs 2/SignsToken.sol\":5523:5544  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5536:5543  tokenId */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":5523:5544  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":5498:5544  uint256 currentBalance = signBalances[tokenId] */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5555:5573  bool isFullPayment */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5594:5600  amount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":5576:5590  currentBalance */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5576:5600  currentBalance >= amount */\n      lt\n      iszero\n        /* \"Signs 2/SignsToken.sol\":5555:5600  bool isFullPayment = currentBalance >= amount */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5611:5632  uint256 paymentAmount */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5643:5667  uint256 commissionAmount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":5820:5833  isFullPayment */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5816:7791  if (isFullPayment) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":854:859  10000 */\n      0x2710\n        /* \"Signs 2/SignsToken.sol\":5916:5933  commissionPercent */\n      sload(0x09)\n        /* \"Signs 2/SignsToken.sol\":5907:5913  amount */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":5907:5933  amount * commissionPercent */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"Signs 2/SignsToken.sol\":5906:5949  (amount * commissionPercent) / BASIS_POINTS */\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"Signs 2/SignsToken.sol\":5887:5949  commissionAmount = (amount * commissionPercent) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5989:6005  commissionAmount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":5980:5986  amount */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":5980:6005  amount - commissionAmount */\n      tag_255\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_255:\n        /* \"Signs 2/SignsToken.sol\":5964:6005  paymentAmount = amount - commissionAmount */\n      swap2\n      pop\n        /* \"Signs 2/SignsToken.sol\":6123:6129  amount */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":6106:6120  currentBalance */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":6106:6129  currentBalance - amount */\n      tag_256\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_256:\n        /* \"Signs 2/SignsToken.sol\":6082:6094  signBalances */\n      0x0b\n        /* \"Signs 2/SignsToken.sol\":6082:6103  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6095:6102  tokenId */\n      dup11\n        /* \"Signs 2/SignsToken.sol\":6082:6103  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":6082:6129  signBalances[tokenId] = currentBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6240:6241  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6221:6237  commissionAmount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":6221:6241  commissionAmount > 0 */\n      gt\n        /* \"Signs 2/SignsToken.sol\":6217:6603  if (commissionAmount > 0) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":6376:6398  bool commissionSuccess */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6401:6447  transfer(commissionTreasury, commissionAmount) */\n      tag_258\n        /* \"Signs 2/SignsToken.sol\":6410:6428  commissionTreasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":6430:6446  commissionAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6401:6409  transfer */\n      tag_111\n        /* \"Signs 2/SignsToken.sol\":6401:6447  transfer(commissionTreasury, commissionAmount) */\n      jump\t// in\n    tag_258:\n        /* \"Signs 2/SignsToken.sol\":6376:6447  bool commissionSuccess = transfer(commissionTreasury, commissionAmount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":6474:6491  commissionSuccess */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6466:6522  require(commissionSuccess, \"Commission transfer failed\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"Signs 2/SignsToken.sol\":6561:6568  tokenId */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":6546:6587  CommissionPaid(tokenId, commissionAmount) */\n      0xacfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d5277\n        /* \"Signs 2/SignsToken.sol\":6570:6586  commissionAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6546:6587  CommissionPaid(tokenId, commissionAmount) */\n      mload(0x40)\n      tag_262\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":6243:6603  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":6217:6603  if (commissionAmount > 0) {... */\n    tag_257:\n        /* \"Signs 2/SignsToken.sol\":6781:6793  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6796:6828  transfer(carrier, paymentAmount) */\n      tag_263\n        /* \"Signs 2/SignsToken.sol\":6805:6812  carrier */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":6814:6827  paymentAmount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":6796:6804  transfer */\n      tag_111\n        /* \"Signs 2/SignsToken.sol\":6796:6828  transfer(carrier, paymentAmount) */\n      jump\t// in\n    tag_263:\n        /* \"Signs 2/SignsToken.sol\":6781:6828  bool success = transfer(carrier, paymentAmount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":6851:6858  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6843:6883  require(success, \"Wage transfer failed\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"Signs 2/SignsToken.sol\":6935:6942  carrier */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":6917:6958  WagePaid(tokenId, carrier, paymentAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":6926:6933  tokenId */\n      dup10\n        /* \"Signs 2/SignsToken.sol\":6917:6958  WagePaid(tokenId, carrier, paymentAmount) */\n      0x4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca\n        /* \"Signs 2/SignsToken.sol\":6944:6957  paymentAmount */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":6917:6958  WagePaid(tokenId, carrier, paymentAmount) */\n      mload(0x40)\n      tag_267\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":5835:6970  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":5816:7791  if (isFullPayment) {... */\n      jump(tag_268)\n    tag_250:\n        /* \"Signs 2/SignsToken.sol\":7059:7073  currentBalance */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7043:7073  paymentAmount = currentBalance */\n      swap2\n      pop\n        /* \"Signs 2/SignsToken.sol\":7107:7108  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7088:7108  commissionAmount = 0 */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":7208:7209  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7184:7196  signBalances */\n      0x0b\n        /* \"Signs 2/SignsToken.sol\":7184:7205  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7197:7204  tokenId */\n      dup11\n        /* \"Signs 2/SignsToken.sol\":7184:7205  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":7184:7209  signBalances[tokenId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":7258:7259  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7242:7255  paymentAmount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":7242:7259  paymentAmount > 0 */\n      gt\n        /* \"Signs 2/SignsToken.sol\":7238:7699  if (paymentAmount > 0) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":7455:7467  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7470:7502  transfer(carrier, paymentAmount) */\n      tag_270\n        /* \"Signs 2/SignsToken.sol\":7479:7486  carrier */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":7488:7501  paymentAmount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":7470:7478  transfer */\n      tag_111\n        /* \"Signs 2/SignsToken.sol\":7470:7502  transfer(carrier, paymentAmount) */\n      jump\t// in\n    tag_270:\n        /* \"Signs 2/SignsToken.sol\":7455:7502  bool success = transfer(carrier, paymentAmount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":7529:7536  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":7521:7569  require(success, \"Partial wage transfer failed\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"Signs 2/SignsToken.sol\":7636:7643  carrier */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":7611:7683  PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":7627:7634  tokenId */\n      dup10\n        /* \"Signs 2/SignsToken.sol\":7611:7683  PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount) */\n      0x5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb5243290\n        /* \"Signs 2/SignsToken.sol\":7645:7658  paymentAmount */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":7669:7682  paymentAmount */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":7660:7666  amount */\n      dup12\n        /* \"Signs 2/SignsToken.sol\":7660:7682  amount - paymentAmount */\n      tag_274\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_274:\n        /* \"Signs 2/SignsToken.sol\":7611:7683  PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount) */\n      mload(0x40)\n      tag_275\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":7261:7699  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":7238:7699  if (paymentAmount > 0) {... */\n    tag_269:\n        /* \"Signs 2/SignsToken.sol\":7747:7754  tokenId */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":7732:7779  LowSignBalance(tokenId, currentBalance, amount) */\n      0x574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f\n        /* \"Signs 2/SignsToken.sol\":7756:7770  currentBalance */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":7772:7778  amount */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":7732:7779  LowSignBalance(tokenId, currentBalance, amount) */\n      mload(0x40)\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":5816:7791  if (isFullPayment) {... */\n    tag_268:\n        /* \"Signs 2/SignsToken.sol\":7818:7987  WagePaymentResult({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Signs 2/SignsToken.sol\":7863:7876  paymentAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7818:7987  WagePaymentResult({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Signs 2/SignsToken.sol\":7915:7928  paymentAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7906:7912  amount */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":7906:7928  amount - paymentAmount */\n      tag_277\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_277:\n        /* \"Signs 2/SignsToken.sol\":7818:7987  WagePaymentResult({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Signs 2/SignsToken.sol\":7962:7975  isFullPayment */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":7961:7975  !isFullPayment */\n      iszero\n        /* \"Signs 2/SignsToken.sol\":7818:7987  WagePaymentResult({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":7811:7987  return WagePaymentResult({... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_278\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_278:\n        /* \"Signs 2/SignsToken.sol\":5242:7995  function payWage(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_290\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_75\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_302\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_307\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_308\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_310\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_319\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_155\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_322\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8560:8841  function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {... */\n    tag_227:\n        /* \"Signs 2/SignsToken.sol\":8637:8641  bool */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8789:8793  true */\n      0x01\n        /* \"Signs 2/SignsToken.sol\":8782:8793  return true */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":8560:8841  function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_333\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_343\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_349\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_75\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_355\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_355:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_356)\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_360)\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_361\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_241:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_362:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_363:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_364:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_365:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_366:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_416\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_362\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":711:782   */\n      tag_417\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_363\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_418\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_364\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":881:910   */\n      tag_419\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_365\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_421\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_366\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_368:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_370:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_371:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_427\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_370\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_372:\n        /* \"#utility.yul\":1876:1900   */\n      tag_429\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_371\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_430:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_373:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_432\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_372\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_374:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_375:\n        /* \"#utility.yul\":2232:2256   */\n      tag_435\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_374\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_436:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_376:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_438\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_375\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_42:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_441\n      tag_368\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2525:2644   */\n    tag_440:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_442\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_373\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_443\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_376\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_377:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_378:\n        /* \"#utility.yul\":3089:3110   */\n      tag_446\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_377\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_45:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_448\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_378\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_379:\n        /* \"#utility.yul\":3426:3450   */\n      tag_450\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_374\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_49:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_452\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_379\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_52:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_455\n      tag_368\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3767:3886   */\n    tag_454:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_456\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_373\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4358   */\n    tag_55:\n        /* \"#utility.yul\":4147:4151   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x40\n        /* \"#utility.yul\":4174:4183   */\n      dup3\n        /* \"#utility.yul\":4170:4188   */\n      add\n        /* \"#utility.yul\":4162:4188   */\n      swap1\n      pop\n        /* \"#utility.yul\":4198:4269   */\n      tag_458\n        /* \"#utility.yul\":4266:4267   */\n      0x00\n        /* \"#utility.yul\":4255:4264   */\n      dup4\n        /* \"#utility.yul\":4251:4268   */\n      add\n        /* \"#utility.yul\":4242:4248   */\n      dup6\n        /* \"#utility.yul\":4198:4269   */\n      tag_379\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4279:4351   */\n      tag_459\n        /* \"#utility.yul\":4347:4349   */\n      0x20\n        /* \"#utility.yul\":4336:4345   */\n      dup4\n        /* \"#utility.yul\":4332:4350   */\n      add\n        /* \"#utility.yul\":4323:4329   */\n      dup5\n        /* \"#utility.yul\":4279:4351   */\n      tag_379\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4026:4358   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4983   */\n    tag_58:\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4449:4455   */\n      dup1\n        /* \"#utility.yul\":4457:4463   */\n      0x00\n        /* \"#utility.yul\":4506:4508   */\n      0x60\n        /* \"#utility.yul\":4494:4503   */\n      dup5\n        /* \"#utility.yul\":4485:4492   */\n      dup7\n        /* \"#utility.yul\":4481:4504   */\n      sub\n        /* \"#utility.yul\":4477:4509   */\n      slt\n        /* \"#utility.yul\":4474:4593   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":4512:4591   */\n      tag_462\n      tag_368\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4474:4593   */\n    tag_461:\n        /* \"#utility.yul\":4632:4633   */\n      0x00\n        /* \"#utility.yul\":4657:4710   */\n      tag_463\n        /* \"#utility.yul\":4702:4709   */\n      dup7\n        /* \"#utility.yul\":4693:4699   */\n      dup3\n        /* \"#utility.yul\":4682:4691   */\n      dup8\n        /* \"#utility.yul\":4678:4700   */\n      add\n        /* \"#utility.yul\":4657:4710   */\n      tag_373\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4647:4710   */\n      swap4\n      pop\n        /* \"#utility.yul\":4603:4720   */\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4785:4838   */\n      tag_464\n        /* \"#utility.yul\":4830:4837   */\n      dup7\n        /* \"#utility.yul\":4821:4827   */\n      dup3\n        /* \"#utility.yul\":4810:4819   */\n      dup8\n        /* \"#utility.yul\":4806:4828   */\n      add\n        /* \"#utility.yul\":4785:4838   */\n      tag_373\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4775:4838   */\n      swap3\n      pop\n        /* \"#utility.yul\":4730:4848   */\n      pop\n        /* \"#utility.yul\":4887:4889   */\n      0x40\n        /* \"#utility.yul\":4913:4966   */\n      tag_465\n        /* \"#utility.yul\":4958:4965   */\n      dup7\n        /* \"#utility.yul\":4949:4955   */\n      dup3\n        /* \"#utility.yul\":4938:4947   */\n      dup8\n        /* \"#utility.yul\":4934:4956   */\n      add\n        /* \"#utility.yul\":4913:4966   */\n      tag_376\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4903:4966   */\n      swap2\n      pop\n        /* \"#utility.yul\":4858:4976   */\n      pop\n        /* \"#utility.yul\":4364:4983   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4989:5049   */\n    tag_380:\n        /* \"#utility.yul\":5017:5020   */\n      0x00\n        /* \"#utility.yul\":5038:5043   */\n      dup2\n        /* \"#utility.yul\":5031:5043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4989:5049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5055:5197   */\n    tag_381:\n        /* \"#utility.yul\":5105:5114   */\n      0x00\n        /* \"#utility.yul\":5138:5191   */\n      tag_468\n        /* \"#utility.yul\":5156:5190   */\n      tag_469\n        /* \"#utility.yul\":5165:5189   */\n      tag_470\n        /* \"#utility.yul\":5183:5188   */\n      dup5\n        /* \"#utility.yul\":5165:5189   */\n      tag_370\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":5156:5190   */\n      tag_380\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5138:5191   */\n      tag_370\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5125:5191   */\n      swap1\n      pop\n        /* \"#utility.yul\":5055:5197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5203:5329   */\n    tag_382:\n        /* \"#utility.yul\":5253:5262   */\n      0x00\n        /* \"#utility.yul\":5286:5323   */\n      tag_472\n        /* \"#utility.yul\":5317:5322   */\n      dup3\n        /* \"#utility.yul\":5286:5323   */\n      tag_381\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5273:5323   */\n      swap1\n      pop\n        /* \"#utility.yul\":5203:5329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5335:5479   */\n    tag_383:\n        /* \"#utility.yul\":5403:5412   */\n      0x00\n        /* \"#utility.yul\":5436:5473   */\n      tag_474\n        /* \"#utility.yul\":5467:5472   */\n      dup3\n        /* \"#utility.yul\":5436:5473   */\n      tag_382\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5423:5473   */\n      swap1\n      pop\n        /* \"#utility.yul\":5335:5479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5485:5652   */\n    tag_384:\n        /* \"#utility.yul\":5590:5645   */\n      tag_476\n        /* \"#utility.yul\":5639:5644   */\n      dup2\n        /* \"#utility.yul\":5590:5645   */\n      tag_383\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5585:5588   */\n      dup3\n        /* \"#utility.yul\":5578:5646   */\n      mstore\n        /* \"#utility.yul\":5485:5652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5658:5916   */\n    tag_64:\n        /* \"#utility.yul\":5769:5773   */\n      0x00\n        /* \"#utility.yul\":5807:5809   */\n      0x20\n        /* \"#utility.yul\":5796:5805   */\n      dup3\n        /* \"#utility.yul\":5792:5810   */\n      add\n        /* \"#utility.yul\":5784:5810   */\n      swap1\n      pop\n        /* \"#utility.yul\":5820:5909   */\n      tag_478\n        /* \"#utility.yul\":5906:5907   */\n      0x00\n        /* \"#utility.yul\":5895:5904   */\n      dup4\n        /* \"#utility.yul\":5891:5908   */\n      add\n        /* \"#utility.yul\":5882:5888   */\n      dup5\n        /* \"#utility.yul\":5820:5909   */\n      tag_384\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5658:5916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5922:6008   */\n    tag_385:\n        /* \"#utility.yul\":5957:5964   */\n      0x00\n        /* \"#utility.yul\":5997:6001   */\n      0xff\n        /* \"#utility.yul\":5990:5995   */\n      dup3\n        /* \"#utility.yul\":5986:6002   */\n      and\n        /* \"#utility.yul\":5975:6002   */\n      swap1\n      pop\n        /* \"#utility.yul\":5922:6008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6014:6126   */\n    tag_386:\n        /* \"#utility.yul\":6097:6119   */\n      tag_481\n        /* \"#utility.yul\":6113:6118   */\n      dup2\n        /* \"#utility.yul\":6097:6119   */\n      tag_385\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6092:6095   */\n      dup3\n        /* \"#utility.yul\":6085:6120   */\n      mstore\n        /* \"#utility.yul\":6014:6126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6132:6346   */\n    tag_71:\n        /* \"#utility.yul\":6221:6225   */\n      0x00\n        /* \"#utility.yul\":6259:6261   */\n      0x20\n        /* \"#utility.yul\":6248:6257   */\n      dup3\n        /* \"#utility.yul\":6244:6262   */\n      add\n        /* \"#utility.yul\":6236:6262   */\n      swap1\n      pop\n        /* \"#utility.yul\":6272:6339   */\n      tag_483\n        /* \"#utility.yul\":6336:6337   */\n      0x00\n        /* \"#utility.yul\":6325:6334   */\n      dup4\n        /* \"#utility.yul\":6321:6338   */\n      add\n        /* \"#utility.yul\":6312:6318   */\n      dup5\n        /* \"#utility.yul\":6272:6339   */\n      tag_386\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6132:6346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6352:6826   */\n    tag_79:\n        /* \"#utility.yul\":6420:6426   */\n      0x00\n        /* \"#utility.yul\":6428:6434   */\n      dup1\n        /* \"#utility.yul\":6477:6479   */\n      0x40\n        /* \"#utility.yul\":6465:6474   */\n      dup4\n        /* \"#utility.yul\":6456:6463   */\n      dup6\n        /* \"#utility.yul\":6452:6475   */\n      sub\n        /* \"#utility.yul\":6448:6480   */\n      slt\n        /* \"#utility.yul\":6445:6564   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":6483:6562   */\n      tag_486\n      tag_368\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":6445:6564   */\n    tag_485:\n        /* \"#utility.yul\":6603:6604   */\n      0x00\n        /* \"#utility.yul\":6628:6681   */\n      tag_487\n        /* \"#utility.yul\":6673:6680   */\n      dup6\n        /* \"#utility.yul\":6664:6670   */\n      dup3\n        /* \"#utility.yul\":6653:6662   */\n      dup7\n        /* \"#utility.yul\":6649:6671   */\n      add\n        /* \"#utility.yul\":6628:6681   */\n      tag_376\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6618:6681   */\n      swap3\n      pop\n        /* \"#utility.yul\":6574:6691   */\n      pop\n        /* \"#utility.yul\":6730:6732   */\n      0x20\n        /* \"#utility.yul\":6756:6809   */\n      tag_488\n        /* \"#utility.yul\":6801:6808   */\n      dup6\n        /* \"#utility.yul\":6792:6798   */\n      dup3\n        /* \"#utility.yul\":6781:6790   */\n      dup7\n        /* \"#utility.yul\":6777:6799   */\n      add\n        /* \"#utility.yul\":6756:6809   */\n      tag_376\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6746:6809   */\n      swap2\n      pop\n        /* \"#utility.yul\":6701:6819   */\n      pop\n        /* \"#utility.yul\":6352:6826   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6832:6950   */\n    tag_387:\n        /* \"#utility.yul\":6919:6943   */\n      tag_490\n        /* \"#utility.yul\":6937:6942   */\n      dup2\n        /* \"#utility.yul\":6919:6943   */\n      tag_371\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6914:6917   */\n      dup3\n        /* \"#utility.yul\":6907:6944   */\n      mstore\n        /* \"#utility.yul\":6832:6950   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6956:7178   */\n    tag_98:\n        /* \"#utility.yul\":7049:7053   */\n      0x00\n        /* \"#utility.yul\":7087:7089   */\n      0x20\n        /* \"#utility.yul\":7076:7085   */\n      dup3\n        /* \"#utility.yul\":7072:7090   */\n      add\n        /* \"#utility.yul\":7064:7090   */\n      swap1\n      pop\n        /* \"#utility.yul\":7100:7171   */\n      tag_492\n        /* \"#utility.yul\":7168:7169   */\n      0x00\n        /* \"#utility.yul\":7157:7166   */\n      dup4\n        /* \"#utility.yul\":7153:7170   */\n      add\n        /* \"#utility.yul\":7144:7150   */\n      dup5\n        /* \"#utility.yul\":7100:7171   */\n      tag_387\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":6956:7178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7184:7513   */\n    tag_104:\n        /* \"#utility.yul\":7243:7249   */\n      0x00\n        /* \"#utility.yul\":7292:7294   */\n      0x20\n        /* \"#utility.yul\":7280:7289   */\n      dup3\n        /* \"#utility.yul\":7271:7278   */\n      dup5\n        /* \"#utility.yul\":7267:7290   */\n      sub\n        /* \"#utility.yul\":7263:7295   */\n      slt\n        /* \"#utility.yul\":7260:7379   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7298:7377   */\n      tag_495\n      tag_368\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7260:7379   */\n    tag_494:\n        /* \"#utility.yul\":7418:7419   */\n      0x00\n        /* \"#utility.yul\":7443:7496   */\n      tag_496\n        /* \"#utility.yul\":7488:7495   */\n      dup5\n        /* \"#utility.yul\":7479:7485   */\n      dup3\n        /* \"#utility.yul\":7468:7477   */\n      dup6\n        /* \"#utility.yul\":7464:7486   */\n      add\n        /* \"#utility.yul\":7443:7496   */\n      tag_376\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7433:7496   */\n      swap2\n      pop\n        /* \"#utility.yul\":7389:7506   */\n      pop\n        /* \"#utility.yul\":7184:7513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7519:7993   */\n    tag_122:\n        /* \"#utility.yul\":7587:7593   */\n      0x00\n        /* \"#utility.yul\":7595:7601   */\n      dup1\n        /* \"#utility.yul\":7644:7646   */\n      0x40\n        /* \"#utility.yul\":7632:7641   */\n      dup4\n        /* \"#utility.yul\":7623:7630   */\n      dup6\n        /* \"#utility.yul\":7619:7642   */\n      sub\n        /* \"#utility.yul\":7615:7647   */\n      slt\n        /* \"#utility.yul\":7612:7731   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":7650:7729   */\n      tag_499\n      tag_368\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7612:7731   */\n    tag_498:\n        /* \"#utility.yul\":7770:7771   */\n      0x00\n        /* \"#utility.yul\":7795:7848   */\n      tag_500\n        /* \"#utility.yul\":7840:7847   */\n      dup6\n        /* \"#utility.yul\":7831:7837   */\n      dup3\n        /* \"#utility.yul\":7820:7829   */\n      dup7\n        /* \"#utility.yul\":7816:7838   */\n      add\n        /* \"#utility.yul\":7795:7848   */\n      tag_373\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7785:7848   */\n      swap3\n      pop\n        /* \"#utility.yul\":7741:7858   */\n      pop\n        /* \"#utility.yul\":7897:7899   */\n      0x20\n        /* \"#utility.yul\":7923:7976   */\n      tag_501\n        /* \"#utility.yul\":7968:7975   */\n      dup6\n        /* \"#utility.yul\":7959:7965   */\n      dup3\n        /* \"#utility.yul\":7948:7957   */\n      dup7\n        /* \"#utility.yul\":7944:7966   */\n      add\n        /* \"#utility.yul\":7923:7976   */\n      tag_373\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":7913:7976   */\n      swap2\n      pop\n        /* \"#utility.yul\":7868:7986   */\n      pop\n        /* \"#utility.yul\":7519:7993   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7999:8618   */\n    tag_130:\n        /* \"#utility.yul\":8076:8082   */\n      0x00\n        /* \"#utility.yul\":8084:8090   */\n      dup1\n        /* \"#utility.yul\":8092:8098   */\n      0x00\n        /* \"#utility.yul\":8141:8143   */\n      0x60\n        /* \"#utility.yul\":8129:8138   */\n      dup5\n        /* \"#utility.yul\":8120:8127   */\n      dup7\n        /* \"#utility.yul\":8116:8139   */\n      sub\n        /* \"#utility.yul\":8112:8144   */\n      slt\n        /* \"#utility.yul\":8109:8228   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":8147:8226   */\n      tag_504\n      tag_368\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8109:8228   */\n    tag_503:\n        /* \"#utility.yul\":8267:8268   */\n      0x00\n        /* \"#utility.yul\":8292:8345   */\n      tag_505\n        /* \"#utility.yul\":8337:8344   */\n      dup7\n        /* \"#utility.yul\":8328:8334   */\n      dup3\n        /* \"#utility.yul\":8317:8326   */\n      dup8\n        /* \"#utility.yul\":8313:8335   */\n      add\n        /* \"#utility.yul\":8292:8345   */\n      tag_376\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":8282:8345   */\n      swap4\n      pop\n        /* \"#utility.yul\":8238:8355   */\n      pop\n        /* \"#utility.yul\":8394:8396   */\n      0x20\n        /* \"#utility.yul\":8420:8473   */\n      tag_506\n        /* \"#utility.yul\":8465:8472   */\n      dup7\n        /* \"#utility.yul\":8456:8462   */\n      dup3\n        /* \"#utility.yul\":8445:8454   */\n      dup8\n        /* \"#utility.yul\":8441:8463   */\n      add\n        /* \"#utility.yul\":8420:8473   */\n      tag_373\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8410:8473   */\n      swap3\n      pop\n        /* \"#utility.yul\":8365:8483   */\n      pop\n        /* \"#utility.yul\":8522:8524   */\n      0x40\n        /* \"#utility.yul\":8548:8601   */\n      tag_507\n        /* \"#utility.yul\":8593:8600   */\n      dup7\n        /* \"#utility.yul\":8584:8590   */\n      dup3\n        /* \"#utility.yul\":8573:8582   */\n      dup8\n        /* \"#utility.yul\":8569:8591   */\n      add\n        /* \"#utility.yul\":8548:8601   */\n      tag_376\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":8538:8601   */\n      swap2\n      pop\n        /* \"#utility.yul\":8493:8611   */\n      pop\n        /* \"#utility.yul\":7999:8618   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8624:8732   */\n    tag_388:\n        /* \"#utility.yul\":8701:8725   */\n      tag_509\n        /* \"#utility.yul\":8719:8724   */\n      dup2\n        /* \"#utility.yul\":8701:8725   */\n      tag_374\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8696:8699   */\n      dup3\n        /* \"#utility.yul\":8689:8726   */\n      mstore\n        /* \"#utility.yul\":8624:8732   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8738:8837   */\n    tag_389:\n        /* \"#utility.yul\":8809:8830   */\n      tag_511\n        /* \"#utility.yul\":8824:8829   */\n      dup2\n        /* \"#utility.yul\":8809:8830   */\n      tag_377\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":8804:8807   */\n      dup3\n        /* \"#utility.yul\":8797:8831   */\n      mstore\n        /* \"#utility.yul\":8738:8837   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8923:9645   */\n    tag_390:\n        /* \"#utility.yul\":9090:9094   */\n      0x60\n        /* \"#utility.yul\":9085:9088   */\n      dup3\n        /* \"#utility.yul\":9081:9095   */\n      add\n        /* \"#utility.yul\":9183:9187   */\n      0x00\n        /* \"#utility.yul\":9176:9181   */\n      dup3\n        /* \"#utility.yul\":9172:9188   */\n      add\n        /* \"#utility.yul\":9166:9189   */\n      mload\n        /* \"#utility.yul\":9202:9265   */\n      tag_513\n        /* \"#utility.yul\":9259:9263   */\n      0x00\n        /* \"#utility.yul\":9254:9257   */\n      dup6\n        /* \"#utility.yul\":9250:9264   */\n      add\n        /* \"#utility.yul\":9236:9248   */\n      dup3\n        /* \"#utility.yul\":9202:9265   */\n      tag_388\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9105:9275   */\n      pop\n        /* \"#utility.yul\":9366:9370   */\n      0x20\n        /* \"#utility.yul\":9359:9364   */\n      dup3\n        /* \"#utility.yul\":9355:9371   */\n      add\n        /* \"#utility.yul\":9349:9372   */\n      mload\n        /* \"#utility.yul\":9385:9448   */\n      tag_514\n        /* \"#utility.yul\":9442:9446   */\n      0x20\n        /* \"#utility.yul\":9437:9440   */\n      dup6\n        /* \"#utility.yul\":9433:9447   */\n      add\n        /* \"#utility.yul\":9419:9431   */\n      dup3\n        /* \"#utility.yul\":9385:9448   */\n      tag_388\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9285:9458   */\n      pop\n        /* \"#utility.yul\":9552:9556   */\n      0x40\n        /* \"#utility.yul\":9545:9550   */\n      dup3\n        /* \"#utility.yul\":9541:9557   */\n      add\n        /* \"#utility.yul\":9535:9558   */\n      mload\n        /* \"#utility.yul\":9571:9628   */\n      tag_515\n        /* \"#utility.yul\":9622:9626   */\n      0x40\n        /* \"#utility.yul\":9617:9620   */\n      dup6\n        /* \"#utility.yul\":9613:9627   */\n      add\n        /* \"#utility.yul\":9599:9611   */\n      dup3\n        /* \"#utility.yul\":9571:9628   */\n      tag_389\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9468:9638   */\n      pop\n        /* \"#utility.yul\":9059:9645   */\n      pop\n        /* \"#utility.yul\":8923:9645   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9651:10013   */\n    tag_133:\n        /* \"#utility.yul\":9814:9818   */\n      0x00\n        /* \"#utility.yul\":9852:9854   */\n      0x60\n        /* \"#utility.yul\":9841:9850   */\n      dup3\n        /* \"#utility.yul\":9837:9855   */\n      add\n        /* \"#utility.yul\":9829:9855   */\n      swap1\n      pop\n        /* \"#utility.yul\":9865:10006   */\n      tag_517\n        /* \"#utility.yul\":10003:10004   */\n      0x00\n        /* \"#utility.yul\":9992:10001   */\n      dup4\n        /* \"#utility.yul\":9988:10005   */\n      add\n        /* \"#utility.yul\":9979:9985   */\n      dup5\n        /* \"#utility.yul\":9865:10006   */\n      tag_390\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9651:10013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10019:10199   */\n    tag_391:\n        /* \"#utility.yul\":10067:10144   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10064:10065   */\n      0x00\n        /* \"#utility.yul\":10057:10145   */\n      mstore\n        /* \"#utility.yul\":10164:10168   */\n      0x22\n        /* \"#utility.yul\":10161:10162   */\n      0x04\n        /* \"#utility.yul\":10154:10169   */\n      mstore\n        /* \"#utility.yul\":10188:10192   */\n      0x24\n        /* \"#utility.yul\":10185:10186   */\n      0x00\n        /* \"#utility.yul\":10178:10193   */\n      revert\n        /* \"#utility.yul\":10205:10525   */\n    tag_139:\n        /* \"#utility.yul\":10249:10255   */\n      0x00\n        /* \"#utility.yul\":10286:10287   */\n      0x02\n        /* \"#utility.yul\":10280:10284   */\n      dup3\n        /* \"#utility.yul\":10276:10288   */\n      div\n        /* \"#utility.yul\":10266:10288   */\n      swap1\n      pop\n        /* \"#utility.yul\":10333:10334   */\n      0x01\n        /* \"#utility.yul\":10327:10331   */\n      dup3\n        /* \"#utility.yul\":10323:10335   */\n      and\n        /* \"#utility.yul\":10354:10372   */\n      dup1\n        /* \"#utility.yul\":10344:10425   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10410:10414   */\n      0x7f\n        /* \"#utility.yul\":10402:10408   */\n      dup3\n        /* \"#utility.yul\":10398:10415   */\n      and\n        /* \"#utility.yul\":10388:10415   */\n      swap2\n      pop\n        /* \"#utility.yul\":10344:10425   */\n    tag_520:\n        /* \"#utility.yul\":10472:10474   */\n      0x20\n        /* \"#utility.yul\":10464:10470   */\n      dup3\n        /* \"#utility.yul\":10461:10475   */\n      lt\n        /* \"#utility.yul\":10441:10459   */\n      dup2\n        /* \"#utility.yul\":10438:10476   */\n      sub\n        /* \"#utility.yul\":10435:10519   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":10491:10509   */\n      tag_522\n      tag_391\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10435:10519   */\n    tag_521:\n        /* \"#utility.yul\":10256:10525   */\n      pop\n        /* \"#utility.yul\":10205:10525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10531:10702   */\n    tag_392:\n        /* \"#utility.yul\":10671:10694   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":10667:10668   */\n      0x00\n        /* \"#utility.yul\":10659:10665   */\n      dup3\n        /* \"#utility.yul\":10655:10669   */\n      add\n        /* \"#utility.yul\":10648:10695   */\n      mstore\n        /* \"#utility.yul\":10531:10702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10708:11074   */\n    tag_393:\n        /* \"#utility.yul\":10850:10853   */\n      0x00\n        /* \"#utility.yul\":10871:10938   */\n      tag_525\n        /* \"#utility.yul\":10935:10937   */\n      0x15\n        /* \"#utility.yul\":10930:10933   */\n      dup4\n        /* \"#utility.yul\":10871:10938   */\n      tag_363\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10864:10938   */\n      swap2\n      pop\n        /* \"#utility.yul\":10947:11040   */\n      tag_526\n        /* \"#utility.yul\":11036:11039   */\n      dup3\n        /* \"#utility.yul\":10947:11040   */\n      tag_392\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11065:11067   */\n      0x20\n        /* \"#utility.yul\":11060:11063   */\n      dup3\n        /* \"#utility.yul\":11056:11068   */\n      add\n        /* \"#utility.yul\":11049:11068   */\n      swap1\n      pop\n        /* \"#utility.yul\":10708:11074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11080:11499   */\n    tag_182:\n        /* \"#utility.yul\":11246:11250   */\n      0x00\n        /* \"#utility.yul\":11284:11286   */\n      0x20\n        /* \"#utility.yul\":11273:11282   */\n      dup3\n        /* \"#utility.yul\":11269:11287   */\n      add\n        /* \"#utility.yul\":11261:11287   */\n      swap1\n      pop\n        /* \"#utility.yul\":11333:11342   */\n      dup2\n        /* \"#utility.yul\":11327:11331   */\n      dup2\n        /* \"#utility.yul\":11323:11343   */\n      sub\n        /* \"#utility.yul\":11319:11320   */\n      0x00\n        /* \"#utility.yul\":11308:11317   */\n      dup4\n        /* \"#utility.yul\":11304:11321   */\n      add\n        /* \"#utility.yul\":11297:11344   */\n      mstore\n        /* \"#utility.yul\":11361:11492   */\n      tag_528\n        /* \"#utility.yul\":11487:11491   */\n      dup2\n        /* \"#utility.yul\":11361:11492   */\n      tag_393\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11353:11492   */\n      swap1\n      pop\n        /* \"#utility.yul\":11080:11499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11505:11685   */\n    tag_394:\n        /* \"#utility.yul\":11553:11630   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11550:11551   */\n      0x00\n        /* \"#utility.yul\":11543:11631   */\n      mstore\n        /* \"#utility.yul\":11650:11654   */\n      0x11\n        /* \"#utility.yul\":11647:11648   */\n      0x04\n        /* \"#utility.yul\":11640:11655   */\n      mstore\n        /* \"#utility.yul\":11674:11678   */\n      0x24\n        /* \"#utility.yul\":11671:11672   */\n      0x00\n        /* \"#utility.yul\":11664:11679   */\n      revert\n        /* \"#utility.yul\":11691:11882   */\n    tag_184:\n        /* \"#utility.yul\":11731:11734   */\n      0x00\n        /* \"#utility.yul\":11750:11770   */\n      tag_531\n        /* \"#utility.yul\":11768:11769   */\n      dup3\n        /* \"#utility.yul\":11750:11770   */\n      tag_374\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11745:11770   */\n      swap2\n      pop\n        /* \"#utility.yul\":11784:11804   */\n      tag_532\n        /* \"#utility.yul\":11802:11803   */\n      dup4\n        /* \"#utility.yul\":11784:11804   */\n      tag_374\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11779:11804   */\n      swap3\n      pop\n        /* \"#utility.yul\":11827:11828   */\n      dup3\n        /* \"#utility.yul\":11824:11825   */\n      dup3\n        /* \"#utility.yul\":11820:11829   */\n      add\n        /* \"#utility.yul\":11813:11829   */\n      swap1\n      pop\n        /* \"#utility.yul\":11848:11851   */\n      dup1\n        /* \"#utility.yul\":11845:11846   */\n      dup3\n        /* \"#utility.yul\":11842:11852   */\n      gt\n        /* \"#utility.yul\":11839:11875   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":11855:11873   */\n      tag_534\n      tag_394\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11839:11875   */\n    tag_533:\n        /* \"#utility.yul\":11691:11882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11888:12082   */\n    tag_232:\n        /* \"#utility.yul\":11928:11932   */\n      0x00\n        /* \"#utility.yul\":11948:11968   */\n      tag_536\n        /* \"#utility.yul\":11966:11967   */\n      dup3\n        /* \"#utility.yul\":11948:11968   */\n      tag_374\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11943:11968   */\n      swap2\n      pop\n        /* \"#utility.yul\":11982:12002   */\n      tag_537\n        /* \"#utility.yul\":12000:12001   */\n      dup4\n        /* \"#utility.yul\":11982:12002   */\n      tag_374\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11977:12002   */\n      swap3\n      pop\n        /* \"#utility.yul\":12026:12027   */\n      dup3\n        /* \"#utility.yul\":12023:12024   */\n      dup3\n        /* \"#utility.yul\":12019:12028   */\n      sub\n        /* \"#utility.yul\":12011:12028   */\n      swap1\n      pop\n        /* \"#utility.yul\":12050:12051   */\n      dup2\n        /* \"#utility.yul\":12044:12048   */\n      dup2\n        /* \"#utility.yul\":12041:12052   */\n      gt\n        /* \"#utility.yul\":12038:12075   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":12055:12073   */\n      tag_539\n      tag_394\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12038:12075   */\n    tag_538:\n        /* \"#utility.yul\":11888:12082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12088:12253   */\n    tag_395:\n        /* \"#utility.yul\":12228:12245   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":12224:12225   */\n      0x00\n        /* \"#utility.yul\":12216:12222   */\n      dup3\n        /* \"#utility.yul\":12212:12226   */\n      add\n        /* \"#utility.yul\":12205:12246   */\n      mstore\n        /* \"#utility.yul\":12088:12253   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12259:12625   */\n    tag_396:\n        /* \"#utility.yul\":12401:12404   */\n      0x00\n        /* \"#utility.yul\":12422:12489   */\n      tag_542\n        /* \"#utility.yul\":12486:12488   */\n      0x0f\n        /* \"#utility.yul\":12481:12484   */\n      dup4\n        /* \"#utility.yul\":12422:12489   */\n      tag_363\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12415:12489   */\n      swap2\n      pop\n        /* \"#utility.yul\":12498:12591   */\n      tag_543\n        /* \"#utility.yul\":12587:12590   */\n      dup3\n        /* \"#utility.yul\":12498:12591   */\n      tag_395\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12616:12618   */\n      0x20\n        /* \"#utility.yul\":12611:12614   */\n      dup3\n        /* \"#utility.yul\":12607:12619   */\n      add\n        /* \"#utility.yul\":12600:12619   */\n      swap1\n      pop\n        /* \"#utility.yul\":12259:12625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:13050   */\n    tag_236:\n        /* \"#utility.yul\":12797:12801   */\n      0x00\n        /* \"#utility.yul\":12835:12837   */\n      0x20\n        /* \"#utility.yul\":12824:12833   */\n      dup3\n        /* \"#utility.yul\":12820:12838   */\n      add\n        /* \"#utility.yul\":12812:12838   */\n      swap1\n      pop\n        /* \"#utility.yul\":12884:12893   */\n      dup2\n        /* \"#utility.yul\":12878:12882   */\n      dup2\n        /* \"#utility.yul\":12874:12894   */\n      sub\n        /* \"#utility.yul\":12870:12871   */\n      0x00\n        /* \"#utility.yul\":12859:12868   */\n      dup4\n        /* \"#utility.yul\":12855:12872   */\n      add\n        /* \"#utility.yul\":12848:12895   */\n      mstore\n        /* \"#utility.yul\":12912:13043   */\n      tag_545\n        /* \"#utility.yul\":13038:13042   */\n      dup2\n        /* \"#utility.yul\":12912:13043   */\n      tag_396\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12904:13043   */\n      swap1\n      pop\n        /* \"#utility.yul\":12631:13050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13056:13466   */\n    tag_252:\n        /* \"#utility.yul\":13096:13103   */\n      0x00\n        /* \"#utility.yul\":13119:13139   */\n      tag_547\n        /* \"#utility.yul\":13137:13138   */\n      dup3\n        /* \"#utility.yul\":13119:13139   */\n      tag_374\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13114:13139   */\n      swap2\n      pop\n        /* \"#utility.yul\":13153:13173   */\n      tag_548\n        /* \"#utility.yul\":13171:13172   */\n      dup4\n        /* \"#utility.yul\":13153:13173   */\n      tag_374\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13148:13173   */\n      swap3\n      pop\n        /* \"#utility.yul\":13208:13209   */\n      dup3\n        /* \"#utility.yul\":13205:13206   */\n      dup3\n        /* \"#utility.yul\":13201:13210   */\n      mul\n        /* \"#utility.yul\":13230:13260   */\n      tag_549\n        /* \"#utility.yul\":13248:13259   */\n      dup2\n        /* \"#utility.yul\":13230:13260   */\n      tag_374\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13219:13260   */\n      swap2\n      pop\n        /* \"#utility.yul\":13409:13410   */\n      dup3\n        /* \"#utility.yul\":13400:13407   */\n      dup3\n        /* \"#utility.yul\":13396:13411   */\n      div\n        /* \"#utility.yul\":13393:13394   */\n      dup5\n        /* \"#utility.yul\":13390:13412   */\n      eq\n        /* \"#utility.yul\":13370:13371   */\n      dup4\n        /* \"#utility.yul\":13363:13372   */\n      iszero\n        /* \"#utility.yul\":13343:13426   */\n      or\n        /* \"#utility.yul\":13320:13459   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":13439:13457   */\n      tag_551\n      tag_394\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13320:13459   */\n    tag_550:\n        /* \"#utility.yul\":13104:13466   */\n      pop\n        /* \"#utility.yul\":13056:13466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13472:13652   */\n    tag_397:\n        /* \"#utility.yul\":13520:13597   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13517:13518   */\n      0x00\n        /* \"#utility.yul\":13510:13598   */\n      mstore\n        /* \"#utility.yul\":13617:13621   */\n      0x12\n        /* \"#utility.yul\":13614:13615   */\n      0x04\n        /* \"#utility.yul\":13607:13622   */\n      mstore\n        /* \"#utility.yul\":13641:13645   */\n      0x24\n        /* \"#utility.yul\":13638:13639   */\n      0x00\n        /* \"#utility.yul\":13631:13646   */\n      revert\n        /* \"#utility.yul\":13658:13843   */\n    tag_254:\n        /* \"#utility.yul\":13698:13699   */\n      0x00\n        /* \"#utility.yul\":13715:13735   */\n      tag_554\n        /* \"#utility.yul\":13733:13734   */\n      dup3\n        /* \"#utility.yul\":13715:13735   */\n      tag_374\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13710:13735   */\n      swap2\n      pop\n        /* \"#utility.yul\":13749:13769   */\n      tag_555\n        /* \"#utility.yul\":13767:13768   */\n      dup4\n        /* \"#utility.yul\":13749:13769   */\n      tag_374\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13744:13769   */\n      swap3\n      pop\n        /* \"#utility.yul\":13788:13789   */\n      dup3\n        /* \"#utility.yul\":13778:13813   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":13793:13811   */\n      tag_557\n      tag_397\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":13778:13813   */\n    tag_556:\n        /* \"#utility.yul\":13835:13836   */\n      dup3\n        /* \"#utility.yul\":13832:13833   */\n      dup3\n        /* \"#utility.yul\":13828:13837   */\n      div\n        /* \"#utility.yul\":13823:13837   */\n      swap1\n      pop\n        /* \"#utility.yul\":13658:13843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13849:14025   */\n    tag_398:\n        /* \"#utility.yul\":13989:14017   */\n      0x436f6d6d697373696f6e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":13985:13986   */\n      0x00\n        /* \"#utility.yul\":13977:13983   */\n      dup3\n        /* \"#utility.yul\":13973:13987   */\n      add\n        /* \"#utility.yul\":13966:14018   */\n      mstore\n        /* \"#utility.yul\":13849:14025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14031:14397   */\n    tag_399:\n        /* \"#utility.yul\":14173:14176   */\n      0x00\n        /* \"#utility.yul\":14194:14261   */\n      tag_560\n        /* \"#utility.yul\":14258:14260   */\n      0x1a\n        /* \"#utility.yul\":14253:14256   */\n      dup4\n        /* \"#utility.yul\":14194:14261   */\n      tag_363\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14187:14261   */\n      swap2\n      pop\n        /* \"#utility.yul\":14270:14363   */\n      tag_561\n        /* \"#utility.yul\":14359:14362   */\n      dup3\n        /* \"#utility.yul\":14270:14363   */\n      tag_398\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14388:14390   */\n      0x20\n        /* \"#utility.yul\":14383:14386   */\n      dup3\n        /* \"#utility.yul\":14379:14391   */\n      add\n        /* \"#utility.yul\":14372:14391   */\n      swap1\n      pop\n        /* \"#utility.yul\":14031:14397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14403:14822   */\n    tag_261:\n        /* \"#utility.yul\":14569:14573   */\n      0x00\n        /* \"#utility.yul\":14607:14609   */\n      0x20\n        /* \"#utility.yul\":14596:14605   */\n      dup3\n        /* \"#utility.yul\":14592:14610   */\n      add\n        /* \"#utility.yul\":14584:14610   */\n      swap1\n      pop\n        /* \"#utility.yul\":14656:14665   */\n      dup2\n        /* \"#utility.yul\":14650:14654   */\n      dup2\n        /* \"#utility.yul\":14646:14666   */\n      sub\n        /* \"#utility.yul\":14642:14643   */\n      0x00\n        /* \"#utility.yul\":14631:14640   */\n      dup4\n        /* \"#utility.yul\":14627:14644   */\n      add\n        /* \"#utility.yul\":14620:14667   */\n      mstore\n        /* \"#utility.yul\":14684:14815   */\n      tag_563\n        /* \"#utility.yul\":14810:14814   */\n      dup2\n        /* \"#utility.yul\":14684:14815   */\n      tag_399\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14676:14815   */\n      swap1\n      pop\n        /* \"#utility.yul\":14403:14822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14828:14998   */\n    tag_400:\n        /* \"#utility.yul\":14968:14990   */\n      0x57616765207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":14964:14965   */\n      0x00\n        /* \"#utility.yul\":14956:14962   */\n      dup3\n        /* \"#utility.yul\":14952:14966   */\n      add\n        /* \"#utility.yul\":14945:14991   */\n      mstore\n        /* \"#utility.yul\":14828:14998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15004:15370   */\n    tag_401:\n        /* \"#utility.yul\":15146:15149   */\n      0x00\n        /* \"#utility.yul\":15167:15234   */\n      tag_566\n        /* \"#utility.yul\":15231:15233   */\n      0x14\n        /* \"#utility.yul\":15226:15229   */\n      dup4\n        /* \"#utility.yul\":15167:15234   */\n      tag_363\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15160:15234   */\n      swap2\n      pop\n        /* \"#utility.yul\":15243:15336   */\n      tag_567\n        /* \"#utility.yul\":15332:15335   */\n      dup3\n        /* \"#utility.yul\":15243:15336   */\n      tag_400\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15361:15363   */\n      0x20\n        /* \"#utility.yul\":15356:15359   */\n      dup3\n        /* \"#utility.yul\":15352:15364   */\n      add\n        /* \"#utility.yul\":15345:15364   */\n      swap1\n      pop\n        /* \"#utility.yul\":15004:15370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15376:15795   */\n    tag_266:\n        /* \"#utility.yul\":15542:15546   */\n      0x00\n        /* \"#utility.yul\":15580:15582   */\n      0x20\n        /* \"#utility.yul\":15569:15578   */\n      dup3\n        /* \"#utility.yul\":15565:15583   */\n      add\n        /* \"#utility.yul\":15557:15583   */\n      swap1\n      pop\n        /* \"#utility.yul\":15629:15638   */\n      dup2\n        /* \"#utility.yul\":15623:15627   */\n      dup2\n        /* \"#utility.yul\":15619:15639   */\n      sub\n        /* \"#utility.yul\":15615:15616   */\n      0x00\n        /* \"#utility.yul\":15604:15613   */\n      dup4\n        /* \"#utility.yul\":15600:15617   */\n      add\n        /* \"#utility.yul\":15593:15640   */\n      mstore\n        /* \"#utility.yul\":15657:15788   */\n      tag_569\n        /* \"#utility.yul\":15783:15787   */\n      dup2\n        /* \"#utility.yul\":15657:15788   */\n      tag_401\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15649:15788   */\n      swap1\n      pop\n        /* \"#utility.yul\":15376:15795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15801:15979   */\n    tag_402:\n        /* \"#utility.yul\":15941:15971   */\n      0x5061727469616c2077616765207472616e73666572206661696c656400000000\n        /* \"#utility.yul\":15937:15938   */\n      0x00\n        /* \"#utility.yul\":15929:15935   */\n      dup3\n        /* \"#utility.yul\":15925:15939   */\n      add\n        /* \"#utility.yul\":15918:15972   */\n      mstore\n        /* \"#utility.yul\":15801:15979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15985:16351   */\n    tag_403:\n        /* \"#utility.yul\":16127:16130   */\n      0x00\n        /* \"#utility.yul\":16148:16215   */\n      tag_572\n        /* \"#utility.yul\":16212:16214   */\n      0x1c\n        /* \"#utility.yul\":16207:16210   */\n      dup4\n        /* \"#utility.yul\":16148:16215   */\n      tag_363\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16141:16215   */\n      swap2\n      pop\n        /* \"#utility.yul\":16224:16317   */\n      tag_573\n        /* \"#utility.yul\":16313:16316   */\n      dup3\n        /* \"#utility.yul\":16224:16317   */\n      tag_402\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16342:16344   */\n      0x20\n        /* \"#utility.yul\":16337:16340   */\n      dup3\n        /* \"#utility.yul\":16333:16345   */\n      add\n        /* \"#utility.yul\":16326:16345   */\n      swap1\n      pop\n        /* \"#utility.yul\":15985:16351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16357:16776   */\n    tag_273:\n        /* \"#utility.yul\":16523:16527   */\n      0x00\n        /* \"#utility.yul\":16561:16563   */\n      0x20\n        /* \"#utility.yul\":16550:16559   */\n      dup3\n        /* \"#utility.yul\":16546:16564   */\n      add\n        /* \"#utility.yul\":16538:16564   */\n      swap1\n      pop\n        /* \"#utility.yul\":16610:16619   */\n      dup2\n        /* \"#utility.yul\":16604:16608   */\n      dup2\n        /* \"#utility.yul\":16600:16620   */\n      sub\n        /* \"#utility.yul\":16596:16597   */\n      0x00\n        /* \"#utility.yul\":16585:16594   */\n      dup4\n        /* \"#utility.yul\":16581:16598   */\n      add\n        /* \"#utility.yul\":16574:16621   */\n      mstore\n        /* \"#utility.yul\":16638:16769   */\n      tag_575\n        /* \"#utility.yul\":16764:16768   */\n      dup2\n        /* \"#utility.yul\":16638:16769   */\n      tag_403\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16630:16769   */\n      swap1\n      pop\n        /* \"#utility.yul\":16357:16776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16782:16948   */\n    tag_404:\n        /* \"#utility.yul\":16922:16940   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":16918:16919   */\n      0x00\n        /* \"#utility.yul\":16910:16916   */\n      dup3\n        /* \"#utility.yul\":16906:16920   */\n      add\n        /* \"#utility.yul\":16899:16941   */\n      mstore\n        /* \"#utility.yul\":16782:16948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16954:17320   */\n    tag_405:\n        /* \"#utility.yul\":17096:17099   */\n      0x00\n        /* \"#utility.yul\":17117:17184   */\n      tag_578\n        /* \"#utility.yul\":17181:17183   */\n      0x10\n        /* \"#utility.yul\":17176:17179   */\n      dup4\n        /* \"#utility.yul\":17117:17184   */\n      tag_363\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17110:17184   */\n      swap2\n      pop\n        /* \"#utility.yul\":17193:17286   */\n      tag_579\n        /* \"#utility.yul\":17282:17285   */\n      dup3\n        /* \"#utility.yul\":17193:17286   */\n      tag_404\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17311:17313   */\n      0x20\n        /* \"#utility.yul\":17306:17309   */\n      dup3\n        /* \"#utility.yul\":17302:17314   */\n      add\n        /* \"#utility.yul\":17295:17314   */\n      swap1\n      pop\n        /* \"#utility.yul\":16954:17320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17326:17745   */\n    tag_293:\n        /* \"#utility.yul\":17492:17496   */\n      0x00\n        /* \"#utility.yul\":17530:17532   */\n      0x20\n        /* \"#utility.yul\":17519:17528   */\n      dup3\n        /* \"#utility.yul\":17515:17533   */\n      add\n        /* \"#utility.yul\":17507:17533   */\n      swap1\n      pop\n        /* \"#utility.yul\":17579:17588   */\n      dup2\n        /* \"#utility.yul\":17573:17577   */\n      dup2\n        /* \"#utility.yul\":17569:17589   */\n      sub\n        /* \"#utility.yul\":17565:17566   */\n      0x00\n        /* \"#utility.yul\":17554:17563   */\n      dup4\n        /* \"#utility.yul\":17550:17567   */\n      add\n        /* \"#utility.yul\":17543:17590   */\n      mstore\n        /* \"#utility.yul\":17607:17738   */\n      tag_581\n        /* \"#utility.yul\":17733:17737   */\n      dup2\n        /* \"#utility.yul\":17607:17738   */\n      tag_405\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17599:17738   */\n      swap1\n      pop\n        /* \"#utility.yul\":17326:17745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17751:17932   */\n    tag_406:\n        /* \"#utility.yul\":17891:17924   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17887:17888   */\n      0x00\n        /* \"#utility.yul\":17879:17885   */\n      dup3\n        /* \"#utility.yul\":17875:17889   */\n      add\n        /* \"#utility.yul\":17868:17925   */\n      mstore\n        /* \"#utility.yul\":17751:17932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17938:18304   */\n    tag_407:\n        /* \"#utility.yul\":18080:18083   */\n      0x00\n        /* \"#utility.yul\":18101:18168   */\n      tag_584\n        /* \"#utility.yul\":18165:18167   */\n      0x1f\n        /* \"#utility.yul\":18160:18163   */\n      dup4\n        /* \"#utility.yul\":18101:18168   */\n      tag_363\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18094:18168   */\n      swap2\n      pop\n        /* \"#utility.yul\":18177:18270   */\n      tag_585\n        /* \"#utility.yul\":18266:18269   */\n      dup3\n        /* \"#utility.yul\":18177:18270   */\n      tag_406\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":18295:18297   */\n      0x20\n        /* \"#utility.yul\":18290:18293   */\n      dup3\n        /* \"#utility.yul\":18286:18298   */\n      add\n        /* \"#utility.yul\":18279:18298   */\n      swap1\n      pop\n        /* \"#utility.yul\":17938:18304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18310:18729   */\n    tag_315:\n        /* \"#utility.yul\":18476:18480   */\n      0x00\n        /* \"#utility.yul\":18514:18516   */\n      0x20\n        /* \"#utility.yul\":18503:18512   */\n      dup3\n        /* \"#utility.yul\":18499:18517   */\n      add\n        /* \"#utility.yul\":18491:18517   */\n      swap1\n      pop\n        /* \"#utility.yul\":18563:18572   */\n      dup2\n        /* \"#utility.yul\":18557:18561   */\n      dup2\n        /* \"#utility.yul\":18553:18573   */\n      sub\n        /* \"#utility.yul\":18549:18550   */\n      0x00\n        /* \"#utility.yul\":18538:18547   */\n      dup4\n        /* \"#utility.yul\":18534:18551   */\n      add\n        /* \"#utility.yul\":18527:18574   */\n      mstore\n        /* \"#utility.yul\":18591:18722   */\n      tag_587\n        /* \"#utility.yul\":18717:18721   */\n      dup2\n        /* \"#utility.yul\":18591:18722   */\n      tag_407\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18583:18722   */\n      swap1\n      pop\n        /* \"#utility.yul\":18310:18729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18735:19177   */\n    tag_339:\n        /* \"#utility.yul\":18884:18888   */\n      0x00\n        /* \"#utility.yul\":18922:18924   */\n      0x60\n        /* \"#utility.yul\":18911:18920   */\n      dup3\n        /* \"#utility.yul\":18907:18925   */\n      add\n        /* \"#utility.yul\":18899:18925   */\n      swap1\n      pop\n        /* \"#utility.yul\":18935:19006   */\n      tag_589\n        /* \"#utility.yul\":19003:19004   */\n      0x00\n        /* \"#utility.yul\":18992:19001   */\n      dup4\n        /* \"#utility.yul\":18988:19005   */\n      add\n        /* \"#utility.yul\":18979:18985   */\n      dup7\n        /* \"#utility.yul\":18935:19006   */\n      tag_387\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":19016:19088   */\n      tag_590\n        /* \"#utility.yul\":19084:19086   */\n      0x20\n        /* \"#utility.yul\":19073:19082   */\n      dup4\n        /* \"#utility.yul\":19069:19087   */\n      add\n        /* \"#utility.yul\":19060:19066   */\n      dup6\n        /* \"#utility.yul\":19016:19088   */\n      tag_379\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19098:19170   */\n      tag_591\n        /* \"#utility.yul\":19166:19168   */\n      0x40\n        /* \"#utility.yul\":19155:19164   */\n      dup4\n        /* \"#utility.yul\":19151:19169   */\n      add\n        /* \"#utility.yul\":19142:19148   */\n      dup5\n        /* \"#utility.yul\":19098:19170   */\n      tag_379\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18735:19177   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19183:19353   */\n    tag_408:\n        /* \"#utility.yul\":19323:19345   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":19319:19320   */\n      0x00\n        /* \"#utility.yul\":19311:19317   */\n      dup3\n        /* \"#utility.yul\":19307:19321   */\n      add\n        /* \"#utility.yul\":19300:19346   */\n      mstore\n        /* \"#utility.yul\":19183:19353   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19359:19725   */\n    tag_409:\n        /* \"#utility.yul\":19501:19504   */\n      0x00\n        /* \"#utility.yul\":19522:19589   */\n      tag_594\n        /* \"#utility.yul\":19586:19588   */\n      0x14\n        /* \"#utility.yul\":19581:19584   */\n      dup4\n        /* \"#utility.yul\":19522:19589   */\n      tag_363\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19515:19589   */\n      swap2\n      pop\n        /* \"#utility.yul\":19598:19691   */\n      tag_595\n        /* \"#utility.yul\":19687:19690   */\n      dup3\n        /* \"#utility.yul\":19598:19691   */\n      tag_408\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19716:19718   */\n      0x20\n        /* \"#utility.yul\":19711:19714   */\n      dup3\n        /* \"#utility.yul\":19707:19719   */\n      add\n        /* \"#utility.yul\":19700:19719   */\n      swap1\n      pop\n        /* \"#utility.yul\":19359:19725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19731:20150   */\n    tag_352:\n        /* \"#utility.yul\":19897:19901   */\n      0x00\n        /* \"#utility.yul\":19935:19937   */\n      0x20\n        /* \"#utility.yul\":19924:19933   */\n      dup3\n        /* \"#utility.yul\":19920:19938   */\n      add\n        /* \"#utility.yul\":19912:19938   */\n      swap1\n      pop\n        /* \"#utility.yul\":19984:19993   */\n      dup2\n        /* \"#utility.yul\":19978:19982   */\n      dup2\n        /* \"#utility.yul\":19974:19994   */\n      sub\n        /* \"#utility.yul\":19970:19971   */\n      0x00\n        /* \"#utility.yul\":19959:19968   */\n      dup4\n        /* \"#utility.yul\":19955:19972   */\n      add\n        /* \"#utility.yul\":19948:19995   */\n      mstore\n        /* \"#utility.yul\":20012:20143   */\n      tag_597\n        /* \"#utility.yul\":20138:20142   */\n      dup2\n        /* \"#utility.yul\":20012:20143   */\n      tag_409\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20004:20143   */\n      swap1\n      pop\n        /* \"#utility.yul\":19731:20150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220df2eff5a9840d82dd398b182210a5bd3c4a6f4dfd04e5663678be715631bb64764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1346": {
									"entryPoint": null,
									"id": 1346,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 855,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 650,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 988,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 847,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13662:11",
										"nodeType": "YulBlock",
										"src": "0:13662:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "423:28:11",
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:12:11",
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nativeSrc": "433:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nativeSrc": "546:28:11",
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:11",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:11",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nativeSrc": "556:12:11",
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nativeSrc": "556:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nativeSrc": "628:54:11",
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nativeSrc": "638:38:11",
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:11",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nativeSrc": "652:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:11",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nativeSrc": "668:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nativeSrc": "648:28:11",
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:11",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:11",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nativeSrc": "716:152:11",
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:11",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:11",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nativeSrc": "726:88:11",
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nativeSrc": "726:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:11",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:11",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nativeSrc": "823:15:11",
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nativeSrc": "823:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:11",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:11",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nativeSrc": "847:15:11",
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nativeSrc": "847:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nativeSrc": "917:238:11",
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nativeSrc": "927:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nativeSrc": "957:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nativeSrc": "945:40:11",
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:11",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:11",
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nativeSrc": "1098:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nativeSrc": "1098:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nativeSrc": "1036:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nativeSrc": "1072:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nativeSrc": "1033:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nativeSrc": "1030:88:11",
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nativeSrc": "1127:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nativeSrc": "1127:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:11",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:11",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nativeSrc": "1202:88:11",
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nativeSrc": "1212:30:11",
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nativeSrc": "1222:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nativeSrc": "1251:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nativeSrc": "1251:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:11",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:11",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nativeSrc": "1363:241:11",
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:11",
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nativeSrc": "1470:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nativeSrc": "1470:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nativeSrc": "1437:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nativeSrc": "1434:56:11",
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nativeSrc": "1500:37:11",
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nativeSrc": "1508:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nativeSrc": "1574:23:11",
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nativeSrc": "1582:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:11",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:11",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nativeSrc": "1672:77:11",
													"nodeType": "YulBlock",
													"src": "1672:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:11"
																},
																"nativeSrc": "1683:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:11"
															},
															"nativeSrc": "1683:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:11"
																		},
																		"nativeSrc": "1722:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:11"
																},
																"nativeSrc": "1715:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:11"
															},
															"nativeSrc": "1715:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:11",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:11",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:11",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:139:11"
											},
											{
												"body": {
													"nativeSrc": "1850:339:11",
													"nodeType": "YulBlock",
													"src": "1850:339:11",
													"statements": [
														{
															"nativeSrc": "1860:75:11",
															"nodeType": "YulAssignment",
															"src": "1860:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:11"
																		},
																		"nativeSrc": "1885:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:11"
																},
																"nativeSrc": "1869:66:11",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:11"
																},
																"nativeSrc": "1944:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:11"
															},
															"nativeSrc": "1944:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:11"
														},
														{
															"nativeSrc": "1974:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:11"
																},
																"nativeSrc": "1985:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:11",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:11",
																"nodeType": "YulBlock",
																"src": "2039:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:11"
																			},
																			"nativeSrc": "2041:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:11"
																		},
																		"nativeSrc": "2041:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:11"
																		},
																		"nativeSrc": "2016:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:11"
																},
																"nativeSrc": "2013:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:11"
															},
															"nativeSrc": "2010:112:11",
															"nodeType": "YulIf",
															"src": "2010:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:11"
																},
																"nativeSrc": "2131:52:11",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:11"
															},
															"nativeSrc": "2131:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:11",
														"nodeType": "YulTypedName",
														"src": "1823:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:11",
														"nodeType": "YulTypedName",
														"src": "1828:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:11",
														"nodeType": "YulTypedName",
														"src": "1836:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:11",
														"nodeType": "YulTypedName",
														"src": "1844:5:11",
														"type": ""
													}
												],
												"src": "1755:434:11"
											},
											{
												"body": {
													"nativeSrc": "2282:282:11",
													"nodeType": "YulBlock",
													"src": "2282:282:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:11",
																"nodeType": "YulBlock",
																"src": "2331:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:11"
																			},
																			"nativeSrc": "2333:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:11"
																		},
																		"nativeSrc": "2333:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:11"
																				},
																				"nativeSrc": "2306:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:11"
																		},
																		"nativeSrc": "2302:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:11"
																},
																"nativeSrc": "2295:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:11"
															},
															"nativeSrc": "2292:122:11",
															"nodeType": "YulIf",
															"src": "2292:122:11"
														},
														{
															"nativeSrc": "2423:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:11"
																},
																"nativeSrc": "2437:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:11",
															"nodeType": "YulAssignment",
															"src": "2459:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:11"
																		},
																		"nativeSrc": "2527:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:11"
																},
																"nativeSrc": "2468:90:11",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:11",
														"nodeType": "YulTypedName",
														"src": "2260:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:11",
														"nodeType": "YulTypedName",
														"src": "2268:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:11",
														"nodeType": "YulTypedName",
														"src": "2276:5:11",
														"type": ""
													}
												],
												"src": "2209:355:11"
											},
											{
												"body": {
													"nativeSrc": "2615:81:11",
													"nodeType": "YulBlock",
													"src": "2615:81:11",
													"statements": [
														{
															"nativeSrc": "2625:65:11",
															"nodeType": "YulAssignment",
															"src": "2625:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:11"
																},
																"nativeSrc": "2636:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:11",
														"nodeType": "YulTypedName",
														"src": "2597:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:11",
														"nodeType": "YulTypedName",
														"src": "2607:7:11",
														"type": ""
													}
												],
												"src": "2570:126:11"
											},
											{
												"body": {
													"nativeSrc": "2747:51:11",
													"nodeType": "YulBlock",
													"src": "2747:51:11",
													"statements": [
														{
															"nativeSrc": "2757:35:11",
															"nodeType": "YulAssignment",
															"src": "2757:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:11"
																},
																"nativeSrc": "2768:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:11",
														"nodeType": "YulTypedName",
														"src": "2729:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:11",
														"nodeType": "YulTypedName",
														"src": "2739:7:11",
														"type": ""
													}
												],
												"src": "2702:96:11"
											},
											{
												"body": {
													"nativeSrc": "2847:79:11",
													"nodeType": "YulBlock",
													"src": "2847:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:11",
																"nodeType": "YulBlock",
																"src": "2904:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:11"
																			},
																			"nativeSrc": "2906:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:11"
																		},
																		"nativeSrc": "2906:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:11"
																				},
																				"nativeSrc": "2877:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:11"
																		},
																		"nativeSrc": "2867:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:11"
																},
																"nativeSrc": "2860:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:11"
															},
															"nativeSrc": "2857:63:11",
															"nodeType": "YulIf",
															"src": "2857:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:11",
														"nodeType": "YulTypedName",
														"src": "2840:5:11",
														"type": ""
													}
												],
												"src": "2804:122:11"
											},
											{
												"body": {
													"nativeSrc": "2995:80:11",
													"nodeType": "YulBlock",
													"src": "2995:80:11",
													"statements": [
														{
															"nativeSrc": "3005:22:11",
															"nodeType": "YulAssignment",
															"src": "3005:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:11"
																},
																"nativeSrc": "3014:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:11"
																},
																"nativeSrc": "3036:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:11"
															},
															"nativeSrc": "3036:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:11",
														"nodeType": "YulTypedName",
														"src": "2973:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:11",
														"nodeType": "YulTypedName",
														"src": "2981:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:11",
														"nodeType": "YulTypedName",
														"src": "2989:5:11",
														"type": ""
													}
												],
												"src": "2932:143:11"
											},
											{
												"body": {
													"nativeSrc": "3229:1018:11",
													"nodeType": "YulBlock",
													"src": "3229:1018:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3276:83:11",
																"nodeType": "YulBlock",
																"src": "3276:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3278:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3278:77:11"
																			},
																			"nativeSrc": "3278:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3278:79:11"
																		},
																		"nativeSrc": "3278:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3278:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:11"
																		},
																		"nativeSrc": "3246:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3271:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:11"
																},
																"nativeSrc": "3242:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3242:33:11"
															},
															"nativeSrc": "3239:120:11",
															"nodeType": "YulIf",
															"src": "3239:120:11"
														},
														{
															"nativeSrc": "3369:291:11",
															"nodeType": "YulBlock",
															"src": "3369:291:11",
															"statements": [
																{
																	"nativeSrc": "3384:38:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3384:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3408:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3408:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3419:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3419:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3404:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3404:3:11"
																				},
																				"nativeSrc": "3404:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3404:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3398:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3398:5:11"
																		},
																		"nativeSrc": "3398:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3388:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3388:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3469:83:11",
																		"nodeType": "YulBlock",
																		"src": "3469:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3471:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3471:77:11"
																					},
																					"nativeSrc": "3471:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3471:79:11"
																				},
																				"nativeSrc": "3471:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3471:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3441:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3441:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3449:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3449:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3438:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:11"
																		},
																		"nativeSrc": "3438:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:30:11"
																	},
																	"nativeSrc": "3435:117:11",
																	"nodeType": "YulIf",
																	"src": "3435:117:11"
																},
																{
																	"nativeSrc": "3566:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3566:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3622:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3622:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3633:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3633:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3618:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3618:3:11"
																				},
																				"nativeSrc": "3618:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3618:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3642:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3642:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3576:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3576:41:11"
																		},
																		"nativeSrc": "3576:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3576:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3566:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3566:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3670:292:11",
															"nodeType": "YulBlock",
															"src": "3670:292:11",
															"statements": [
																{
																	"nativeSrc": "3685:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3685:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3709:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3709:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3720:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3720:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3705:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3705:3:11"
																				},
																				"nativeSrc": "3705:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3699:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3699:5:11"
																		},
																		"nativeSrc": "3699:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3699:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3689:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3689:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3771:83:11",
																		"nodeType": "YulBlock",
																		"src": "3771:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3773:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3773:77:11"
																					},
																					"nativeSrc": "3773:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3773:79:11"
																				},
																				"nativeSrc": "3773:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3773:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3743:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3751:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3751:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3740:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3740:2:11"
																		},
																		"nativeSrc": "3740:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:30:11"
																	},
																	"nativeSrc": "3737:117:11",
																	"nodeType": "YulIf",
																	"src": "3737:117:11"
																},
																{
																	"nativeSrc": "3868:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3868:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3924:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3924:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3935:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3935:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3920:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3920:3:11"
																				},
																				"nativeSrc": "3920:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3920:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3944:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3944:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3878:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3878:41:11"
																		},
																		"nativeSrc": "3878:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3868:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3868:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3972:129:11",
															"nodeType": "YulBlock",
															"src": "3972:129:11",
															"statements": [
																{
																	"nativeSrc": "3987:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3987:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4001:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3991:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3991:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4017:74:11",
																	"nodeType": "YulAssignment",
																	"src": "4017:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4063:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4063:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4074:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4074:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4059:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:11"
																				},
																				"nativeSrc": "4059:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4083:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4083:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4027:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "4027:31:11"
																		},
																		"nativeSrc": "4027:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4017:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4017:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4111:129:11",
															"nodeType": "YulBlock",
															"src": "4111:129:11",
															"statements": [
																{
																	"nativeSrc": "4126:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4126:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4140:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4130:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4130:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4156:74:11",
																	"nodeType": "YulAssignment",
																	"src": "4156:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4202:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4202:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4213:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4213:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4198:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4198:3:11"
																				},
																				"nativeSrc": "4198:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4198:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4222:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4222:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4166:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "4166:31:11"
																		},
																		"nativeSrc": "4166:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4166:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4156:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4156:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory",
												"nativeSrc": "3081:1166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3175:9:11",
														"nodeType": "YulTypedName",
														"src": "3175:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3186:7:11",
														"nodeType": "YulTypedName",
														"src": "3186:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3198:6:11",
														"nodeType": "YulTypedName",
														"src": "3198:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3206:6:11",
														"nodeType": "YulTypedName",
														"src": "3206:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3214:6:11",
														"nodeType": "YulTypedName",
														"src": "3214:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3222:6:11",
														"nodeType": "YulTypedName",
														"src": "3222:6:11",
														"type": ""
													}
												],
												"src": "3081:1166:11"
											},
											{
												"body": {
													"nativeSrc": "4312:40:11",
													"nodeType": "YulBlock",
													"src": "4312:40:11",
													"statements": [
														{
															"nativeSrc": "4323:22:11",
															"nodeType": "YulAssignment",
															"src": "4323:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4333:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:11"
																},
																"nativeSrc": "4333:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4323:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4253:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4295:5:11",
														"nodeType": "YulTypedName",
														"src": "4295:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4305:6:11",
														"nodeType": "YulTypedName",
														"src": "4305:6:11",
														"type": ""
													}
												],
												"src": "4253:99:11"
											},
											{
												"body": {
													"nativeSrc": "4386:152:11",
													"nodeType": "YulBlock",
													"src": "4386:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4406:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:11"
																},
																"nativeSrc": "4396:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4396:88:11"
															},
															"nativeSrc": "4396:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4396:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4493:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:11"
																},
																"nativeSrc": "4493:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:11"
															},
															"nativeSrc": "4493:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4527:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4517:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:11"
																},
																"nativeSrc": "4517:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4517:15:11"
															},
															"nativeSrc": "4517:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4517:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4358:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:180:11"
											},
											{
												"body": {
													"nativeSrc": "4595:269:11",
													"nodeType": "YulBlock",
													"src": "4595:269:11",
													"statements": [
														{
															"nativeSrc": "4605:22:11",
															"nodeType": "YulAssignment",
															"src": "4605:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4619:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4615:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:11"
																},
																"nativeSrc": "4615:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4615:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4605:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:11"
																}
															]
														},
														{
															"nativeSrc": "4636:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4636:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4666:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4662:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:11"
																},
																"nativeSrc": "4662:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4662:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4640:18:11",
																	"nodeType": "YulTypedName",
																	"src": "4640:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:51:11",
																"nodeType": "YulBlock",
																"src": "4713:51:11",
																"statements": [
																	{
																		"nativeSrc": "4727:27:11",
																		"nodeType": "YulAssignment",
																		"src": "4727:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4741:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4741:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4749:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4737:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4737:3:11"
																			},
																			"nativeSrc": "4737:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4737:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4693:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "4693:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4686:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:11"
																},
																"nativeSrc": "4686:26:11",
																"nodeType": "YulFunctionCall",
																"src": "4686:26:11"
															},
															"nativeSrc": "4683:81:11",
															"nodeType": "YulIf",
															"src": "4683:81:11"
														},
														{
															"body": {
																"nativeSrc": "4816:42:11",
																"nodeType": "YulBlock",
																"src": "4816:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4830:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4830:16:11"
																			},
																			"nativeSrc": "4830:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4830:18:11"
																		},
																		"nativeSrc": "4830:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4830:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:11"
																		},
																		"nativeSrc": "4800:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:11"
																},
																"nativeSrc": "4777:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:11"
															},
															"nativeSrc": "4774:84:11",
															"nodeType": "YulIf",
															"src": "4774:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4544:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4579:4:11",
														"nodeType": "YulTypedName",
														"src": "4579:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4588:6:11",
														"nodeType": "YulTypedName",
														"src": "4588:6:11",
														"type": ""
													}
												],
												"src": "4544:320:11"
											},
											{
												"body": {
													"nativeSrc": "4924:87:11",
													"nodeType": "YulBlock",
													"src": "4924:87:11",
													"statements": [
														{
															"nativeSrc": "4934:11:11",
															"nodeType": "YulAssignment",
															"src": "4934:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "4942:3:11",
																"nodeType": "YulIdentifier",
																"src": "4942:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4965:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:11"
																},
																"nativeSrc": "4955:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4955:14:11"
															},
															"nativeSrc": "4955:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "4955:14:11"
														},
														{
															"nativeSrc": "4978:26:11",
															"nodeType": "YulAssignment",
															"src": "4978:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4986:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4986:9:11"
																},
																"nativeSrc": "4986:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4978:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4870:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4911:3:11",
														"nodeType": "YulTypedName",
														"src": "4911:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4919:4:11",
														"nodeType": "YulTypedName",
														"src": "4919:4:11",
														"type": ""
													}
												],
												"src": "4870:141:11"
											},
											{
												"body": {
													"nativeSrc": "5061:49:11",
													"nodeType": "YulBlock",
													"src": "5061:49:11",
													"statements": [
														{
															"nativeSrc": "5071:33:11",
															"nodeType": "YulAssignment",
															"src": "5071:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5089:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5089:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:11"
																		},
																		"nativeSrc": "5085:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5081:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:11"
																},
																"nativeSrc": "5081:23:11",
																"nodeType": "YulFunctionCall",
																"src": "5081:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5071:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5017:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5044:5:11",
														"nodeType": "YulTypedName",
														"src": "5044:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5054:6:11",
														"nodeType": "YulTypedName",
														"src": "5054:6:11",
														"type": ""
													}
												],
												"src": "5017:93:11"
											},
											{
												"body": {
													"nativeSrc": "5169:54:11",
													"nodeType": "YulBlock",
													"src": "5169:54:11",
													"statements": [
														{
															"nativeSrc": "5179:37:11",
															"nodeType": "YulAssignment",
															"src": "5179:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5204:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5210:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5210:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5200:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:11"
																},
																"nativeSrc": "5200:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5200:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5179:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5179:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5116:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5144:4:11",
														"nodeType": "YulTypedName",
														"src": "5144:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5150:5:11",
														"nodeType": "YulTypedName",
														"src": "5150:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5160:8:11",
														"nodeType": "YulTypedName",
														"src": "5160:8:11",
														"type": ""
													}
												],
												"src": "5116:107:11"
											},
											{
												"body": {
													"nativeSrc": "5305:317:11",
													"nodeType": "YulBlock",
													"src": "5305:317:11",
													"statements": [
														{
															"nativeSrc": "5315:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5336:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "5336:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5332:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:11"
																},
																"nativeSrc": "5332:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5332:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5319:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5319:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5359:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5359:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5390:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5390:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:66:11",
																		"nodeType": "YulLiteral",
																		"src": "5401:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5371:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5371:18:11"
																},
																"nativeSrc": "5371:97:11",
																"nodeType": "YulFunctionCall",
																"src": "5371:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5363:4:11",
																	"nodeType": "YulTypedName",
																	"src": "5363:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5477:51:11",
															"nodeType": "YulAssignment",
															"src": "5477:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5508:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5519:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5519:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5489:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5489:18:11"
																},
																"nativeSrc": "5489:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5489:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5477:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5477:8:11"
																}
															]
														},
														{
															"nativeSrc": "5537:30:11",
															"nodeType": "YulAssignment",
															"src": "5537:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5561:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5557:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:11"
																		},
																		"nativeSrc": "5557:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5546:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:11"
																},
																"nativeSrc": "5546:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5546:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5537:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5537:5:11"
																}
															]
														},
														{
															"nativeSrc": "5576:40:11",
															"nodeType": "YulAssignment",
															"src": "5576:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5589:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5589:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5600:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "5600:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5610:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5610:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5596:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:11"
																		},
																		"nativeSrc": "5596:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5586:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5586:2:11"
																},
																"nativeSrc": "5586:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5586:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5576:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5229:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5266:5:11",
														"nodeType": "YulTypedName",
														"src": "5266:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5273:10:11",
														"nodeType": "YulTypedName",
														"src": "5273:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5285:8:11",
														"nodeType": "YulTypedName",
														"src": "5285:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5298:6:11",
														"nodeType": "YulTypedName",
														"src": "5298:6:11",
														"type": ""
													}
												],
												"src": "5229:393:11"
											},
											{
												"body": {
													"nativeSrc": "5673:32:11",
													"nodeType": "YulBlock",
													"src": "5673:32:11",
													"statements": [
														{
															"nativeSrc": "5683:16:11",
															"nodeType": "YulAssignment",
															"src": "5683:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "5694:5:11",
																"nodeType": "YulIdentifier",
																"src": "5694:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5683:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5628:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5655:5:11",
														"nodeType": "YulTypedName",
														"src": "5655:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5665:7:11",
														"nodeType": "YulTypedName",
														"src": "5665:7:11",
														"type": ""
													}
												],
												"src": "5628:77:11"
											},
											{
												"body": {
													"nativeSrc": "5743:28:11",
													"nodeType": "YulBlock",
													"src": "5743:28:11",
													"statements": [
														{
															"nativeSrc": "5753:12:11",
															"nodeType": "YulAssignment",
															"src": "5753:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5760:5:11",
																"nodeType": "YulIdentifier",
																"src": "5760:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5753:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5711:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:11",
														"nodeType": "YulTypedName",
														"src": "5729:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5739:3:11",
														"nodeType": "YulTypedName",
														"src": "5739:3:11",
														"type": ""
													}
												],
												"src": "5711:60:11"
											},
											{
												"body": {
													"nativeSrc": "5837:82:11",
													"nodeType": "YulBlock",
													"src": "5837:82:11",
													"statements": [
														{
															"nativeSrc": "5847:66:11",
															"nodeType": "YulAssignment",
															"src": "5847:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5887:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5887:17:11"
																				},
																				"nativeSrc": "5887:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5878:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5878:8:11"
																		},
																		"nativeSrc": "5878:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5860:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5860:17:11"
																},
																"nativeSrc": "5860:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5860:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5777:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:11",
														"nodeType": "YulTypedName",
														"src": "5817:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:11",
														"nodeType": "YulTypedName",
														"src": "5827:9:11",
														"type": ""
													}
												],
												"src": "5777:142:11"
											},
											{
												"body": {
													"nativeSrc": "5972:28:11",
													"nodeType": "YulBlock",
													"src": "5972:28:11",
													"statements": [
														{
															"nativeSrc": "5982:12:11",
															"nodeType": "YulAssignment",
															"src": "5982:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5989:5:11",
																"nodeType": "YulIdentifier",
																"src": "5989:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5982:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5925:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5958:5:11",
														"nodeType": "YulTypedName",
														"src": "5958:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5968:3:11",
														"nodeType": "YulTypedName",
														"src": "5968:3:11",
														"type": ""
													}
												],
												"src": "5925:75:11"
											},
											{
												"body": {
													"nativeSrc": "6082:193:11",
													"nodeType": "YulBlock",
													"src": "6082:193:11",
													"statements": [
														{
															"nativeSrc": "6092:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6092:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6147:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6147:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6116:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6116:30:11"
																},
																"nativeSrc": "6116:39:11",
																"nodeType": "YulFunctionCall",
																"src": "6116:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6096:16:11",
																	"nodeType": "YulTypedName",
																	"src": "6096:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6171:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6171:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6211:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6211:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6205:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6205:5:11"
																				},
																				"nativeSrc": "6205:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6205:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6218:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6250:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "6250:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6226:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "6226:23:11"
																				},
																				"nativeSrc": "6226:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6177:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:27:11"
																		},
																		"nativeSrc": "6177:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6164:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:11"
																},
																"nativeSrc": "6164:105:11",
																"nodeType": "YulFunctionCall",
																"src": "6164:105:11"
															},
															"nativeSrc": "6164:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "6164:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6006:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6059:4:11",
														"nodeType": "YulTypedName",
														"src": "6059:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6065:6:11",
														"nodeType": "YulTypedName",
														"src": "6065:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6073:7:11",
														"nodeType": "YulTypedName",
														"src": "6073:7:11",
														"type": ""
													}
												],
												"src": "6006:269:11"
											},
											{
												"body": {
													"nativeSrc": "6330:24:11",
													"nodeType": "YulBlock",
													"src": "6330:24:11",
													"statements": [
														{
															"nativeSrc": "6340:8:11",
															"nodeType": "YulAssignment",
															"src": "6340:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6347:1:11",
																"nodeType": "YulLiteral",
																"src": "6347:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6340:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6281:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6326:3:11",
														"nodeType": "YulTypedName",
														"src": "6326:3:11",
														"type": ""
													}
												],
												"src": "6281:73:11"
											},
											{
												"body": {
													"nativeSrc": "6413:136:11",
													"nodeType": "YulBlock",
													"src": "6413:136:11",
													"statements": [
														{
															"nativeSrc": "6423:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6437:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6437:30:11"
																},
																"nativeSrc": "6437:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6427:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6522:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6522:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6528:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6536:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6478:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:11"
																},
																"nativeSrc": "6478:65:11",
																"nodeType": "YulFunctionCall",
																"src": "6478:65:11"
															},
															"nativeSrc": "6478:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "6478:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6360:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6399:4:11",
														"nodeType": "YulTypedName",
														"src": "6399:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6405:6:11",
														"nodeType": "YulTypedName",
														"src": "6405:6:11",
														"type": ""
													}
												],
												"src": "6360:189:11"
											},
											{
												"body": {
													"nativeSrc": "6605:136:11",
													"nodeType": "YulBlock",
													"src": "6605:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6672:63:11",
																"nodeType": "YulBlock",
																"src": "6672:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6716:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6716:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6686:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "6686:29:11"
																			},
																			"nativeSrc": "6686:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:39:11"
																		},
																		"nativeSrc": "6686:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6625:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6632:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6622:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6622:2:11"
																},
																"nativeSrc": "6622:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:11"
															},
															"nativeSrc": "6615:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6637:26:11",
																"nodeType": "YulBlock",
																"src": "6637:26:11",
																"statements": [
																	{
																		"nativeSrc": "6639:22:11",
																		"nodeType": "YulAssignment",
																		"src": "6639:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6652:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6652:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6659:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6659:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6648:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6648:3:11"
																			},
																			"nativeSrc": "6648:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6639:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6619:2:11",
																"nodeType": "YulBlock",
																"src": "6619:2:11",
																"statements": []
															},
															"src": "6615:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6555:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6593:5:11",
														"nodeType": "YulTypedName",
														"src": "6593:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6600:3:11",
														"nodeType": "YulTypedName",
														"src": "6600:3:11",
														"type": ""
													}
												],
												"src": "6555:186:11"
											},
											{
												"body": {
													"nativeSrc": "6826:464:11",
													"nodeType": "YulBlock",
													"src": "6826:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:431:11",
																"nodeType": "YulBlock",
																"src": "6852:431:11",
																"statements": [
																	{
																		"nativeSrc": "6866:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6866:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6914:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6914:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6882:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "6882:31:11"
																			},
																			"nativeSrc": "6882:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6870:8:11",
																				"nodeType": "YulTypedName",
																				"src": "6870:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6933:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6956:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "6956:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6984:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6984:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6966:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "6966:17:11"
																					},
																					"nativeSrc": "6966:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6966:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6952:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6952:3:11"
																			},
																			"nativeSrc": "6952:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6937:11:11",
																				"nodeType": "YulTypedName",
																				"src": "6937:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7153:27:11",
																			"nodeType": "YulBlock",
																			"src": "7153:27:11",
																			"statements": [
																				{
																					"nativeSrc": "7155:23:11",
																					"nodeType": "YulAssignment",
																					"src": "7155:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7170:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "7170:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7155:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "7155:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7137:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "7137:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7149:2:11",
																					"nodeType": "YulLiteral",
																					"src": "7149:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7134:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7134:2:11"
																			},
																			"nativeSrc": "7134:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7134:18:11"
																		},
																		"nativeSrc": "7131:49:11",
																		"nodeType": "YulIf",
																		"src": "7131:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7222:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "7222:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7239:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "7239:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7267:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7267:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7249:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "7249:17:11"
																							},
																							"nativeSrc": "7249:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "7249:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7235:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7235:3:11"
																					},
																					"nativeSrc": "7235:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7235:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7193:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "7193:28:11"
																			},
																			"nativeSrc": "7193:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7193:80:11"
																		},
																		"nativeSrc": "7193:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6843:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:11"
																},
																"nativeSrc": "6840:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6840:11:11"
															},
															"nativeSrc": "6837:446:11",
															"nodeType": "YulIf",
															"src": "6837:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6747:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6802:5:11",
														"nodeType": "YulTypedName",
														"src": "6802:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6809:3:11",
														"nodeType": "YulTypedName",
														"src": "6809:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6814:10:11",
														"nodeType": "YulTypedName",
														"src": "6814:10:11",
														"type": ""
													}
												],
												"src": "6747:543:11"
											},
											{
												"body": {
													"nativeSrc": "7359:54:11",
													"nodeType": "YulBlock",
													"src": "7359:54:11",
													"statements": [
														{
															"nativeSrc": "7369:37:11",
															"nodeType": "YulAssignment",
															"src": "7369:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7394:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7394:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7400:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7400:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7390:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:11"
																},
																"nativeSrc": "7390:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7390:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7369:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7296:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7334:4:11",
														"nodeType": "YulTypedName",
														"src": "7334:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7340:5:11",
														"nodeType": "YulTypedName",
														"src": "7340:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7350:8:11",
														"nodeType": "YulTypedName",
														"src": "7350:8:11",
														"type": ""
													}
												],
												"src": "7296:117:11"
											},
											{
												"body": {
													"nativeSrc": "7470:118:11",
													"nodeType": "YulBlock",
													"src": "7470:118:11",
													"statements": [
														{
															"nativeSrc": "7480:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7480:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7529:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7529:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7532:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7532:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7525:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7525:3:11"
																				},
																				"nativeSrc": "7525:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7525:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7544:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7544:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7540:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:11"
																				},
																				"nativeSrc": "7540:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7496:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "7496:28:11"
																		},
																		"nativeSrc": "7496:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7492:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:11"
																},
																"nativeSrc": "7492:56:11",
																"nodeType": "YulFunctionCall",
																"src": "7492:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7484:4:11",
																	"nodeType": "YulTypedName",
																	"src": "7484:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7557:25:11",
															"nodeType": "YulAssignment",
															"src": "7557:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7571:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7571:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7577:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7577:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7567:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:11"
																},
																"nativeSrc": "7567:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7567:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7557:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7419:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7447:4:11",
														"nodeType": "YulTypedName",
														"src": "7447:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7453:5:11",
														"nodeType": "YulTypedName",
														"src": "7453:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7463:6:11",
														"nodeType": "YulTypedName",
														"src": "7463:6:11",
														"type": ""
													}
												],
												"src": "7419:169:11"
											},
											{
												"body": {
													"nativeSrc": "7674:214:11",
													"nodeType": "YulBlock",
													"src": "7674:214:11",
													"statements": [
														{
															"nativeSrc": "7807:37:11",
															"nodeType": "YulAssignment",
															"src": "7807:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7834:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7840:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7815:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7815:18:11"
																},
																"nativeSrc": "7815:29:11",
																"nodeType": "YulFunctionCall",
																"src": "7815:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7807:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:11"
																}
															]
														},
														{
															"nativeSrc": "7853:29:11",
															"nodeType": "YulAssignment",
															"src": "7853:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7864:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7877:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7870:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:11"
																		},
																		"nativeSrc": "7870:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7861:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7861:2:11"
																},
																"nativeSrc": "7861:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7861:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7853:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7593:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7655:4:11",
														"nodeType": "YulTypedName",
														"src": "7655:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7661:3:11",
														"nodeType": "YulTypedName",
														"src": "7661:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7669:4:11",
														"nodeType": "YulTypedName",
														"src": "7669:4:11",
														"type": ""
													}
												],
												"src": "7593:295:11"
											},
											{
												"body": {
													"nativeSrc": "7985:1303:11",
													"nodeType": "YulBlock",
													"src": "7985:1303:11",
													"statements": [
														{
															"nativeSrc": "7996:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8043:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8010:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "8010:32:11"
																},
																"nativeSrc": "8010:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8010:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8000:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8132:22:11",
																"nodeType": "YulBlock",
																"src": "8132:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8134:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8134:16:11"
																			},
																			"nativeSrc": "8134:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8134:18:11"
																		},
																		"nativeSrc": "8134:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8134:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8104:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8112:18:11",
																		"nodeType": "YulLiteral",
																		"src": "8112:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8101:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8101:2:11"
																},
																"nativeSrc": "8101:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8101:30:11"
															},
															"nativeSrc": "8098:56:11",
															"nodeType": "YulIf",
															"src": "8098:56:11"
														},
														{
															"nativeSrc": "8164:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8164:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8210:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8210:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8204:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "8204:5:11"
																		},
																		"nativeSrc": "8204:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8178:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8178:25:11"
																},
																"nativeSrc": "8178:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8178:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8168:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8168:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8309:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8309:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8315:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8323:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8263:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "8263:45:11"
																},
																"nativeSrc": "8263:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8263:67:11"
															},
															"nativeSrc": "8263:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "8263:67:11"
														},
														{
															"nativeSrc": "8340:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8340:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "8357:1:11",
																"nodeType": "YulLiteral",
																"src": "8357:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8344:9:11",
																	"nodeType": "YulTypedName",
																	"src": "8344:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8368:17:11",
															"nodeType": "YulAssignment",
															"src": "8368:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "8381:4:11",
																"nodeType": "YulLiteral",
																"src": "8381:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8368:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "8368:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8432:611:11",
																		"nodeType": "YulBlock",
																		"src": "8432:611:11",
																		"statements": [
																			{
																				"nativeSrc": "8446:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8446:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8465:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8465:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8477:4:11",
																									"nodeType": "YulLiteral",
																									"src": "8477:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8473:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8473:3:11"
																							},
																							"nativeSrc": "8473:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8473:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8461:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:11"
																					},
																					"nativeSrc": "8461:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8450:7:11",
																						"nodeType": "YulTypedName",
																						"src": "8450:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8497:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8497:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8543:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8543:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8511:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "8511:31:11"
																					},
																					"nativeSrc": "8511:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8511:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8501:6:11",
																						"nodeType": "YulTypedName",
																						"src": "8501:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8561:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8570:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8570:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8565:1:11",
																						"nodeType": "YulTypedName",
																						"src": "8565:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8629:163:11",
																					"nodeType": "YulBlock",
																					"src": "8629:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8654:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8654:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8672:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "8672:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8677:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "8677:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8668:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8668:3:11"
																												},
																												"nativeSrc": "8668:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8668:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8662:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "8662:5:11"
																										},
																										"nativeSrc": "8662:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8662:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8647:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8647:6:11"
																								},
																								"nativeSrc": "8647:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8647:42:11"
																							},
																							"nativeSrc": "8647:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8647:42:11"
																						},
																						{
																							"nativeSrc": "8706:24:11",
																							"nodeType": "YulAssignment",
																							"src": "8706:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8720:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8720:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8728:1:11",
																										"nodeType": "YulLiteral",
																										"src": "8728:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8716:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8716:3:11"
																								},
																								"nativeSrc": "8716:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8706:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8706:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8747:31:11",
																							"nodeType": "YulAssignment",
																							"src": "8747:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8764:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "8764:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8775:2:11",
																										"nodeType": "YulLiteral",
																										"src": "8775:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8760:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8760:3:11"
																								},
																								"nativeSrc": "8760:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8760:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8747:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "8747:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8595:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "8595:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8598:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8598:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8592:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8592:2:11"
																					},
																					"nativeSrc": "8592:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8592:14:11"
																				},
																				"nativeSrc": "8584:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8607:21:11",
																					"nodeType": "YulBlock",
																					"src": "8607:21:11",
																					"statements": [
																						{
																							"nativeSrc": "8609:17:11",
																							"nodeType": "YulAssignment",
																							"src": "8609:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8618:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "8618:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8621:4:11",
																										"nodeType": "YulLiteral",
																										"src": "8621:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8614:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8614:3:11"
																								},
																								"nativeSrc": "8614:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8614:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8609:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "8609:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8588:3:11",
																					"nodeType": "YulBlock",
																					"src": "8588:3:11",
																					"statements": []
																				},
																				"src": "8584:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "8828:156:11",
																					"nodeType": "YulBlock",
																					"src": "8828:156:11",
																					"statements": [
																						{
																							"nativeSrc": "8846:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8846:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8873:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "8873:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8878:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8878:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8869:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "8869:3:11"
																										},
																										"nativeSrc": "8869:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8869:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8863:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8863:5:11"
																								},
																								"nativeSrc": "8863:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8863:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8850:9:11",
																									"nodeType": "YulTypedName",
																									"src": "8850:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8913:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8913:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8940:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8940:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8955:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "8955:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8963:4:11",
																														"nodeType": "YulLiteral",
																														"src": "8963:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8951:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8951:3:11"
																												},
																												"nativeSrc": "8951:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8951:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8921:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "8921:18:11"
																										},
																										"nativeSrc": "8921:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8921:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8906:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8906:6:11"
																								},
																								"nativeSrc": "8906:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8906:64:11"
																							},
																							"nativeSrc": "8906:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8906:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8811:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8811:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8820:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8820:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8808:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8808:2:11"
																					},
																					"nativeSrc": "8808:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:19:11"
																				},
																				"nativeSrc": "8805:179:11",
																				"nodeType": "YulIf",
																				"src": "8805:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9004:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "9004:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9018:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "9018:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9026:1:11",
																											"nodeType": "YulLiteral",
																											"src": "9026:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9014:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "9014:3:11"
																									},
																									"nativeSrc": "9014:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "9014:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9030:1:11",
																									"nodeType": "YulLiteral",
																									"src": "9030:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9010:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "9010:3:11"
																							},
																							"nativeSrc": "9010:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9010:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8997:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:11"
																					},
																					"nativeSrc": "8997:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8997:36:11"
																				},
																				"nativeSrc": "8997:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "8997:36:11"
																			}
																		]
																	},
																	"nativeSrc": "8425:618:11",
																	"nodeType": "YulCase",
																	"src": "8425:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9060:222:11",
																		"nodeType": "YulBlock",
																		"src": "9060:222:11",
																		"statements": [
																			{
																				"nativeSrc": "9074:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9074:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9087:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9078:5:11",
																						"nodeType": "YulTypedName",
																						"src": "9078:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9111:67:11",
																					"nodeType": "YulBlock",
																					"src": "9111:67:11",
																					"statements": [
																						{
																							"nativeSrc": "9129:35:11",
																							"nodeType": "YulAssignment",
																							"src": "9129:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9148:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "9148:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9153:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "9153:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9144:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "9144:3:11"
																										},
																										"nativeSrc": "9144:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "9144:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9138:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9138:5:11"
																								},
																								"nativeSrc": "9138:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9138:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9129:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9129:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9104:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "9104:6:11"
																				},
																				"nativeSrc": "9101:77:11",
																				"nodeType": "YulIf",
																				"src": "9101:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9198:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "9198:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9257:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9257:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9264:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "9264:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9204:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "9204:52:11"
																							},
																							"nativeSrc": "9204:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9204:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9191:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:11"
																					},
																					"nativeSrc": "9191:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9191:81:11"
																				},
																				"nativeSrc": "9191:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9191:81:11"
																			}
																		]
																	},
																	"nativeSrc": "9052:230:11",
																	"nodeType": "YulCase",
																	"src": "9052:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8405:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8402:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:11"
																},
																"nativeSrc": "8402:14:11",
																"nodeType": "YulFunctionCall",
																"src": "8402:14:11"
															},
															"nativeSrc": "8395:887:11",
															"nodeType": "YulSwitch",
															"src": "8395:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7893:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7974:4:11",
														"nodeType": "YulTypedName",
														"src": "7974:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7980:3:11",
														"nodeType": "YulTypedName",
														"src": "7980:3:11",
														"type": ""
													}
												],
												"src": "7893:1395:11"
											},
											{
												"body": {
													"nativeSrc": "9359:53:11",
													"nodeType": "YulBlock",
													"src": "9359:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9376:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9376:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9399:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9399:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9381:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9381:17:11"
																		},
																		"nativeSrc": "9381:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:11"
																},
																"nativeSrc": "9369:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9369:37:11"
															},
															"nativeSrc": "9369:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "9369:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9294:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9347:5:11",
														"nodeType": "YulTypedName",
														"src": "9347:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9354:3:11",
														"nodeType": "YulTypedName",
														"src": "9354:3:11",
														"type": ""
													}
												],
												"src": "9294:118:11"
											},
											{
												"body": {
													"nativeSrc": "9516:124:11",
													"nodeType": "YulBlock",
													"src": "9516:124:11",
													"statements": [
														{
															"nativeSrc": "9526:26:11",
															"nodeType": "YulAssignment",
															"src": "9526:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9538:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9538:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9549:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9549:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9534:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:11"
																},
																"nativeSrc": "9534:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9534:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9526:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9526:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9606:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9606:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9619:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9619:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9630:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9630:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9615:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9615:3:11"
																		},
																		"nativeSrc": "9615:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9562:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9562:43:11"
																},
																"nativeSrc": "9562:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9562:71:11"
															},
															"nativeSrc": "9562:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9562:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9418:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9488:9:11",
														"nodeType": "YulTypedName",
														"src": "9488:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9500:6:11",
														"nodeType": "YulTypedName",
														"src": "9500:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9511:4:11",
														"nodeType": "YulTypedName",
														"src": "9511:4:11",
														"type": ""
													}
												],
												"src": "9418:222:11"
											},
											{
												"body": {
													"nativeSrc": "9674:152:11",
													"nodeType": "YulBlock",
													"src": "9674:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9691:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9691:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9694:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9694:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9684:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:11"
																},
																"nativeSrc": "9684:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9684:88:11"
															},
															"nativeSrc": "9684:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9684:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9788:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9788:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9791:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9791:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:11"
																},
																"nativeSrc": "9781:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9781:15:11"
															},
															"nativeSrc": "9781:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9781:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9812:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9812:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9815:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9815:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9805:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9805:6:11"
																},
																"nativeSrc": "9805:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9805:15:11"
															},
															"nativeSrc": "9805:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9805:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9646:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9646:180:11"
											},
											{
												"body": {
													"nativeSrc": "9883:51:11",
													"nodeType": "YulBlock",
													"src": "9883:51:11",
													"statements": [
														{
															"nativeSrc": "9893:34:11",
															"nodeType": "YulAssignment",
															"src": "9893:34:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9918:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9918:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9921:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9921:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9914:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9914:3:11"
																},
																"nativeSrc": "9914:13:11",
																"nodeType": "YulFunctionCall",
																"src": "9914:13:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9893:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "9893:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9832:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9864:5:11",
														"nodeType": "YulTypedName",
														"src": "9864:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9874:8:11",
														"nodeType": "YulTypedName",
														"src": "9874:8:11",
														"type": ""
													}
												],
												"src": "9832:102:11"
											},
											{
												"body": {
													"nativeSrc": "10013:775:11",
													"nodeType": "YulBlock",
													"src": "10013:775:11",
													"statements": [
														{
															"nativeSrc": "10023:15:11",
															"nodeType": "YulAssignment",
															"src": "10023:15:11",
															"value": {
																"name": "_power",
																"nativeSrc": "10032:6:11",
																"nodeType": "YulIdentifier",
																"src": "10032:6:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10023:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10023:5:11"
																}
															]
														},
														{
															"nativeSrc": "10047:14:11",
															"nodeType": "YulAssignment",
															"src": "10047:14:11",
															"value": {
																"name": "_base",
																"nativeSrc": "10056:5:11",
																"nodeType": "YulIdentifier",
																"src": "10056:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10047:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10047:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10105:677:11",
																"nodeType": "YulBlock",
																"src": "10105:677:11",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10193:22:11",
																			"nodeType": "YulBlock",
																			"src": "10193:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10195:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "10195:16:11"
																						},
																						"nativeSrc": "10195:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10195:18:11"
																					},
																					"nativeSrc": "10195:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "10195:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10171:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10171:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10181:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10181:3:11"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10186:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "10186:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10177:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "10177:3:11"
																					},
																					"nativeSrc": "10177:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10177:14:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10168:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "10168:2:11"
																			},
																			"nativeSrc": "10168:24:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10168:24:11"
																		},
																		"nativeSrc": "10165:50:11",
																		"nodeType": "YulIf",
																		"src": "10165:50:11"
																	},
																	{
																		"body": {
																			"nativeSrc": "10260:419:11",
																			"nodeType": "YulBlock",
																			"src": "10260:419:11",
																			"statements": [
																				{
																					"nativeSrc": "10640:25:11",
																					"nodeType": "YulAssignment",
																					"src": "10640:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10653:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "10653:5:11"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10660:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "10660:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10649:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10649:3:11"
																						},
																						"nativeSrc": "10649:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10649:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10640:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "10640:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10235:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "10235:8:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10245:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10245:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10231:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10231:3:11"
																			},
																			"nativeSrc": "10231:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10231:16:11"
																		},
																		"nativeSrc": "10228:451:11",
																		"nodeType": "YulIf",
																		"src": "10228:451:11"
																	},
																	{
																		"nativeSrc": "10692:23:11",
																		"nodeType": "YulAssignment",
																		"src": "10692:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10704:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10704:4:11"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10710:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10710:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10700:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10700:3:11"
																			},
																			"nativeSrc": "10700:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10700:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10692:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10692:4:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10728:44:11",
																		"nodeType": "YulAssignment",
																		"src": "10728:44:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10763:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "10763:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10740:22:11",
																				"nodeType": "YulIdentifier",
																				"src": "10740:22:11"
																			},
																			"nativeSrc": "10740:32:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10740:32:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10728:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "10728:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10081:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10081:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10091:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10091:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10078:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10078:2:11"
																},
																"nativeSrc": "10078:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10078:15:11"
															},
															"nativeSrc": "10070:712:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10094:2:11",
																"nodeType": "YulBlock",
																"src": "10094:2:11",
																"statements": []
															},
															"pre": {
																"nativeSrc": "10074:3:11",
																"nodeType": "YulBlock",
																"src": "10074:3:11",
																"statements": []
															},
															"src": "10070:712:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9940:848:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9968:6:11",
														"nodeType": "YulTypedName",
														"src": "9968:6:11",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9976:5:11",
														"nodeType": "YulTypedName",
														"src": "9976:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9983:8:11",
														"nodeType": "YulTypedName",
														"src": "9983:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9993:3:11",
														"nodeType": "YulTypedName",
														"src": "9993:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10001:5:11",
														"nodeType": "YulTypedName",
														"src": "10001:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "10008:4:11",
														"nodeType": "YulTypedName",
														"src": "10008:4:11",
														"type": ""
													}
												],
												"src": "9940:848:11"
											},
											{
												"body": {
													"nativeSrc": "10854:1013:11",
													"nodeType": "YulBlock",
													"src": "10854:1013:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11049:20:11",
																"nodeType": "YulBlock",
																"src": "11049:20:11",
																"statements": [
																	{
																		"nativeSrc": "11051:10:11",
																		"nodeType": "YulAssignment",
																		"src": "11051:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11060:1:11",
																			"nodeType": "YulLiteral",
																			"src": "11060:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11051:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "11051:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11062:5:11",
																		"nodeType": "YulLeave",
																		"src": "11062:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11039:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "11039:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11032:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11032:6:11"
																},
																"nativeSrc": "11032:16:11",
																"nodeType": "YulFunctionCall",
																"src": "11032:16:11"
															},
															"nativeSrc": "11029:40:11",
															"nodeType": "YulIf",
															"src": "11029:40:11"
														},
														{
															"body": {
																"nativeSrc": "11094:20:11",
																"nodeType": "YulBlock",
																"src": "11094:20:11",
																"statements": [
																	{
																		"nativeSrc": "11096:10:11",
																		"nodeType": "YulAssignment",
																		"src": "11096:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11105:1:11",
																			"nodeType": "YulLiteral",
																			"src": "11105:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11096:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "11096:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11107:5:11",
																		"nodeType": "YulLeave",
																		"src": "11107:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11088:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11088:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11081:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11081:6:11"
																},
																"nativeSrc": "11081:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11081:12:11"
															},
															"nativeSrc": "11078:36:11",
															"nodeType": "YulIf",
															"src": "11078:36:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11224:20:11",
																		"nodeType": "YulBlock",
																		"src": "11224:20:11",
																		"statements": [
																			{
																				"nativeSrc": "11226:10:11",
																				"nodeType": "YulAssignment",
																				"src": "11226:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11235:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11235:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11226:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "11226:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11237:5:11",
																				"nodeType": "YulLeave",
																				"src": "11237:5:11"
																			}
																		]
																	},
																	"nativeSrc": "11217:27:11",
																	"nodeType": "YulCase",
																	"src": "11217:27:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11222:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11222:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11268:176:11",
																		"nodeType": "YulBlock",
																		"src": "11268:176:11",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11303:22:11",
																					"nodeType": "YulBlock",
																					"src": "11303:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11305:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "11305:16:11"
																								},
																								"nativeSrc": "11305:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11305:18:11"
																							},
																							"nativeSrc": "11305:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "11305:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11288:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "11288:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11298:3:11",
																							"nodeType": "YulLiteral",
																							"src": "11298:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11285:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "11285:2:11"
																					},
																					"nativeSrc": "11285:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11285:17:11"
																				},
																				"nativeSrc": "11282:43:11",
																				"nodeType": "YulIf",
																				"src": "11282:43:11"
																			},
																			{
																				"nativeSrc": "11338:25:11",
																				"nodeType": "YulAssignment",
																				"src": "11338:25:11",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11351:1:11",
																							"nodeType": "YulLiteral",
																							"src": "11351:1:11",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11354:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "11354:8:11"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11347:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "11347:3:11"
																					},
																					"nativeSrc": "11347:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11347:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11338:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "11338:5:11"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11394:22:11",
																					"nodeType": "YulBlock",
																					"src": "11394:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11396:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "11396:16:11"
																								},
																								"nativeSrc": "11396:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11396:18:11"
																							},
																							"nativeSrc": "11396:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "11396:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11382:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "11382:5:11"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11389:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11389:3:11"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11379:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "11379:2:11"
																					},
																					"nativeSrc": "11379:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11379:14:11"
																				},
																				"nativeSrc": "11376:40:11",
																				"nodeType": "YulIf",
																				"src": "11376:40:11"
																			},
																			{
																				"nativeSrc": "11429:5:11",
																				"nodeType": "YulLeave",
																				"src": "11429:5:11"
																			}
																		]
																	},
																	"nativeSrc": "11253:191:11",
																	"nodeType": "YulCase",
																	"src": "11253:191:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11258:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11258:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11174:4:11",
																"nodeType": "YulIdentifier",
																"src": "11174:4:11"
															},
															"nativeSrc": "11167:277:11",
															"nodeType": "YulSwitch",
															"src": "11167:277:11"
														},
														{
															"body": {
																"nativeSrc": "11576:123:11",
																"nodeType": "YulBlock",
																"src": "11576:123:11",
																"statements": [
																	{
																		"nativeSrc": "11590:28:11",
																		"nodeType": "YulAssignment",
																		"src": "11590:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11603:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "11603:4:11"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11609:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "11609:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11599:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "11599:3:11"
																			},
																			"nativeSrc": "11599:19:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11599:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11590:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "11590:5:11"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11649:22:11",
																			"nodeType": "YulBlock",
																			"src": "11649:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11651:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "11651:16:11"
																						},
																						"nativeSrc": "11651:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11651:18:11"
																					},
																					"nativeSrc": "11651:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "11651:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11637:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "11637:5:11"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11644:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11644:3:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11634:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "11634:2:11"
																			},
																			"nativeSrc": "11634:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11634:14:11"
																		},
																		"nativeSrc": "11631:40:11",
																		"nodeType": "YulIf",
																		"src": "11631:40:11"
																	},
																	{
																		"nativeSrc": "11684:5:11",
																		"nodeType": "YulLeave",
																		"src": "11684:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11479:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "11479:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11485:2:11",
																						"nodeType": "YulLiteral",
																						"src": "11485:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11476:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "11476:2:11"
																				},
																				"nativeSrc": "11476:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11476:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11493:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "11493:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11503:2:11",
																						"nodeType": "YulLiteral",
																						"src": "11503:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11490:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "11490:2:11"
																				},
																				"nativeSrc": "11490:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11490:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11472:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11472:3:11"
																		},
																		"nativeSrc": "11472:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11472:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11528:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "11528:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11534:3:11",
																						"nodeType": "YulLiteral",
																						"src": "11534:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11525:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "11525:2:11"
																				},
																				"nativeSrc": "11525:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11525:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11543:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "11543:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11553:2:11",
																						"nodeType": "YulLiteral",
																						"src": "11553:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11540:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "11540:2:11"
																				},
																				"nativeSrc": "11540:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11540:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11521:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11521:3:11"
																		},
																		"nativeSrc": "11521:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11521:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11456:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11456:2:11"
																},
																"nativeSrc": "11456:111:11",
																"nodeType": "YulFunctionCall",
																"src": "11456:111:11"
															},
															"nativeSrc": "11453:246:11",
															"nodeType": "YulIf",
															"src": "11453:246:11"
														},
														{
															"nativeSrc": "11709:57:11",
															"nodeType": "YulAssignment",
															"src": "11709:57:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11743:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11743:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11746:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11746:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11752:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "11752:8:11"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11762:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11762:3:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11724:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "11724:18:11"
																},
																"nativeSrc": "11724:42:11",
																"nodeType": "YulFunctionCall",
																"src": "11724:42:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11709:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "11709:5:11"
																},
																{
																	"name": "base",
																	"nativeSrc": "11716:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11716:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11805:22:11",
																"nodeType": "YulBlock",
																"src": "11805:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11807:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11807:16:11"
																			},
																			"nativeSrc": "11807:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11807:18:11"
																		},
																		"nativeSrc": "11807:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11807:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11782:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11782:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11793:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "11793:3:11"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11798:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11798:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:11"
																		},
																		"nativeSrc": "11789:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11789:14:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11779:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11779:2:11"
																},
																"nativeSrc": "11779:25:11",
																"nodeType": "YulFunctionCall",
																"src": "11779:25:11"
															},
															"nativeSrc": "11776:51:11",
															"nodeType": "YulIf",
															"src": "11776:51:11"
														},
														{
															"nativeSrc": "11836:25:11",
															"nodeType": "YulAssignment",
															"src": "11836:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11849:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11849:5:11"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11856:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11856:4:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11845:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11845:3:11"
																},
																"nativeSrc": "11845:16:11",
																"nodeType": "YulFunctionCall",
																"src": "11845:16:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11836:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "11836:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10794:1073:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10824:4:11",
														"nodeType": "YulTypedName",
														"src": "10824:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10830:8:11",
														"nodeType": "YulTypedName",
														"src": "10830:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10840:3:11",
														"nodeType": "YulTypedName",
														"src": "10840:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10848:5:11",
														"nodeType": "YulTypedName",
														"src": "10848:5:11",
														"type": ""
													}
												],
												"src": "10794:1073:11"
											},
											{
												"body": {
													"nativeSrc": "11916:43:11",
													"nodeType": "YulBlock",
													"src": "11916:43:11",
													"statements": [
														{
															"nativeSrc": "11926:27:11",
															"nodeType": "YulAssignment",
															"src": "11926:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11941:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11941:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11948:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11948:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11937:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11937:3:11"
																},
																"nativeSrc": "11937:16:11",
																"nodeType": "YulFunctionCall",
																"src": "11937:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11926:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "11926:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "11873:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11898:5:11",
														"nodeType": "YulTypedName",
														"src": "11898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11908:7:11",
														"nodeType": "YulTypedName",
														"src": "11908:7:11",
														"type": ""
													}
												],
												"src": "11873:86:11"
											},
											{
												"body": {
													"nativeSrc": "12029:217:11",
													"nodeType": "YulBlock",
													"src": "12029:217:11",
													"statements": [
														{
															"nativeSrc": "12039:31:11",
															"nodeType": "YulAssignment",
															"src": "12039:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12065:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12065:4:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12047:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12047:17:11"
																},
																"nativeSrc": "12047:23:11",
																"nodeType": "YulFunctionCall",
																"src": "12047:23:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12039:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12039:4:11"
																}
															]
														},
														{
															"nativeSrc": "12079:37:11",
															"nodeType": "YulAssignment",
															"src": "12079:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12107:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12107:8:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12091:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "12091:15:11"
																},
																"nativeSrc": "12091:25:11",
																"nodeType": "YulFunctionCall",
																"src": "12091:25:11"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12079:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "12079:8:11"
																}
															]
														},
														{
															"nativeSrc": "12126:113:11",
															"nodeType": "YulAssignment",
															"src": "12126:113:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12156:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12156:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12162:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "12162:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12172:66:11",
																		"nodeType": "YulLiteral",
																		"src": "12172:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12135:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "12135:20:11"
																},
																"nativeSrc": "12135:104:11",
																"nodeType": "YulFunctionCall",
																"src": "12135:104:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12126:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12126:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11965:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12004:4:11",
														"nodeType": "YulTypedName",
														"src": "12004:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12010:8:11",
														"nodeType": "YulTypedName",
														"src": "12010:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12023:5:11",
														"nodeType": "YulTypedName",
														"src": "12023:5:11",
														"type": ""
													}
												],
												"src": "11965:281:11"
											},
											{
												"body": {
													"nativeSrc": "12300:362:11",
													"nodeType": "YulBlock",
													"src": "12300:362:11",
													"statements": [
														{
															"nativeSrc": "12310:25:11",
															"nodeType": "YulAssignment",
															"src": "12310:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12333:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12333:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12315:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12315:17:11"
																},
																"nativeSrc": "12315:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12315:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12310:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12310:1:11"
																}
															]
														},
														{
															"nativeSrc": "12344:25:11",
															"nodeType": "YulAssignment",
															"src": "12344:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12367:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12367:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12349:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12349:17:11"
																},
																"nativeSrc": "12349:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12349:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12344:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12344:1:11"
																}
															]
														},
														{
															"nativeSrc": "12378:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12378:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12401:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12401:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12404:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12404:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12397:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12397:3:11"
																},
																"nativeSrc": "12397:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12397:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12382:11:11",
																	"nodeType": "YulTypedName",
																	"src": "12382:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12415:41:11",
															"nodeType": "YulAssignment",
															"src": "12415:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12444:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "12444:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12426:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12426:17:11"
																},
																"nativeSrc": "12426:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12426:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12415:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12415:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12633:22:11",
																"nodeType": "YulBlock",
																"src": "12633:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12635:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12635:16:11"
																			},
																			"nativeSrc": "12635:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12635:18:11"
																		},
																		"nativeSrc": "12635:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12635:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12566:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12566:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12559:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "12559:6:11"
																				},
																				"nativeSrc": "12559:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12559:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12589:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12589:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12596:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "12596:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12605:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "12605:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12592:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12592:3:11"
																						},
																						"nativeSrc": "12592:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12592:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12586:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "12586:2:11"
																				},
																				"nativeSrc": "12586:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12586:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12539:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12539:2:11"
																		},
																		"nativeSrc": "12539:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12539:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12519:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12519:6:11"
																},
																"nativeSrc": "12519:113:11",
																"nodeType": "YulFunctionCall",
																"src": "12519:113:11"
															},
															"nativeSrc": "12516:139:11",
															"nodeType": "YulIf",
															"src": "12516:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12252:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12283:1:11",
														"nodeType": "YulTypedName",
														"src": "12283:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12286:1:11",
														"nodeType": "YulTypedName",
														"src": "12286:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12292:7:11",
														"nodeType": "YulTypedName",
														"src": "12292:7:11",
														"type": ""
													}
												],
												"src": "12252:410:11"
											},
											{
												"body": {
													"nativeSrc": "12712:147:11",
													"nodeType": "YulBlock",
													"src": "12712:147:11",
													"statements": [
														{
															"nativeSrc": "12722:25:11",
															"nodeType": "YulAssignment",
															"src": "12722:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12745:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12745:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12727:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12727:17:11"
																},
																"nativeSrc": "12727:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12727:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12722:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12722:1:11"
																}
															]
														},
														{
															"nativeSrc": "12756:25:11",
															"nodeType": "YulAssignment",
															"src": "12756:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12779:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12779:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12761:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12761:17:11"
																},
																"nativeSrc": "12761:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12761:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12756:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12756:1:11"
																}
															]
														},
														{
															"nativeSrc": "12790:16:11",
															"nodeType": "YulAssignment",
															"src": "12790:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12801:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12801:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12804:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12804:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12797:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12797:3:11"
																},
																"nativeSrc": "12797:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12797:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12790:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12790:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12830:22:11",
																"nodeType": "YulBlock",
																"src": "12830:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12832:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12832:16:11"
																			},
																			"nativeSrc": "12832:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12832:18:11"
																		},
																		"nativeSrc": "12832:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12832:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12822:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12822:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12825:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12825:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12819:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12819:2:11"
																},
																"nativeSrc": "12819:10:11",
																"nodeType": "YulFunctionCall",
																"src": "12819:10:11"
															},
															"nativeSrc": "12816:36:11",
															"nodeType": "YulIf",
															"src": "12816:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12668:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12699:1:11",
														"nodeType": "YulTypedName",
														"src": "12699:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12702:1:11",
														"nodeType": "YulTypedName",
														"src": "12702:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12708:3:11",
														"nodeType": "YulTypedName",
														"src": "12708:3:11",
														"type": ""
													}
												],
												"src": "12668:191:11"
											},
											{
												"body": {
													"nativeSrc": "12930:53:11",
													"nodeType": "YulBlock",
													"src": "12930:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12947:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12947:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12970:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "12970:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12952:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "12952:17:11"
																		},
																		"nativeSrc": "12952:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12952:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12940:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12940:6:11"
																},
																"nativeSrc": "12940:37:11",
																"nodeType": "YulFunctionCall",
																"src": "12940:37:11"
															},
															"nativeSrc": "12940:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "12940:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12865:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12918:5:11",
														"nodeType": "YulTypedName",
														"src": "12918:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12925:3:11",
														"nodeType": "YulTypedName",
														"src": "12925:3:11",
														"type": ""
													}
												],
												"src": "12865:118:11"
											},
											{
												"body": {
													"nativeSrc": "13143:288:11",
													"nodeType": "YulBlock",
													"src": "13143:288:11",
													"statements": [
														{
															"nativeSrc": "13153:26:11",
															"nodeType": "YulAssignment",
															"src": "13153:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13165:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13165:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13176:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13176:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13161:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13161:3:11"
																},
																"nativeSrc": "13161:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13161:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13153:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13153:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13233:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13233:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13246:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13246:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13257:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13257:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13242:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:11"
																		},
																		"nativeSrc": "13242:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13242:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13189:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13189:43:11"
																},
																"nativeSrc": "13189:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13189:71:11"
															},
															"nativeSrc": "13189:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13189:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13314:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13314:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13327:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13327:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13338:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13338:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13323:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13323:3:11"
																		},
																		"nativeSrc": "13323:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13323:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13270:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13270:43:11"
																},
																"nativeSrc": "13270:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13270:72:11"
															},
															"nativeSrc": "13270:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13270:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13396:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13396:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13409:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13409:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13420:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13420:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13405:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13405:3:11"
																		},
																		"nativeSrc": "13405:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13405:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13352:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13352:43:11"
																},
																"nativeSrc": "13352:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13352:72:11"
															},
															"nativeSrc": "13352:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13352:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12989:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13099:9:11",
														"nodeType": "YulTypedName",
														"src": "13099:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13111:6:11",
														"nodeType": "YulTypedName",
														"src": "13111:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13119:6:11",
														"nodeType": "YulTypedName",
														"src": "13119:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13127:6:11",
														"nodeType": "YulTypedName",
														"src": "13127:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13138:4:11",
														"nodeType": "YulTypedName",
														"src": "13138:4:11",
														"type": ""
													}
												],
												"src": "12989:442:11"
											},
											{
												"body": {
													"nativeSrc": "13535:124:11",
													"nodeType": "YulBlock",
													"src": "13535:124:11",
													"statements": [
														{
															"nativeSrc": "13545:26:11",
															"nodeType": "YulAssignment",
															"src": "13545:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13557:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13557:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13568:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13568:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13553:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13553:3:11"
																},
																"nativeSrc": "13553:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13553:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13545:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13545:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13625:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13625:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13638:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13638:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13649:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13649:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13634:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13634:3:11"
																		},
																		"nativeSrc": "13634:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13634:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13581:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13581:43:11"
																},
																"nativeSrc": "13581:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13581:71:11"
															},
															"nativeSrc": "13581:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13581:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13437:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13507:9:11",
														"nodeType": "YulTypedName",
														"src": "13507:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13519:6:11",
														"nodeType": "YulTypedName",
														"src": "13519:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13530:4:11",
														"nodeType": "YulTypedName",
														"src": "13530:4:11",
														"type": ""
													}
												],
												"src": "13437:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161330b38038061330b8339818101604052810190610031919061079c565b33848481600390816100439190610a45565b5080600490816100539190610a45565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d69190610b23565b60405180910390fd5b6100ee8161028a60201b60201c565b5060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361015c576040517ff8af67e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c1576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101f46009819055506102813361025c61034f60201b60201c565b600a6102689190610ca4565b620f42406102769190610cee565b61035760201b60201c565b50505050610dbf565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103c7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103be9190610b23565b60405180910390fd5b6103d85f83836103dc60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042c578060025f8282546104209190610d2f565b925050819055506104fa565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104b5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104ac93929190610d71565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610541578060025f828254039250508190555061058b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105e89190610da6565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106548261060e565b810181811067ffffffffffffffff821117156106735761067261061e565b5b80604052505050565b5f6106856105f5565b9050610691828261064b565b919050565b5f67ffffffffffffffff8211156106b0576106af61061e565b5b6106b98261060e565b9050602081019050919050565b8281835e5f83830152505050565b5f6106e66106e184610696565b61067c565b9050828152602081018484840111156107025761070161060a565b5b61070d8482856106c6565b509392505050565b5f82601f83011261072957610728610606565b5b81516107398482602086016106d4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61076b82610742565b9050919050565b61077b81610761565b8114610785575f80fd5b50565b5f8151905061079681610772565b92915050565b5f805f80608085870312156107b4576107b36105fe565b5b5f85015167ffffffffffffffff8111156107d1576107d0610602565b5b6107dd87828801610715565b945050602085015167ffffffffffffffff8111156107fe576107fd610602565b5b61080a87828801610715565b935050604061081b87828801610788565b925050606061082c87828801610788565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061088657607f821691505b60208210810361089957610898610842565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108c0565b61090586836108c0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61094961094461093f8461091d565b610926565b61091d565b9050919050565b5f819050919050565b6109628361092f565b61097661096e82610950565b8484546108cc565b825550505050565b5f90565b61098a61097e565b610995818484610959565b505050565b5b818110156109b8576109ad5f82610982565b60018101905061099b565b5050565b601f8211156109fd576109ce8161089f565b6109d7846108b1565b810160208510156109e6578190505b6109fa6109f2856108b1565b83018261099a565b50505b505050565b5f82821c905092915050565b5f610a1d5f1984600802610a02565b1980831691505092915050565b5f610a358383610a0e565b9150826002028217905092915050565b610a4e82610838565b67ffffffffffffffff811115610a6757610a6661061e565b5b610a71825461086f565b610a7c8282856109bc565b5f60209050601f831160018114610aad575f8415610a9b578287015190505b610aa58582610a2a565b865550610b0c565b601f198416610abb8661089f565b5f5b82811015610ae257848901518255600182019150602085019450602081019050610abd565b86831015610aff5784890151610afb601f891682610a0e565b8355505b6001600288020188555050505b505050505050565b610b1d81610761565b82525050565b5f602082019050610b365f830184610b14565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610bbe57808604811115610b9a57610b99610b3c565b5b6001851615610ba95780820291505b8081029050610bb785610b69565b9450610b7e565b94509492505050565b5f82610bd65760019050610c91565b81610be3575f9050610c91565b8160018114610bf95760028114610c0357610c32565b6001915050610c91565b60ff841115610c1557610c14610b3c565b5b8360020a915084821115610c2c57610c2b610b3c565b5b50610c91565b5060208310610133831016604e8410600b8410161715610c675782820a905083811115610c6257610c61610b3c565b5b610c91565b610c748484846001610b75565b92509050818404811115610c8b57610c8a610b3c565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610cae8261091d565b9150610cb983610c98565b9250610ce67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610bc7565b905092915050565b5f610cf88261091d565b9150610d038361091d565b9250828202610d118161091d565b91508282048414831517610d2857610d27610b3c565b5b5092915050565b5f610d398261091d565b9150610d448361091d565b9250828201905080821115610d5c57610d5b610b3c565b5b92915050565b610d6b8161091d565b82525050565b5f606082019050610d845f830186610b14565b610d916020830185610d62565b610d9e6040830184610d62565b949350505050565b5f602082019050610db95f830184610d62565b92915050565b61253f80610dcc5f395ff3fe608060405234801561000f575f80fd5b50600436106101a7575f3560e01c806374612f19116100f7578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e14610484578063e95850df146104b4578063ef9ecc1d146104d2578063f2fde38b14610502576101a7565b8063a9059cbb14610408578063a9b493e014610438578063ca52548514610454576101a7565b80638da5cb5b116100d15780638da5cb5b1461039257806395d89b41146103b05780639d55fba7146103ce578063a3262ea2146103ea576101a7565b806374612f191461034e57806377d3550b1461036a5780638456cb5914610388576101a7565b80632fcdc5fd116101645780635c975abb1161013e5780635c975abb146102da5780635e182096146102f857806370a0823114610314578063715018a614610344576101a7565b80632fcdc5fd14610296578063313ce567146102b25780633f4ba83a146102d0576101a7565b806306fdde03146101ab578063095ea7b3146101c957806318160ddd146101f95780631ec48cf71461021757806323b872dd146102485780632a26c9cd14610278575b5f80fd5b6101b361051e565b6040516101c09190611bdc565b60405180910390f35b6101e360048036038101906101de9190611c8d565b6105ae565b6040516101f09190611ce5565b60405180910390f35b6102016105d0565b60405161020e9190611d0d565b60405180910390f35b610231600480360381019061022c9190611d26565b6105d9565b60405161023f929190611d51565b60405180910390f35b610262600480360381019061025d9190611d78565b6105f7565b60405161026f9190611ce5565b60405180910390f35b610280610614565b60405161028d9190611e23565b60405180910390f35b6102b060048036038101906102ab9190611d26565b610639565b005b6102ba610760565b6040516102c79190611e57565b60405180910390f35b6102d8610768565b005b6102e261077a565b6040516102ef9190611ce5565b60405180910390f35b610312600480360381019061030d9190611e70565b61078f565b005b61032e60048036038101906103299190611d26565b6108b7565b60405161033b9190611d0d565b60405180910390f35b61034c6108fc565b005b61036860048036038101906103639190611d26565b61090f565b005b6103726109f6565b60405161037f9190611d0d565b60405180910390f35b6103906109fc565b005b61039a610a0e565b6040516103a79190611ebd565b60405180910390f35b6103b8610a37565b6040516103c59190611bdc565b60405180910390f35b6103e860048036038101906103e39190611ed6565b610ac7565b005b6103f2610b4c565b6040516103ff9190611ebd565b60405180910390f35b610422600480360381019061041d9190611c8d565b610b71565b60405161042f9190611ce5565b60405180910390f35b610452600480360381019061044d9190611e70565b610b8c565b005b61046e60048036038101906104699190611ed6565b610d52565b60405161047b9190611d0d565b60405180910390f35b61049e60048036038101906104999190611f01565b610d67565b6040516104ab9190611d0d565b60405180910390f35b6104bc610de9565b6040516104c99190611ebd565b60405180910390f35b6104ec60048036038101906104e79190611f3f565b610e0e565b6040516104f99190611fed565b60405180910390f35b61051c60048036038101906105179190611d26565b6111ef565b005b60606003805461052d90612033565b80601f016020809104026020016040519081016040528092919081815260200182805461055990612033565b80156105a45780601f1061057b576101008083540402835291602001916105a4565b820191905f5260205f20905b81548152906001019060200180831161058757829003601f168201915b5050505050905090565b5f806105b8611273565b90506105c581858561127a565b600191505092915050565b5f600254905090565b5f806105e4836108b7565b6105ee8430610d67565b91509150915091565b5f61060061128c565b61060b8484846112d6565b90509392505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610641611304565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a6576040517ff8af67e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9816040516107559190611ebd565b60405180910390a150565b5f6012905090565b610770611304565b61077861138b565b565b5f60055f9054906101000a900460ff16905090565b6107976113ec565b61079f61128c565b5f81036107d8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3390505f61080860085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610b71565b90508061084a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610841906120ad565b60405180910390fd5b82600b5f8681526020019081526020015f205f82825461086a91906120f8565b92505081905550837f577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd846040516108a19190611d0d565b60405180910390a250506108b361143b565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610904611304565b61090d5f611445565b565b610917611304565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097c576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f816040516109eb9190611ebd565b60405180910390a150565b60095481565b610a04611304565b610a0c61150a565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a4690612033565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7290612033565b8015610abd5780601f10610a9457610100808354040283529160200191610abd565b820191905f5260205f20905b815481529060010190602001808311610aa057829003601f168201915b5050505050905090565b610acf611304565b612710811115610b0b576040517fdc81db8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806009819055507f13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e81604051610b419190611d0d565b60405180910390a150565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610b7a61128c565b610b84838361156c565b905092915050565b610b946113ec565b610b9c61128c565b610ba6338361158e565b610bdc576040517fde271cf500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610c15576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600b5f8481526020019081526020015f20541015610c60576040517fa77130ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600b5f8481526020019081526020015f205f828254610c80919061212b565b925050819055505f610cb460085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846105f7565b905080610cf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ced906121a8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16837f4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb84604051610d3d9190611d0d565b60405180910390a350610d4e61143b565b5050565b600b602052805f5260405f205f915090505481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e16611b4c565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9c576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ea46113ec565b610eac61128c565b5f8203610ee5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600b5f8681526020019081526020015f205490505f8382101590505f8082156110a75761271060095487610f1a91906121c6565b610f249190612234565b90508086610f32919061212b565b91508584610f40919061212b565b600b5f8a81526020019081526020015f20819055505f811115611005575f610f89600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610b71565b905080610fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc2906122ae565b60405180910390fd5b887facfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d527783604051610ffb9190611d0d565b60405180910390a2505b5f6110108884610b71565b905080611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990612316565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca856040516110999190611d0d565b60405180910390a3506111b1565b8391505f90505f600b5f8a81526020019081526020015f20819055505f821115611176575f6110d68884610b71565b905080611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f9061237e565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb524329085868b61115e919061212b565b60405161116c929190611d51565b60405180910390a3505b877f574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f85886040516111a8929190611d51565b60405180910390a25b604051806060016040528083815260200183886111ce919061212b565b8152602001841515158152509450505050506111e861143b565b9392505050565b6111f7611304565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611267575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161125e9190611ebd565b60405180910390fd5b61127081611445565b50565b5f33905090565b6112878383836001611599565b505050565b61129461077a565b156112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb906123e6565b60405180910390fd5b565b5f806112e0611273565b90506112ed858285611768565b6112f88585856117fa565b60019150509392505050565b61130c611273565b73ffffffffffffffffffffffffffffffffffffffff1661132a610a0e565b73ffffffffffffffffffffffffffffffffffffffff16146113895761134d611273565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113809190611ebd565b60405180910390fd5b565b6113936118ea565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113d5611273565b6040516113e29190611ebd565b60405180910390a1565b600260065403611431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114289061244e565b60405180910390fd5b6002600681905550565b6001600681905550565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61151261128c565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611555611273565b6040516115629190611ebd565b60405180910390a1565b5f80611576611273565b90506115838185856117fa565b600191505092915050565b5f6001905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611609575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116009190611ebd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611679575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116709190611ebd565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611762578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117599190611d0d565b60405180910390a35b50505050565b5f6117738484610d67565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117f457818110156117e5578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016117dc9392919061246c565b60405180910390fd5b6117f384848484035f611599565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361186a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118619190611ebd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118da575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118d19190611ebd565b60405180910390fd5b6118e5838383611933565b505050565b6118f261077a565b611931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611928906124eb565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611983578060025f82825461197791906120f8565b92505081905550611a51565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611a0c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a039392919061246c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a98578060025f8282540392505081905550611ae2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b3f9190611d0d565b60405180910390a3505050565b60405180606001604052805f81526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611bae82611b6c565b611bb88185611b76565b9350611bc8818560208601611b86565b611bd181611b94565b840191505092915050565b5f6020820190508181035f830152611bf48184611ba4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c2982611c00565b9050919050565b611c3981611c1f565b8114611c43575f80fd5b50565b5f81359050611c5481611c30565b92915050565b5f819050919050565b611c6c81611c5a565b8114611c76575f80fd5b50565b5f81359050611c8781611c63565b92915050565b5f8060408385031215611ca357611ca2611bfc565b5b5f611cb085828601611c46565b9250506020611cc185828601611c79565b9150509250929050565b5f8115159050919050565b611cdf81611ccb565b82525050565b5f602082019050611cf85f830184611cd6565b92915050565b611d0781611c5a565b82525050565b5f602082019050611d205f830184611cfe565b92915050565b5f60208284031215611d3b57611d3a611bfc565b5b5f611d4884828501611c46565b91505092915050565b5f604082019050611d645f830185611cfe565b611d716020830184611cfe565b9392505050565b5f805f60608486031215611d8f57611d8e611bfc565b5b5f611d9c86828701611c46565b9350506020611dad86828701611c46565b9250506040611dbe86828701611c79565b9150509250925092565b5f819050919050565b5f611deb611de6611de184611c00565b611dc8565b611c00565b9050919050565b5f611dfc82611dd1565b9050919050565b5f611e0d82611df2565b9050919050565b611e1d81611e03565b82525050565b5f602082019050611e365f830184611e14565b92915050565b5f60ff82169050919050565b611e5181611e3c565b82525050565b5f602082019050611e6a5f830184611e48565b92915050565b5f8060408385031215611e8657611e85611bfc565b5b5f611e9385828601611c79565b9250506020611ea485828601611c79565b9150509250929050565b611eb781611c1f565b82525050565b5f602082019050611ed05f830184611eae565b92915050565b5f60208284031215611eeb57611eea611bfc565b5b5f611ef884828501611c79565b91505092915050565b5f8060408385031215611f1757611f16611bfc565b5b5f611f2485828601611c46565b9250506020611f3585828601611c46565b9150509250929050565b5f805f60608486031215611f5657611f55611bfc565b5b5f611f6386828701611c79565b9350506020611f7486828701611c46565b9250506040611f8586828701611c79565b9150509250925092565b611f9881611c5a565b82525050565b611fa781611ccb565b82525050565b606082015f820151611fc15f850182611f8f565b506020820151611fd46020850182611f8f565b506040820151611fe76040850182611f9e565b50505050565b5f6060820190506120005f830184611fad565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061204a57607f821691505b60208210810361205d5761205c612006565b5b50919050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f612097601583611b76565b91506120a282612063565b602082019050919050565b5f6020820190508181035f8301526120c48161208b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61210282611c5a565b915061210d83611c5a565b9250828201905080821115612125576121246120cb565b5b92915050565b5f61213582611c5a565b915061214083611c5a565b9250828203905081811115612158576121576120cb565b5b92915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612192600f83611b76565b915061219d8261215e565b602082019050919050565b5f6020820190508181035f8301526121bf81612186565b9050919050565b5f6121d082611c5a565b91506121db83611c5a565b92508282026121e981611c5a565b91508282048414831517612200576121ff6120cb565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61223e82611c5a565b915061224983611c5a565b92508261225957612258612207565b5b828204905092915050565b7f436f6d6d697373696f6e207472616e73666572206661696c65640000000000005f82015250565b5f612298601a83611b76565b91506122a382612264565b602082019050919050565b5f6020820190508181035f8301526122c58161228c565b9050919050565b7f57616765207472616e73666572206661696c65640000000000000000000000005f82015250565b5f612300601483611b76565b915061230b826122cc565b602082019050919050565b5f6020820190508181035f83015261232d816122f4565b9050919050565b7f5061727469616c2077616765207472616e73666572206661696c6564000000005f82015250565b5f612368601c83611b76565b915061237382612334565b602082019050919050565b5f6020820190508181035f8301526123958161235c565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6123d0601083611b76565b91506123db8261239c565b602082019050919050565b5f6020820190508181035f8301526123fd816123c4565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612438601f83611b76565b915061244382612404565b602082019050919050565b5f6020820190508181035f8301526124658161242c565b9050919050565b5f60608201905061247f5f830186611eae565b61248c6020830185611cfe565b6124996040830184611cfe565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6124d5601483611b76565b91506124e0826124a1565b602082019050919050565b5f6020820190508181035f830152612502816124c9565b905091905056fea2646970667358221220df2eff5a9840d82dd398b182210a5bd3c4a6f4dfd04e5663678be715631bb64764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x330B CODESIZE SUB DUP1 PUSH2 0x330B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x79C JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x28A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8AF67E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x281 CALLER PUSH2 0x25C PUSH2 0x34F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x357 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D8 PUSH0 DUP4 DUP4 PUSH2 0x3DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0xD2F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4FA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x541 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x58B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x654 DUP3 PUSH2 0x60E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x673 JUMPI PUSH2 0x672 PUSH2 0x61E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x685 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x691 DUP3 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6AF PUSH2 0x61E JUMP JUMPDEST JUMPDEST PUSH2 0x6B9 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E6 PUSH2 0x6E1 DUP5 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x702 JUMPI PUSH2 0x701 PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH2 0x70D DUP5 DUP3 DUP6 PUSH2 0x6C6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x606 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x739 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x76B DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH2 0x761 JUMP JUMPDEST DUP2 EQ PUSH2 0x785 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x796 DUP2 PUSH2 0x772 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x7B3 PUSH2 0x5FE JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D0 PUSH2 0x602 JUMP JUMPDEST JUMPDEST PUSH2 0x7DD DUP8 DUP3 DUP9 ADD PUSH2 0x715 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x602 JUMP JUMPDEST JUMPDEST PUSH2 0x80A DUP8 DUP3 DUP9 ADD PUSH2 0x715 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x81B DUP8 DUP3 DUP9 ADD PUSH2 0x788 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x82C DUP8 DUP3 DUP9 ADD PUSH2 0x788 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x886 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x899 JUMPI PUSH2 0x898 PUSH2 0x842 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8FB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x905 DUP7 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x949 PUSH2 0x944 PUSH2 0x93F DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x962 DUP4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x976 PUSH2 0x96E DUP3 PUSH2 0x950 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8CC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x98A PUSH2 0x97E JUMP JUMPDEST PUSH2 0x995 DUP2 DUP5 DUP5 PUSH2 0x959 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9AD PUSH0 DUP3 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x99B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9FD JUMPI PUSH2 0x9CE DUP2 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x9D7 DUP5 PUSH2 0x8B1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9E6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9FA PUSH2 0x9F2 DUP6 PUSH2 0x8B1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x99A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA02 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA35 DUP4 DUP4 PUSH2 0xA0E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4E DUP3 PUSH2 0x838 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA66 PUSH2 0x61E JUMP JUMPDEST JUMPDEST PUSH2 0xA71 DUP3 SLOAD PUSH2 0x86F JUMP JUMPDEST PUSH2 0xA7C DUP3 DUP3 DUP6 PUSH2 0x9BC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAAD JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA9B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAA5 DUP6 DUP3 PUSH2 0xA2A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xABB DUP7 PUSH2 0x89F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAE2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAFF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAFB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA0E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0x761 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB36 PUSH0 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xBBE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xBA9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xBB7 DUP6 PUSH2 0xB69 JUMP JUMPDEST SWAP5 POP PUSH2 0xB7E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBD6 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC91 JUMP JUMPDEST DUP2 PUSH2 0xBE3 JUMPI PUSH0 SWAP1 POP PUSH2 0xC91 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBF9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC03 JUMPI PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC91 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xC2C JUMPI PUSH2 0xC2B PUSH2 0xB3C JUMP JUMPDEST JUMPDEST POP PUSH2 0xC91 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC67 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC62 JUMPI PUSH2 0xC61 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC74 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB75 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xB3C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCAE DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP4 PUSH2 0xC98 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCF8 DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xD03 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD11 DUP2 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD28 JUMPI PUSH2 0xD27 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD39 DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xD44 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD5C JUMPI PUSH2 0xD5B PUSH2 0xB3C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0x91D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD84 PUSH0 DUP4 ADD DUP7 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xD9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD62 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xD62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x253F DUP1 PUSH2 0xDCC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74612F19 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xE95850DF EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xEF9ECC1D EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x502 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA9B493E0 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xCA525485 EQ PUSH2 0x454 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x9D55FBA7 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xA3262EA2 EQ PUSH2 0x3EA JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x74612F19 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x77D3550B EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x388 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCDC5FD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x5E182096 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x344 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCDC5FD EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2D0 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1EC48CF7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x2A26C9CD EQ PUSH2 0x278 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP3 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x768 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x372 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH2 0x9FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39A PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F2 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BC PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x559 SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x57B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x587 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B8 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C5 DUP2 DUP6 DUP6 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E4 DUP4 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x5EE DUP5 ADDRESS PUSH2 0xD67 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x600 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x60B DUP5 DUP5 DUP5 PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x641 PUSH2 0x1304 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8AF67E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF2610996D245D9B77E4FF84C2174EEA0B76FB44C422218404F66E28816D78FB9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x778 PUSH2 0x138B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x79F PUSH2 0x128C JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x808 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xB PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x577DFADB80AB9A5336C633F3FA5F59C296D18A29AA6AE9E4598762748E1F4AFD DUP5 PUSH1 0x40 MLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x8B3 PUSH2 0x143B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x904 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x90D PUSH0 PUSH2 0x1445 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x917 PUSH2 0x1304 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4422C0C4B301436298CCE7DE4B586B1E044E671D0EFBFEB88689161EBD95DD4F DUP2 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA04 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0xA0C PUSH2 0x150A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA46 SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA72 SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xABD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA94 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xABD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC81DB8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x13F60DD2B588490608C3FF1932A3DAEB4087F3D5AF04B97E5C2A16B5B4C0302E DUP2 PUSH1 0x40 MLOAD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xB7A PUSH2 0x128C JUMP JUMPDEST PUSH2 0xB84 DUP4 DUP4 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB94 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xB9C PUSH2 0x128C JUMP JUMPDEST PUSH2 0xBA6 CALLER DUP4 PUSH2 0x158E JUMP JUMPDEST PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH32 0xDE271CF500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA77130EF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xCB4 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCED SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x4E073DD16EEC477FBB059BDA1F0796F0D06EEBC4C53568E3E77A4084228FD4EB DUP5 PUSH1 0x40 MLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xD4E PUSH2 0x143B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xEAC PUSH2 0x128C JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0xEE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP4 DUP3 LT ISZERO SWAP1 POP PUSH0 DUP1 DUP3 ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x2710 PUSH1 0x9 SLOAD DUP8 PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST SWAP2 POP DUP6 DUP5 PUSH2 0xF40 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0xB PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0x1005 JUMPI PUSH0 PUSH2 0xF89 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC2 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH32 0xACFA15EBE340982FEF95D43AAFC25D741382D7928A00055A209274FA615D5277 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH0 PUSH2 0x1010 DUP9 DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1049 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x4C3044279DAEA82275BC16A26600FE0C196CB65422B138C02DC86FB861B174CA DUP6 PUSH1 0x40 MLOAD PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x11B1 JUMP JUMPDEST DUP4 SWAP2 POP PUSH0 SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT ISZERO PUSH2 0x1176 JUMPI PUSH0 PUSH2 0x10D6 DUP9 DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x5D16C483BEE69284681447FE545192ACC0F537A2CD7C2CD35593A1EDB5243290 DUP6 DUP7 DUP12 PUSH2 0x115E SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116C SWAP3 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST DUP8 PUSH32 0x574264649C9D702F91C09E683982319DA6546E5CFEE0A4898A3BD6BF1C63042F DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x11A8 SWAP3 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP9 PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO DUP2 MSTORE POP SWAP5 POP POP POP POP POP PUSH2 0x11E8 PUSH2 0x143B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11F7 PUSH2 0x1304 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0x1445 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1287 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1599 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1294 PUSH2 0x77A JUMP JUMPDEST ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x12E0 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0x12ED DUP6 DUP3 DUP6 PUSH2 0x1768 JUMP JUMPDEST PUSH2 0x12F8 DUP6 DUP6 DUP6 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x130C PUSH2 0x1273 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132A PUSH2 0xA0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1389 JUMPI PUSH2 0x134D PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1393 PUSH2 0x18EA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x13D5 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E2 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1428 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1512 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1555 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1576 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0x1583 DUP2 DUP6 DUP6 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1609 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1600 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1679 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1762 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1773 DUP5 DUP5 PUSH2 0xD67 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x17F4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17E5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F3 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1599 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1861 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E5 DUP4 DUP4 DUP4 PUSH2 0x1933 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18F2 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1928 SWAP1 PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1983 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1977 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A51 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A0C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A98 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1AE2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B3F SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAE DUP3 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x1BB8 DUP2 DUP6 PUSH2 0x1B76 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BC8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x1B94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF4 DUP2 DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C29 DUP3 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C39 DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C54 DUP2 PUSH2 0x1C30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6C DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1C76 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C87 DUP2 PUSH2 0x1C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D20 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D48 DUP5 DUP3 DUP6 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D64 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CFE JUMP JUMPDEST PUSH2 0x1D71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D8F JUMPI PUSH2 0x1D8E PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D9C DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DAD DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DBE DUP7 DUP3 DUP8 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEB PUSH2 0x1DE6 PUSH2 0x1DE1 DUP5 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFC DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0D DUP3 PUSH2 0x1DF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH2 0x1E03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E36 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x1E3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E85 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E93 DUP6 DUP3 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB7 DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF8 DUP5 DUP3 DUP6 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F24 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F35 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH2 0x1F55 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F63 DUP7 DUP3 DUP8 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F74 DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F85 DUP7 DUP3 DUP8 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1F98 DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FA7 DUP2 PUSH2 0x1CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1FC1 PUSH0 DUP6 ADD DUP3 PUSH2 0x1F8F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1FD4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1F8F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1FE7 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1F9E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2000 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x204A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x205D JUMPI PUSH2 0x205C PUSH2 0x2006 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2097 PUSH1 0x15 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A2 DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20C4 DUP2 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2102 DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x210D DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x20CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2135 DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x2140 DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2158 JUMPI PUSH2 0x2157 PUSH2 0x20CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH1 0xF DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x219D DUP3 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BF DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D0 DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x21DB DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x21E9 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x20CB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x223E DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x2249 DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2259 JUMPI PUSH2 0x2258 PUSH2 0x2207 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697373696F6E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2298 PUSH1 0x1A DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A3 DUP3 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C5 DUP2 PUSH2 0x228C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616765207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2300 PUSH1 0x14 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x230B DUP3 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232D DUP2 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061727469616C2077616765207472616E73666572206661696C656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2368 PUSH1 0x1C DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x2373 DUP3 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2395 DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D0 PUSH1 0x10 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DB DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FD DUP2 PUSH2 0x23C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2438 PUSH1 0x1F DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x2443 DUP3 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2465 DUP2 PUSH2 0x242C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x247F PUSH0 DUP4 ADD DUP7 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x248C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CFE JUMP JUMPDEST PUSH2 0x2499 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24D5 PUSH1 0x14 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E0 DUP3 PUSH2 0x24A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2502 DUP2 PUSH2 0x24C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0x2E SELFDESTRUCT GAS SWAP9 BLOCKHASH 0xD8 0x2D 0xD3 SWAP9 0xB1 DUP3 0x21 EXP JUMPDEST 0xD3 0xC4 0xA6 DELEGATECALL 0xDF 0xD0 0x4E JUMP PUSH4 0x678BE715 PUSH4 0x1BB64764 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "467:10127:10:-:0;;;1792:582;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1973:10;1951:4;1957:6;1675:5:4;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;2029:1:10::2;2000:31;;:17;:31;;::::0;1996:64:::2;;2040:20;;;;;;;;;;;;;;1996:64;2106:1;2075:33;;:19;:33;;::::0;2071:70:::2;;2117:24;;;;;;;;;;;;;;2071:70;2181:17;2162:16;;:36;;;;;;;;;;;;;;;;;;2230:19;2209:18;;:40;;;;;;;;;;;;;;;;;;2280:3;2260:17;:23;;;;2321:45;2327:10;2355;:8;;;:10;;:::i;:::-;2351:2;:14;;;;:::i;:::-;2339:9;:26;;;;:::i;:::-;2321:5;;;:45;;:::i;:::-;1792:582:::0;;;;467:10127;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1166::-;3198:6;3206;3214;3222;3271:3;3259:9;3250:7;3246:23;3242:33;3239:120;;;3278:79;;:::i;:::-;3239:120;3419:1;3408:9;3404:17;3398:24;3449:18;3441:6;3438:30;3435:117;;;3471:79;;:::i;:::-;3435:117;3576:74;3642:7;3633:6;3622:9;3618:22;3576:74;:::i;:::-;3566:84;;3369:291;3720:2;3709:9;3705:18;3699:25;3751:18;3743:6;3740:30;3737:117;;;3773:79;;:::i;:::-;3737:117;3878:74;3944:7;3935:6;3924:9;3920:22;3878:74;:::i;:::-;3868:84;;3670:292;4001:2;4027:64;4083:7;4074:6;4063:9;4059:22;4027:64;:::i;:::-;4017:74;;3972:129;4140:2;4166:64;4222:7;4213:6;4202:9;4198:22;4166:64;:::i;:::-;4156:74;;4111:129;3081:1166;;;;;;;:::o;4253:99::-;4305:6;4339:5;4333:12;4323:22;;4253:99;;;:::o;4358:180::-;4406:77;4403:1;4396:88;4503:4;4500:1;4493:15;4527:4;4524:1;4517:15;4544:320;4588:6;4625:1;4619:4;4615:12;4605:22;;4672:1;4666:4;4662:12;4693:18;4683:81;;4749:4;4741:6;4737:17;4727:27;;4683:81;4811:2;4803:6;4800:14;4780:18;4777:38;4774:84;;4830:18;;:::i;:::-;4774:84;4595:269;4544:320;;;:::o;4870:141::-;4919:4;4942:3;4934:11;;4965:3;4962:1;4955:14;4999:4;4996:1;4986:18;4978:26;;4870:141;;;:::o;5017:93::-;5054:6;5101:2;5096;5089:5;5085:14;5081:23;5071:33;;5017:93;;;:::o;5116:107::-;5160:8;5210:5;5204:4;5200:16;5179:37;;5116:107;;;;:::o;5229:393::-;5298:6;5348:1;5336:10;5332:18;5371:97;5401:66;5390:9;5371:97;:::i;:::-;5489:39;5519:8;5508:9;5489:39;:::i;:::-;5477:51;;5561:4;5557:9;5550:5;5546:21;5537:30;;5610:4;5600:8;5596:19;5589:5;5586:30;5576:40;;5305:317;;5229:393;;;;;:::o;5628:77::-;5665:7;5694:5;5683:16;;5628:77;;;:::o;5711:60::-;5739:3;5760:5;5753:12;;5711:60;;;:::o;5777:142::-;5827:9;5860:53;5878:34;5887:24;5905:5;5887:24;:::i;:::-;5878:34;:::i;:::-;5860:53;:::i;:::-;5847:66;;5777:142;;;:::o;5925:75::-;5968:3;5989:5;5982:12;;5925:75;;;:::o;6006:269::-;6116:39;6147:7;6116:39;:::i;:::-;6177:91;6226:41;6250:16;6226:41;:::i;:::-;6218:6;6211:4;6205:11;6177:91;:::i;:::-;6171:4;6164:105;6082:193;6006:269;;;:::o;6281:73::-;6326:3;6281:73;:::o;6360:189::-;6437:32;;:::i;:::-;6478:65;6536:6;6528;6522:4;6478:65;:::i;:::-;6413:136;6360:189;;:::o;6555:186::-;6615:120;6632:3;6625:5;6622:14;6615:120;;;6686:39;6723:1;6716:5;6686:39;:::i;:::-;6659:1;6652:5;6648:13;6639:22;;6615:120;;;6555:186;;:::o;6747:543::-;6848:2;6843:3;6840:11;6837:446;;;6882:38;6914:5;6882:38;:::i;:::-;6966:29;6984:10;6966:29;:::i;:::-;6956:8;6952:44;7149:2;7137:10;7134:18;7131:49;;;7170:8;7155:23;;7131:49;7193:80;7249:22;7267:3;7249:22;:::i;:::-;7239:8;7235:37;7222:11;7193:80;:::i;:::-;6852:431;;6837:446;6747:543;;;:::o;7296:117::-;7350:8;7400:5;7394:4;7390:16;7369:37;;7296:117;;;;:::o;7419:169::-;7463:6;7496:51;7544:1;7540:6;7532:5;7529:1;7525:13;7496:51;:::i;:::-;7492:56;7577:4;7571;7567:15;7557:25;;7470:118;7419:169;;;;:::o;7593:295::-;7669:4;7815:29;7840:3;7834:4;7815:29;:::i;:::-;7807:37;;7877:3;7874:1;7870:11;7864:4;7861:21;7853:29;;7593:295;;;;:::o;7893:1395::-;8010:37;8043:3;8010:37;:::i;:::-;8112:18;8104:6;8101:30;8098:56;;;8134:18;;:::i;:::-;8098:56;8178:38;8210:4;8204:11;8178:38;:::i;:::-;8263:67;8323:6;8315;8309:4;8263:67;:::i;:::-;8357:1;8381:4;8368:17;;8413:2;8405:6;8402:14;8430:1;8425:618;;;;9087:1;9104:6;9101:77;;;9153:9;9148:3;9144:19;9138:26;9129:35;;9101:77;9204:67;9264:6;9257:5;9204:67;:::i;:::-;9198:4;9191:81;9060:222;8395:887;;8425:618;8477:4;8473:9;8465:6;8461:22;8511:37;8543:4;8511:37;:::i;:::-;8570:1;8584:208;8598:7;8595:1;8592:14;8584:208;;;8677:9;8672:3;8668:19;8662:26;8654:6;8647:42;8728:1;8720:6;8716:14;8706:24;;8775:2;8764:9;8760:18;8747:31;;8621:4;8618:1;8614:12;8609:17;;8584:208;;;8820:6;8811:7;8808:19;8805:179;;;8878:9;8873:3;8869:19;8863:26;8921:48;8963:4;8955:6;8951:17;8940:9;8921:48;:::i;:::-;8913:6;8906:64;8828:156;8805:179;9030:1;9026;9018:6;9014:14;9010:22;9004:4;8997:36;8432:611;;;8395:887;;7985:1303;;;7893:1395;;:::o;9294:118::-;9381:24;9399:5;9381:24;:::i;:::-;9376:3;9369:37;9294:118;;:::o;9418:222::-;9511:4;9549:2;9538:9;9534:18;9526:26;;9562:71;9630:1;9619:9;9615:17;9606:6;9562:71;:::i;:::-;9418:222;;;;:::o;9646:180::-;9694:77;9691:1;9684:88;9791:4;9788:1;9781:15;9815:4;9812:1;9805:15;9832:102;9874:8;9921:5;9918:1;9914:13;9893:34;;9832:102;;;:::o;9940:848::-;10001:5;10008:4;10032:6;10023:15;;10056:5;10047:14;;10070:712;10091:1;10081:8;10078:15;10070:712;;;10186:4;10181:3;10177:14;10171:4;10168:24;10165:50;;;10195:18;;:::i;:::-;10165:50;10245:1;10235:8;10231:16;10228:451;;;10660:4;10653:5;10649:16;10640:25;;10228:451;10710:4;10704;10700:15;10692:23;;10740:32;10763:8;10740:32;:::i;:::-;10728:44;;10070:712;;;9940:848;;;;;;;:::o;10794:1073::-;10848:5;11039:8;11029:40;;11060:1;11051:10;;11062:5;;11029:40;11088:4;11078:36;;11105:1;11096:10;;11107:5;;11078:36;11174:4;11222:1;11217:27;;;;11258:1;11253:191;;;;11167:277;;11217:27;11235:1;11226:10;;11237:5;;;11253:191;11298:3;11288:8;11285:17;11282:43;;;11305:18;;:::i;:::-;11282:43;11354:8;11351:1;11347:16;11338:25;;11389:3;11382:5;11379:14;11376:40;;;11396:18;;:::i;:::-;11376:40;11429:5;;;11167:277;;11553:2;11543:8;11540:16;11534:3;11528:4;11525:13;11521:36;11503:2;11493:8;11490:16;11485:2;11479:4;11476:12;11472:35;11456:111;11453:246;;;11609:8;11603:4;11599:19;11590:28;;11644:3;11637:5;11634:14;11631:40;;;11651:18;;:::i;:::-;11631:40;11684:5;;11453:246;11724:42;11762:3;11752:8;11746:4;11743:1;11724:42;:::i;:::-;11709:57;;;;11798:4;11793:3;11789:14;11782:5;11779:25;11776:51;;;11807:18;;:::i;:::-;11776:51;11856:4;11849:5;11845:16;11836:25;;10794:1073;;;;;;:::o;11873:86::-;11908:7;11948:4;11941:5;11937:16;11926:27;;11873:86;;;:::o;11965:281::-;12023:5;12047:23;12065:4;12047:23;:::i;:::-;12039:31;;12091:25;12107:8;12091:25;:::i;:::-;12079:37;;12135:104;12172:66;12162:8;12156:4;12135:104;:::i;:::-;12126:113;;11965:281;;;;:::o;12252:410::-;12292:7;12315:20;12333:1;12315:20;:::i;:::-;12310:25;;12349:20;12367:1;12349:20;:::i;:::-;12344:25;;12404:1;12401;12397:9;12426:30;12444:11;12426:30;:::i;:::-;12415:41;;12605:1;12596:7;12592:15;12589:1;12586:22;12566:1;12559:9;12539:83;12516:139;;12635:18;;:::i;:::-;12516:139;12300:362;12252:410;;;;:::o;12668:191::-;12708:3;12727:20;12745:1;12727:20;:::i;:::-;12722:25;;12761:20;12779:1;12761:20;:::i;:::-;12756:25;;12804:1;12801;12797:9;12790:16;;12825:3;12822:1;12819:10;12816:36;;;12832:18;;:::i;:::-;12816:36;12668:191;;;;:::o;12865:118::-;12952:24;12970:5;12952:24;:::i;:::-;12947:3;12940:37;12865:118;;:::o;12989:442::-;13138:4;13176:2;13165:9;13161:18;13153:26;;13189:71;13257:1;13246:9;13242:17;13233:6;13189:71;:::i;:::-;13270:72;13338:2;13327:9;13323:18;13314:6;13270:72;:::i;:::-;13352;13420:2;13409:9;13405:18;13396:6;13352:72;:::i;:::-;12989:442;;;;;;:::o;13437:222::-;13530:4;13568:2;13557:9;13553:18;13545:26;;13581:71;13649:1;13638:9;13634:17;13625:6;13581:71;:::i;:::-;13437:222;;;;:::o;467:10127:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_863": {
									"entryPoint": 4730,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 5529,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4868,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isSignOwner_1711": {
									"entryPoint": 5518,
									"id": 1711,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1088": {
									"entryPoint": 4723,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": 5179,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 5100,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_375": {
									"entryPoint": 5386,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 4748,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 6378,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_971": {
									"entryPoint": 5992,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5189,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 6138,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 5003,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 6451,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_599": {
									"entryPoint": 3431,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 1454,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": 2231,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@chargeSignBalance_1406": {
									"entryPoint": 1935,
									"id": 1406,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@commissionPercent_1218": {
									"entryPoint": 2550,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@commissionTreasury_1220": {
									"entryPoint": 3561,
									"id": 1220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 1888,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getApprovalInfo_1843": {
									"entryPoint": 1497,
									"id": 1843,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@name_518": {
									"entryPoint": 1310,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2574,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1720": {
									"entryPoint": 2556,
									"id": 1720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 1914,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payWage_1665": {
									"entryPoint": 3598,
									"id": 1665,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2300,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signBalances_1227": {
									"entryPoint": 3410,
									"id": 1227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signsNFTContract_1216": {
									"entryPoint": 2892,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signsNFT_1214": {
									"entryPoint": 1556,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_527": {
									"entryPoint": 2615,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_545": {
									"entryPoint": 1488,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1821": {
									"entryPoint": 1527,
									"id": 1821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_655": {
									"entryPoint": 4822,
									"id": 655,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4591,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1799": {
									"entryPoint": 2929,
									"id": 1799,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_582": {
									"entryPoint": 5484,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1729": {
									"entryPoint": 1896,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCommissionTreasury_1780": {
									"entryPoint": 2319,
									"id": 1780,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCommission_1753": {
									"entryPoint": 2759,
									"id": 1753,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSignsNFTContract_1698": {
									"entryPoint": 1593,
									"id": 1698,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawSignBalance_1472": {
									"entryPoint": 2956,
									"id": 1472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISignsNFT_$1194_to_t_address_fromStack": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_WagePaymentResult_$1480_memory_ptr_to_t_struct$_WagePaymentResult_$1480_memory_ptr_fromStack": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISignsNFT_$1194__to_t_address__fromStack_reversed": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_WagePaymentResult_$1480_memory_ptr__to_t_struct$_WagePaymentResult_$1480_memory_ptr__fromStack_reversed": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISignsNFT_$1194_to_t_address": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 8291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512": {
									"entryPoint": 9012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20153:11",
										"nodeType": "YulBlock",
										"src": "0:20153:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3404:53:11",
													"nodeType": "YulBlock",
													"src": "3404:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:11"
																		},
																		"nativeSrc": "3426:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:11"
																},
																"nativeSrc": "3414:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:11"
															},
															"nativeSrc": "3414:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:11",
														"nodeType": "YulTypedName",
														"src": "3392:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:11",
														"nodeType": "YulTypedName",
														"src": "3399:3:11",
														"type": ""
													}
												],
												"src": "3339:118:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3757:263:11",
													"nodeType": "YulBlock",
													"src": "3757:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:11",
																"nodeType": "YulBlock",
																"src": "3803:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:11"
																			},
																			"nativeSrc": "3805:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:11"
																		},
																		"nativeSrc": "3805:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:11"
																		},
																		"nativeSrc": "3774:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:11"
																},
																"nativeSrc": "3770:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:11"
															},
															"nativeSrc": "3767:119:11",
															"nodeType": "YulIf",
															"src": "3767:119:11"
														},
														{
															"nativeSrc": "3896:117:11",
															"nodeType": "YulBlock",
															"src": "3896:117:11",
															"statements": [
																{
																	"nativeSrc": "3911:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:11"
																				},
																				"nativeSrc": "3971:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3950:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:11"
																		},
																		"nativeSrc": "3950:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3691:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:11",
														"nodeType": "YulTypedName",
														"src": "3727:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:11",
														"nodeType": "YulTypedName",
														"src": "3738:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:11",
														"nodeType": "YulTypedName",
														"src": "3750:6:11",
														"type": ""
													}
												],
												"src": "3691:329:11"
											},
											{
												"body": {
													"nativeSrc": "4152:206:11",
													"nodeType": "YulBlock",
													"src": "4152:206:11",
													"statements": [
														{
															"nativeSrc": "4162:26:11",
															"nodeType": "YulAssignment",
															"src": "4162:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4174:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4174:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4170:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4170:3:11"
																},
																"nativeSrc": "4170:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4170:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4162:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4162:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4242:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4255:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4266:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4266:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4251:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:11"
																		},
																		"nativeSrc": "4251:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4251:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4198:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4198:43:11"
																},
																"nativeSrc": "4198:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4198:71:11"
															},
															"nativeSrc": "4198:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4198:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4323:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4323:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4336:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4347:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:11"
																		},
																		"nativeSrc": "4332:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4279:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4279:43:11"
																},
																"nativeSrc": "4279:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4279:72:11"
															},
															"nativeSrc": "4279:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4279:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4026:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4116:9:11",
														"nodeType": "YulTypedName",
														"src": "4116:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:11",
														"nodeType": "YulTypedName",
														"src": "4128:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4136:6:11",
														"nodeType": "YulTypedName",
														"src": "4136:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4147:4:11",
														"nodeType": "YulTypedName",
														"src": "4147:4:11",
														"type": ""
													}
												],
												"src": "4026:332:11"
											},
											{
												"body": {
													"nativeSrc": "4464:519:11",
													"nodeType": "YulBlock",
													"src": "4464:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4510:83:11",
																"nodeType": "YulBlock",
																"src": "4510:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4512:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4512:77:11"
																			},
																			"nativeSrc": "4512:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4512:79:11"
																		},
																		"nativeSrc": "4512:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4512:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4485:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4485:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4494:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4494:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4481:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4481:3:11"
																		},
																		"nativeSrc": "4481:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4481:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4506:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4477:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:11"
																},
																"nativeSrc": "4477:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4477:32:11"
															},
															"nativeSrc": "4474:119:11",
															"nodeType": "YulIf",
															"src": "4474:119:11"
														},
														{
															"nativeSrc": "4603:117:11",
															"nodeType": "YulBlock",
															"src": "4603:117:11",
															"statements": [
																{
																	"nativeSrc": "4618:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4618:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4632:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4632:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4622:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4622:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4647:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4647:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4682:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4682:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4693:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4693:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4678:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4678:3:11"
																				},
																				"nativeSrc": "4678:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4678:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4702:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4702:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4657:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4657:20:11"
																		},
																		"nativeSrc": "4657:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4657:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4647:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4647:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4730:118:11",
															"nodeType": "YulBlock",
															"src": "4730:118:11",
															"statements": [
																{
																	"nativeSrc": "4745:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4745:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4759:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4749:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4749:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4775:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4775:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4810:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4810:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4821:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4821:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4806:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4806:3:11"
																				},
																				"nativeSrc": "4806:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4806:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4830:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4830:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4785:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4785:20:11"
																		},
																		"nativeSrc": "4785:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4785:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4775:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4775:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4858:118:11",
															"nodeType": "YulBlock",
															"src": "4858:118:11",
															"statements": [
																{
																	"nativeSrc": "4873:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4873:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4887:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4887:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4877:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4877:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4903:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4903:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4938:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4938:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4949:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4949:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4934:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4934:3:11"
																				},
																				"nativeSrc": "4934:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4934:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4958:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4958:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4913:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4913:20:11"
																		},
																		"nativeSrc": "4913:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4903:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4903:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4364:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4418:9:11",
														"nodeType": "YulTypedName",
														"src": "4418:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4429:7:11",
														"nodeType": "YulTypedName",
														"src": "4429:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4441:6:11",
														"nodeType": "YulTypedName",
														"src": "4441:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4449:6:11",
														"nodeType": "YulTypedName",
														"src": "4449:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4457:6:11",
														"nodeType": "YulTypedName",
														"src": "4457:6:11",
														"type": ""
													}
												],
												"src": "4364:619:11"
											},
											{
												"body": {
													"nativeSrc": "5021:28:11",
													"nodeType": "YulBlock",
													"src": "5021:28:11",
													"statements": [
														{
															"nativeSrc": "5031:12:11",
															"nodeType": "YulAssignment",
															"src": "5031:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5038:5:11",
																"nodeType": "YulIdentifier",
																"src": "5038:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5031:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5031:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4989:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5007:5:11",
														"nodeType": "YulTypedName",
														"src": "5007:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5017:3:11",
														"nodeType": "YulTypedName",
														"src": "5017:3:11",
														"type": ""
													}
												],
												"src": "4989:60:11"
											},
											{
												"body": {
													"nativeSrc": "5115:82:11",
													"nodeType": "YulBlock",
													"src": "5115:82:11",
													"statements": [
														{
															"nativeSrc": "5125:66:11",
															"nodeType": "YulAssignment",
															"src": "5125:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5183:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5183:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5165:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5165:17:11"
																				},
																				"nativeSrc": "5165:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5165:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5156:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5156:8:11"
																		},
																		"nativeSrc": "5156:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5156:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5138:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5138:17:11"
																},
																"nativeSrc": "5138:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5138:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5125:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5125:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5055:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5095:5:11",
														"nodeType": "YulTypedName",
														"src": "5095:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5105:9:11",
														"nodeType": "YulTypedName",
														"src": "5105:9:11",
														"type": ""
													}
												],
												"src": "5055:142:11"
											},
											{
												"body": {
													"nativeSrc": "5263:66:11",
													"nodeType": "YulBlock",
													"src": "5263:66:11",
													"statements": [
														{
															"nativeSrc": "5273:50:11",
															"nodeType": "YulAssignment",
															"src": "5273:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5317:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5317:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5286:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5286:30:11"
																},
																"nativeSrc": "5286:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5286:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5273:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5273:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5203:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:11",
														"nodeType": "YulTypedName",
														"src": "5243:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5253:9:11",
														"nodeType": "YulTypedName",
														"src": "5253:9:11",
														"type": ""
													}
												],
												"src": "5203:126:11"
											},
											{
												"body": {
													"nativeSrc": "5413:66:11",
													"nodeType": "YulBlock",
													"src": "5413:66:11",
													"statements": [
														{
															"nativeSrc": "5423:50:11",
															"nodeType": "YulAssignment",
															"src": "5423:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5467:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5467:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5436:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5436:30:11"
																},
																"nativeSrc": "5436:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5436:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5423:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5423:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISignsNFT_$1194_to_t_address",
												"nativeSrc": "5335:144:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:11",
														"nodeType": "YulTypedName",
														"src": "5393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5403:9:11",
														"nodeType": "YulTypedName",
														"src": "5403:9:11",
														"type": ""
													}
												],
												"src": "5335:144:11"
											},
											{
												"body": {
													"nativeSrc": "5568:84:11",
													"nodeType": "YulBlock",
													"src": "5568:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5585:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5585:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5639:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5639:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISignsNFT_$1194_to_t_address",
																			"nativeSrc": "5590:48:11",
																			"nodeType": "YulIdentifier",
																			"src": "5590:48:11"
																		},
																		"nativeSrc": "5590:55:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5590:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5578:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5578:6:11"
																},
																"nativeSrc": "5578:68:11",
																"nodeType": "YulFunctionCall",
																"src": "5578:68:11"
															},
															"nativeSrc": "5578:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "5578:68:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISignsNFT_$1194_to_t_address_fromStack",
												"nativeSrc": "5485:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5556:5:11",
														"nodeType": "YulTypedName",
														"src": "5556:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5563:3:11",
														"nodeType": "YulTypedName",
														"src": "5563:3:11",
														"type": ""
													}
												],
												"src": "5485:167:11"
											},
											{
												"body": {
													"nativeSrc": "5774:142:11",
													"nodeType": "YulBlock",
													"src": "5774:142:11",
													"statements": [
														{
															"nativeSrc": "5784:26:11",
															"nodeType": "YulAssignment",
															"src": "5784:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5796:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5796:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5807:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5807:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5792:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5792:3:11"
																},
																"nativeSrc": "5792:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5792:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5784:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5784:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5882:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5895:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5895:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5906:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5906:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5891:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5891:3:11"
																		},
																		"nativeSrc": "5891:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5891:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISignsNFT_$1194_to_t_address_fromStack",
																	"nativeSrc": "5820:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "5820:61:11"
																},
																"nativeSrc": "5820:89:11",
																"nodeType": "YulFunctionCall",
																"src": "5820:89:11"
															},
															"nativeSrc": "5820:89:11",
															"nodeType": "YulExpressionStatement",
															"src": "5820:89:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISignsNFT_$1194__to_t_address__fromStack_reversed",
												"nativeSrc": "5658:258:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5746:9:11",
														"nodeType": "YulTypedName",
														"src": "5746:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5758:6:11",
														"nodeType": "YulTypedName",
														"src": "5758:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5769:4:11",
														"nodeType": "YulTypedName",
														"src": "5769:4:11",
														"type": ""
													}
												],
												"src": "5658:258:11"
											},
											{
												"body": {
													"nativeSrc": "5965:43:11",
													"nodeType": "YulBlock",
													"src": "5965:43:11",
													"statements": [
														{
															"nativeSrc": "5975:27:11",
															"nodeType": "YulAssignment",
															"src": "5975:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5990:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5990:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5997:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5997:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5986:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:11"
																},
																"nativeSrc": "5986:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5986:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5975:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5975:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5922:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5947:5:11",
														"nodeType": "YulTypedName",
														"src": "5947:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5957:7:11",
														"nodeType": "YulTypedName",
														"src": "5957:7:11",
														"type": ""
													}
												],
												"src": "5922:86:11"
											},
											{
												"body": {
													"nativeSrc": "6075:51:11",
													"nodeType": "YulBlock",
													"src": "6075:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6092:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6092:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6113:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6113:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6097:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "6097:15:11"
																		},
																		"nativeSrc": "6097:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6085:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:11"
																},
																"nativeSrc": "6085:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6085:35:11"
															},
															"nativeSrc": "6085:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "6085:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6014:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6063:5:11",
														"nodeType": "YulTypedName",
														"src": "6063:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6070:3:11",
														"nodeType": "YulTypedName",
														"src": "6070:3:11",
														"type": ""
													}
												],
												"src": "6014:112:11"
											},
											{
												"body": {
													"nativeSrc": "6226:120:11",
													"nodeType": "YulBlock",
													"src": "6226:120:11",
													"statements": [
														{
															"nativeSrc": "6236:26:11",
															"nodeType": "YulAssignment",
															"src": "6236:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6248:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6248:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6259:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6259:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6244:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6244:3:11"
																},
																"nativeSrc": "6244:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6244:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6236:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6236:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6312:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6325:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6325:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6336:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6336:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6321:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6321:3:11"
																		},
																		"nativeSrc": "6321:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6272:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "6272:39:11"
																},
																"nativeSrc": "6272:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6272:67:11"
															},
															"nativeSrc": "6272:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "6272:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6132:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6198:9:11",
														"nodeType": "YulTypedName",
														"src": "6198:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6210:6:11",
														"nodeType": "YulTypedName",
														"src": "6210:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6221:4:11",
														"nodeType": "YulTypedName",
														"src": "6221:4:11",
														"type": ""
													}
												],
												"src": "6132:214:11"
											},
											{
												"body": {
													"nativeSrc": "6435:391:11",
													"nodeType": "YulBlock",
													"src": "6435:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6481:83:11",
																"nodeType": "YulBlock",
																"src": "6481:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6483:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6483:77:11"
																			},
																			"nativeSrc": "6483:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6483:79:11"
																		},
																		"nativeSrc": "6483:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6483:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6456:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6456:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6465:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6465:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6452:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:11"
																		},
																		"nativeSrc": "6452:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6452:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6477:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6477:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6448:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:11"
																},
																"nativeSrc": "6448:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6448:32:11"
															},
															"nativeSrc": "6445:119:11",
															"nodeType": "YulIf",
															"src": "6445:119:11"
														},
														{
															"nativeSrc": "6574:117:11",
															"nodeType": "YulBlock",
															"src": "6574:117:11",
															"statements": [
																{
																	"nativeSrc": "6589:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6589:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6603:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6603:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6593:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6593:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6618:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6618:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6653:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6653:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6664:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6664:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6649:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6649:3:11"
																				},
																				"nativeSrc": "6649:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6649:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6673:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6673:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6628:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6628:20:11"
																		},
																		"nativeSrc": "6628:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6618:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6618:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6701:118:11",
															"nodeType": "YulBlock",
															"src": "6701:118:11",
															"statements": [
																{
																	"nativeSrc": "6716:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6716:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6730:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6730:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6720:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6720:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6746:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6746:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6781:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6781:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6792:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6792:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6777:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6777:3:11"
																				},
																				"nativeSrc": "6777:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6777:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6801:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6801:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6756:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6756:20:11"
																		},
																		"nativeSrc": "6756:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6746:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6746:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6352:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6397:9:11",
														"nodeType": "YulTypedName",
														"src": "6397:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6408:7:11",
														"nodeType": "YulTypedName",
														"src": "6408:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6420:6:11",
														"nodeType": "YulTypedName",
														"src": "6420:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6428:6:11",
														"nodeType": "YulTypedName",
														"src": "6428:6:11",
														"type": ""
													}
												],
												"src": "6352:474:11"
											},
											{
												"body": {
													"nativeSrc": "6897:53:11",
													"nodeType": "YulBlock",
													"src": "6897:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6914:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6914:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6937:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6937:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6919:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6919:17:11"
																		},
																		"nativeSrc": "6919:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6919:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6907:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6907:6:11"
																},
																"nativeSrc": "6907:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6907:37:11"
															},
															"nativeSrc": "6907:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6907:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6832:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6885:5:11",
														"nodeType": "YulTypedName",
														"src": "6885:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6892:3:11",
														"nodeType": "YulTypedName",
														"src": "6892:3:11",
														"type": ""
													}
												],
												"src": "6832:118:11"
											},
											{
												"body": {
													"nativeSrc": "7054:124:11",
													"nodeType": "YulBlock",
													"src": "7054:124:11",
													"statements": [
														{
															"nativeSrc": "7064:26:11",
															"nodeType": "YulAssignment",
															"src": "7064:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7076:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7076:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7087:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7087:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7072:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:11"
																},
																"nativeSrc": "7072:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7072:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7064:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7064:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7144:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7144:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7157:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7157:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7168:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7168:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7153:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:11"
																		},
																		"nativeSrc": "7153:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7100:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7100:43:11"
																},
																"nativeSrc": "7100:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7100:71:11"
															},
															"nativeSrc": "7100:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7100:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6956:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7026:9:11",
														"nodeType": "YulTypedName",
														"src": "7026:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7038:6:11",
														"nodeType": "YulTypedName",
														"src": "7038:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7049:4:11",
														"nodeType": "YulTypedName",
														"src": "7049:4:11",
														"type": ""
													}
												],
												"src": "6956:222:11"
											},
											{
												"body": {
													"nativeSrc": "7250:263:11",
													"nodeType": "YulBlock",
													"src": "7250:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7296:83:11",
																"nodeType": "YulBlock",
																"src": "7296:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7298:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7298:77:11"
																			},
																			"nativeSrc": "7298:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7298:79:11"
																		},
																		"nativeSrc": "7298:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7298:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7271:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7271:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7280:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7280:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7267:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:11"
																		},
																		"nativeSrc": "7267:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7267:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7292:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7292:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7263:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7263:3:11"
																},
																"nativeSrc": "7263:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7263:32:11"
															},
															"nativeSrc": "7260:119:11",
															"nodeType": "YulIf",
															"src": "7260:119:11"
														},
														{
															"nativeSrc": "7389:117:11",
															"nodeType": "YulBlock",
															"src": "7389:117:11",
															"statements": [
																{
																	"nativeSrc": "7404:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7404:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7418:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7418:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7408:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7408:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7433:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7433:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7468:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7468:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7479:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7479:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7464:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7464:3:11"
																				},
																				"nativeSrc": "7464:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7464:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7488:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7488:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7443:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7443:20:11"
																		},
																		"nativeSrc": "7443:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7443:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7433:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7433:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7184:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7220:9:11",
														"nodeType": "YulTypedName",
														"src": "7220:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7231:7:11",
														"nodeType": "YulTypedName",
														"src": "7231:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7243:6:11",
														"nodeType": "YulTypedName",
														"src": "7243:6:11",
														"type": ""
													}
												],
												"src": "7184:329:11"
											},
											{
												"body": {
													"nativeSrc": "7602:391:11",
													"nodeType": "YulBlock",
													"src": "7602:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7648:83:11",
																"nodeType": "YulBlock",
																"src": "7648:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7650:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7650:77:11"
																			},
																			"nativeSrc": "7650:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7650:79:11"
																		},
																		"nativeSrc": "7650:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7650:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7623:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7623:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7632:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7619:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7619:3:11"
																		},
																		"nativeSrc": "7619:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7619:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7644:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7644:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7615:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:11"
																},
																"nativeSrc": "7615:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7615:32:11"
															},
															"nativeSrc": "7612:119:11",
															"nodeType": "YulIf",
															"src": "7612:119:11"
														},
														{
															"nativeSrc": "7741:117:11",
															"nodeType": "YulBlock",
															"src": "7741:117:11",
															"statements": [
																{
																	"nativeSrc": "7756:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7756:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7770:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7770:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7760:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7760:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7785:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7785:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7820:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7820:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7831:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7831:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7816:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7816:3:11"
																				},
																				"nativeSrc": "7816:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7816:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7840:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7840:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7795:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7795:20:11"
																		},
																		"nativeSrc": "7795:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7795:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7785:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7785:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7868:118:11",
															"nodeType": "YulBlock",
															"src": "7868:118:11",
															"statements": [
																{
																	"nativeSrc": "7883:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7883:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7897:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7897:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7887:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7887:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7913:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7913:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7948:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7948:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7959:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7959:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7944:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7944:3:11"
																				},
																				"nativeSrc": "7944:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7944:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7968:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7968:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7923:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7923:20:11"
																		},
																		"nativeSrc": "7923:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7923:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7913:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7913:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7519:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7564:9:11",
														"nodeType": "YulTypedName",
														"src": "7564:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7575:7:11",
														"nodeType": "YulTypedName",
														"src": "7575:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7587:6:11",
														"nodeType": "YulTypedName",
														"src": "7587:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7595:6:11",
														"nodeType": "YulTypedName",
														"src": "7595:6:11",
														"type": ""
													}
												],
												"src": "7519:474:11"
											},
											{
												"body": {
													"nativeSrc": "8099:519:11",
													"nodeType": "YulBlock",
													"src": "8099:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8145:83:11",
																"nodeType": "YulBlock",
																"src": "8145:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8147:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8147:77:11"
																			},
																			"nativeSrc": "8147:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8147:79:11"
																		},
																		"nativeSrc": "8147:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8147:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8120:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8120:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8129:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8129:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8116:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:11"
																		},
																		"nativeSrc": "8116:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8116:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8141:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8141:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8112:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8112:3:11"
																},
																"nativeSrc": "8112:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8112:32:11"
															},
															"nativeSrc": "8109:119:11",
															"nodeType": "YulIf",
															"src": "8109:119:11"
														},
														{
															"nativeSrc": "8238:117:11",
															"nodeType": "YulBlock",
															"src": "8238:117:11",
															"statements": [
																{
																	"nativeSrc": "8253:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8253:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8267:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8267:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8257:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8257:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8282:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8282:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8317:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8317:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8328:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8328:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8313:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8313:3:11"
																				},
																				"nativeSrc": "8313:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8313:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8337:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8337:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8292:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8292:20:11"
																		},
																		"nativeSrc": "8292:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8292:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8282:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8282:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8365:118:11",
															"nodeType": "YulBlock",
															"src": "8365:118:11",
															"statements": [
																{
																	"nativeSrc": "8380:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8380:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8394:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8394:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8384:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8384:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8410:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8410:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8445:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8445:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8456:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8456:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8441:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8441:3:11"
																				},
																				"nativeSrc": "8441:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8441:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8465:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8465:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8420:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8420:20:11"
																		},
																		"nativeSrc": "8420:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8420:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8410:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8410:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8493:118:11",
															"nodeType": "YulBlock",
															"src": "8493:118:11",
															"statements": [
																{
																	"nativeSrc": "8508:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8508:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8522:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8522:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8512:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8512:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8538:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8538:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8573:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8573:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8584:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8584:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8569:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8569:3:11"
																				},
																				"nativeSrc": "8569:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8569:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8593:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8593:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8548:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8548:20:11"
																		},
																		"nativeSrc": "8548:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8548:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8538:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8538:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "7999:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8053:9:11",
														"nodeType": "YulTypedName",
														"src": "8053:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8064:7:11",
														"nodeType": "YulTypedName",
														"src": "8064:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8076:6:11",
														"nodeType": "YulTypedName",
														"src": "8076:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8084:6:11",
														"nodeType": "YulTypedName",
														"src": "8084:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8092:6:11",
														"nodeType": "YulTypedName",
														"src": "8092:6:11",
														"type": ""
													}
												],
												"src": "7999:619:11"
											},
											{
												"body": {
													"nativeSrc": "8679:53:11",
													"nodeType": "YulBlock",
													"src": "8679:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8696:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8696:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8719:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8719:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8701:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "8701:17:11"
																		},
																		"nativeSrc": "8701:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8701:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8689:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8689:6:11"
																},
																"nativeSrc": "8689:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8689:37:11"
															},
															"nativeSrc": "8689:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "8689:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "8624:108:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8667:5:11",
														"nodeType": "YulTypedName",
														"src": "8667:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8674:3:11",
														"nodeType": "YulTypedName",
														"src": "8674:3:11",
														"type": ""
													}
												],
												"src": "8624:108:11"
											},
											{
												"body": {
													"nativeSrc": "8787:50:11",
													"nodeType": "YulBlock",
													"src": "8787:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8804:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8804:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8824:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8824:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "8809:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "8809:14:11"
																		},
																		"nativeSrc": "8809:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8809:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8797:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:11"
																},
																"nativeSrc": "8797:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8797:34:11"
															},
															"nativeSrc": "8797:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "8797:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "8738:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8775:5:11",
														"nodeType": "YulTypedName",
														"src": "8775:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8782:3:11",
														"nodeType": "YulTypedName",
														"src": "8782:3:11",
														"type": ""
													}
												],
												"src": "8738:99:11"
											},
											{
												"body": {
													"nativeSrc": "9059:586:11",
													"nodeType": "YulBlock",
													"src": "9059:586:11",
													"statements": [
														{
															"nativeSrc": "9069:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9069:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9085:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9085:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9090:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9090:4:11",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9081:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9081:3:11"
																},
																"nativeSrc": "9081:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9081:14:11"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "9073:4:11",
																	"nodeType": "YulTypedName",
																	"src": "9073:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9105:170:11",
															"nodeType": "YulBlock",
															"src": "9105:170:11",
															"statements": [
																{
																	"nativeSrc": "9146:43:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9146:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9176:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9176:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9183:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9183:4:11",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9172:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9172:3:11"
																				},
																				"nativeSrc": "9172:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9172:16:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9166:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "9166:5:11"
																		},
																		"nativeSrc": "9166:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9166:23:11"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9150:12:11",
																			"nodeType": "YulTypedName",
																			"src": "9150:12:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9236:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "9236:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9254:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9259:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9259:4:11",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9250:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9250:3:11"
																				},
																				"nativeSrc": "9250:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9250:14:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9202:33:11",
																			"nodeType": "YulIdentifier",
																			"src": "9202:33:11"
																		},
																		"nativeSrc": "9202:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9202:63:11"
																	},
																	"nativeSrc": "9202:63:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "9202:63:11"
																}
															]
														},
														{
															"nativeSrc": "9285:173:11",
															"nodeType": "YulBlock",
															"src": "9285:173:11",
															"statements": [
																{
																	"nativeSrc": "9329:43:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9329:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9359:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9359:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9366:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9366:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9355:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9355:3:11"
																				},
																				"nativeSrc": "9355:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9355:16:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9349:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "9349:5:11"
																		},
																		"nativeSrc": "9349:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9349:23:11"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9333:12:11",
																			"nodeType": "YulTypedName",
																			"src": "9333:12:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9419:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "9419:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9437:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9437:3:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9442:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9442:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9433:3:11"
																				},
																				"nativeSrc": "9433:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9433:14:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9385:33:11",
																			"nodeType": "YulIdentifier",
																			"src": "9385:33:11"
																		},
																		"nativeSrc": "9385:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:63:11"
																	},
																	"nativeSrc": "9385:63:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "9385:63:11"
																}
															]
														},
														{
															"nativeSrc": "9468:170:11",
															"nodeType": "YulBlock",
															"src": "9468:170:11",
															"statements": [
																{
																	"nativeSrc": "9515:43:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9515:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9545:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9545:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9552:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9552:4:11",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9541:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9541:3:11"
																				},
																				"nativeSrc": "9541:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9541:16:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9535:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "9535:5:11"
																		},
																		"nativeSrc": "9535:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9535:23:11"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9519:12:11",
																			"nodeType": "YulTypedName",
																			"src": "9519:12:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9599:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "9599:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9617:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9617:3:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9622:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9622:4:11",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9613:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9613:3:11"
																				},
																				"nativeSrc": "9613:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9613:14:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "9571:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "9571:27:11"
																		},
																		"nativeSrc": "9571:57:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9571:57:11"
																	},
																	"nativeSrc": "9571:57:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "9571:57:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_WagePaymentResult_$1480_memory_ptr_to_t_struct$_WagePaymentResult_$1480_memory_ptr_fromStack",
												"nativeSrc": "8923:722:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9046:5:11",
														"nodeType": "YulTypedName",
														"src": "9046:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9053:3:11",
														"nodeType": "YulTypedName",
														"src": "9053:3:11",
														"type": ""
													}
												],
												"src": "8923:722:11"
											},
											{
												"body": {
													"nativeSrc": "9819:194:11",
													"nodeType": "YulBlock",
													"src": "9819:194:11",
													"statements": [
														{
															"nativeSrc": "9829:26:11",
															"nodeType": "YulAssignment",
															"src": "9829:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9841:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9841:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9852:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9852:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9837:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:11"
																},
																"nativeSrc": "9837:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9837:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9829:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9829:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9979:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9979:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9992:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9992:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10003:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10003:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9988:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9988:3:11"
																		},
																		"nativeSrc": "9988:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9988:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_WagePaymentResult_$1480_memory_ptr_to_t_struct$_WagePaymentResult_$1480_memory_ptr_fromStack",
																	"nativeSrc": "9865:113:11",
																	"nodeType": "YulIdentifier",
																	"src": "9865:113:11"
																},
																"nativeSrc": "9865:141:11",
																"nodeType": "YulFunctionCall",
																"src": "9865:141:11"
															},
															"nativeSrc": "9865:141:11",
															"nodeType": "YulExpressionStatement",
															"src": "9865:141:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_WagePaymentResult_$1480_memory_ptr__to_t_struct$_WagePaymentResult_$1480_memory_ptr__fromStack_reversed",
												"nativeSrc": "9651:362:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9791:9:11",
														"nodeType": "YulTypedName",
														"src": "9791:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9803:6:11",
														"nodeType": "YulTypedName",
														"src": "9803:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9814:4:11",
														"nodeType": "YulTypedName",
														"src": "9814:4:11",
														"type": ""
													}
												],
												"src": "9651:362:11"
											},
											{
												"body": {
													"nativeSrc": "10047:152:11",
													"nodeType": "YulBlock",
													"src": "10047:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10064:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10064:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10067:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10067:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10057:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10057:6:11"
																},
																"nativeSrc": "10057:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10057:88:11"
															},
															"nativeSrc": "10057:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10057:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10161:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10161:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10164:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10164:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10154:6:11"
																},
																"nativeSrc": "10154:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10154:15:11"
															},
															"nativeSrc": "10154:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10154:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10185:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10185:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10188:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10188:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10178:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10178:6:11"
																},
																"nativeSrc": "10178:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10178:15:11"
															},
															"nativeSrc": "10178:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10178:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10019:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10019:180:11"
											},
											{
												"body": {
													"nativeSrc": "10256:269:11",
													"nodeType": "YulBlock",
													"src": "10256:269:11",
													"statements": [
														{
															"nativeSrc": "10266:22:11",
															"nodeType": "YulAssignment",
															"src": "10266:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10280:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10280:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10286:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10276:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10276:3:11"
																},
																"nativeSrc": "10276:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10276:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10266:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10266:6:11"
																}
															]
														},
														{
															"nativeSrc": "10297:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10297:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10327:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10327:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10333:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10333:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10323:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10323:3:11"
																},
																"nativeSrc": "10323:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10323:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10301:18:11",
																	"nodeType": "YulTypedName",
																	"src": "10301:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10374:51:11",
																"nodeType": "YulBlock",
																"src": "10374:51:11",
																"statements": [
																	{
																		"nativeSrc": "10388:27:11",
																		"nodeType": "YulAssignment",
																		"src": "10388:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10402:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10402:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10410:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10410:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10398:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10398:3:11"
																			},
																			"nativeSrc": "10398:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10398:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10388:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10388:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10354:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10354:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10347:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:11"
																},
																"nativeSrc": "10347:26:11",
																"nodeType": "YulFunctionCall",
																"src": "10347:26:11"
															},
															"nativeSrc": "10344:81:11",
															"nodeType": "YulIf",
															"src": "10344:81:11"
														},
														{
															"body": {
																"nativeSrc": "10477:42:11",
																"nodeType": "YulBlock",
																"src": "10477:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10491:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10491:16:11"
																			},
																			"nativeSrc": "10491:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10491:18:11"
																		},
																		"nativeSrc": "10491:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10491:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10441:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10441:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10464:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10464:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10472:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10472:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10461:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10461:2:11"
																		},
																		"nativeSrc": "10461:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10461:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10438:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10438:2:11"
																},
																"nativeSrc": "10438:38:11",
																"nodeType": "YulFunctionCall",
																"src": "10438:38:11"
															},
															"nativeSrc": "10435:84:11",
															"nodeType": "YulIf",
															"src": "10435:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10205:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10240:4:11",
														"nodeType": "YulTypedName",
														"src": "10240:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10249:6:11",
														"nodeType": "YulTypedName",
														"src": "10249:6:11",
														"type": ""
													}
												],
												"src": "10205:320:11"
											},
											{
												"body": {
													"nativeSrc": "10637:65:11",
													"nodeType": "YulBlock",
													"src": "10637:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10659:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10659:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10667:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10667:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10655:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10655:3:11"
																		},
																		"nativeSrc": "10655:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10655:14:11"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "10671:23:11",
																		"nodeType": "YulLiteral",
																		"src": "10671:23:11",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10648:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10648:6:11"
																},
																"nativeSrc": "10648:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10648:47:11"
															},
															"nativeSrc": "10648:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10648:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "10531:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10629:6:11",
														"nodeType": "YulTypedName",
														"src": "10629:6:11",
														"type": ""
													}
												],
												"src": "10531:171:11"
											},
											{
												"body": {
													"nativeSrc": "10854:220:11",
													"nodeType": "YulBlock",
													"src": "10854:220:11",
													"statements": [
														{
															"nativeSrc": "10864:74:11",
															"nodeType": "YulAssignment",
															"src": "10864:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10930:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10930:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10935:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10935:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10871:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10871:58:11"
																},
																"nativeSrc": "10871:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10871:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10864:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10864:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11036:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11036:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "10947:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10947:88:11"
																},
																"nativeSrc": "10947:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10947:93:11"
															},
															"nativeSrc": "10947:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10947:93:11"
														},
														{
															"nativeSrc": "11049:19:11",
															"nodeType": "YulAssignment",
															"src": "11049:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11060:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11060:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11056:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11056:3:11"
																},
																"nativeSrc": "11056:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11056:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11049:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11049:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10708:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10842:3:11",
														"nodeType": "YulTypedName",
														"src": "10842:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10850:3:11",
														"nodeType": "YulTypedName",
														"src": "10850:3:11",
														"type": ""
													}
												],
												"src": "10708:366:11"
											},
											{
												"body": {
													"nativeSrc": "11251:248:11",
													"nodeType": "YulBlock",
													"src": "11251:248:11",
													"statements": [
														{
															"nativeSrc": "11261:26:11",
															"nodeType": "YulAssignment",
															"src": "11261:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11273:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11273:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11284:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11284:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11269:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11269:3:11"
																},
																"nativeSrc": "11269:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11269:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11261:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11261:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11308:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11308:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11319:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11319:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11304:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11304:3:11"
																		},
																		"nativeSrc": "11304:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11304:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11327:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11327:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11333:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11333:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11323:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11323:3:11"
																		},
																		"nativeSrc": "11323:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11323:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11297:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11297:6:11"
																},
																"nativeSrc": "11297:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11297:47:11"
															},
															"nativeSrc": "11297:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11297:47:11"
														},
														{
															"nativeSrc": "11353:139:11",
															"nodeType": "YulAssignment",
															"src": "11353:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11487:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11487:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11361:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11361:124:11"
																},
																"nativeSrc": "11361:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11361:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11353:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11353:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11080:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11231:9:11",
														"nodeType": "YulTypedName",
														"src": "11231:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11246:4:11",
														"nodeType": "YulTypedName",
														"src": "11246:4:11",
														"type": ""
													}
												],
												"src": "11080:419:11"
											},
											{
												"body": {
													"nativeSrc": "11533:152:11",
													"nodeType": "YulBlock",
													"src": "11533:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11550:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11550:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11553:77:11",
																		"nodeType": "YulLiteral",
																		"src": "11553:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11543:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11543:6:11"
																},
																"nativeSrc": "11543:88:11",
																"nodeType": "YulFunctionCall",
																"src": "11543:88:11"
															},
															"nativeSrc": "11543:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "11543:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11647:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11647:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11650:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11650:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11640:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11640:6:11"
																},
																"nativeSrc": "11640:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11640:15:11"
															},
															"nativeSrc": "11640:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11640:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11671:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11671:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11674:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11674:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11664:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11664:6:11"
																},
																"nativeSrc": "11664:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11664:15:11"
															},
															"nativeSrc": "11664:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11664:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11505:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11505:180:11"
											},
											{
												"body": {
													"nativeSrc": "11735:147:11",
													"nodeType": "YulBlock",
													"src": "11735:147:11",
													"statements": [
														{
															"nativeSrc": "11745:25:11",
															"nodeType": "YulAssignment",
															"src": "11745:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11768:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11768:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11750:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11750:17:11"
																},
																"nativeSrc": "11750:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11750:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11745:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11745:1:11"
																}
															]
														},
														{
															"nativeSrc": "11779:25:11",
															"nodeType": "YulAssignment",
															"src": "11779:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11802:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11802:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11784:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11784:17:11"
																},
																"nativeSrc": "11784:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11784:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11779:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11779:1:11"
																}
															]
														},
														{
															"nativeSrc": "11813:16:11",
															"nodeType": "YulAssignment",
															"src": "11813:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11824:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11824:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11827:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11827:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11820:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11820:3:11"
																},
																"nativeSrc": "11820:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11820:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11813:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11813:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11853:22:11",
																"nodeType": "YulBlock",
																"src": "11853:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11855:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11855:16:11"
																			},
																			"nativeSrc": "11855:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11855:18:11"
																		},
																		"nativeSrc": "11855:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11855:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11845:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11845:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11848:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11848:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11842:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11842:2:11"
																},
																"nativeSrc": "11842:10:11",
																"nodeType": "YulFunctionCall",
																"src": "11842:10:11"
															},
															"nativeSrc": "11839:36:11",
															"nodeType": "YulIf",
															"src": "11839:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11691:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11722:1:11",
														"nodeType": "YulTypedName",
														"src": "11722:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11725:1:11",
														"nodeType": "YulTypedName",
														"src": "11725:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11731:3:11",
														"nodeType": "YulTypedName",
														"src": "11731:3:11",
														"type": ""
													}
												],
												"src": "11691:191:11"
											},
											{
												"body": {
													"nativeSrc": "11933:149:11",
													"nodeType": "YulBlock",
													"src": "11933:149:11",
													"statements": [
														{
															"nativeSrc": "11943:25:11",
															"nodeType": "YulAssignment",
															"src": "11943:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11966:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11966:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11948:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11948:17:11"
																},
																"nativeSrc": "11948:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11948:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11943:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11943:1:11"
																}
															]
														},
														{
															"nativeSrc": "11977:25:11",
															"nodeType": "YulAssignment",
															"src": "11977:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12000:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12000:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11982:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11982:17:11"
																},
																"nativeSrc": "11982:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11982:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11977:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11977:1:11"
																}
															]
														},
														{
															"nativeSrc": "12011:17:11",
															"nodeType": "YulAssignment",
															"src": "12011:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12023:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12023:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12026:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12026:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12019:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12019:3:11"
																},
																"nativeSrc": "12019:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12019:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12011:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12011:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12053:22:11",
																"nodeType": "YulBlock",
																"src": "12053:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12055:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12055:16:11"
																			},
																			"nativeSrc": "12055:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12055:18:11"
																		},
																		"nativeSrc": "12055:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12055:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12044:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12044:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12050:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12050:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12041:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12041:2:11"
																},
																"nativeSrc": "12041:11:11",
																"nodeType": "YulFunctionCall",
																"src": "12041:11:11"
															},
															"nativeSrc": "12038:37:11",
															"nodeType": "YulIf",
															"src": "12038:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11888:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11919:1:11",
														"nodeType": "YulTypedName",
														"src": "11919:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11922:1:11",
														"nodeType": "YulTypedName",
														"src": "11922:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11928:4:11",
														"nodeType": "YulTypedName",
														"src": "11928:4:11",
														"type": ""
													}
												],
												"src": "11888:194:11"
											},
											{
												"body": {
													"nativeSrc": "12194:59:11",
													"nodeType": "YulBlock",
													"src": "12194:59:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12216:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12216:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12224:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12224:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12212:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12212:3:11"
																		},
																		"nativeSrc": "12212:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12212:14:11"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "12228:17:11",
																		"nodeType": "YulLiteral",
																		"src": "12228:17:11",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12205:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12205:6:11"
																},
																"nativeSrc": "12205:41:11",
																"nodeType": "YulFunctionCall",
																"src": "12205:41:11"
															},
															"nativeSrc": "12205:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "12205:41:11"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "12088:165:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12186:6:11",
														"nodeType": "YulTypedName",
														"src": "12186:6:11",
														"type": ""
													}
												],
												"src": "12088:165:11"
											},
											{
												"body": {
													"nativeSrc": "12405:220:11",
													"nodeType": "YulBlock",
													"src": "12405:220:11",
													"statements": [
														{
															"nativeSrc": "12415:74:11",
															"nodeType": "YulAssignment",
															"src": "12415:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12481:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12481:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12486:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12486:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12422:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12422:58:11"
																},
																"nativeSrc": "12422:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12422:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12415:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12415:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12587:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12587:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "12498:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12498:88:11"
																},
																"nativeSrc": "12498:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12498:93:11"
															},
															"nativeSrc": "12498:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12498:93:11"
														},
														{
															"nativeSrc": "12600:19:11",
															"nodeType": "YulAssignment",
															"src": "12600:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12611:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12611:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12616:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12616:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12607:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12607:3:11"
																},
																"nativeSrc": "12607:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12607:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12600:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12600:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12259:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12393:3:11",
														"nodeType": "YulTypedName",
														"src": "12393:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12401:3:11",
														"nodeType": "YulTypedName",
														"src": "12401:3:11",
														"type": ""
													}
												],
												"src": "12259:366:11"
											},
											{
												"body": {
													"nativeSrc": "12802:248:11",
													"nodeType": "YulBlock",
													"src": "12802:248:11",
													"statements": [
														{
															"nativeSrc": "12812:26:11",
															"nodeType": "YulAssignment",
															"src": "12812:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12824:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12824:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12835:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12835:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12820:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12820:3:11"
																},
																"nativeSrc": "12820:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12820:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12812:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12812:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12859:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12859:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12870:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12870:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12855:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12855:3:11"
																		},
																		"nativeSrc": "12855:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12855:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12878:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12878:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12884:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12884:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12874:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12874:3:11"
																		},
																		"nativeSrc": "12874:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12874:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12848:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12848:6:11"
																},
																"nativeSrc": "12848:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12848:47:11"
															},
															"nativeSrc": "12848:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12848:47:11"
														},
														{
															"nativeSrc": "12904:139:11",
															"nodeType": "YulAssignment",
															"src": "12904:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13038:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13038:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12912:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12912:124:11"
																},
																"nativeSrc": "12912:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12912:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12904:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12904:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12631:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12782:9:11",
														"nodeType": "YulTypedName",
														"src": "12782:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12797:4:11",
														"nodeType": "YulTypedName",
														"src": "12797:4:11",
														"type": ""
													}
												],
												"src": "12631:419:11"
											},
											{
												"body": {
													"nativeSrc": "13104:362:11",
													"nodeType": "YulBlock",
													"src": "13104:362:11",
													"statements": [
														{
															"nativeSrc": "13114:25:11",
															"nodeType": "YulAssignment",
															"src": "13114:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13137:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13137:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13119:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13119:17:11"
																},
																"nativeSrc": "13119:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13119:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13114:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13114:1:11"
																}
															]
														},
														{
															"nativeSrc": "13148:25:11",
															"nodeType": "YulAssignment",
															"src": "13148:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13171:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13171:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13153:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13153:17:11"
																},
																"nativeSrc": "13153:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13153:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13148:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13148:1:11"
																}
															]
														},
														{
															"nativeSrc": "13182:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13182:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13205:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13205:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13208:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13208:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13201:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13201:3:11"
																},
																"nativeSrc": "13201:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13201:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13186:11:11",
																	"nodeType": "YulTypedName",
																	"src": "13186:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13219:41:11",
															"nodeType": "YulAssignment",
															"src": "13219:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13248:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "13248:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13230:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13230:17:11"
																},
																"nativeSrc": "13230:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13230:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13219:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "13219:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13437:22:11",
																"nodeType": "YulBlock",
																"src": "13437:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13439:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13439:16:11"
																			},
																			"nativeSrc": "13439:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13439:18:11"
																		},
																		"nativeSrc": "13439:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13439:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13370:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13370:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13363:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "13363:6:11"
																				},
																				"nativeSrc": "13363:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13363:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13393:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13393:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13400:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "13400:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13409:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "13409:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13396:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "13396:3:11"
																						},
																						"nativeSrc": "13396:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "13396:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13390:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "13390:2:11"
																				},
																				"nativeSrc": "13390:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13390:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13343:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13343:2:11"
																		},
																		"nativeSrc": "13343:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13343:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13323:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13323:6:11"
																},
																"nativeSrc": "13323:113:11",
																"nodeType": "YulFunctionCall",
																"src": "13323:113:11"
															},
															"nativeSrc": "13320:139:11",
															"nodeType": "YulIf",
															"src": "13320:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13056:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13087:1:11",
														"nodeType": "YulTypedName",
														"src": "13087:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13090:1:11",
														"nodeType": "YulTypedName",
														"src": "13090:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13096:7:11",
														"nodeType": "YulTypedName",
														"src": "13096:7:11",
														"type": ""
													}
												],
												"src": "13056:410:11"
											},
											{
												"body": {
													"nativeSrc": "13500:152:11",
													"nodeType": "YulBlock",
													"src": "13500:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13517:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13517:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13520:77:11",
																		"nodeType": "YulLiteral",
																		"src": "13520:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13510:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13510:6:11"
																},
																"nativeSrc": "13510:88:11",
																"nodeType": "YulFunctionCall",
																"src": "13510:88:11"
															},
															"nativeSrc": "13510:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "13510:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13614:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13614:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13617:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13617:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13607:6:11"
																},
																"nativeSrc": "13607:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13607:15:11"
															},
															"nativeSrc": "13607:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13607:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13638:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13638:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13641:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13641:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13631:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13631:6:11"
																},
																"nativeSrc": "13631:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13631:15:11"
															},
															"nativeSrc": "13631:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13631:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13472:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13472:180:11"
											},
											{
												"body": {
													"nativeSrc": "13700:143:11",
													"nodeType": "YulBlock",
													"src": "13700:143:11",
													"statements": [
														{
															"nativeSrc": "13710:25:11",
															"nodeType": "YulAssignment",
															"src": "13710:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13733:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13733:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13715:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13715:17:11"
																},
																"nativeSrc": "13715:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13715:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13710:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13710:1:11"
																}
															]
														},
														{
															"nativeSrc": "13744:25:11",
															"nodeType": "YulAssignment",
															"src": "13744:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13767:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13767:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13749:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13749:17:11"
																},
																"nativeSrc": "13749:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13749:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13744:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13744:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13791:22:11",
																"nodeType": "YulBlock",
																"src": "13791:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13793:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13793:16:11"
																			},
																			"nativeSrc": "13793:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13793:18:11"
																		},
																		"nativeSrc": "13793:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13793:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13788:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13788:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13781:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13781:6:11"
																},
																"nativeSrc": "13781:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13781:9:11"
															},
															"nativeSrc": "13778:35:11",
															"nodeType": "YulIf",
															"src": "13778:35:11"
														},
														{
															"nativeSrc": "13823:14:11",
															"nodeType": "YulAssignment",
															"src": "13823:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13832:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13832:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13835:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13835:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13828:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13828:3:11"
																},
																"nativeSrc": "13828:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13828:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13823:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13823:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13658:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13689:1:11",
														"nodeType": "YulTypedName",
														"src": "13689:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13692:1:11",
														"nodeType": "YulTypedName",
														"src": "13692:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13698:1:11",
														"nodeType": "YulTypedName",
														"src": "13698:1:11",
														"type": ""
													}
												],
												"src": "13658:185:11"
											},
											{
												"body": {
													"nativeSrc": "13955:70:11",
													"nodeType": "YulBlock",
													"src": "13955:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13977:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13977:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13985:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13985:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13973:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13973:3:11"
																		},
																		"nativeSrc": "13973:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13973:14:11"
																	},
																	{
																		"hexValue": "436f6d6d697373696f6e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13989:28:11",
																		"nodeType": "YulLiteral",
																		"src": "13989:28:11",
																		"type": "",
																		"value": "Commission transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13966:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13966:6:11"
																},
																"nativeSrc": "13966:52:11",
																"nodeType": "YulFunctionCall",
																"src": "13966:52:11"
															},
															"nativeSrc": "13966:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "13966:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
												"nativeSrc": "13849:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13947:6:11",
														"nodeType": "YulTypedName",
														"src": "13947:6:11",
														"type": ""
													}
												],
												"src": "13849:176:11"
											},
											{
												"body": {
													"nativeSrc": "14177:220:11",
													"nodeType": "YulBlock",
													"src": "14177:220:11",
													"statements": [
														{
															"nativeSrc": "14187:74:11",
															"nodeType": "YulAssignment",
															"src": "14187:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14253:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14253:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14258:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14258:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14194:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14194:58:11"
																},
																"nativeSrc": "14194:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14194:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14187:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14187:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14359:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14359:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																	"nativeSrc": "14270:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14270:88:11"
																},
																"nativeSrc": "14270:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14270:93:11"
															},
															"nativeSrc": "14270:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14270:93:11"
														},
														{
															"nativeSrc": "14372:19:11",
															"nodeType": "YulAssignment",
															"src": "14372:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14383:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14383:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14388:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14388:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14379:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14379:3:11"
																},
																"nativeSrc": "14379:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14379:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14372:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14372:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14031:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14165:3:11",
														"nodeType": "YulTypedName",
														"src": "14165:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14173:3:11",
														"nodeType": "YulTypedName",
														"src": "14173:3:11",
														"type": ""
													}
												],
												"src": "14031:366:11"
											},
											{
												"body": {
													"nativeSrc": "14574:248:11",
													"nodeType": "YulBlock",
													"src": "14574:248:11",
													"statements": [
														{
															"nativeSrc": "14584:26:11",
															"nodeType": "YulAssignment",
															"src": "14584:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14596:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14596:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14607:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14607:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14592:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14592:3:11"
																},
																"nativeSrc": "14592:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14592:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14584:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14584:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14631:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14631:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14642:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14642:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14627:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14627:3:11"
																		},
																		"nativeSrc": "14627:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14627:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14650:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14650:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14656:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14656:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14646:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14646:3:11"
																		},
																		"nativeSrc": "14646:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14646:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14620:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14620:6:11"
																},
																"nativeSrc": "14620:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14620:47:11"
															},
															"nativeSrc": "14620:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14620:47:11"
														},
														{
															"nativeSrc": "14676:139:11",
															"nodeType": "YulAssignment",
															"src": "14676:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14810:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14810:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14684:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14684:124:11"
																},
																"nativeSrc": "14684:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14684:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14676:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14676:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14403:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14554:9:11",
														"nodeType": "YulTypedName",
														"src": "14554:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14569:4:11",
														"nodeType": "YulTypedName",
														"src": "14569:4:11",
														"type": ""
													}
												],
												"src": "14403:419:11"
											},
											{
												"body": {
													"nativeSrc": "14934:64:11",
													"nodeType": "YulBlock",
													"src": "14934:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14956:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14956:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14964:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14964:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14952:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14952:3:11"
																		},
																		"nativeSrc": "14952:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14952:14:11"
																	},
																	{
																		"hexValue": "57616765207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14968:22:11",
																		"nodeType": "YulLiteral",
																		"src": "14968:22:11",
																		"type": "",
																		"value": "Wage transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14945:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14945:6:11"
																},
																"nativeSrc": "14945:46:11",
																"nodeType": "YulFunctionCall",
																"src": "14945:46:11"
															},
															"nativeSrc": "14945:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "14945:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
												"nativeSrc": "14828:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14926:6:11",
														"nodeType": "YulTypedName",
														"src": "14926:6:11",
														"type": ""
													}
												],
												"src": "14828:170:11"
											},
											{
												"body": {
													"nativeSrc": "15150:220:11",
													"nodeType": "YulBlock",
													"src": "15150:220:11",
													"statements": [
														{
															"nativeSrc": "15160:74:11",
															"nodeType": "YulAssignment",
															"src": "15160:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15226:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15226:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15231:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15231:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15167:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15167:58:11"
																},
																"nativeSrc": "15167:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15167:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15160:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15160:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15332:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15332:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
																	"nativeSrc": "15243:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15243:88:11"
																},
																"nativeSrc": "15243:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15243:93:11"
															},
															"nativeSrc": "15243:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15243:93:11"
														},
														{
															"nativeSrc": "15345:19:11",
															"nodeType": "YulAssignment",
															"src": "15345:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15356:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15356:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15361:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15361:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15352:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15352:3:11"
																},
																"nativeSrc": "15352:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15352:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15345:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15345:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15004:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15138:3:11",
														"nodeType": "YulTypedName",
														"src": "15138:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15146:3:11",
														"nodeType": "YulTypedName",
														"src": "15146:3:11",
														"type": ""
													}
												],
												"src": "15004:366:11"
											},
											{
												"body": {
													"nativeSrc": "15547:248:11",
													"nodeType": "YulBlock",
													"src": "15547:248:11",
													"statements": [
														{
															"nativeSrc": "15557:26:11",
															"nodeType": "YulAssignment",
															"src": "15557:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15569:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15569:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15580:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15580:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15565:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15565:3:11"
																},
																"nativeSrc": "15565:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15565:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15557:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15557:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15604:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15604:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15615:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15615:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:11"
																		},
																		"nativeSrc": "15600:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15623:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15623:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15629:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15629:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15619:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15619:3:11"
																		},
																		"nativeSrc": "15619:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15619:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:11"
																},
																"nativeSrc": "15593:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15593:47:11"
															},
															"nativeSrc": "15593:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15593:47:11"
														},
														{
															"nativeSrc": "15649:139:11",
															"nodeType": "YulAssignment",
															"src": "15649:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15783:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15783:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15657:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15657:124:11"
																},
																"nativeSrc": "15657:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15657:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15649:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15649:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15376:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15527:9:11",
														"nodeType": "YulTypedName",
														"src": "15527:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15542:4:11",
														"nodeType": "YulTypedName",
														"src": "15542:4:11",
														"type": ""
													}
												],
												"src": "15376:419:11"
											},
											{
												"body": {
													"nativeSrc": "15907:72:11",
													"nodeType": "YulBlock",
													"src": "15907:72:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15929:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15929:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15937:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15937:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15925:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15925:3:11"
																		},
																		"nativeSrc": "15925:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15925:14:11"
																	},
																	{
																		"hexValue": "5061727469616c2077616765207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15941:30:11",
																		"nodeType": "YulLiteral",
																		"src": "15941:30:11",
																		"type": "",
																		"value": "Partial wage transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15918:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15918:6:11"
																},
																"nativeSrc": "15918:54:11",
																"nodeType": "YulFunctionCall",
																"src": "15918:54:11"
															},
															"nativeSrc": "15918:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "15918:54:11"
														}
													]
												},
												"name": "store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
												"nativeSrc": "15801:178:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15899:6:11",
														"nodeType": "YulTypedName",
														"src": "15899:6:11",
														"type": ""
													}
												],
												"src": "15801:178:11"
											},
											{
												"body": {
													"nativeSrc": "16131:220:11",
													"nodeType": "YulBlock",
													"src": "16131:220:11",
													"statements": [
														{
															"nativeSrc": "16141:74:11",
															"nodeType": "YulAssignment",
															"src": "16141:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16207:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16207:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16212:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16212:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16148:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16148:58:11"
																},
																"nativeSrc": "16148:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16148:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16141:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16141:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16313:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16313:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
																	"nativeSrc": "16224:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16224:88:11"
																},
																"nativeSrc": "16224:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16224:93:11"
															},
															"nativeSrc": "16224:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16224:93:11"
														},
														{
															"nativeSrc": "16326:19:11",
															"nodeType": "YulAssignment",
															"src": "16326:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16337:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16337:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16342:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16342:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16333:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16333:3:11"
																},
																"nativeSrc": "16333:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16333:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16326:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16326:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15985:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16119:3:11",
														"nodeType": "YulTypedName",
														"src": "16119:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16127:3:11",
														"nodeType": "YulTypedName",
														"src": "16127:3:11",
														"type": ""
													}
												],
												"src": "15985:366:11"
											},
											{
												"body": {
													"nativeSrc": "16528:248:11",
													"nodeType": "YulBlock",
													"src": "16528:248:11",
													"statements": [
														{
															"nativeSrc": "16538:26:11",
															"nodeType": "YulAssignment",
															"src": "16538:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16550:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16550:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16561:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16561:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16546:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16546:3:11"
																},
																"nativeSrc": "16546:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16546:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16538:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16538:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16585:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16585:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16596:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16596:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16581:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16581:3:11"
																		},
																		"nativeSrc": "16581:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16581:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16604:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16604:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16610:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16610:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16600:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16600:3:11"
																		},
																		"nativeSrc": "16600:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16600:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16574:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16574:6:11"
																},
																"nativeSrc": "16574:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16574:47:11"
															},
															"nativeSrc": "16574:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16574:47:11"
														},
														{
															"nativeSrc": "16630:139:11",
															"nodeType": "YulAssignment",
															"src": "16630:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16764:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16764:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16638:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16638:124:11"
																},
																"nativeSrc": "16638:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16638:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16630:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16630:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16357:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16508:9:11",
														"nodeType": "YulTypedName",
														"src": "16508:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16523:4:11",
														"nodeType": "YulTypedName",
														"src": "16523:4:11",
														"type": ""
													}
												],
												"src": "16357:419:11"
											},
											{
												"body": {
													"nativeSrc": "16888:60:11",
													"nodeType": "YulBlock",
													"src": "16888:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16910:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16910:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16918:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16918:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16906:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16906:3:11"
																		},
																		"nativeSrc": "16906:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16906:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "16922:18:11",
																		"nodeType": "YulLiteral",
																		"src": "16922:18:11",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16899:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16899:6:11"
																},
																"nativeSrc": "16899:42:11",
																"nodeType": "YulFunctionCall",
																"src": "16899:42:11"
															},
															"nativeSrc": "16899:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "16899:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "16782:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16880:6:11",
														"nodeType": "YulTypedName",
														"src": "16880:6:11",
														"type": ""
													}
												],
												"src": "16782:166:11"
											},
											{
												"body": {
													"nativeSrc": "17100:220:11",
													"nodeType": "YulBlock",
													"src": "17100:220:11",
													"statements": [
														{
															"nativeSrc": "17110:74:11",
															"nodeType": "YulAssignment",
															"src": "17110:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17176:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17176:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17181:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17181:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17117:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17117:58:11"
																},
																"nativeSrc": "17117:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17117:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17110:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17110:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17282:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17282:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "17193:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17193:88:11"
																},
																"nativeSrc": "17193:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17193:93:11"
															},
															"nativeSrc": "17193:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17193:93:11"
														},
														{
															"nativeSrc": "17295:19:11",
															"nodeType": "YulAssignment",
															"src": "17295:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17306:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17306:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17311:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17311:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17302:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17302:3:11"
																},
																"nativeSrc": "17302:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17302:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17295:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17295:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16954:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17088:3:11",
														"nodeType": "YulTypedName",
														"src": "17088:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17096:3:11",
														"nodeType": "YulTypedName",
														"src": "17096:3:11",
														"type": ""
													}
												],
												"src": "16954:366:11"
											},
											{
												"body": {
													"nativeSrc": "17497:248:11",
													"nodeType": "YulBlock",
													"src": "17497:248:11",
													"statements": [
														{
															"nativeSrc": "17507:26:11",
															"nodeType": "YulAssignment",
															"src": "17507:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17519:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17519:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17530:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17530:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17515:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17515:3:11"
																},
																"nativeSrc": "17515:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17515:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17507:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17507:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17554:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17554:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17565:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17565:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17550:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17550:3:11"
																		},
																		"nativeSrc": "17550:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17550:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17573:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17573:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17579:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17579:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17569:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17569:3:11"
																		},
																		"nativeSrc": "17569:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17569:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17543:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17543:6:11"
																},
																"nativeSrc": "17543:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17543:47:11"
															},
															"nativeSrc": "17543:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17543:47:11"
														},
														{
															"nativeSrc": "17599:139:11",
															"nodeType": "YulAssignment",
															"src": "17599:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17733:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17733:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17607:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17607:124:11"
																},
																"nativeSrc": "17607:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17607:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17599:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17599:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17326:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17477:9:11",
														"nodeType": "YulTypedName",
														"src": "17477:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17492:4:11",
														"nodeType": "YulTypedName",
														"src": "17492:4:11",
														"type": ""
													}
												],
												"src": "17326:419:11"
											},
											{
												"body": {
													"nativeSrc": "17857:75:11",
													"nodeType": "YulBlock",
													"src": "17857:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17879:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17879:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17887:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17887:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17875:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17875:3:11"
																		},
																		"nativeSrc": "17875:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17875:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "17891:33:11",
																		"nodeType": "YulLiteral",
																		"src": "17891:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17868:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17868:6:11"
																},
																"nativeSrc": "17868:57:11",
																"nodeType": "YulFunctionCall",
																"src": "17868:57:11"
															},
															"nativeSrc": "17868:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "17868:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "17751:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17849:6:11",
														"nodeType": "YulTypedName",
														"src": "17849:6:11",
														"type": ""
													}
												],
												"src": "17751:181:11"
											},
											{
												"body": {
													"nativeSrc": "18084:220:11",
													"nodeType": "YulBlock",
													"src": "18084:220:11",
													"statements": [
														{
															"nativeSrc": "18094:74:11",
															"nodeType": "YulAssignment",
															"src": "18094:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18160:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18160:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18165:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18165:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18101:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "18101:58:11"
																},
																"nativeSrc": "18101:67:11",
																"nodeType": "YulFunctionCall",
																"src": "18101:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18094:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18094:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18266:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18266:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "18177:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "18177:88:11"
																},
																"nativeSrc": "18177:93:11",
																"nodeType": "YulFunctionCall",
																"src": "18177:93:11"
															},
															"nativeSrc": "18177:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "18177:93:11"
														},
														{
															"nativeSrc": "18279:19:11",
															"nodeType": "YulAssignment",
															"src": "18279:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18290:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18290:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18295:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18295:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18286:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18286:3:11"
																},
																"nativeSrc": "18286:12:11",
																"nodeType": "YulFunctionCall",
																"src": "18286:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18279:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18279:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17938:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18072:3:11",
														"nodeType": "YulTypedName",
														"src": "18072:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18080:3:11",
														"nodeType": "YulTypedName",
														"src": "18080:3:11",
														"type": ""
													}
												],
												"src": "17938:366:11"
											},
											{
												"body": {
													"nativeSrc": "18481:248:11",
													"nodeType": "YulBlock",
													"src": "18481:248:11",
													"statements": [
														{
															"nativeSrc": "18491:26:11",
															"nodeType": "YulAssignment",
															"src": "18491:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18503:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18503:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18514:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18514:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18499:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18499:3:11"
																},
																"nativeSrc": "18499:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18499:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18491:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18491:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18538:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18538:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18549:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18549:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18534:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18534:3:11"
																		},
																		"nativeSrc": "18534:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18534:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18557:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18557:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18563:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18563:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18553:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18553:3:11"
																		},
																		"nativeSrc": "18553:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18553:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18527:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18527:6:11"
																},
																"nativeSrc": "18527:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18527:47:11"
															},
															"nativeSrc": "18527:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18527:47:11"
														},
														{
															"nativeSrc": "18583:139:11",
															"nodeType": "YulAssignment",
															"src": "18583:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18717:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18717:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18591:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18591:124:11"
																},
																"nativeSrc": "18591:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18591:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18583:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18583:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18310:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18461:9:11",
														"nodeType": "YulTypedName",
														"src": "18461:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18476:4:11",
														"nodeType": "YulTypedName",
														"src": "18476:4:11",
														"type": ""
													}
												],
												"src": "18310:419:11"
											},
											{
												"body": {
													"nativeSrc": "18889:288:11",
													"nodeType": "YulBlock",
													"src": "18889:288:11",
													"statements": [
														{
															"nativeSrc": "18899:26:11",
															"nodeType": "YulAssignment",
															"src": "18899:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18911:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18911:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18922:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18922:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18907:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18907:3:11"
																},
																"nativeSrc": "18907:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18907:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18899:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18899:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18979:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18979:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18992:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18992:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19003:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19003:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18988:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18988:3:11"
																		},
																		"nativeSrc": "18988:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18988:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18935:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18935:43:11"
																},
																"nativeSrc": "18935:71:11",
																"nodeType": "YulFunctionCall",
																"src": "18935:71:11"
															},
															"nativeSrc": "18935:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "18935:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19060:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19060:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19073:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19073:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19084:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19084:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19069:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19069:3:11"
																		},
																		"nativeSrc": "19069:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19069:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19016:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19016:43:11"
																},
																"nativeSrc": "19016:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19016:72:11"
															},
															"nativeSrc": "19016:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19016:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19142:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19142:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19155:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19155:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19166:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19166:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19151:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19151:3:11"
																		},
																		"nativeSrc": "19151:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19151:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19098:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19098:43:11"
																},
																"nativeSrc": "19098:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19098:72:11"
															},
															"nativeSrc": "19098:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19098:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18735:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18845:9:11",
														"nodeType": "YulTypedName",
														"src": "18845:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18857:6:11",
														"nodeType": "YulTypedName",
														"src": "18857:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18865:6:11",
														"nodeType": "YulTypedName",
														"src": "18865:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18873:6:11",
														"nodeType": "YulTypedName",
														"src": "18873:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18884:4:11",
														"nodeType": "YulTypedName",
														"src": "18884:4:11",
														"type": ""
													}
												],
												"src": "18735:442:11"
											},
											{
												"body": {
													"nativeSrc": "19289:64:11",
													"nodeType": "YulBlock",
													"src": "19289:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19311:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19311:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19319:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19319:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19307:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19307:3:11"
																		},
																		"nativeSrc": "19307:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19307:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "19323:22:11",
																		"nodeType": "YulLiteral",
																		"src": "19323:22:11",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19300:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19300:6:11"
																},
																"nativeSrc": "19300:46:11",
																"nodeType": "YulFunctionCall",
																"src": "19300:46:11"
															},
															"nativeSrc": "19300:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "19300:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "19183:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19281:6:11",
														"nodeType": "YulTypedName",
														"src": "19281:6:11",
														"type": ""
													}
												],
												"src": "19183:170:11"
											},
											{
												"body": {
													"nativeSrc": "19505:220:11",
													"nodeType": "YulBlock",
													"src": "19505:220:11",
													"statements": [
														{
															"nativeSrc": "19515:74:11",
															"nodeType": "YulAssignment",
															"src": "19515:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19581:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19581:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19586:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19586:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19522:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19522:58:11"
																},
																"nativeSrc": "19522:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19522:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19515:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19515:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19687:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19687:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "19598:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19598:88:11"
																},
																"nativeSrc": "19598:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19598:93:11"
															},
															"nativeSrc": "19598:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19598:93:11"
														},
														{
															"nativeSrc": "19700:19:11",
															"nodeType": "YulAssignment",
															"src": "19700:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19711:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19711:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19716:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19716:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19707:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19707:3:11"
																},
																"nativeSrc": "19707:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19707:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19700:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19700:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19359:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19493:3:11",
														"nodeType": "YulTypedName",
														"src": "19493:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19501:3:11",
														"nodeType": "YulTypedName",
														"src": "19501:3:11",
														"type": ""
													}
												],
												"src": "19359:366:11"
											},
											{
												"body": {
													"nativeSrc": "19902:248:11",
													"nodeType": "YulBlock",
													"src": "19902:248:11",
													"statements": [
														{
															"nativeSrc": "19912:26:11",
															"nodeType": "YulAssignment",
															"src": "19912:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19924:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19924:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19935:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19935:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19920:3:11"
																},
																"nativeSrc": "19920:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19920:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19912:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19912:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19959:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19959:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19970:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19970:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19955:3:11"
																		},
																		"nativeSrc": "19955:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19955:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19978:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19978:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19984:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19984:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19974:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19974:3:11"
																		},
																		"nativeSrc": "19974:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19974:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19948:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19948:6:11"
																},
																"nativeSrc": "19948:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19948:47:11"
															},
															"nativeSrc": "19948:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19948:47:11"
														},
														{
															"nativeSrc": "20004:139:11",
															"nodeType": "YulAssignment",
															"src": "20004:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20138:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "20138:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20012:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "20012:124:11"
																},
																"nativeSrc": "20012:131:11",
																"nodeType": "YulFunctionCall",
																"src": "20012:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20004:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20004:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19731:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19882:9:11",
														"nodeType": "YulTypedName",
														"src": "19882:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19897:4:11",
														"nodeType": "YulTypedName",
														"src": "19897:4:11",
														"type": ""
													}
												],
												"src": "19731:419:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISignsNFT_$1194_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISignsNFT_$1194_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISignsNFT_$1194_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISignsNFT_$1194__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISignsNFT_$1194_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct SignToken.WagePaymentResult -> struct SignToken.WagePaymentResult\n    function abi_encode_t_struct$_WagePaymentResult_$1480_memory_ptr_to_t_struct$_WagePaymentResult_$1480_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // paidAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // remainingWage\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // isPartialPayment\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_WagePaymentResult_$1480_memory_ptr__to_t_struct$_WagePaymentResult_$1480_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_WagePaymentResult_$1480_memory_ptr_to_t_struct$_WagePaymentResult_$1480_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Commission transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wage transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512(memPtr) {\n\n        mstore(add(memPtr, 0), \"Partial wage transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a7575f3560e01c806374612f19116100f7578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e14610484578063e95850df146104b4578063ef9ecc1d146104d2578063f2fde38b14610502576101a7565b8063a9059cbb14610408578063a9b493e014610438578063ca52548514610454576101a7565b80638da5cb5b116100d15780638da5cb5b1461039257806395d89b41146103b05780639d55fba7146103ce578063a3262ea2146103ea576101a7565b806374612f191461034e57806377d3550b1461036a5780638456cb5914610388576101a7565b80632fcdc5fd116101645780635c975abb1161013e5780635c975abb146102da5780635e182096146102f857806370a0823114610314578063715018a614610344576101a7565b80632fcdc5fd14610296578063313ce567146102b25780633f4ba83a146102d0576101a7565b806306fdde03146101ab578063095ea7b3146101c957806318160ddd146101f95780631ec48cf71461021757806323b872dd146102485780632a26c9cd14610278575b5f80fd5b6101b361051e565b6040516101c09190611bdc565b60405180910390f35b6101e360048036038101906101de9190611c8d565b6105ae565b6040516101f09190611ce5565b60405180910390f35b6102016105d0565b60405161020e9190611d0d565b60405180910390f35b610231600480360381019061022c9190611d26565b6105d9565b60405161023f929190611d51565b60405180910390f35b610262600480360381019061025d9190611d78565b6105f7565b60405161026f9190611ce5565b60405180910390f35b610280610614565b60405161028d9190611e23565b60405180910390f35b6102b060048036038101906102ab9190611d26565b610639565b005b6102ba610760565b6040516102c79190611e57565b60405180910390f35b6102d8610768565b005b6102e261077a565b6040516102ef9190611ce5565b60405180910390f35b610312600480360381019061030d9190611e70565b61078f565b005b61032e60048036038101906103299190611d26565b6108b7565b60405161033b9190611d0d565b60405180910390f35b61034c6108fc565b005b61036860048036038101906103639190611d26565b61090f565b005b6103726109f6565b60405161037f9190611d0d565b60405180910390f35b6103906109fc565b005b61039a610a0e565b6040516103a79190611ebd565b60405180910390f35b6103b8610a37565b6040516103c59190611bdc565b60405180910390f35b6103e860048036038101906103e39190611ed6565b610ac7565b005b6103f2610b4c565b6040516103ff9190611ebd565b60405180910390f35b610422600480360381019061041d9190611c8d565b610b71565b60405161042f9190611ce5565b60405180910390f35b610452600480360381019061044d9190611e70565b610b8c565b005b61046e60048036038101906104699190611ed6565b610d52565b60405161047b9190611d0d565b60405180910390f35b61049e60048036038101906104999190611f01565b610d67565b6040516104ab9190611d0d565b60405180910390f35b6104bc610de9565b6040516104c99190611ebd565b60405180910390f35b6104ec60048036038101906104e79190611f3f565b610e0e565b6040516104f99190611fed565b60405180910390f35b61051c60048036038101906105179190611d26565b6111ef565b005b60606003805461052d90612033565b80601f016020809104026020016040519081016040528092919081815260200182805461055990612033565b80156105a45780601f1061057b576101008083540402835291602001916105a4565b820191905f5260205f20905b81548152906001019060200180831161058757829003601f168201915b5050505050905090565b5f806105b8611273565b90506105c581858561127a565b600191505092915050565b5f600254905090565b5f806105e4836108b7565b6105ee8430610d67565b91509150915091565b5f61060061128c565b61060b8484846112d6565b90509392505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610641611304565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a6576040517ff8af67e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9816040516107559190611ebd565b60405180910390a150565b5f6012905090565b610770611304565b61077861138b565b565b5f60055f9054906101000a900460ff16905090565b6107976113ec565b61079f61128c565b5f81036107d8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3390505f61080860085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610b71565b90508061084a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610841906120ad565b60405180910390fd5b82600b5f8681526020019081526020015f205f82825461086a91906120f8565b92505081905550837f577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd846040516108a19190611d0d565b60405180910390a250506108b361143b565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610904611304565b61090d5f611445565b565b610917611304565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097c576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f816040516109eb9190611ebd565b60405180910390a150565b60095481565b610a04611304565b610a0c61150a565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a4690612033565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7290612033565b8015610abd5780601f10610a9457610100808354040283529160200191610abd565b820191905f5260205f20905b815481529060010190602001808311610aa057829003601f168201915b5050505050905090565b610acf611304565b612710811115610b0b576040517fdc81db8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806009819055507f13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e81604051610b419190611d0d565b60405180910390a150565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610b7a61128c565b610b84838361156c565b905092915050565b610b946113ec565b610b9c61128c565b610ba6338361158e565b610bdc576040517fde271cf500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610c15576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600b5f8481526020019081526020015f20541015610c60576040517fa77130ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600b5f8481526020019081526020015f205f828254610c80919061212b565b925050819055505f610cb460085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846105f7565b905080610cf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ced906121a8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16837f4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb84604051610d3d9190611d0d565b60405180910390a350610d4e61143b565b5050565b600b602052805f5260405f205f915090505481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e16611b4c565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9c576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ea46113ec565b610eac61128c565b5f8203610ee5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600b5f8681526020019081526020015f205490505f8382101590505f8082156110a75761271060095487610f1a91906121c6565b610f249190612234565b90508086610f32919061212b565b91508584610f40919061212b565b600b5f8a81526020019081526020015f20819055505f811115611005575f610f89600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610b71565b905080610fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc2906122ae565b60405180910390fd5b887facfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d527783604051610ffb9190611d0d565b60405180910390a2505b5f6110108884610b71565b905080611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990612316565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca856040516110999190611d0d565b60405180910390a3506111b1565b8391505f90505f600b5f8a81526020019081526020015f20819055505f821115611176575f6110d68884610b71565b905080611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f9061237e565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb524329085868b61115e919061212b565b60405161116c929190611d51565b60405180910390a3505b877f574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f85886040516111a8929190611d51565b60405180910390a25b604051806060016040528083815260200183886111ce919061212b565b8152602001841515158152509450505050506111e861143b565b9392505050565b6111f7611304565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611267575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161125e9190611ebd565b60405180910390fd5b61127081611445565b50565b5f33905090565b6112878383836001611599565b505050565b61129461077a565b156112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb906123e6565b60405180910390fd5b565b5f806112e0611273565b90506112ed858285611768565b6112f88585856117fa565b60019150509392505050565b61130c611273565b73ffffffffffffffffffffffffffffffffffffffff1661132a610a0e565b73ffffffffffffffffffffffffffffffffffffffff16146113895761134d611273565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113809190611ebd565b60405180910390fd5b565b6113936118ea565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113d5611273565b6040516113e29190611ebd565b60405180910390a1565b600260065403611431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114289061244e565b60405180910390fd5b6002600681905550565b6001600681905550565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61151261128c565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611555611273565b6040516115629190611ebd565b60405180910390a1565b5f80611576611273565b90506115838185856117fa565b600191505092915050565b5f6001905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611609575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116009190611ebd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611679575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116709190611ebd565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611762578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117599190611d0d565b60405180910390a35b50505050565b5f6117738484610d67565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117f457818110156117e5578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016117dc9392919061246c565b60405180910390fd5b6117f384848484035f611599565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361186a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118619190611ebd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118da575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118d19190611ebd565b60405180910390fd5b6118e5838383611933565b505050565b6118f261077a565b611931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611928906124eb565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611983578060025f82825461197791906120f8565b92505081905550611a51565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611a0c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a039392919061246c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a98578060025f8282540392505081905550611ae2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b3f9190611d0d565b60405180910390a3505050565b60405180606001604052805f81526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611bae82611b6c565b611bb88185611b76565b9350611bc8818560208601611b86565b611bd181611b94565b840191505092915050565b5f6020820190508181035f830152611bf48184611ba4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c2982611c00565b9050919050565b611c3981611c1f565b8114611c43575f80fd5b50565b5f81359050611c5481611c30565b92915050565b5f819050919050565b611c6c81611c5a565b8114611c76575f80fd5b50565b5f81359050611c8781611c63565b92915050565b5f8060408385031215611ca357611ca2611bfc565b5b5f611cb085828601611c46565b9250506020611cc185828601611c79565b9150509250929050565b5f8115159050919050565b611cdf81611ccb565b82525050565b5f602082019050611cf85f830184611cd6565b92915050565b611d0781611c5a565b82525050565b5f602082019050611d205f830184611cfe565b92915050565b5f60208284031215611d3b57611d3a611bfc565b5b5f611d4884828501611c46565b91505092915050565b5f604082019050611d645f830185611cfe565b611d716020830184611cfe565b9392505050565b5f805f60608486031215611d8f57611d8e611bfc565b5b5f611d9c86828701611c46565b9350506020611dad86828701611c46565b9250506040611dbe86828701611c79565b9150509250925092565b5f819050919050565b5f611deb611de6611de184611c00565b611dc8565b611c00565b9050919050565b5f611dfc82611dd1565b9050919050565b5f611e0d82611df2565b9050919050565b611e1d81611e03565b82525050565b5f602082019050611e365f830184611e14565b92915050565b5f60ff82169050919050565b611e5181611e3c565b82525050565b5f602082019050611e6a5f830184611e48565b92915050565b5f8060408385031215611e8657611e85611bfc565b5b5f611e9385828601611c79565b9250506020611ea485828601611c79565b9150509250929050565b611eb781611c1f565b82525050565b5f602082019050611ed05f830184611eae565b92915050565b5f60208284031215611eeb57611eea611bfc565b5b5f611ef884828501611c79565b91505092915050565b5f8060408385031215611f1757611f16611bfc565b5b5f611f2485828601611c46565b9250506020611f3585828601611c46565b9150509250929050565b5f805f60608486031215611f5657611f55611bfc565b5b5f611f6386828701611c79565b9350506020611f7486828701611c46565b9250506040611f8586828701611c79565b9150509250925092565b611f9881611c5a565b82525050565b611fa781611ccb565b82525050565b606082015f820151611fc15f850182611f8f565b506020820151611fd46020850182611f8f565b506040820151611fe76040850182611f9e565b50505050565b5f6060820190506120005f830184611fad565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061204a57607f821691505b60208210810361205d5761205c612006565b5b50919050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f612097601583611b76565b91506120a282612063565b602082019050919050565b5f6020820190508181035f8301526120c48161208b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61210282611c5a565b915061210d83611c5a565b9250828201905080821115612125576121246120cb565b5b92915050565b5f61213582611c5a565b915061214083611c5a565b9250828203905081811115612158576121576120cb565b5b92915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612192600f83611b76565b915061219d8261215e565b602082019050919050565b5f6020820190508181035f8301526121bf81612186565b9050919050565b5f6121d082611c5a565b91506121db83611c5a565b92508282026121e981611c5a565b91508282048414831517612200576121ff6120cb565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61223e82611c5a565b915061224983611c5a565b92508261225957612258612207565b5b828204905092915050565b7f436f6d6d697373696f6e207472616e73666572206661696c65640000000000005f82015250565b5f612298601a83611b76565b91506122a382612264565b602082019050919050565b5f6020820190508181035f8301526122c58161228c565b9050919050565b7f57616765207472616e73666572206661696c65640000000000000000000000005f82015250565b5f612300601483611b76565b915061230b826122cc565b602082019050919050565b5f6020820190508181035f83015261232d816122f4565b9050919050565b7f5061727469616c2077616765207472616e73666572206661696c6564000000005f82015250565b5f612368601c83611b76565b915061237382612334565b602082019050919050565b5f6020820190508181035f8301526123958161235c565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6123d0601083611b76565b91506123db8261239c565b602082019050919050565b5f6020820190508181035f8301526123fd816123c4565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612438601f83611b76565b915061244382612404565b602082019050919050565b5f6020820190508181035f8301526124658161242c565b9050919050565b5f60608201905061247f5f830186611eae565b61248c6020830185611cfe565b6124996040830184611cfe565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6124d5601483611b76565b91506124e0826124a1565b602082019050919050565b5f6020820190508181035f830152612502816124c9565b905091905056fea2646970667358221220df2eff5a9840d82dd398b182210a5bd3c4a6f4dfd04e5663678be715631bb64764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74612F19 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xE95850DF EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xEF9ECC1D EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x502 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA9B493E0 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xCA525485 EQ PUSH2 0x454 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x9D55FBA7 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xA3262EA2 EQ PUSH2 0x3EA JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x74612F19 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x77D3550B EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x388 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCDC5FD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x5E182096 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x344 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCDC5FD EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2D0 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1EC48CF7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x2A26C9CD EQ PUSH2 0x278 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP3 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x768 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x372 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH2 0x9FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39A PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x1BDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F2 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BC PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x559 SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x57B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x587 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B8 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C5 DUP2 DUP6 DUP6 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E4 DUP4 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x5EE DUP5 ADDRESS PUSH2 0xD67 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x600 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x60B DUP5 DUP5 DUP5 PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x641 PUSH2 0x1304 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8AF67E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF2610996D245D9B77E4FF84C2174EEA0B76FB44C422218404F66E28816D78FB9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x778 PUSH2 0x138B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x79F PUSH2 0x128C JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x808 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xB PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x577DFADB80AB9A5336C633F3FA5F59C296D18A29AA6AE9E4598762748E1F4AFD DUP5 PUSH1 0x40 MLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x8B3 PUSH2 0x143B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x904 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x90D PUSH0 PUSH2 0x1445 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x917 PUSH2 0x1304 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4422C0C4B301436298CCE7DE4B586B1E044E671D0EFBFEB88689161EBD95DD4F DUP2 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA04 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0xA0C PUSH2 0x150A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA46 SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA72 SWAP1 PUSH2 0x2033 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xABD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA94 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xABD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC81DB8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x13F60DD2B588490608C3FF1932A3DAEB4087F3D5AF04B97E5C2A16B5B4C0302E DUP2 PUSH1 0x40 MLOAD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xB7A PUSH2 0x128C JUMP JUMPDEST PUSH2 0xB84 DUP4 DUP4 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB94 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xB9C PUSH2 0x128C JUMP JUMPDEST PUSH2 0xBA6 CALLER DUP4 PUSH2 0x158E JUMP JUMPDEST PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH32 0xDE271CF500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA77130EF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xCB4 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCED SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x4E073DD16EEC477FBB059BDA1F0796F0D06EEBC4C53568E3E77A4084228FD4EB DUP5 PUSH1 0x40 MLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xD4E PUSH2 0x143B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xEAC PUSH2 0x128C JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0xEE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP4 DUP3 LT ISZERO SWAP1 POP PUSH0 DUP1 DUP3 ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x2710 PUSH1 0x9 SLOAD DUP8 PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x2234 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST SWAP2 POP DUP6 DUP5 PUSH2 0xF40 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0xB PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0x1005 JUMPI PUSH0 PUSH2 0xF89 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC2 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH32 0xACFA15EBE340982FEF95D43AAFC25D741382D7928A00055A209274FA615D5277 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH0 PUSH2 0x1010 DUP9 DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1049 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x4C3044279DAEA82275BC16A26600FE0C196CB65422B138C02DC86FB861B174CA DUP6 PUSH1 0x40 MLOAD PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x11B1 JUMP JUMPDEST DUP4 SWAP2 POP PUSH0 SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT ISZERO PUSH2 0x1176 JUMPI PUSH0 PUSH2 0x10D6 DUP9 DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x5D16C483BEE69284681447FE545192ACC0F537A2CD7C2CD35593A1EDB5243290 DUP6 DUP7 DUP12 PUSH2 0x115E SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116C SWAP3 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST DUP8 PUSH32 0x574264649C9D702F91C09E683982319DA6546E5CFEE0A4898A3BD6BF1C63042F DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x11A8 SWAP3 SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP9 PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO DUP2 MSTORE POP SWAP5 POP POP POP POP POP PUSH2 0x11E8 PUSH2 0x143B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11F7 PUSH2 0x1304 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0x1445 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1287 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1599 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1294 PUSH2 0x77A JUMP JUMPDEST ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x12E0 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0x12ED DUP6 DUP3 DUP6 PUSH2 0x1768 JUMP JUMPDEST PUSH2 0x12F8 DUP6 DUP6 DUP6 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x130C PUSH2 0x1273 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132A PUSH2 0xA0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1389 JUMPI PUSH2 0x134D PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1393 PUSH2 0x18EA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x13D5 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E2 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1428 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1512 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1555 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1576 PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0x1583 DUP2 DUP6 DUP6 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1609 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1600 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1679 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1762 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1773 DUP5 DUP5 PUSH2 0xD67 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x17F4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17E5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F3 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1599 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1861 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E5 DUP4 DUP4 DUP4 PUSH2 0x1933 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18F2 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1928 SWAP1 PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1983 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1977 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A51 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A0C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A98 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1AE2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B3F SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAE DUP3 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x1BB8 DUP2 DUP6 PUSH2 0x1B76 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BC8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x1B94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF4 DUP2 DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C29 DUP3 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C39 DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C54 DUP2 PUSH2 0x1C30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6C DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1C76 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C87 DUP2 PUSH2 0x1C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D20 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D48 DUP5 DUP3 DUP6 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D64 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CFE JUMP JUMPDEST PUSH2 0x1D71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D8F JUMPI PUSH2 0x1D8E PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D9C DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DAD DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DBE DUP7 DUP3 DUP8 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEB PUSH2 0x1DE6 PUSH2 0x1DE1 DUP5 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFC DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0D DUP3 PUSH2 0x1DF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH2 0x1E03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E36 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x1E3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E85 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E93 DUP6 DUP3 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB7 DUP2 PUSH2 0x1C1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF8 DUP5 DUP3 DUP6 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F24 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F35 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH2 0x1F55 PUSH2 0x1BFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F63 DUP7 DUP3 DUP8 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F74 DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F85 DUP7 DUP3 DUP8 ADD PUSH2 0x1C79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1F98 DUP2 PUSH2 0x1C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FA7 DUP2 PUSH2 0x1CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1FC1 PUSH0 DUP6 ADD DUP3 PUSH2 0x1F8F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1FD4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1F8F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1FE7 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1F9E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2000 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x204A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x205D JUMPI PUSH2 0x205C PUSH2 0x2006 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2097 PUSH1 0x15 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A2 DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20C4 DUP2 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2102 DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x210D DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x20CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2135 DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x2140 DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2158 JUMPI PUSH2 0x2157 PUSH2 0x20CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH1 0xF DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x219D DUP3 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BF DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D0 DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x21DB DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x21E9 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x20CB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x223E DUP3 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0x2249 DUP4 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2259 JUMPI PUSH2 0x2258 PUSH2 0x2207 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697373696F6E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2298 PUSH1 0x1A DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A3 DUP3 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C5 DUP2 PUSH2 0x228C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616765207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2300 PUSH1 0x14 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x230B DUP3 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232D DUP2 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061727469616C2077616765207472616E73666572206661696C656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2368 PUSH1 0x1C DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x2373 DUP3 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2395 DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D0 PUSH1 0x10 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DB DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FD DUP2 PUSH2 0x23C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2438 PUSH1 0x1F DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x2443 DUP3 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2465 DUP2 PUSH2 0x242C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x247F PUSH0 DUP4 ADD DUP7 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x248C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CFE JUMP JUMPDEST PUSH2 0x2499 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24D5 PUSH1 0x14 DUP4 PUSH2 0x1B76 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E0 DUP3 PUSH2 0x24A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2502 DUP2 PUSH2 0x24C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0x2E SELFDESTRUCT GAS SWAP9 BLOCKHASH 0xD8 0x2D 0xD3 SWAP9 0xB1 DUP3 0x21 EXP JUMPDEST 0xD3 0xC4 0xA6 DELEGATECALL 0xDF 0xD0 0x4E JUMP PUSH4 0x678BE715 PUSH4 0x1BB64764 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "467:10127:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10345:246:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;10104:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8120:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8956:67:10;;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2695:602:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;9568:252:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;670:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8885:63;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9174:267:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;598:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9889:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3476:750;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;910:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;750:33:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5242:2753;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:4;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;10345:246:10:-;10418:15;10444:25;10510:16;10520:5;10510:9;:16::i;:::-;10541:31;10551:5;10566:4;10541:9;:31::i;:::-;10488:95;;;;10345:246;;;:::o;10104:229::-;10260:4;1239:19:2;:17;:19::i;:::-;10289:36:10::1;10308:4;10314:2;10318:6;10289:18;:36::i;:::-;10282:43;;10104:229:::0;;;;;:::o;566:25::-;;;;;;;;;;;;;:::o;8120:281::-;1531:13:0;:11;:13::i;:::-;8230:1:10::1;8207:25;;:11;:25;;::::0;8203:58:::1;;8241:20;;;;;;;;;;;;;;8203:58;8291:11;8272:16;;:30;;;;;;;;;;;;;;;;;;8334:11;8313:8;;:33;;;;;;;;;;;;;;;;;;8362:31;8381:11;8362:31;;;;;;:::i;:::-;;;;;;;;8120:281:::0;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;8956:67:10:-;1531:13:0;:11;:13::i;:::-;9005:10:10::1;:8;:10::i;:::-;8956:67::o:0;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2695:602:10:-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;2816:1:10::2;2806:6;:11:::0;2802:39:::2;;2826:15;;;;;;;;;;;;;;2802:39;2862:14;2879:10;2862:27;;3043:12;3058:34;3067:16;;;;;;;;;;;3085:6;3058:8;:34::i;:::-;3043:49;;3111:7;3103:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3222:6;3197:12;:21;3210:7;3197:21;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;3273:7;3254:35;3282:6;3254:35;;;;;;:::i;:::-;;;;;;;;2791:506;;2303:20:3::0;:18;:20::i;:::-;2695:602:10;;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;9568:252:10:-;1531:13:0;:11;:13::i;:::-;9680:1:10::1;9657:25;;:11;:25;;::::0;9653:62:::1;;9691:24;;;;;;;;;;;;;;9653:62;9747:11;9726:18;;:32;;;;;;;;;;;;;;;;;;9774:38;9800:11;9774:38;;;;;;:::i;:::-;;;;;;;;9568:252:::0;:::o;670:32::-;;;;:::o;8885:63::-;1531:13:0;:11;:13::i;:::-;8932:8:10::1;:6;:8::i;:::-;8885:63::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;9174:267:10:-;1531:13:0;:11;:13::i;:::-;854:5:10::1;9264:20;:35;9260:67;;;9308:19;;;;;;;;;;;;;;9260:67;9358:20;9338:17;:40;;;;9394:39;9412:20;9394:39;;;;;;:::i;:::-;;;;;;;;9174:267:::0;:::o;598:31::-;;;;;;;;;;;;;:::o;9889:207::-;10032:4;1239:19:2;:17;:19::i;:::-;10062:26:10::1;10077:2;10081:6;10062:14;:26::i;:::-;10055:33;;9889:207:::0;;;;:::o;3476:750::-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;3656:33:10::2;3669:10;3681:7;3656:12;:33::i;:::-;3651:66;;3698:19;;;;;;;;;;;;;;3651:66;3752:1;3742:6;:11:::0;3738:39:::2;;3762:15;;;;;;;;;;;;;;3738:39;3816:6;3792:12;:21;3805:7;3792:21;;;;;;;;;;;;:30;3788:68;;;3831:25;;;;;;;;;;;;;;3788:68;3945:6;3920:12;:21;3933:7;3920:21;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4032:12;4047:50;4060:16;;;;;;;;;;;4078:10;4090:6;4047:12;:50::i;:::-;4032:65;;4116:7;4108:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;4199:10;4169:49;;4190:7;4169:49;4211:6;4169:49;;;;;;:::i;:::-;;;;;;;;3574:652;2303:20:3::0;:18;:20::i;:::-;3476:750:10;;:::o;910:47::-;;;;;;;;;;;;;;;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;750:33:10:-;;;;;;;;;;;;;:::o;5242:2753::-;5401:24;;:::i;:::-;2453:16;;;;;;;;;;;2439:30;;:10;:30;;;2435:63;;2478:20;;;;;;;;;;;;;;2435:63;2261:21:3::1;:19;:21::i;:::-;1239:19:2::2;:17;:19::i;:::-;5452:1:10::3;5442:6;:11:::0;5438:39:::3;;5462:15;;;;;;;;;;;;;;5438:39;5498:22;5523:12;:21;5536:7;5523:21;;;;;;;;;;;;5498:46;;5555:18;5594:6;5576:14;:24;;5555:45;;5611:21;5643:24:::0;5820:13:::3;5816:1975;;;854:5;5916:17;;5907:6;:26;;;;:::i;:::-;5906:43;;;;:::i;:::-;5887:62;;5989:16;5980:6;:25;;;;:::i;:::-;5964:41;;6123:6;6106:14;:23;;;;:::i;:::-;6082:12;:21;6095:7;6082:21;;;;;;;;;;;:47;;;;6240:1;6221:16;:20;6217:386;;;6376:22;6401:46;6410:18;;;;;;;;;;;6430:16;6401:8;:46::i;:::-;6376:71;;6474:17;6466:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;6561:7;6546:41;6570:16;6546:41;;;;;;:::i;:::-;;;;;;;;6243:360;6217:386;6781:12;6796:32;6805:7;6814:13;6796:8;:32::i;:::-;6781:47;;6851:7;6843:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;6935:7;6917:41;;6926:7;6917:41;6944:13;6917:41;;;;;;:::i;:::-;;;;;;;;5835:1135;5816:1975;;;7059:14;7043:30;;7107:1;7088:20;;7208:1;7184:12;:21;7197:7;7184:21;;;;;;;;;;;:25;;;;7258:1;7242:13;:17;7238:461;;;7455:12;7470:32;7479:7;7488:13;7470:8;:32::i;:::-;7455:47;;7529:7;7521:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7636:7;7611:72;;7627:7;7611:72;7645:13;7669;7660:6;:22;;;;:::i;:::-;7611:72;;;;;;;:::i;:::-;;;;;;;;7261:438;7238:461;7747:7;7732:47;7756:14;7772:6;7732:47;;;;;;;:::i;:::-;;;;;;;;5816:1975;7818:169;;;;;;;;7863:13;7818:169;;;;7915:13;7906:6;:22;;;;:::i;:::-;7818:169;;;;7962:13;7961:14;7818:169;;;;::::0;7811:176:::3;;;;;;2303:20:3::1;:18;:20::i;:::-;5242:2753:10::0;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;4776:244:4:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;8560:281:10:-;8637:4;8789;8782:11;;8560:281;;;;:::o;9701:432:4:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:332::-;4147:4;4185:2;4174:9;4170:18;4162:26;;4198:71;4266:1;4255:9;4251:17;4242:6;4198:71;:::i;:::-;4279:72;4347:2;4336:9;4332:18;4323:6;4279:72;:::i;:::-;4026:332;;;;;:::o;4364:619::-;4441:6;4449;4457;4506:2;4494:9;4485:7;4481:23;4477:32;4474:119;;;4512:79;;:::i;:::-;4474:119;4632:1;4657:53;4702:7;4693:6;4682:9;4678:22;4657:53;:::i;:::-;4647:63;;4603:117;4759:2;4785:53;4830:7;4821:6;4810:9;4806:22;4785:53;:::i;:::-;4775:63;;4730:118;4887:2;4913:53;4958:7;4949:6;4938:9;4934:22;4913:53;:::i;:::-;4903:63;;4858:118;4364:619;;;;;:::o;4989:60::-;5017:3;5038:5;5031:12;;4989:60;;;:::o;5055:142::-;5105:9;5138:53;5156:34;5165:24;5183:5;5165:24;:::i;:::-;5156:34;:::i;:::-;5138:53;:::i;:::-;5125:66;;5055:142;;;:::o;5203:126::-;5253:9;5286:37;5317:5;5286:37;:::i;:::-;5273:50;;5203:126;;;:::o;5335:144::-;5403:9;5436:37;5467:5;5436:37;:::i;:::-;5423:50;;5335:144;;;:::o;5485:167::-;5590:55;5639:5;5590:55;:::i;:::-;5585:3;5578:68;5485:167;;:::o;5658:258::-;5769:4;5807:2;5796:9;5792:18;5784:26;;5820:89;5906:1;5895:9;5891:17;5882:6;5820:89;:::i;:::-;5658:258;;;;:::o;5922:86::-;5957:7;5997:4;5990:5;5986:16;5975:27;;5922:86;;;:::o;6014:112::-;6097:22;6113:5;6097:22;:::i;:::-;6092:3;6085:35;6014:112;;:::o;6132:214::-;6221:4;6259:2;6248:9;6244:18;6236:26;;6272:67;6336:1;6325:9;6321:17;6312:6;6272:67;:::i;:::-;6132:214;;;;:::o;6352:474::-;6420:6;6428;6477:2;6465:9;6456:7;6452:23;6448:32;6445:119;;;6483:79;;:::i;:::-;6445:119;6603:1;6628:53;6673:7;6664:6;6653:9;6649:22;6628:53;:::i;:::-;6618:63;;6574:117;6730:2;6756:53;6801:7;6792:6;6781:9;6777:22;6756:53;:::i;:::-;6746:63;;6701:118;6352:474;;;;;:::o;6832:118::-;6919:24;6937:5;6919:24;:::i;:::-;6914:3;6907:37;6832:118;;:::o;6956:222::-;7049:4;7087:2;7076:9;7072:18;7064:26;;7100:71;7168:1;7157:9;7153:17;7144:6;7100:71;:::i;:::-;6956:222;;;;:::o;7184:329::-;7243:6;7292:2;7280:9;7271:7;7267:23;7263:32;7260:119;;;7298:79;;:::i;:::-;7260:119;7418:1;7443:53;7488:7;7479:6;7468:9;7464:22;7443:53;:::i;:::-;7433:63;;7389:117;7184:329;;;;:::o;7519:474::-;7587:6;7595;7644:2;7632:9;7623:7;7619:23;7615:32;7612:119;;;7650:79;;:::i;:::-;7612:119;7770:1;7795:53;7840:7;7831:6;7820:9;7816:22;7795:53;:::i;:::-;7785:63;;7741:117;7897:2;7923:53;7968:7;7959:6;7948:9;7944:22;7923:53;:::i;:::-;7913:63;;7868:118;7519:474;;;;;:::o;7999:619::-;8076:6;8084;8092;8141:2;8129:9;8120:7;8116:23;8112:32;8109:119;;;8147:79;;:::i;:::-;8109:119;8267:1;8292:53;8337:7;8328:6;8317:9;8313:22;8292:53;:::i;:::-;8282:63;;8238:117;8394:2;8420:53;8465:7;8456:6;8445:9;8441:22;8420:53;:::i;:::-;8410:63;;8365:118;8522:2;8548:53;8593:7;8584:6;8573:9;8569:22;8548:53;:::i;:::-;8538:63;;8493:118;7999:619;;;;;:::o;8624:108::-;8701:24;8719:5;8701:24;:::i;:::-;8696:3;8689:37;8624:108;;:::o;8738:99::-;8809:21;8824:5;8809:21;:::i;:::-;8804:3;8797:34;8738:99;;:::o;8923:722::-;9090:4;9085:3;9081:14;9183:4;9176:5;9172:16;9166:23;9202:63;9259:4;9254:3;9250:14;9236:12;9202:63;:::i;:::-;9105:170;9366:4;9359:5;9355:16;9349:23;9385:63;9442:4;9437:3;9433:14;9419:12;9385:63;:::i;:::-;9285:173;9552:4;9545:5;9541:16;9535:23;9571:57;9622:4;9617:3;9613:14;9599:12;9571:57;:::i;:::-;9468:170;9059:586;8923:722;;:::o;9651:362::-;9814:4;9852:2;9841:9;9837:18;9829:26;;9865:141;10003:1;9992:9;9988:17;9979:6;9865:141;:::i;:::-;9651:362;;;;:::o;10019:180::-;10067:77;10064:1;10057:88;10164:4;10161:1;10154:15;10188:4;10185:1;10178:15;10205:320;10249:6;10286:1;10280:4;10276:12;10266:22;;10333:1;10327:4;10323:12;10354:18;10344:81;;10410:4;10402:6;10398:17;10388:27;;10344:81;10472:2;10464:6;10461:14;10441:18;10438:38;10435:84;;10491:18;;:::i;:::-;10435:84;10256:269;10205:320;;;:::o;10531:171::-;10671:23;10667:1;10659:6;10655:14;10648:47;10531:171;:::o;10708:366::-;10850:3;10871:67;10935:2;10930:3;10871:67;:::i;:::-;10864:74;;10947:93;11036:3;10947:93;:::i;:::-;11065:2;11060:3;11056:12;11049:19;;10708:366;;;:::o;11080:419::-;11246:4;11284:2;11273:9;11269:18;11261:26;;11333:9;11327:4;11323:20;11319:1;11308:9;11304:17;11297:47;11361:131;11487:4;11361:131;:::i;:::-;11353:139;;11080:419;;;:::o;11505:180::-;11553:77;11550:1;11543:88;11650:4;11647:1;11640:15;11674:4;11671:1;11664:15;11691:191;11731:3;11750:20;11768:1;11750:20;:::i;:::-;11745:25;;11784:20;11802:1;11784:20;:::i;:::-;11779:25;;11827:1;11824;11820:9;11813:16;;11848:3;11845:1;11842:10;11839:36;;;11855:18;;:::i;:::-;11839:36;11691:191;;;;:::o;11888:194::-;11928:4;11948:20;11966:1;11948:20;:::i;:::-;11943:25;;11982:20;12000:1;11982:20;:::i;:::-;11977:25;;12026:1;12023;12019:9;12011:17;;12050:1;12044:4;12041:11;12038:37;;;12055:18;;:::i;:::-;12038:37;11888:194;;;;:::o;12088:165::-;12228:17;12224:1;12216:6;12212:14;12205:41;12088:165;:::o;12259:366::-;12401:3;12422:67;12486:2;12481:3;12422:67;:::i;:::-;12415:74;;12498:93;12587:3;12498:93;:::i;:::-;12616:2;12611:3;12607:12;12600:19;;12259:366;;;:::o;12631:419::-;12797:4;12835:2;12824:9;12820:18;12812:26;;12884:9;12878:4;12874:20;12870:1;12859:9;12855:17;12848:47;12912:131;13038:4;12912:131;:::i;:::-;12904:139;;12631:419;;;:::o;13056:410::-;13096:7;13119:20;13137:1;13119:20;:::i;:::-;13114:25;;13153:20;13171:1;13153:20;:::i;:::-;13148:25;;13208:1;13205;13201:9;13230:30;13248:11;13230:30;:::i;:::-;13219:41;;13409:1;13400:7;13396:15;13393:1;13390:22;13370:1;13363:9;13343:83;13320:139;;13439:18;;:::i;:::-;13320:139;13104:362;13056:410;;;;:::o;13472:180::-;13520:77;13517:1;13510:88;13617:4;13614:1;13607:15;13641:4;13638:1;13631:15;13658:185;13698:1;13715:20;13733:1;13715:20;:::i;:::-;13710:25;;13749:20;13767:1;13749:20;:::i;:::-;13744:25;;13788:1;13778:35;;13793:18;;:::i;:::-;13778:35;13835:1;13832;13828:9;13823:14;;13658:185;;;;:::o;13849:176::-;13989:28;13985:1;13977:6;13973:14;13966:52;13849:176;:::o;14031:366::-;14173:3;14194:67;14258:2;14253:3;14194:67;:::i;:::-;14187:74;;14270:93;14359:3;14270:93;:::i;:::-;14388:2;14383:3;14379:12;14372:19;;14031:366;;;:::o;14403:419::-;14569:4;14607:2;14596:9;14592:18;14584:26;;14656:9;14650:4;14646:20;14642:1;14631:9;14627:17;14620:47;14684:131;14810:4;14684:131;:::i;:::-;14676:139;;14403:419;;;:::o;14828:170::-;14968:22;14964:1;14956:6;14952:14;14945:46;14828:170;:::o;15004:366::-;15146:3;15167:67;15231:2;15226:3;15167:67;:::i;:::-;15160:74;;15243:93;15332:3;15243:93;:::i;:::-;15361:2;15356:3;15352:12;15345:19;;15004:366;;;:::o;15376:419::-;15542:4;15580:2;15569:9;15565:18;15557:26;;15629:9;15623:4;15619:20;15615:1;15604:9;15600:17;15593:47;15657:131;15783:4;15657:131;:::i;:::-;15649:139;;15376:419;;;:::o;15801:178::-;15941:30;15937:1;15929:6;15925:14;15918:54;15801:178;:::o;15985:366::-;16127:3;16148:67;16212:2;16207:3;16148:67;:::i;:::-;16141:74;;16224:93;16313:3;16224:93;:::i;:::-;16342:2;16337:3;16333:12;16326:19;;15985:366;;;:::o;16357:419::-;16523:4;16561:2;16550:9;16546:18;16538:26;;16610:9;16604:4;16600:20;16596:1;16585:9;16581:17;16574:47;16638:131;16764:4;16638:131;:::i;:::-;16630:139;;16357:419;;;:::o;16782:166::-;16922:18;16918:1;16910:6;16906:14;16899:42;16782:166;:::o;16954:366::-;17096:3;17117:67;17181:2;17176:3;17117:67;:::i;:::-;17110:74;;17193:93;17282:3;17193:93;:::i;:::-;17311:2;17306:3;17302:12;17295:19;;16954:366;;;:::o;17326:419::-;17492:4;17530:2;17519:9;17515:18;17507:26;;17579:9;17573:4;17569:20;17565:1;17554:9;17550:17;17543:47;17607:131;17733:4;17607:131;:::i;:::-;17599:139;;17326:419;;;:::o;17751:181::-;17891:33;17887:1;17879:6;17875:14;17868:57;17751:181;:::o;17938:366::-;18080:3;18101:67;18165:2;18160:3;18101:67;:::i;:::-;18094:74;;18177:93;18266:3;18177:93;:::i;:::-;18295:2;18290:3;18286:12;18279:19;;17938:366;;;:::o;18310:419::-;18476:4;18514:2;18503:9;18499:18;18491:26;;18563:9;18557:4;18553:20;18549:1;18538:9;18534:17;18527:47;18591:131;18717:4;18591:131;:::i;:::-;18583:139;;18310:419;;;:::o;18735:442::-;18884:4;18922:2;18911:9;18907:18;18899:26;;18935:71;19003:1;18992:9;18988:17;18979:6;18935:71;:::i;:::-;19016:72;19084:2;19073:9;19069:18;19060:6;19016:72;:::i;:::-;19098;19166:2;19155:9;19151:18;19142:6;19098:72;:::i;:::-;18735:442;;;;;;:::o;19183:170::-;19323:22;19319:1;19311:6;19307:14;19300:46;19183:170;:::o;19359:366::-;19501:3;19522:67;19586:2;19581:3;19522:67;:::i;:::-;19515:74;;19598:93;19687:3;19598:93;:::i;:::-;19716:2;19711:3;19707:12;19700:19;;19359:366;;;:::o;19731:419::-;19897:4;19935:2;19924:9;19920:18;19912:26;;19984:9;19978:4;19974:20;19970:1;19959:9;19955:17;19948:47;20012:131;20138:4;20012:131;:::i;:::-;20004:139;;19731:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1907000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"chargeSignBalance(uint256,uint256)": "infinite",
								"commissionPercent()": "2493",
								"commissionTreasury()": "2574",
								"decimals()": "406",
								"getApprovalInfo(address)": "infinite",
								"name()": "infinite",
								"owner()": "2611",
								"pause()": "infinite",
								"paused()": "2518",
								"payWage(uint256,address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"signBalances(uint256)": "infinite",
								"signsNFT()": "infinite",
								"signsNFTContract()": "2619",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateCommission(uint256)": "infinite",
								"updateCommissionTreasury(address)": "infinite",
								"updateSignsNFTContract(address)": "infinite",
								"withdrawSignBalance(uint256,uint256)": "infinite"
							},
							"internal": {
								"_isSignOwner(address,uint256)": "29"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1792,
									"end": 2374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1955,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1963,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2029,
									"end": 2030,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2000,
									"end": 2031,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2000,
									"end": 2031,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2017,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2031,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2000,
									"end": 2031,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2031,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1996,
									"end": 2060,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "F8AF67E500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2060,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1996,
									"end": 2060,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2107,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2075,
									"end": 2108,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2075,
									"end": 2108,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2075,
									"end": 2094,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2075,
									"end": 2108,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2075,
									"end": 2108,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2075,
									"end": 2108,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2071,
									"end": 2141,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "CFE2EA6300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2141,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2141,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2071,
									"end": 2141,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2181,
									"end": 2198,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2178,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2162,
									"end": 2178,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2198,
									"modifierDepth": 2,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2249,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2227,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 2209,
									"end": 2227,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2249,
									"modifierDepth": 2,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2280,
									"end": 2283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "1F4"
								},
								{
									"begin": 2260,
									"end": 2277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2260,
									"end": 2283,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2260,
									"end": 2283,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2260,
									"end": 2283,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2260,
									"end": 2283,
									"modifierDepth": 2,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2321,
									"end": 2366,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2327,
									"end": 2337,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2365,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2355,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2355,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2355,
									"end": 2363,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2365,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2355,
									"end": 2365,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2365,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2365,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2355,
									"end": 2365,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2351,
									"end": 2353,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 2351,
									"end": 2365,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2351,
									"end": 2365,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2351,
									"end": 2365,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2351,
									"end": 2365,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2351,
									"end": 2365,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2351,
									"end": 2365,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2351,
									"end": 2365,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2348,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "F4240"
								},
								{
									"begin": 2339,
									"end": 2365,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2339,
									"end": 2365,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2365,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2365,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2339,
									"end": 2365,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2365,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2339,
									"end": 2365,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2321,
									"end": 2326,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2321,
									"end": 2326,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2321,
									"end": 2326,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2321,
									"end": 2366,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2321,
									"end": 2366,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2321,
									"end": 2366,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2321,
									"end": 2366,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2321,
									"end": 2366,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 2374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3259,
									"end": 3268,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3250,
									"end": 3257,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3246,
									"end": 3269,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3242,
									"end": 3275,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 3278,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3408,
									"end": 3417,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3404,
									"end": 3421,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3398,
									"end": 3422,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3449,
									"end": 3467,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3441,
									"end": 3447,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3438,
									"end": 3468,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 3471,
									"end": 3550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 3642,
									"end": 3649,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3622,
									"end": 3631,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 3618,
									"end": 3640,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3576,
									"end": 3650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3369,
									"end": 3660,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3720,
									"end": 3722,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3709,
									"end": 3718,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3705,
									"end": 3723,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3699,
									"end": 3724,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3743,
									"end": 3749,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3740,
									"end": 3770,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 3773,
									"end": 3852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3944,
									"end": 3951,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3924,
									"end": 3933,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 3920,
									"end": 3942,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3878,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3670,
									"end": 3962,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4001,
									"end": 4003,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 4083,
									"end": 4090,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4080,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4063,
									"end": 4072,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4059,
									"end": 4081,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 4027,
									"end": 4091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4101,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4140,
									"end": 4142,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 4222,
									"end": 4229,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4213,
									"end": 4219,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4202,
									"end": 4211,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4198,
									"end": 4220,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 4166,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4111,
									"end": 4240,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 4247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4333,
									"end": 4345,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4253,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4406,
									"end": 4483,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4403,
									"end": 4404,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4484,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4527,
									"end": 4531,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4532,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4594,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4626,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4619,
									"end": 4623,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4627,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4672,
									"end": 4673,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4662,
									"end": 4674,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4741,
									"end": 4747,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4737,
									"end": 4754,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4811,
									"end": 4813,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4800,
									"end": 4814,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4777,
									"end": 4815,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 4830,
									"end": 4848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "tag",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4595,
									"end": 4864,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4544,
									"end": 4864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4919,
									"end": 4923,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4945,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4965,
									"end": 4968,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4969,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4996,
									"end": 4997,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4870,
									"end": 5011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5054,
									"end": 5060,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5098,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5089,
									"end": 5094,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5085,
									"end": 5099,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5081,
									"end": 5104,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5017,
									"end": 5110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5160,
									"end": 5168,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5215,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5200,
									"end": 5216,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5349,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5332,
									"end": 5350,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 5401,
									"end": 5467,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5390,
									"end": 5399,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 5371,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 5519,
									"end": 5527,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5508,
									"end": 5517,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 5489,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "tag",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5561,
									"end": 5565,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5557,
									"end": 5566,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5550,
									"end": 5555,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5546,
									"end": 5567,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5610,
									"end": 5614,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5600,
									"end": 5608,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5596,
									"end": 5615,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5586,
									"end": 5616,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5665,
									"end": 5672,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5694,
									"end": 5699,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5628,
									"end": 5705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5765,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5711,
									"end": 5771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "159"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "160"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 5905,
									"end": 5910,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 5887,
									"end": 5911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "tag",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 5878,
									"end": 5912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "tag",
									"source": 11,
									"value": "160"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 5860,
									"end": 5913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "tag",
									"source": 11,
									"value": "159"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5777,
									"end": 5919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5968,
									"end": 5971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5989,
									"end": 5994,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5925,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 6147,
									"end": 6154,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 6116,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "tag",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 6250,
									"end": 6266,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 6226,
									"end": 6267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "tag",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6218,
									"end": 6224,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6211,
									"end": 6215,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6205,
									"end": 6216,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 6177,
									"end": 6268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "tag",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6171,
									"end": 6175,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6269,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6082,
									"end": 6275,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6006,
									"end": 6275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6326,
									"end": 6329,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6281,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "169"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 6437,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "tag",
									"source": 11,
									"value": "169"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 6536,
									"end": 6542,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6528,
									"end": 6534,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 6478,
									"end": 6543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "tag",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6413,
									"end": 6549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6360,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6632,
									"end": 6635,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6625,
									"end": 6630,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6622,
									"end": 6636,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 6723,
									"end": 6724,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6721,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 6686,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "tag",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6652,
									"end": 6657,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6555,
									"end": 6741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6848,
									"end": 6850,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6843,
									"end": 6846,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6851,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "178"
								},
								{
									"begin": 6914,
									"end": 6919,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 6882,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "tag",
									"source": 11,
									"value": "178"
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 6984,
									"end": 6994,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 6966,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "tag",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6956,
									"end": 6964,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6952,
									"end": 6996,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7149,
									"end": 7151,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7147,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7134,
									"end": 7152,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7170,
									"end": 7178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "tag",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "181"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 7267,
									"end": 7270,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 7249,
									"end": 7271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "tag",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7222,
									"end": 7233,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 7193,
									"end": 7273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "tag",
									"source": 11,
									"value": "181"
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "tag",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6747,
									"end": 7290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7350,
									"end": 7358,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7394,
									"end": 7398,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7390,
									"end": 7406,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7296,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7546,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7532,
									"end": 7537,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7529,
									"end": 7530,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 7525,
									"end": 7538,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 7496,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "tag",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7492,
									"end": 7548,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 7581,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7571,
									"end": 7575,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7567,
									"end": 7582,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7470,
									"end": 7588,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7419,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "187"
								},
								{
									"begin": 7840,
									"end": 7843,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7834,
									"end": 7838,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 7815,
									"end": 7844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "tag",
									"source": 11,
									"value": "187"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7877,
									"end": 7880,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7874,
									"end": 7875,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7870,
									"end": 7881,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7861,
									"end": 7882,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7593,
									"end": 7888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 8010,
									"end": 8047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "tag",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8112,
									"end": 8130,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8104,
									"end": 8110,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8101,
									"end": 8131,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 8134,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "tag",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "tag",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8215,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 8178,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "tag",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 8323,
									"end": 8329,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 8263,
									"end": 8330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "tag",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8402,
									"end": 8416,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8430,
									"end": 8431,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "195"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9087,
									"end": 9088,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9110,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9153,
									"end": 9162,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9148,
									"end": 9151,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 9144,
									"end": 9163,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9138,
									"end": 9164,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "tag",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 9264,
									"end": 9270,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 9204,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "tag",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9198,
									"end": 9202,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 9191,
									"end": 9272,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 9060,
									"end": 9282,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "194"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "tag",
									"source": 11,
									"value": "195"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8477,
									"end": 8481,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8465,
									"end": 8471,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8461,
									"end": 8483,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 8543,
									"end": 8547,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 8511,
									"end": 8548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "tag",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8570,
									"end": 8571,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8592,
									"end": 8606,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8677,
									"end": 8686,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8672,
									"end": 8675,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8668,
									"end": 8687,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8662,
									"end": 8688,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8654,
									"end": 8660,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8647,
									"end": 8689,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8728,
									"end": 8729,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8720,
									"end": 8726,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8716,
									"end": 8730,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8775,
									"end": 8777,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8764,
									"end": 8773,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8760,
									"end": 8778,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8618,
									"end": 8619,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8614,
									"end": 8626,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8811,
									"end": 8818,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "202"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8878,
									"end": 8887,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8873,
									"end": 8876,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8869,
									"end": 8888,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8863,
									"end": 8889,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 8963,
									"end": 8967,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8955,
									"end": 8961,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8951,
									"end": 8968,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8940,
									"end": 8949,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 8921,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "tag",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8913,
									"end": 8919,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8906,
									"end": 8970,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8828,
									"end": 8984,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "tag",
									"source": 11,
									"value": "202"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9030,
									"end": 9031,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 9018,
									"end": 9024,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 9014,
									"end": 9028,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 9010,
									"end": 9032,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9004,
									"end": 9008,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8997,
									"end": 9033,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "tag",
									"source": 11,
									"value": "194"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7893,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 9399,
									"end": 9404,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 9381,
									"end": 9405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "tag",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9376,
									"end": 9379,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9369,
									"end": 9406,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9294,
									"end": 9412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9549,
									"end": 9551,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9538,
									"end": 9547,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9534,
									"end": 9552,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "207"
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9628,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9615,
									"end": 9632,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9606,
									"end": 9612,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 9562,
									"end": 9633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "tag",
									"source": 11,
									"value": "207"
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9646,
									"end": 9826,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 9646,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9694,
									"end": 9771,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9691,
									"end": 9692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9684,
									"end": 9772,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9791,
									"end": 9795,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 9788,
									"end": 9789,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 9781,
									"end": 9796,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9815,
									"end": 9819,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 9812,
									"end": 9813,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9805,
									"end": 9820,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9874,
									"end": 9882,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9921,
									"end": 9926,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9918,
									"end": 9919,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 9914,
									"end": 9927,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 9893,
									"end": 9927,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9893,
									"end": 9927,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9832,
									"end": 9934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10001,
									"end": 10006,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10008,
									"end": 10012,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 10032,
									"end": 10038,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10023,
									"end": 10038,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10023,
									"end": 10038,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10056,
									"end": 10061,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10047,
									"end": 10061,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10047,
									"end": 10061,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "tag",
									"source": 11,
									"value": "211"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10091,
									"end": 10092,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 10081,
									"end": 10089,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 10078,
									"end": 10093,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "213"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 10186,
									"end": 10190,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 10181,
									"end": 10184,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 10177,
									"end": 10191,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 10171,
									"end": 10175,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10168,
									"end": 10192,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "214"
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "215"
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 10195,
									"end": 10213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "tag",
									"source": 11,
									"value": "215"
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "tag",
									"source": 11,
									"value": "214"
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10245,
									"end": 10246,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 10235,
									"end": 10243,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 10231,
									"end": 10247,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "216"
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 10660,
									"end": 10664,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 10653,
									"end": 10658,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10649,
									"end": 10665,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 10640,
									"end": 10665,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10640,
									"end": 10665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "tag",
									"source": 11,
									"value": "216"
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10710,
									"end": 10714,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 10704,
									"end": 10708,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10700,
									"end": 10715,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 10692,
									"end": 10715,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10692,
									"end": 10715,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "217"
								},
								{
									"begin": 10763,
									"end": 10771,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 10740,
									"end": 10772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "tag",
									"source": 11,
									"value": "217"
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10728,
									"end": 10772,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 10728,
									"end": 10772,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "211"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "tag",
									"source": 11,
									"value": "213"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9940,
									"end": 10788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10848,
									"end": 10853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11039,
									"end": 11047,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "219"
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11060,
									"end": 11061,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 11051,
									"end": 11061,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11051,
									"end": 11061,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11062,
									"end": 11067,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 11062,
									"end": 11067,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "tag",
									"source": 11,
									"value": "219"
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11088,
									"end": 11092,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "220"
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11105,
									"end": 11106,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11096,
									"end": 11106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11096,
									"end": 11106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11107,
									"end": 11112,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 11107,
									"end": 11112,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "tag",
									"source": 11,
									"value": "220"
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11174,
									"end": 11178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11222,
									"end": 11223,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "222"
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11258,
									"end": 11259,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "223"
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "221"
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "tag",
									"source": 11,
									"value": "222"
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11235,
									"end": 11236,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 11226,
									"end": 11236,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11226,
									"end": 11236,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11237,
									"end": 11242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11237,
									"end": 11242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 11237,
									"end": 11242,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "tag",
									"source": 11,
									"value": "223"
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11298,
									"end": 11301,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 11288,
									"end": 11296,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11285,
									"end": 11302,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "224"
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "225"
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 11305,
									"end": 11323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "tag",
									"source": 11,
									"value": "225"
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "tag",
									"source": 11,
									"value": "224"
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11354,
									"end": 11362,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11351,
									"end": 11352,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 11347,
									"end": 11363,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 11338,
									"end": 11363,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11338,
									"end": 11363,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11389,
									"end": 11392,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11382,
									"end": 11387,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11379,
									"end": 11393,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "226"
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "227"
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 11396,
									"end": 11414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "tag",
									"source": 11,
									"value": "227"
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "tag",
									"source": 11,
									"value": "226"
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11429,
									"end": 11434,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11429,
									"end": 11434,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 11429,
									"end": 11434,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "tag",
									"source": 11,
									"value": "221"
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11553,
									"end": 11555,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 11543,
									"end": 11551,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11540,
									"end": 11556,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 11534,
									"end": 11537,
									"name": "PUSH",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 11528,
									"end": 11532,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11525,
									"end": 11538,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 11521,
									"end": 11557,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 11503,
									"end": 11505,
									"name": "PUSH",
									"source": 11,
									"value": "4E"
								},
								{
									"begin": 11493,
									"end": 11501,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11490,
									"end": 11506,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 11485,
									"end": 11487,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 11479,
									"end": 11483,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11476,
									"end": 11488,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 11472,
									"end": 11507,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 11456,
									"end": 11567,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "228"
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11609,
									"end": 11617,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11603,
									"end": 11607,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11599,
									"end": 11618,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 11590,
									"end": 11618,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11590,
									"end": 11618,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11644,
									"end": 11647,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11637,
									"end": 11642,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11634,
									"end": 11648,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "229"
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "230"
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 11651,
									"end": 11669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "tag",
									"source": 11,
									"value": "230"
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "tag",
									"source": 11,
									"value": "229"
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11684,
									"end": 11689,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 11684,
									"end": 11689,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "tag",
									"source": 11,
									"value": "228"
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "231"
								},
								{
									"begin": 11762,
									"end": 11765,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11752,
									"end": 11760,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11746,
									"end": 11750,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11743,
									"end": 11744,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 11724,
									"end": 11766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "tag",
									"source": 11,
									"value": "231"
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11798,
									"end": 11802,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11793,
									"end": 11796,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 11789,
									"end": 11803,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 11782,
									"end": 11787,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11779,
									"end": 11804,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "232"
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "233"
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 11807,
									"end": 11825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "tag",
									"source": 11,
									"value": "233"
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "tag",
									"source": 11,
									"value": "232"
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11856,
									"end": 11860,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11849,
									"end": 11854,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11845,
									"end": 11861,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 11836,
									"end": 11861,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11836,
									"end": 11861,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "tag",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10794,
									"end": 11867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11908,
									"end": 11915,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11948,
									"end": 11952,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 11941,
									"end": 11946,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11937,
									"end": 11953,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 11926,
									"end": 11953,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11926,
									"end": 11953,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11873,
									"end": 11959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12023,
									"end": 12028,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "236"
								},
								{
									"begin": 12065,
									"end": 12069,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12047,
									"end": 12070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "tag",
									"source": 11,
									"value": "236"
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12039,
									"end": 12070,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12039,
									"end": 12070,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "237"
								},
								{
									"begin": 12107,
									"end": 12115,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 12091,
									"end": 12116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "tag",
									"source": 11,
									"value": "237"
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12079,
									"end": 12116,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12079,
									"end": 12116,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "238"
								},
								{
									"begin": 12172,
									"end": 12238,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12162,
									"end": 12170,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 12156,
									"end": 12160,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 12135,
									"end": 12239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "tag",
									"source": 11,
									"value": "238"
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12126,
									"end": 12239,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 12126,
									"end": 12239,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11965,
									"end": 12246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12292,
									"end": 12299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "240"
								},
								{
									"begin": 12333,
									"end": 12334,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12315,
									"end": 12335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "tag",
									"source": 11,
									"value": "240"
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12310,
									"end": 12335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12310,
									"end": 12335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "241"
								},
								{
									"begin": 12367,
									"end": 12368,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12349,
									"end": 12369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "tag",
									"source": 11,
									"value": "241"
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12344,
									"end": 12369,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12344,
									"end": 12369,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12404,
									"end": 12405,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12401,
									"end": 12402,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12397,
									"end": 12406,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "242"
								},
								{
									"begin": 12444,
									"end": 12455,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12426,
									"end": 12456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "tag",
									"source": 11,
									"value": "242"
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12415,
									"end": 12456,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12415,
									"end": 12456,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12605,
									"end": 12606,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12596,
									"end": 12603,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12592,
									"end": 12607,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 12589,
									"end": 12590,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 12586,
									"end": 12608,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 12566,
									"end": 12567,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 12559,
									"end": 12568,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 12539,
									"end": 12622,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "243"
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "244"
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 12635,
									"end": 12653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "tag",
									"source": 11,
									"value": "244"
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "tag",
									"source": 11,
									"value": "243"
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12300,
									"end": 12662,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12252,
									"end": 12662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12708,
									"end": 12711,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "246"
								},
								{
									"begin": 12745,
									"end": 12746,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12727,
									"end": 12747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "tag",
									"source": 11,
									"value": "246"
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12722,
									"end": 12747,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12722,
									"end": 12747,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "247"
								},
								{
									"begin": 12779,
									"end": 12780,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12761,
									"end": 12781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "tag",
									"source": 11,
									"value": "247"
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12756,
									"end": 12781,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12756,
									"end": 12781,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12804,
									"end": 12805,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12801,
									"end": 12802,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12797,
									"end": 12806,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 12790,
									"end": 12806,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 12790,
									"end": 12806,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12825,
									"end": 12828,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 12822,
									"end": 12823,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12819,
									"end": 12829,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "248"
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "249"
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 12832,
									"end": 12850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "tag",
									"source": 11,
									"value": "249"
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "tag",
									"source": 11,
									"value": "248"
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12668,
									"end": 12859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "251"
								},
								{
									"begin": 12970,
									"end": 12975,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 12952,
									"end": 12976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "tag",
									"source": 11,
									"value": "251"
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12947,
									"end": 12950,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12940,
									"end": 12977,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12865,
									"end": 12983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13138,
									"end": 13142,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13176,
									"end": 13178,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 13165,
									"end": 13174,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 13161,
									"end": 13179,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13153,
									"end": 13179,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 13153,
									"end": 13179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "253"
								},
								{
									"begin": 13257,
									"end": 13258,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13246,
									"end": 13255,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13242,
									"end": 13259,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13233,
									"end": 13239,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 13189,
									"end": 13260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "tag",
									"source": 11,
									"value": "253"
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "254"
								},
								{
									"begin": 13338,
									"end": 13340,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 13327,
									"end": 13336,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13323,
									"end": 13341,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13314,
									"end": 13320,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 13270,
									"end": 13342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "tag",
									"source": 11,
									"value": "254"
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "255"
								},
								{
									"begin": 13420,
									"end": 13422,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 13409,
									"end": 13418,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13405,
									"end": 13423,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13396,
									"end": 13402,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 13352,
									"end": 13424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "tag",
									"source": 11,
									"value": "255"
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12989,
									"end": 13431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13530,
									"end": 13534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13568,
									"end": 13570,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 13557,
									"end": 13566,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 13553,
									"end": 13571,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13545,
									"end": 13571,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 13545,
									"end": 13571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "257"
								},
								{
									"begin": 13649,
									"end": 13650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13638,
									"end": 13647,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13634,
									"end": 13651,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13625,
									"end": 13631,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 13581,
									"end": 13652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "tag",
									"source": 11,
									"value": "257"
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13437,
									"end": 13659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 10594,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df2eff5a9840d82dd398b182210a5bd3c4a6f4dfd04e5663678be715631bb64764736f6c634300081a0033",
									".code": [
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "74612F19"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "E95850DF"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "EF9ECC1D"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "A9B493E0"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "CA525485"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "9D55FBA7"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "A3262EA2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "74612F19"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "77D3550B"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "2FCDC5FD"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "5E182096"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "2FCDC5FD"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "1EC48CF7"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "2A26C9CD"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 10594,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 10345,
											"end": 10591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 10345,
											"end": 10591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 10345,
											"end": 10591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 10104,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 10104,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 10104,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 566,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 566,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 8120,
											"end": 8401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 8120,
											"end": 8401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 8956,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2695,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2695,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 9568,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 9568,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 670,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 670,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 8885,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 9174,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 9174,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 598,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 598,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 9889,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 9889,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 9889,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3476,
											"end": 4226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3476,
											"end": 4226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 910,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 910,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 910,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 750,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 750,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5242,
											"end": 7995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5242,
											"end": 7995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5242,
											"end": 7995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10418,
											"end": 10433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10444,
											"end": 10469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 10520,
											"end": 10525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 10510,
											"end": 10526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10526,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 10510,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10570,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 10541,
											"end": 10572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10572,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 10541,
											"end": 10572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10289,
											"end": 10325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 10308,
											"end": 10312,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10316,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10324,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10289,
											"end": 10325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 10289,
											"end": 10325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10282,
											"end": 10325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10282,
											"end": 10325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 566,
											"end": 591,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 566,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8207,
											"end": 8232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8207,
											"end": 8232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8203,
											"end": 8261,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F8AF67E500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8261,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 8261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8203,
											"end": 8261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 8272,
											"end": 8288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8334,
											"end": 8345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8313,
											"end": 8321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F2610996D245D9B77E4FF84C2174EEA0B76FB44C422218404F66E28816D78FB9"
										},
										{
											"begin": 8381,
											"end": 8392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 8362,
											"end": 8393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8393,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 8956,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 9005,
											"end": 9013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 9005,
											"end": 9015,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9005,
											"end": 9015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 9005,
											"end": 9015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8956,
											"end": 9023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2841,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2802,
											"end": 2841,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2841,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2802,
											"end": 2841,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2889,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2889,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2889,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3043,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3092,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3091,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3066,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3058,
											"end": 3092,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3092,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3058,
											"end": 3092,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3043,
											"end": 3092,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3043,
											"end": 3092,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3118,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3103,
											"end": 3144,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3103,
											"end": 3144,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3228,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3217,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3197,
											"end": 3228,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3228,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3280,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "577DFADB80AB9A5336C633F3FA5F59C296D18A29AA6AE9E4598762748E1F4AFD"
										},
										{
											"begin": 3282,
											"end": 3288,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3254,
											"end": 3289,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3289,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2791,
											"end": 3297,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2791,
											"end": 3297,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9657,
											"end": 9682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9657,
											"end": 9682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9657,
											"end": 9682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9682,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 9653,
											"end": 9715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CFE2EA6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9715,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 9653,
											"end": 9715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9747,
											"end": 9758,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 9726,
											"end": 9744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4422C0C4B301436298CCE7DE4B586B1E044E671D0EFBFEB88689161EBD95DD4F"
										},
										{
											"begin": 9800,
											"end": 9811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 9774,
											"end": 9812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9812,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 670,
											"end": 702,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 670,
											"end": 702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 8940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8932,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8932,
											"end": 8940,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8932,
											"end": 8940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8932,
											"end": 8940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 9264,
											"end": 9284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9299,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9260,
											"end": 9327,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "DC81DB8500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9327,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9260,
											"end": 9327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9378,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 9338,
											"end": 9378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9378,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9378,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "13F60DD2B588490608C3FF1932A3DAEB4087F3D5AF04B97E5C2A16B5B4C0302E"
										},
										{
											"begin": 9412,
											"end": 9432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 9394,
											"end": 9433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9433,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 629,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 598,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10062,
											"end": 10088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 10077,
											"end": 10079,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10081,
											"end": 10087,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 10062,
											"end": 10088,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 10062,
											"end": 10088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3669,
											"end": 3679,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3681,
											"end": 3688,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3668,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3656,
											"end": 3689,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3689,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3656,
											"end": 3689,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "DE271CF500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3717,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3748,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3753,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3777,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3738,
											"end": 3777,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3777,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3777,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3738,
											"end": 3777,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3822,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3812,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3813,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3822,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3856,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3788,
											"end": 3856,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A77130EF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3856,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3856,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3788,
											"end": 3856,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3951,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3940,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3920,
											"end": 3951,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3951,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4076,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4088,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4096,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4047,
											"end": 4097,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4097,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4047,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4097,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4097,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4123,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4108,
											"end": 4143,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4108,
											"end": 4143,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4209,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4197,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4E073DD16EEC477FBB059BDA1F0796F0D06EEBC4C53568E3E77A4084228FD4EB"
										},
										{
											"begin": 4211,
											"end": 4217,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4169,
											"end": 4218,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4218,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 4226,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 910,
											"end": 957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 750,
											"end": 783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5401,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2449,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2435,
											"end": 2498,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "PUSH",
											"source": 10,
											"value": "5C427CD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2498,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2435,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5452,
											"end": 5453,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5448,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5453,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5477,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5438,
											"end": 5477,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5477,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5477,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5438,
											"end": 5477,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5520,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5535,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5543,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5544,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5544,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5544,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5573,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5600,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5590,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5600,
											"modifierDepth": 3,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5600,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5600,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5600,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5632,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5833,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 854,
											"end": 859,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 5916,
											"end": 5933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 5916,
											"end": 5933,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5913,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 5907,
											"end": 5933,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5933,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 5907,
											"end": 5933,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5933,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 5907,
											"end": 5933,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5949,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 5906,
											"end": 5949,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5949,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5906,
											"end": 5949,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5949,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 5906,
											"end": 5949,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5887,
											"end": 5949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5887,
											"end": 5949,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6005,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 5986,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6005,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5980,
											"end": 6005,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6005,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6005,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5980,
											"end": 6005,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6005,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5980,
											"end": 6005,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 6005,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 6005,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6129,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6120,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6129,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 6106,
											"end": 6129,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6129,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6129,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6106,
											"end": 6129,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6129,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 6106,
											"end": 6129,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6094,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6102,
											"modifierDepth": 3,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6103,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6129,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6129,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6129,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6129,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6241,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6237,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6241,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6603,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6603,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6217,
											"end": 6603,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6398,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6447,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6410,
											"end": 6428,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6430,
											"end": 6446,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6401,
											"end": 6409,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6401,
											"end": 6447,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6401,
											"end": 6447,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 6401,
											"end": 6447,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6447,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6447,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6491,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6466,
											"end": 6522,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6466,
											"end": 6522,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6568,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "ACFA15EBE340982FEF95D43AAFC25D741382D7928A00055A209274FA615D5277"
										},
										{
											"begin": 6570,
											"end": 6586,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6546,
											"end": 6587,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6587,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6603,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6603,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6217,
											"end": 6603,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6793,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6828,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 6805,
											"end": 6812,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6814,
											"end": 6827,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6796,
											"end": 6804,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6796,
											"end": 6828,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6796,
											"end": 6828,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 6796,
											"end": 6828,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6828,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6828,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6851,
											"end": 6858,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 6843,
											"end": 6883,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 6843,
											"end": 6883,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 6942,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6926,
											"end": 6933,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4C3044279DAEA82275BC16A26600FE0C196CB65422B138C02DC86FB861B174CA"
										},
										{
											"begin": 6944,
											"end": 6957,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6917,
											"end": 6958,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6958,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 6970,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7059,
											"end": 7073,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7073,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7073,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7108,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7108,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7108,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7209,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7204,
											"modifierDepth": 3,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7205,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7209,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7209,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7209,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7209,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7259,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7255,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 7259,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7699,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7699,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 7238,
											"end": 7699,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7502,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7479,
											"end": 7486,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7501,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7478,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7470,
											"end": 7502,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7502,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7470,
											"end": 7502,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7502,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7502,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7536,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7521,
											"end": 7569,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7521,
											"end": 7569,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7643,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7634,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "5D16C483BEE69284681447FE545192ACC0F537A2CD7C2CD35593A1EDB5243290"
										},
										{
											"begin": 7645,
											"end": 7658,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 7682,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7666,
											"modifierDepth": 3,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7682,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7660,
											"end": 7682,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7682,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7682,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 7660,
											"end": 7682,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7682,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7660,
											"end": 7682,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 7611,
											"end": 7683,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7683,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7699,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7699,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 7238,
											"end": 7699,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7747,
											"end": 7754,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "574264649C9D702F91C09E683982319DA6546E5CFEE0A4898A3BD6BF1C63042F"
										},
										{
											"begin": 7756,
											"end": 7770,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7772,
											"end": 7778,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 7732,
											"end": 7779,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7779,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5816,
											"end": 7791,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 7876,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7915,
											"end": 7928,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7912,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7928,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7906,
											"end": 7928,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7928,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7928,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 7906,
											"end": 7928,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7928,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7906,
											"end": 7928,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7962,
											"end": 7975,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7975,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7987,
											"modifierDepth": 3,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7987,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7987,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7987,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7987,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7987,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 7995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8560,
											"end": 8841,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 8560,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8637,
											"end": 8641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8793,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8782,
											"end": 8793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "241"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4183,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4162,
											"end": 4188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4162,
											"end": 4188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4264,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4198,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4279,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4481,
											"end": 4504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4509,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4512,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4693,
											"end": 4699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4682,
											"end": 4691,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4700,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4657,
											"end": 4710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4647,
											"end": 4710,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4647,
											"end": 4710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4720,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 4830,
											"end": 4837,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4828,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4785,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4838,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 4958,
											"end": 4965,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4938,
											"end": 4947,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4913,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4903,
											"end": 4966,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4903,
											"end": 4966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5049,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 4989,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5049,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5055,
											"end": 5197,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5055,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 5156,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 5165,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 5183,
											"end": 5188,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 5165,
											"end": 5189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5189,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 5165,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5156,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5190,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 5156,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 5138,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5191,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 5138,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5055,
											"end": 5197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5055,
											"end": 5197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5055,
											"end": 5197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5055,
											"end": 5197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5329,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 5203,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 5317,
											"end": 5322,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5286,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5323,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 5286,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5479,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5335,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5403,
											"end": 5412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 5467,
											"end": 5472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5436,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 5436,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5436,
											"end": 5473,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 5436,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5485,
											"end": 5652,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 5485,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 5639,
											"end": 5644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5590,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5585,
											"end": 5588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5578,
											"end": 5646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5485,
											"end": 5652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5485,
											"end": 5652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5485,
											"end": 5652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5916,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5658,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5809,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5784,
											"end": 5810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5784,
											"end": 5810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 5906,
											"end": 5907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5904,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5891,
											"end": 5908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 5820,
											"end": 5909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 5820,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5916,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5916,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5658,
											"end": 5916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 6008,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 5922,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 5964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5990,
											"end": 5995,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6002,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 6002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 6002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 6008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 6008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 6008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 6008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6126,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6014,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 6113,
											"end": 6118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 6097,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6092,
											"end": 6095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6085,
											"end": 6120,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6346,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 6132,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6248,
											"end": 6257,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6244,
											"end": 6262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6236,
											"end": 6262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6236,
											"end": 6262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6318,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6272,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6339,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 6272,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6346,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6346,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6477,
											"end": 6479,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6465,
											"end": 6474,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6456,
											"end": 6463,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6452,
											"end": 6475,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6448,
											"end": 6480,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6445,
											"end": 6564,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6445,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 6445,
											"end": 6564,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6483,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 6483,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 6483,
											"end": 6562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6483,
											"end": 6562,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 6483,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6445,
											"end": 6564,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 6445,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 6673,
											"end": 6680,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6628,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6628,
											"end": 6681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6628,
											"end": 6681,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 6628,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6681,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6574,
											"end": 6691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 6801,
											"end": 6808,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6792,
											"end": 6798,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6777,
											"end": 6799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6756,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6756,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6756,
											"end": 6809,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 6756,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6809,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6701,
											"end": 6819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6950,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 6832,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 6937,
											"end": 6942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 6919,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6914,
											"end": 6917,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6907,
											"end": 6944,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 7178,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 6956,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7089,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7076,
											"end": 7085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7100,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7166,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7144,
											"end": 7150,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7100,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 7100,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7100,
											"end": 7171,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 7100,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 7178,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 7178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 7178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 7178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 7178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7513,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 7184,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7243,
											"end": 7249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7278,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7267,
											"end": 7290,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7263,
											"end": 7295,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7379,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 7260,
											"end": 7379,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7298,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7379,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 7260,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 7488,
											"end": 7495,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7479,
											"end": 7485,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7464,
											"end": 7486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7443,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 7443,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7443,
											"end": 7496,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 7443,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7389,
											"end": 7506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7513,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7513,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7644,
											"end": 7646,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7630,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7619,
											"end": 7642,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7615,
											"end": 7647,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7650,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 7650,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 7612,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 7840,
											"end": 7847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7816,
											"end": 7838,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7795,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 7795,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7785,
											"end": 7848,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7785,
											"end": 7848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7741,
											"end": 7858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7923,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 7968,
											"end": 7975,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7959,
											"end": 7965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7923,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7923,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7923,
											"end": 7976,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 7923,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 7976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 7976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7868,
											"end": 7986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8082,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8143,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8129,
											"end": 8138,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8127,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8144,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 8147,
											"end": 8226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 8147,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 8109,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 8337,
											"end": 8344,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8326,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8313,
											"end": 8335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8292,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8292,
											"end": 8345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8292,
											"end": 8345,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 8292,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8282,
											"end": 8345,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8282,
											"end": 8345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8238,
											"end": 8355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8394,
											"end": 8396,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8420,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 8465,
											"end": 8472,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8441,
											"end": 8463,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8420,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 8420,
											"end": 8473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8420,
											"end": 8473,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 8420,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8410,
											"end": 8473,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8410,
											"end": 8473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8365,
											"end": 8483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8522,
											"end": 8524,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8548,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 8593,
											"end": 8600,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8584,
											"end": 8590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8573,
											"end": 8582,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8569,
											"end": 8591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8548,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8548,
											"end": 8601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8548,
											"end": 8601,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 8548,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8493,
											"end": 8611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8732,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 8624,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 8719,
											"end": 8724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 8701,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8725,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 8701,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8696,
											"end": 8699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8738,
											"end": 8837,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 8738,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 8824,
											"end": 8829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8809,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8807,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8797,
											"end": 8831,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8738,
											"end": 8837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8738,
											"end": 8837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8738,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8923,
											"end": 9645,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 8923,
											"end": 9645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9085,
											"end": 9088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9081,
											"end": 9095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9183,
											"end": 9187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9176,
											"end": 9181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9172,
											"end": 9188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9166,
											"end": 9189,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9202,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9254,
											"end": 9257,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9250,
											"end": 9264,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9202,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 9202,
											"end": 9265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9202,
											"end": 9265,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 9202,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9105,
											"end": 9275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9366,
											"end": 9370,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9364,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9355,
											"end": 9371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9349,
											"end": 9372,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9385,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 9442,
											"end": 9446,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9437,
											"end": 9440,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9433,
											"end": 9447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9419,
											"end": 9431,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9385,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 9385,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9385,
											"end": 9448,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 9385,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9285,
											"end": 9458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9552,
											"end": 9556,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9545,
											"end": 9550,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9541,
											"end": 9557,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9535,
											"end": 9558,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9617,
											"end": 9620,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9613,
											"end": 9627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9599,
											"end": 9611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9571,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9628,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 9571,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9468,
											"end": 9638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9059,
											"end": 9645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8923,
											"end": 9645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8923,
											"end": 9645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8923,
											"end": 9645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9651,
											"end": 10013,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 9651,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 9818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9841,
											"end": 9850,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9829,
											"end": 9855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9829,
											"end": 9855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9865,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9988,
											"end": 10005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 9985,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9865,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9865,
											"end": 10006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9865,
											"end": 10006,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 9865,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9651,
											"end": 10013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9651,
											"end": 10013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9651,
											"end": 10013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9651,
											"end": 10013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9651,
											"end": 10013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10019,
											"end": 10199,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 10019,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10067,
											"end": 10144,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10064,
											"end": 10065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10057,
											"end": 10145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10164,
											"end": 10168,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10154,
											"end": 10169,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10188,
											"end": 10192,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10185,
											"end": 10186,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10193,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10525,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 10205,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10249,
											"end": 10255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10287,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10280,
											"end": 10284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10288,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10266,
											"end": 10288,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10266,
											"end": 10288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10333,
											"end": 10334,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10327,
											"end": 10331,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10323,
											"end": 10335,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 10344,
											"end": 10425,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10410,
											"end": 10414,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10398,
											"end": 10415,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10388,
											"end": 10415,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10388,
											"end": 10415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10425,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 10344,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10472,
											"end": 10474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10464,
											"end": 10470,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10475,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10438,
											"end": 10476,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 10435,
											"end": 10519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10491,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 10491,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 10491,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10491,
											"end": 10509,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 10491,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10519,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 10435,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10671,
											"end": 10694,
											"name": "PUSH",
											"source": 11,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10648,
											"end": 10695,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10531,
											"end": 10702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 11074,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 10708,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10871,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 10935,
											"end": 10937,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 10930,
											"end": 10933,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10871,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 10871,
											"end": 10938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10871,
											"end": 10938,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 10871,
											"end": 10938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10947,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 11036,
											"end": 11039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10947,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 10947,
											"end": 11040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10947,
											"end": 11040,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 10947,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11065,
											"end": 11067,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11060,
											"end": 11063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11056,
											"end": 11068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11049,
											"end": 11068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 11074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 11074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 11074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 11074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11499,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 11080,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11246,
											"end": 11250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11286,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11273,
											"end": 11282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11261,
											"end": 11287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11261,
											"end": 11287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11342,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11327,
											"end": 11331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11323,
											"end": 11343,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11308,
											"end": 11317,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11304,
											"end": 11321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11297,
											"end": 11344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11361,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 11487,
											"end": 11491,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11361,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 11361,
											"end": 11492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11361,
											"end": 11492,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 11361,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11505,
											"end": 11685,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 11505,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11631,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11650,
											"end": 11654,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 11647,
											"end": 11648,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11640,
											"end": 11655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11674,
											"end": 11678,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11671,
											"end": 11672,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11664,
											"end": 11679,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11691,
											"end": 11882,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 11691,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11731,
											"end": 11734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11750,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 11768,
											"end": 11769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11750,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 11750,
											"end": 11770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11750,
											"end": 11770,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 11750,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 11802,
											"end": 11803,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 11784,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 11804,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 11784,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 11804,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 11804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11827,
											"end": 11828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 11825,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11820,
											"end": 11829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11845,
											"end": 11846,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11855,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 11855,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 11855,
											"end": 11873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11855,
											"end": 11873,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 11855,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11691,
											"end": 11882,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11691,
											"end": 11882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11691,
											"end": 11882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11691,
											"end": 11882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11691,
											"end": 11882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 12082,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 11888,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11928,
											"end": 11932,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11948,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 11966,
											"end": 11967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11948,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 11948,
											"end": 11968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11948,
											"end": 11968,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 11948,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11943,
											"end": 11968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11943,
											"end": 11968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 12000,
											"end": 12001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 11982,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12002,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 11982,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11977,
											"end": 12002,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11977,
											"end": 12002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12026,
											"end": 12027,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12019,
											"end": 12028,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12011,
											"end": 12028,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12011,
											"end": 12028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12051,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12044,
											"end": 12048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12041,
											"end": 12052,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12038,
											"end": 12075,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12038,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 12038,
											"end": 12075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 12055,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12038,
											"end": 12075,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 12038,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 12082,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 12082,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 12082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 12082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11888,
											"end": 12082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12253,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 12088,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12228,
											"end": 12245,
											"name": "PUSH",
											"source": 11,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 12224,
											"end": 12225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12222,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12212,
											"end": 12226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12205,
											"end": 12246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12259,
											"end": 12625,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 12259,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12401,
											"end": 12404,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12422,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 12486,
											"end": 12488,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 12481,
											"end": 12484,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 12422,
											"end": 12489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12489,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 12422,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12489,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12587,
											"end": 12590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 12498,
											"end": 12591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12591,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12498,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12616,
											"end": 12618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12611,
											"end": 12614,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12607,
											"end": 12619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12600,
											"end": 12619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12600,
											"end": 12619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12259,
											"end": 12625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12259,
											"end": 12625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12259,
											"end": 12625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12259,
											"end": 12625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13050,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 12631,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12797,
											"end": 12801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12824,
											"end": 12833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12820,
											"end": 12838,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12838,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12884,
											"end": 12893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12878,
											"end": 12882,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12874,
											"end": 12894,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12859,
											"end": 12868,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 13038,
											"end": 13042,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 12912,
											"end": 13043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13043,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 12912,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12904,
											"end": 13043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12904,
											"end": 13043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13050,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13050,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13050,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 13050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13466,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 13056,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13096,
											"end": 13103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 13137,
											"end": 13138,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 13119,
											"end": 13139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13139,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13153,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 13171,
											"end": 13172,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13153,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 13153,
											"end": 13173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13153,
											"end": 13173,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 13153,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13148,
											"end": 13173,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13148,
											"end": 13173,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13208,
											"end": 13209,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13205,
											"end": 13206,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13201,
											"end": 13210,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13230,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 13248,
											"end": 13259,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13230,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 13230,
											"end": 13260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13230,
											"end": 13260,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 13230,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13219,
											"end": 13260,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13219,
											"end": 13260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13409,
											"end": 13410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13400,
											"end": 13407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13396,
											"end": 13411,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13390,
											"end": 13412,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13370,
											"end": 13371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13363,
											"end": 13372,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13343,
											"end": 13426,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13320,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 13320,
											"end": 13459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13439,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 13439,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 13439,
											"end": 13457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13439,
											"end": 13457,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 13439,
											"end": 13457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13320,
											"end": 13459,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 13320,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13104,
											"end": 13466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13466,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13472,
											"end": 13652,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 13472,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13520,
											"end": 13597,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13517,
											"end": 13518,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13510,
											"end": 13598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13617,
											"end": 13621,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 13614,
											"end": 13615,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13607,
											"end": 13622,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13645,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13631,
											"end": 13646,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13843,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 13658,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13698,
											"end": 13699,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13715,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 13733,
											"end": 13734,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13715,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 13715,
											"end": 13735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13715,
											"end": 13735,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 13715,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13710,
											"end": 13735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13710,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13749,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13749,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 13749,
											"end": 13769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13749,
											"end": 13769,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 13749,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13744,
											"end": 13769,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13744,
											"end": 13769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13788,
											"end": 13789,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 13778,
											"end": 13813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 13793,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13813,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 13778,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13835,
											"end": 13836,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13828,
											"end": 13837,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13823,
											"end": 13837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13823,
											"end": 13837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13843,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13843,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13849,
											"end": 14025,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 13849,
											"end": 14025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13989,
											"end": 14017,
											"name": "PUSH",
											"source": 11,
											"value": "436F6D6D697373696F6E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 13985,
											"end": 13986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13973,
											"end": 13987,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13966,
											"end": 14018,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13849,
											"end": 14025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13849,
											"end": 14025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14397,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14031,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14173,
											"end": 14176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14194,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 14258,
											"end": 14260,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 14253,
											"end": 14256,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14194,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 14194,
											"end": 14261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14194,
											"end": 14261,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 14194,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14187,
											"end": 14261,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14187,
											"end": 14261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 14359,
											"end": 14362,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 14270,
											"end": 14363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14363,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 14270,
											"end": 14363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14388,
											"end": 14390,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14383,
											"end": 14386,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14379,
											"end": 14391,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14372,
											"end": 14391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14372,
											"end": 14391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14031,
											"end": 14397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14403,
											"end": 14822,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 14403,
											"end": 14822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14569,
											"end": 14573,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14609,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14605,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14592,
											"end": 14610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14584,
											"end": 14610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14584,
											"end": 14610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14656,
											"end": 14665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14650,
											"end": 14654,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14642,
											"end": 14643,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14631,
											"end": 14640,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14627,
											"end": 14644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14684,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14684,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14684,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14684,
											"end": 14815,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 14684,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14676,
											"end": 14815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14676,
											"end": 14815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14403,
											"end": 14822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14403,
											"end": 14822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14403,
											"end": 14822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14403,
											"end": 14822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14828,
											"end": 14998,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 14828,
											"end": 14998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14990,
											"name": "PUSH",
											"source": 11,
											"value": "57616765207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 14964,
											"end": 14965,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14956,
											"end": 14962,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14952,
											"end": 14966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14945,
											"end": 14991,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14828,
											"end": 14998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14828,
											"end": 14998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15004,
											"end": 15370,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 15004,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15146,
											"end": 15149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15167,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 15231,
											"end": 15233,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 15226,
											"end": 15229,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 15167,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15234,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 15167,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15160,
											"end": 15234,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15160,
											"end": 15234,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15243,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 15332,
											"end": 15335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15243,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 15243,
											"end": 15336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15243,
											"end": 15336,
											"name": "tag",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 15243,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15361,
											"end": 15363,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15356,
											"end": 15359,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15352,
											"end": 15364,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15345,
											"end": 15364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15345,
											"end": 15364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15004,
											"end": 15370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15004,
											"end": 15370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15004,
											"end": 15370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15004,
											"end": 15370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15376,
											"end": 15795,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 15376,
											"end": 15795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15580,
											"end": 15582,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15569,
											"end": 15578,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15565,
											"end": 15583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15557,
											"end": 15583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15557,
											"end": 15583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15638,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15619,
											"end": 15639,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15615,
											"end": 15616,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15604,
											"end": 15613,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15600,
											"end": 15617,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15593,
											"end": 15640,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15657,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 15783,
											"end": 15787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15657,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 15657,
											"end": 15788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15657,
											"end": 15788,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 15657,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15649,
											"end": 15788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15649,
											"end": 15788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15376,
											"end": 15795,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15376,
											"end": 15795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15376,
											"end": 15795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15376,
											"end": 15795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15979,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 15801,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15941,
											"end": 15971,
											"name": "PUSH",
											"source": 11,
											"value": "5061727469616C2077616765207472616E73666572206661696C656400000000"
										},
										{
											"begin": 15937,
											"end": 15938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15929,
											"end": 15935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15925,
											"end": 15939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 15972,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16351,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 15985,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16127,
											"end": 16130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16148,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 16212,
											"end": 16214,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 16207,
											"end": 16210,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16148,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 16148,
											"end": 16215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16148,
											"end": 16215,
											"name": "tag",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 16148,
											"end": 16215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16141,
											"end": 16215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16141,
											"end": 16215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 16313,
											"end": 16316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 16224,
											"end": 16317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16317,
											"name": "tag",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 16224,
											"end": 16317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16337,
											"end": 16340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16333,
											"end": 16345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16326,
											"end": 16345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16326,
											"end": 16345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16357,
											"end": 16776,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 16357,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16523,
											"end": 16527,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16561,
											"end": 16563,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16559,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16538,
											"end": 16564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16538,
											"end": 16564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16610,
											"end": 16619,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16604,
											"end": 16608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16600,
											"end": 16620,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16596,
											"end": 16597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16585,
											"end": 16594,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16581,
											"end": 16598,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16574,
											"end": 16621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16638,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 16764,
											"end": 16768,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16638,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 16638,
											"end": 16769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16638,
											"end": 16769,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 16638,
											"end": 16769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16630,
											"end": 16769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16630,
											"end": 16769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16357,
											"end": 16776,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16357,
											"end": 16776,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16357,
											"end": 16776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16357,
											"end": 16776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16782,
											"end": 16948,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 16782,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16922,
											"end": 16940,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 16918,
											"end": 16919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16910,
											"end": 16916,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16906,
											"end": 16920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16899,
											"end": 16941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16782,
											"end": 16948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16782,
											"end": 16948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16954,
											"end": 17320,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 16954,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17096,
											"end": 17099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 17181,
											"end": 17183,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 17176,
											"end": 17179,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17117,
											"end": 17184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 17117,
											"end": 17184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17117,
											"end": 17184,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 17117,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17110,
											"end": 17184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17110,
											"end": 17184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17193,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 17282,
											"end": 17285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17193,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 17193,
											"end": 17286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17193,
											"end": 17286,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 17193,
											"end": 17286,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17311,
											"end": 17313,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17306,
											"end": 17309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17302,
											"end": 17314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16954,
											"end": 17320,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16954,
											"end": 17320,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16954,
											"end": 17320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16954,
											"end": 17320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17326,
											"end": 17745,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 17326,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17492,
											"end": 17496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17530,
											"end": 17532,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17519,
											"end": 17528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17507,
											"end": 17533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17507,
											"end": 17533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17579,
											"end": 17588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17573,
											"end": 17577,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17589,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17565,
											"end": 17566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17554,
											"end": 17563,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17550,
											"end": 17567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17543,
											"end": 17590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17607,
											"end": 17738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 17733,
											"end": 17737,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17607,
											"end": 17738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 17607,
											"end": 17738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17607,
											"end": 17738,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 17607,
											"end": 17738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17599,
											"end": 17738,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17599,
											"end": 17738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17326,
											"end": 17745,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17326,
											"end": 17745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17326,
											"end": 17745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17326,
											"end": 17745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17751,
											"end": 17932,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 17751,
											"end": 17932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17891,
											"end": 17924,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17879,
											"end": 17885,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17875,
											"end": 17889,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17868,
											"end": 17925,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17751,
											"end": 17932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17751,
											"end": 17932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18304,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 17938,
											"end": 18304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18080,
											"end": 18083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18101,
											"end": 18168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 18165,
											"end": 18167,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 18160,
											"end": 18163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18101,
											"end": 18168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 18101,
											"end": 18168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18101,
											"end": 18168,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 18101,
											"end": 18168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18094,
											"end": 18168,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18094,
											"end": 18168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 18266,
											"end": 18269,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 18177,
											"end": 18270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18270,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 18177,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18295,
											"end": 18297,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18290,
											"end": 18293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18286,
											"end": 18298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18279,
											"end": 18298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18279,
											"end": 18298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18304,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18310,
											"end": 18729,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 18310,
											"end": 18729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18514,
											"end": 18516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18503,
											"end": 18512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18499,
											"end": 18517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18491,
											"end": 18517,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18491,
											"end": 18517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18563,
											"end": 18572,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18557,
											"end": 18561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18553,
											"end": 18573,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18549,
											"end": 18550,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18538,
											"end": 18547,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18534,
											"end": 18551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18591,
											"end": 18722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 18717,
											"end": 18721,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18591,
											"end": 18722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 18591,
											"end": 18722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18591,
											"end": 18722,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 18591,
											"end": 18722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18583,
											"end": 18722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18583,
											"end": 18722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18310,
											"end": 18729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18310,
											"end": 18729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18310,
											"end": 18729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18310,
											"end": 18729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18884,
											"end": 18888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18922,
											"end": 18924,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18911,
											"end": 18920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18907,
											"end": 18925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18899,
											"end": 18925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18899,
											"end": 18925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18935,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 19003,
											"end": 19004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18992,
											"end": 19001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18988,
											"end": 19005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18979,
											"end": 18985,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18935,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 18935,
											"end": 19006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18935,
											"end": 19006,
											"name": "tag",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 18935,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19016,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 19084,
											"end": 19086,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19073,
											"end": 19082,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19069,
											"end": 19087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19060,
											"end": 19066,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19016,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 19016,
											"end": 19088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19016,
											"end": 19088,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 19016,
											"end": 19088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 19166,
											"end": 19168,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19155,
											"end": 19164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19151,
											"end": 19169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19142,
											"end": 19148,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 19098,
											"end": 19170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "tag",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18735,
											"end": 19177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19183,
											"end": 19353,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 19183,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19323,
											"end": 19345,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 19319,
											"end": 19320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19311,
											"end": 19317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19307,
											"end": 19321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19300,
											"end": 19346,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19183,
											"end": 19353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19183,
											"end": 19353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19725,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 19359,
											"end": 19725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19501,
											"end": 19504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19522,
											"end": 19589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 19586,
											"end": 19588,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 19581,
											"end": 19584,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19522,
											"end": 19589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 19522,
											"end": 19589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19522,
											"end": 19589,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 19522,
											"end": 19589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19515,
											"end": 19589,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19515,
											"end": 19589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19598,
											"end": 19691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 19687,
											"end": 19690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19598,
											"end": 19691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 19598,
											"end": 19691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19598,
											"end": 19691,
											"name": "tag",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 19598,
											"end": 19691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19716,
											"end": 19718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19711,
											"end": 19714,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19707,
											"end": 19719,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19700,
											"end": 19719,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19700,
											"end": 19719,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19725,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19731,
											"end": 20150,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 19731,
											"end": 20150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19897,
											"end": 19901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19935,
											"end": 19937,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19924,
											"end": 19933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19920,
											"end": 19938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19912,
											"end": 19938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19912,
											"end": 19938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19984,
											"end": 19993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19978,
											"end": 19982,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19974,
											"end": 19994,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19970,
											"end": 19971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19959,
											"end": 19968,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19955,
											"end": 19972,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19948,
											"end": 19995,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20012,
											"end": 20143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 20138,
											"end": 20142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20012,
											"end": 20143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 20012,
											"end": 20143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20012,
											"end": 20143,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 20012,
											"end": 20143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20004,
											"end": 20143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20004,
											"end": 20143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19731,
											"end": 20150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19731,
											"end": 20150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19731,
											"end": 20150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19731,
											"end": 20150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Signs 2/ISigns.sol",
								"Signs 2/ISignsNFT.sol",
								"Signs 2/SignsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"chargeSignBalance(uint256,uint256)": "5e182096",
							"commissionPercent()": "77d3550b",
							"commissionTreasury()": "e95850df",
							"decimals()": "313ce567",
							"getApprovalInfo(address)": "1ec48cf7",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"payWage(uint256,address,uint256)": "ef9ecc1d",
							"renounceOwnership()": "715018a6",
							"signBalances(uint256)": "ca525485",
							"signsNFT()": "2a26c9cd",
							"signsNFTContract()": "a3262ea2",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateCommission(uint256)": "9d55fba7",
							"updateCommissionTreasury(address)": "74612f19",
							"updateSignsNFTContract(address)": "2fcdc5fd",
							"withdrawSignBalance(uint256,uint256)": "a9b493e0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_signsNFTContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_commissionTreasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSignBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNFTContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTreasuryAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CommissionPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"CommissionTreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCommissionPercent\",\"type\":\"uint256\"}],\"name\":\"CommissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requiredAmount\",\"type\":\"uint256\"}],\"name\":\"LowSignBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"NFTContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingUnpaid\",\"type\":\"uint256\"}],\"name\":\"PartialWagePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SignBalanceCharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SignBalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WagePaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"chargeSignBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getApprovalInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payWage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingWage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPartialPayment\",\"type\":\"bool\"}],\"internalType\":\"struct SignToken.WagePaymentResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signsNFT\",\"outputs\":[{\"internalType\":\"contract ISignsNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signsNFTContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCommissionPercent\",\"type\":\"uint256\"}],\"name\":\"updateCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateCommissionTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updateSignsNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawSignBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token for the Signs game economy, managing sign balances and wage payments\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"chargeSignBalance(uint256,uint256)\":{\"details\":\"Charges a sign's balance with tokens\",\"params\":{\"amount\":\"Amount of tokens to charge\",\"tokenId\":\"The ID of the sign to charge\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payWage(uint256,address,uint256)\":{\"details\":\"Pays wage to carrier from sign's balance, handles partial payments\",\"params\":{\"amount\":\"Amount of wage to pay\",\"carrier\":\"Address of the carrier to pay\",\"tokenId\":\"The ID of the sign\"},\"returns\":{\"_0\":\"result WagePaymentResult struct with payment details\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCommission(uint256)\":{\"details\":\"Updates the commission percentage\",\"params\":{\"newCommissionPercent\":\"New commission in basis points (1% = 100)\"}},\"updateCommissionTreasury(address)\":{\"details\":\"Updates the commission treasury address\",\"params\":{\"newTreasury\":\"New treasury address\"}},\"updateSignsNFTContract(address)\":{\"details\":\"Updates the SignsNFT contract address\",\"params\":{\"_newAddress\":\"New contract address\"}},\"withdrawSignBalance(uint256,uint256)\":{\"details\":\"Withdraws tokens from a sign's balance back to the owner\",\"params\":{\"amount\":\"Amount to withdraw\",\"tokenId\":\"The ID of the sign\"}}},\"title\":\"SignToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Signs 2/SignsToken.sol\":\"SignToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Signs 2/ISigns.sol\":{\"keccak256\":\"0x9c0bef879fb7feff9e671c7da1d5ee05635a3efd3828c3fa2c0ca8bf45c30fe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14d373e0f2aa9296521a57c7eb51c1df0bf1a86b189b0c05bf4dc4254b7c0ad4\",\"dweb:/ipfs/Qmcmh3KGqJ1efv8EQUf2h18saPd4PUvtAqcqnde2KsdETr\"]},\"Signs 2/ISignsNFT.sol\":{\"keccak256\":\"0x0b60a8c4fc04df1d276f2cecdce1cf978aafa1523eb70fbf4799f21d579a5245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d32b9c158e6f97269d96dfe2a1b56ba4760e660cdc9a6e6181aa9d15d078729\",\"dweb:/ipfs/QmaP7HD3v7jLcdc1zxU5LVLA7Zw59uQMm2q157zf8c8MJh\"]},\"Signs 2/SignsToken.sol\":{\"keccak256\":\"0xe680a18a76f7b135a97c7b38ebe774445a1e73a60833f68c3a83582ca34737a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efce9976ab76d770ce8d70a9eaaca0adb8e0f7beb4eaa22190ada89a33374eb\",\"dweb:/ipfs/QmNQVAhnnQZCbHVxLLKhg9pN2JMTYYSddvGKwS6dBWPGNr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 302,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1214,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "signsNFT",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(ISignsNFT)1194"
							},
							{
								"astId": 1216,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "signsNFTContract",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1218,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "commissionPercent",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1220,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "commissionTreasury",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1227,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "signBalances",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ISignsNFT)1194": {
								"encoding": "inplace",
								"label": "contract ISignsNFT",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Signs 2/SignsToken.sol:79:9:\n   |\n79 |         address sender = msg.sender;\n   |         ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2876,
					"file": "Signs 2/SignsToken.sol",
					"start": 2862
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Signs 2/SignsToken.sol:220:27:\n    |\n220 |     function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\n    |                           ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8595,
					"file": "Signs 2/SignsToken.sol",
					"start": 8582
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Signs 2/SignsToken.sol:220:42:\n    |\n220 |     function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\n    |                                          ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8612,
					"file": "Signs 2/SignsToken.sol",
					"start": 8597
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> Signs 2/SignsToken.sol:220:5:\n    |\n220 |     function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 8841,
					"file": "Signs 2/SignsToken.sol",
					"start": 8560
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1107,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1106
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1107,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1106
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1077,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1107,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1133:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1142:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1150:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 972,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 972,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 972,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 972,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 972,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 972,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 972,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 972,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 972,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 972,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 972,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 972,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 972,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 972,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 972,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 972,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 972,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1106:9788:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1050,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1050,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1050,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1050,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1050,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1050,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1051,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "306:6:6"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1076,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1076,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1076,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1106,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1106,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1106,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"Signs 2/ISigns.sol": {
				"ast": {
					"absolutePath": "Signs 2/ISigns.sol",
					"exportedSymbols": {
						"ISigns": [
							1144
						]
					},
					"id": 1145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISigns",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1144,
							"linearizedBaseContracts": [
								1144
							],
							"name": "ISigns",
							"nameLocation": "71:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISigns.Location",
									"id": 1115,
									"members": [
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "latitude",
											"nameLocation": "118:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "112:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 1109,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "112:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1112,
											"mutability": "mutable",
											"name": "longitude",
											"nameLocation": "190:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "184:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 1111,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "184:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1114,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "265:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "258:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1113,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "258:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Location",
									"nameLocation": "92:8:8",
									"nodeType": "StructDefinition",
									"scope": 1144,
									"src": "85:222:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ISigns.MovementRecord",
									"id": 1126,
									"members": [
										{
											"constant": false,
											"id": 1118,
											"mutability": "mutable",
											"name": "fromLocation",
											"nameLocation": "357:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "348:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
												"typeString": "struct ISigns.Location"
											},
											"typeName": {
												"id": 1117,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1116,
													"name": "Location",
													"nameLocations": [
														"348:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1115,
													"src": "348:8:8"
												},
												"referencedDeclaration": 1115,
												"src": "348:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
													"typeString": "struct ISigns.Location"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1121,
											"mutability": "mutable",
											"name": "toLocation",
											"nameLocation": "389:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "380:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
												"typeString": "struct ISigns.Location"
											},
											"typeName": {
												"id": 1120,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1119,
													"name": "Location",
													"nameLocations": [
														"380:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1115,
													"src": "380:8:8"
												},
												"referencedDeclaration": 1115,
												"src": "380:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
													"typeString": "struct ISigns.Location"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1123,
											"mutability": "mutable",
											"name": "carrier",
											"nameLocation": "418:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "410:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "wage",
											"nameLocation": "443:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "436:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1124,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "436:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MovementRecord",
									"nameLocation": "322:14:8",
									"nodeType": "StructDefinition",
									"scope": 1144,
									"src": "315:140:8",
									"visibility": "public"
								},
								{
									"functionSelector": "080807be",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recordMovement",
									"nameLocation": "472:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "505:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "497:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "531:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "523:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "fromLoc",
												"nameLocation": "567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "549:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_calldata_ptr",
													"typeString": "struct ISigns.Location"
												},
												"typeName": {
													"id": 1132,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1131,
														"name": "Location",
														"nameLocations": [
															"549:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1115,
														"src": "549:8:8"
													},
													"referencedDeclaration": 1115,
													"src": "549:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
														"typeString": "struct ISigns.Location"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "toLoc",
												"nameLocation": "603:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "585:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_calldata_ptr",
													"typeString": "struct ISigns.Location"
												},
												"typeName": {
													"id": 1135,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1134,
														"name": "Location",
														"nameLocations": [
															"585:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1115,
														"src": "585:8:8"
													},
													"referencedDeclaration": 1115,
													"src": "585:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
														"typeString": "struct ISigns.Location"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "wage",
												"nameLocation": "627:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "619:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "contentHash",
												"nameLocation": "650:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "642:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:182:8"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:8"
									},
									"scope": 1144,
									"src": "463:215:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1145,
							"src": "61:620:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:648:8"
				},
				"id": 8
			},
			"Signs 2/ISignsNFT.sol": {
				"ast": {
					"absolutePath": "Signs 2/ISignsNFT.sol",
					"exportedSymbols": {
						"ISigns": [
							1144
						],
						"ISignsNFT": [
							1194
						]
					},
					"id": 1195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "Signs 2/ISigns.sol",
							"file": "./ISigns.sol",
							"id": 1147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1195,
							"sourceUnit": 1145,
							"src": "61:22:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISignsNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1194,
							"linearizedBaseContracts": [
								1194
							],
							"name": "ISignsNFT",
							"nameLocation": "97:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISignsNFT.Sign",
									"id": 1168,
									"members": [
										{
											"constant": false,
											"id": 1150,
											"mutability": "mutable",
											"name": "home",
											"nameLocation": "153:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "137:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
												"typeString": "struct ISigns.Location"
											},
											"typeName": {
												"id": 1149,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1148,
													"name": "ISigns.Location",
													"nameLocations": [
														"137:6:9",
														"144:8:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1115,
													"src": "137:15:9"
												},
												"referencedDeclaration": 1115,
												"src": "137:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
													"typeString": "struct ISigns.Location"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "current",
											"nameLocation": "184:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "168:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
												"typeString": "struct ISigns.Location"
											},
											"typeName": {
												"id": 1152,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1151,
													"name": "ISigns.Location",
													"nameLocations": [
														"168:6:9",
														"175:8:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1115,
													"src": "168:15:9"
												},
												"referencedDeclaration": 1115,
												"src": "168:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
													"typeString": "struct ISigns.Location"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "totalMoves",
											"nameLocation": "210:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "202:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "202:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "totalDistanceMeters",
											"nameLocation": "239:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "231:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "231:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "277:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "269:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "269:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "302:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "294:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1160,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "294:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "isPickedUp",
											"nameLocation": "323:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "318:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1162,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "318:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "contentHash",
											"nameLocation": "352:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "344:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1164,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "344:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "signWage",
											"nameLocation": "382:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "374:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1166,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Sign",
									"nameLocation": "121:4:9",
									"nodeType": "StructDefinition",
									"scope": 1194,
									"src": "114:284:9",
									"visibility": "public"
								},
								{
									"functionSelector": "cb75b997",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "signs",
									"nameLocation": "419:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "433:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "425:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:17:9"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "home",
												"nameLocation": "498:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "475:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_memory_ptr",
													"typeString": "struct ISigns.Location"
												},
												"typeName": {
													"id": 1173,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1172,
														"name": "ISigns.Location",
														"nameLocations": [
															"475:6:9",
															"482:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1115,
														"src": "475:15:9"
													},
													"referencedDeclaration": 1115,
													"src": "475:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
														"typeString": "struct ISigns.Location"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "536:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "513:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Location_$1115_memory_ptr",
													"typeString": "struct ISigns.Location"
												},
												"typeName": {
													"id": 1176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1175,
														"name": "ISigns.Location",
														"nameLocations": [
															"513:6:9",
															"520:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1115,
														"src": "513:15:9"
													},
													"referencedDeclaration": 1115,
													"src": "513:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Location_$1115_storage_ptr",
														"typeString": "struct ISigns.Location"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "totalMoves",
												"nameLocation": "562:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "554:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "totalDistanceMeters",
												"nameLocation": "591:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "583:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "629:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "621:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "654:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "646:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "isPickedUp",
												"nameLocation": "675:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "670:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "contentHash",
												"nameLocation": "704:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "696:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "signWage",
												"nameLocation": "734:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "726:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:285:9"
									},
									"scope": 1194,
									"src": "410:340:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1195,
							"src": "87:666:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:720:9"
				},
				"id": 9
			},
			"Signs 2/SignsToken.sol": {
				"ast": {
					"absolutePath": "Signs 2/SignsToken.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						],
						"ISigns": [
							1144
						],
						"ISignsNFT": [
							1194
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						],
						"SignToken": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 973,
							"src": "61:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 393,
							"src": "118:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 148,
							"src": "175:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 458,
							"src": "229:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Signs 2/ISigns.sol",
							"file": "./ISigns.sol",
							"id": 1201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1145,
							"src": "293:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Signs 2/ISignsNFT.sol",
							"file": "./ISignsNFT.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1195,
							"src": "317:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1204,
										"name": "ERC20",
										"nameLocations": [
											"489:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "489:5:10"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "489:5:10"
								},
								{
									"baseName": {
										"id": 1206,
										"name": "Pausable",
										"nameLocations": [
											"496:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "496:8:10"
									},
									"id": 1207,
									"nodeType": "InheritanceSpecifier",
									"src": "496:8:10"
								},
								{
									"baseName": {
										"id": 1208,
										"name": "Ownable",
										"nameLocations": [
											"506:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "506:7:10"
									},
									"id": 1209,
									"nodeType": "InheritanceSpecifier",
									"src": "506:7:10"
								},
								{
									"baseName": {
										"id": 1210,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"515:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "515:15:10"
									},
									"id": 1211,
									"nodeType": "InheritanceSpecifier",
									"src": "515:15:10"
								}
							],
							"canonicalName": "SignToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "346:119:10",
								"text": " @title SignToken\n @dev ERC20 token for the Signs game economy, managing sign balances and wage payments"
							},
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								457,
								147,
								392,
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "SignToken",
							"nameLocation": "476:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2a26c9cd",
									"id": 1214,
									"mutability": "mutable",
									"name": "signsNFT",
									"nameLocation": "583:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "566:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISignsNFT_$1194",
										"typeString": "contract ISignsNFT"
									},
									"typeName": {
										"id": 1213,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1212,
											"name": "ISignsNFT",
											"nameLocations": [
												"566:9:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1194,
											"src": "566:9:10"
										},
										"referencedDeclaration": 1194,
										"src": "566:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISignsNFT_$1194",
											"typeString": "contract ISignsNFT"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3262ea2",
									"id": 1216,
									"mutability": "mutable",
									"name": "signsNFTContract",
									"nameLocation": "613:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "598:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "598:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "77d3550b",
									"id": 1218,
									"mutability": "mutable",
									"name": "commissionPercent",
									"nameLocation": "685:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "670:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "670:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e95850df",
									"id": 1220,
									"mutability": "mutable",
									"name": "commissionTreasury",
									"nameLocation": "765:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "750:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1219,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "750:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1223,
									"mutability": "constant",
									"name": "BASIS_POINTS",
									"nameLocation": "839:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "814:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "854:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ca525485",
									"id": 1227,
									"mutability": "mutable",
									"name": "signBalances",
									"nameLocation": "945:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "910:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1226,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "918:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "910:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1225,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "929:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd",
									"id": 1233,
									"name": "SignBalanceCharged",
									"nameLocation": "1014:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1049:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1033:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1066:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1058:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:41:10"
									},
									"src": "1008:66:10"
								},
								{
									"anonymous": false,
									"eventSelector": "4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb",
									"id": 1241,
									"name": "SignBalanceWithdrawn",
									"nameLocation": "1086:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1123:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1107:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1148:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1132:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1163:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1155:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:64:10"
									},
									"src": "1080:91:10"
								},
								{
									"anonymous": false,
									"eventSelector": "4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca",
									"id": 1249,
									"name": "WagePaid",
									"nameLocation": "1183:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1208:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "1192:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"indexed": true,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "1233:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "1217:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1250:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "1242:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:66:10"
									},
									"src": "1177:81:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9",
									"id": 1253,
									"name": "NFTContractUpdated",
									"nameLocation": "1270:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1297:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1289:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:10"
									},
									"src": "1264:45:10"
								},
								{
									"anonymous": false,
									"eventSelector": "13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e",
									"id": 1257,
									"name": "CommissionUpdated",
									"nameLocation": "1321:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCommissionPercent",
												"nameLocation": "1347:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1339:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:30:10"
									},
									"src": "1315:54:10"
								},
								{
									"anonymous": false,
									"eventSelector": "4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f",
									"id": 1261,
									"name": "CommissionTreasuryUpdated",
									"nameLocation": "1381:25:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "1415:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1407:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:21:10"
									},
									"src": "1375:53:10"
								},
								{
									"anonymous": false,
									"eventSelector": "acfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d5277",
									"id": 1267,
									"name": "CommissionPaid",
									"nameLocation": "1440:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1471:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1455:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1488:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1480:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:41:10"
									},
									"src": "1434:62:10"
								},
								{
									"errorSelector": "5c427cd9",
									"id": 1269,
									"name": "UnauthorizedCaller",
									"nameLocation": "1529:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:2:10"
									},
									"src": "1523:27:10"
								},
								{
									"errorSelector": "dc81db85",
									"id": 1271,
									"name": "InvalidCommission",
									"nameLocation": "1562:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1579:2:10"
									},
									"src": "1556:26:10"
								},
								{
									"errorSelector": "cfe2ea63",
									"id": 1273,
									"name": "InvalidTreasuryAddress",
									"nameLocation": "1594:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:2:10"
									},
									"src": "1588:31:10"
								},
								{
									"errorSelector": "a77130ef",
									"id": 1275,
									"name": "InsufficientSignBalance",
									"nameLocation": "1631:23:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:2:10"
									},
									"src": "1625:32:10"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1277,
									"name": "InsufficientBalance",
									"nameLocation": "1669:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1688:2:10"
									},
									"src": "1663:28:10"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1279,
									"name": "InvalidAmount",
									"nameLocation": "1703:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:10"
									},
									"src": "1697:22:10"
								},
								{
									"errorSelector": "f8af67e5",
									"id": 1281,
									"name": "InvalidNFTContract",
									"nameLocation": "1731:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:2:10"
									},
									"src": "1725:27:10"
								},
								{
									"errorSelector": "de271cf5",
									"id": 1283,
									"name": "UnauthorizedOwner",
									"nameLocation": "1764:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:2:10"
									},
									"src": "1758:26:10"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "1985:389:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "_signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "2000:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2021:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2021:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2021:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2000:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "1996:64:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1308,
															"name": "InvalidNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "2040:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2040:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1310,
													"nodeType": "RevertStatement",
													"src": "2033:27:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1312,
														"name": "_commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "2075:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2106:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2098:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1313,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2098:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2098:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2075:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1321,
												"nodeType": "IfStatement",
												"src": "2071:70:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1318,
															"name": "InvalidTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2117:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2117:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1320,
													"nodeType": "RevertStatement",
													"src": "2110:31:10"
												}
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1322,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2162:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1323,
														"name": "_signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "2181:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2162:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2162:36:10"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1326,
														"name": "commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "2209:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1327,
														"name": "_commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "2230:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2209:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "2209:40:10"
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1330,
														"name": "commissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "2260:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2280:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "2260:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "2260:23:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1335,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2327:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2331:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2327:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f303030",
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2339:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1339,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "2355:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2351:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2339:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1334,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "2321:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "2321:45:10"
											}
										]
									},
									"id": 1346,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1294,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1285,
													"src": "1951:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1295,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "1957:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1296,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1293,
												"name": "ERC20",
												"nameLocations": [
													"1945:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "1945:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1945:19:10"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1973:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1977:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1973:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1300,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1297,
												"name": "Ownable",
												"nameLocations": [
													"1965:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1965:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1965:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1828:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1814:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1814:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1857:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1843:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1843:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_signsNFTContract",
												"nameLocation": "1882:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1874:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_commissionTreasury",
												"nameLocation": "1918:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1910:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:141:10"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:0:10"
									},
									"scope": 1844,
									"src": "1792:582:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "2424:94:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1348,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2439:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2443:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2439:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1350,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2453:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2439:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1355,
												"nodeType": "IfStatement",
												"src": "2435:63:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1352,
															"name": "UnauthorizedCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2478:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2478:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1354,
													"nodeType": "RevertStatement",
													"src": "2471:27:10"
												}
											},
											{
												"id": 1356,
												"nodeType": "PlaceholderStatement",
												"src": "2509:1:10"
											}
										]
									},
									"id": 1358,
									"name": "onlySignsNFT",
									"nameLocation": "2409:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2421:2:10"
									},
									"src": "2400:118:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "2791:506:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1370,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "2806:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2816:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2806:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "2802:39:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1373,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "2826:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2826:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1375,
													"nodeType": "RevertStatement",
													"src": "2819:22:10"
												}
											},
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2870:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "2862:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2862:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"expression": {
														"id": 1379,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2879:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2883:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2879:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2862:27:10"
											},
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3048:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "3043:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1382,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3043:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"arguments": [
														{
															"id": 1385,
															"name": "signsNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3067:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "3085:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1799
														],
														"referencedDeclaration": 1799,
														"src": "3058:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3058:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3043:49:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1390,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "3111:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3120:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3103:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "3103:41:10"
											},
											{
												"expression": {
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1394,
															"name": "signBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "3197:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1396,
														"indexExpression": {
															"id": 1395,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "3210:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3197:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1397,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "3222:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3197:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "3197:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1401,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "3273:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1402,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "3282:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1400,
														"name": "SignBalanceCharged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "3254:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "EmitStatement",
												"src": "3249:40:10"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "2526:163:10",
										"text": " @dev Charges a sign's balance with tokens\n @param tokenId The ID of the sign to charge\n @param amount Amount of tokens to charge"
									},
									"functionSelector": "5e182096",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1365,
												"name": "nonReentrant",
												"nameLocations": [
													"2764:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "2764:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2764:12:10"
										},
										{
											"id": 1368,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1367,
												"name": "whenNotPaused",
												"nameLocations": [
													"2777:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2777:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2777:13:10"
										}
									],
									"name": "chargeSignBalance",
									"nameLocation": "2704:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2730:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2722:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:33:10"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2791:0:10"
									},
									"scope": 1844,
									"src": "2695:602:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "3574:652:10",
										"statements": [
											{
												"condition": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3655:34:10",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1419,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3669:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3673:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3669:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1421,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "3681:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1418,
															"name": "_isSignOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "3656:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) view returns (bool)"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3656:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1427,
												"nodeType": "IfStatement",
												"src": "3651:66:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1424,
															"name": "UnauthorizedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3698:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3698:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1426,
													"nodeType": "RevertStatement",
													"src": "3691:26:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1428,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3742:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3752:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3742:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1434,
												"nodeType": "IfStatement",
												"src": "3738:39:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1431,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "3762:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3762:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1433,
													"nodeType": "RevertStatement",
													"src": "3755:22:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1435,
															"name": "signBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "3792:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1437,
														"indexExpression": {
															"id": 1436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3805:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3792:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1438,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3816:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3792:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "3788:68:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1440,
															"name": "InsufficientSignBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "3831:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3831:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1442,
													"nodeType": "RevertStatement",
													"src": "3824:32:10"
												}
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1444,
															"name": "signBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "3920:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1446,
														"indexExpression": {
															"id": 1445,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3933:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3920:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1447,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3945:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "3920:31:10"
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4037:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "4032:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1450,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4032:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"arguments": [
														{
															"id": 1453,
															"name": "signsNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "4060:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4078:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4082:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4078:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "4090:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1821
														],
														"referencedDeclaration": 1821,
														"src": "4047:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4047:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4032:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "4116:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4125:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4108:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "4108:35:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1465,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "4190:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4199:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4203:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4199:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "4211:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1464,
														"name": "SignBalanceWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "4169:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4169:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "EmitStatement",
												"src": "4164:54:10"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "3305:165:10",
										"text": " @dev Withdraws tokens from a sign's balance back to the owner\n @param tokenId The ID of the sign\n @param amount Amount to withdraw"
									},
									"functionSelector": "a9b493e0",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1414,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1413,
												"name": "nonReentrant",
												"nameLocations": [
													"3547:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "3547:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3547:12:10"
										},
										{
											"id": 1416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1415,
												"name": "whenNotPaused",
												"nameLocations": [
													"3560:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "3560:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3560:13:10"
										}
									],
									"name": "withdrawSignBalance",
									"nameLocation": "3485:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3513:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3505:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3530:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3522:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3504:33:10"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3574:0:10"
									},
									"scope": 1844,
									"src": "3476:750:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "SignToken.WagePaymentResult",
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "4234:205:10",
										"text": " @dev Pays wage to carrier from sign's balance\n @param tokenId The ID of the sign\n @param carrier Address of the carrier to pay\n @param amount Amount of wage to pay"
									},
									"id": 1480,
									"members": [
										{
											"constant": false,
											"id": 1475,
											"mutability": "mutable",
											"name": "paidAmount",
											"nameLocation": "4489:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1480,
											"src": "4481:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1474,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4481:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1477,
											"mutability": "mutable",
											"name": "remainingWage",
											"nameLocation": "4545:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 1480,
											"src": "4537:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1476,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4537:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1479,
											"mutability": "mutable",
											"name": "isPartialPayment",
											"nameLocation": "4593:16:10",
											"nodeType": "VariableDeclaration",
											"scope": 1480,
											"src": "4588:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1478,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4588:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WagePaymentResult",
									"nameLocation": "4452:17:10",
									"nodeType": "StructDefinition",
									"scope": 1844,
									"src": "4445:212:10",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f",
									"id": 1488,
									"name": "LowSignBalance",
									"nameLocation": "4671:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4702:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "4686:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "4719:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "4711:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "requiredAmount",
												"nameLocation": "4743:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "4735:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:73:10"
									},
									"src": "4665:94:10"
								},
								{
									"anonymous": false,
									"eventSelector": "5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb5243290",
									"id": 1498,
									"name": "PartialWagePaid",
									"nameLocation": "4771:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4813:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "4797:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "4848:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "4832:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4832:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "paidAmount",
												"nameLocation": "4875:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "4867:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": false,
												"mutability": "mutable",
												"name": "remainingUnpaid",
												"nameLocation": "4905:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "4897:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4897:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:141:10"
									},
									"src": "4765:163:10"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "5427:2568:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5442:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5452:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5442:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "5438:39:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1520,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "5462:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5462:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1522,
													"nodeType": "RevertStatement",
													"src": "5455:22:10"
												}
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "5506:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "5498:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5498:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"baseExpression": {
														"id": 1526,
														"name": "signBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "5523:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1528,
													"indexExpression": {
														"id": 1527,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "5536:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5523:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5498:46:10"
											},
											{
												"assignments": [
													1531
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "isFullPayment",
														"nameLocation": "5560:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "5555:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5555:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1532,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "5576:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1533,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5594:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5576:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5555:45:10"
											},
											{
												"assignments": [
													1537
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "paymentAmount",
														"nameLocation": "5619:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "5611:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5611:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1538,
												"nodeType": "VariableDeclarationStatement",
												"src": "5611:21:10"
											},
											{
												"assignments": [
													1540
												],
												"declarations": [
													{
														"constant": false,
														"id": 1540,
														"mutability": "mutable",
														"name": "commissionAmount",
														"nameLocation": "5651:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "5643:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5643:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1541,
												"nodeType": "VariableDeclarationStatement",
												"src": "5643:24:10"
											},
											{
												"condition": {
													"id": 1542,
													"name": "isFullPayment",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1531,
													"src": "5820:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1653,
													"nodeType": "Block",
													"src": "6976:815:10",
													"statements": [
														{
															"expression": {
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1607,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "7043:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1608,
																	"name": "currentBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "7059:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7043:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1610,
															"nodeType": "ExpressionStatement",
															"src": "7043:30:10"
														},
														{
															"expression": {
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1611,
																	"name": "commissionAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "7088:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7107:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7088:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "7088:20:10"
														},
														{
															"expression": {
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1615,
																		"name": "signBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "7184:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1617,
																	"indexExpression": {
																		"id": 1616,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "7197:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7184:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7208:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7184:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "7184:25:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1621,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "7242:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7258:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7242:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1646,
															"nodeType": "IfStatement",
															"src": "7238:461:10",
															"trueBody": {
																"id": 1645,
																"nodeType": "Block",
																"src": "7261:438:10",
																"statements": [
																	{
																		"assignments": [
																			1625
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1625,
																				"mutability": "mutable",
																				"name": "success",
																				"nameLocation": "7460:7:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1645,
																				"src": "7455:12:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1624,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "7455:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1630,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1627,
																					"name": "carrier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1503,
																					"src": "7479:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1628,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1537,
																					"src": "7488:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1626,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1799
																				],
																				"referencedDeclaration": 1799,
																				"src": "7470:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7470:32:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7455:47:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1632,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1625,
																					"src": "7529:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5061727469616c2077616765207472616e73666572206661696c6564",
																					"id": 1633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7538:30:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
																						"typeString": "literal_string \"Partial wage transfer failed\""
																					},
																					"value": "Partial wage transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
																						"typeString": "literal_string \"Partial wage transfer failed\""
																					}
																				],
																				"id": 1631,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7521:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7521:48:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1635,
																		"nodeType": "ExpressionStatement",
																		"src": "7521:48:10"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1637,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "7627:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1638,
																					"name": "carrier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1503,
																					"src": "7636:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1639,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1537,
																					"src": "7645:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1640,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1505,
																						"src": "7660:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1641,
																						"name": "paymentAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1537,
																						"src": "7669:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7660:22:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1636,
																				"name": "PartialWagePaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1498,
																				"src": "7611:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,address,uint256,uint256)"
																				}
																			},
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7611:72:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1644,
																		"nodeType": "EmitStatement",
																		"src": "7606:77:10"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "7747:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1649,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "7756:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1650,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "7772:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1647,
																	"name": "LowSignBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "7732:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7732:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1652,
															"nodeType": "EmitStatement",
															"src": "7727:52:10"
														}
													]
												},
												"id": 1654,
												"nodeType": "IfStatement",
												"src": "5816:1975:10",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "5835:1135:10",
													"statements": [
														{
															"expression": {
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1543,
																	"name": "commissionAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "5887:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1544,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1505,
																					"src": "5907:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1545,
																					"name": "commissionPercent",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1218,
																					"src": "5916:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5907:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5906:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1548,
																		"name": "BASIS_POINTS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "5937:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5906:43:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5887:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "5887:62:10"
														},
														{
															"expression": {
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1552,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "5964:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1553,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "5980:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1554,
																		"name": "commissionAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1540,
																		"src": "5989:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5980:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5964:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1557,
															"nodeType": "ExpressionStatement",
															"src": "5964:41:10"
														},
														{
															"expression": {
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1558,
																		"name": "signBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "6082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1560,
																	"indexExpression": {
																		"id": 1559,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "6095:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6082:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1561,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "6106:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1562,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "6123:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6106:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6082:47:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1565,
															"nodeType": "ExpressionStatement",
															"src": "6082:47:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1566,
																	"name": "commissionAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "6221:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6240:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6221:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1587,
															"nodeType": "IfStatement",
															"src": "6217:386:10",
															"trueBody": {
																"id": 1586,
																"nodeType": "Block",
																"src": "6243:360:10",
																"statements": [
																	{
																		"assignments": [
																			1570
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1570,
																				"mutability": "mutable",
																				"name": "commissionSuccess",
																				"nameLocation": "6381:17:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1586,
																				"src": "6376:22:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1569,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "6376:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1575,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1572,
																					"name": "commissionTreasury",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "6410:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1573,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1540,
																					"src": "6430:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1571,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1799
																				],
																				"referencedDeclaration": 1799,
																				"src": "6401:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6401:46:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6376:71:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1577,
																					"name": "commissionSuccess",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "6474:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "436f6d6d697373696f6e207472616e73666572206661696c6564",
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6493:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																						"typeString": "literal_string \"Commission transfer failed\""
																					},
																					"value": "Commission transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																						"typeString": "literal_string \"Commission transfer failed\""
																					}
																				],
																				"id": 1576,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6466:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6466:56:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1580,
																		"nodeType": "ExpressionStatement",
																		"src": "6466:56:10"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "6561:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1583,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1540,
																					"src": "6570:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1581,
																				"name": "CommissionPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "6546:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6546:41:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1585,
																		"nodeType": "EmitStatement",
																		"src": "6541:46:10"
																	}
																]
															}
														},
														{
															"assignments": [
																1589
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1589,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "6786:7:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1606,
																	"src": "6781:12:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1588,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6781:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1594,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1591,
																		"name": "carrier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "6805:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1592,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "6814:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1590,
																	"name": "transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1799
																	],
																	"referencedDeclaration": 1799,
																	"src": "6796:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6796:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6781:47:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1596,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1589,
																		"src": "6851:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "57616765207472616e73666572206661696c6564",
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6860:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
																			"typeString": "literal_string \"Wage transfer failed\""
																		},
																		"value": "Wage transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
																			"typeString": "literal_string \"Wage transfer failed\""
																		}
																	],
																	"id": 1595,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6843:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6843:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1599,
															"nodeType": "ExpressionStatement",
															"src": "6843:40:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1601,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "6926:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1602,
																		"name": "carrier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "6935:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1603,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "6944:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1600,
																	"name": "WagePaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "6917:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6917:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1605,
															"nodeType": "EmitStatement",
															"src": "6912:46:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1656,
															"name": "paymentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "7863:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1657,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "7906:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1658,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "7915:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7906:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7961:14:10",
															"subExpression": {
																"id": 1660,
																"name": "isFullPayment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "7962:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1655,
														"name": "WagePaymentResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "7818:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_WagePaymentResult_$1480_storage_ptr_$",
															"typeString": "type(struct SignToken.WagePaymentResult storage pointer)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"7851:10:10",
														"7891:13:10",
														"7943:16:10"
													],
													"names": [
														"paidAmount",
														"remainingWage",
														"isPartialPayment"
													],
													"nodeType": "FunctionCall",
													"src": "7818:169:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WagePaymentResult_$1480_memory_ptr",
														"typeString": "struct SignToken.WagePaymentResult memory"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1663,
												"nodeType": "Return",
												"src": "7811:176:10"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "4936:300:10",
										"text": " @dev Pays wage to carrier from sign's balance, handles partial payments\n @param tokenId The ID of the sign\n @param carrier Address of the carrier to pay\n @param amount Amount of wage to pay\n @return result WagePaymentResult struct with payment details"
									},
									"functionSelector": "ef9ecc1d",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1507,
												"name": "onlySignsNFT",
												"nameLocations": [
													"5352:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1358,
												"src": "5352:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5352:12:10"
										},
										{
											"id": 1510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1509,
												"name": "nonReentrant",
												"nameLocations": [
													"5365:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "5365:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5365:12:10"
										},
										{
											"id": 1512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1511,
												"name": "whenNotPaused",
												"nameLocations": [
													"5378:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5378:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5378:13:10"
										}
									],
									"name": "payWage",
									"nameLocation": "5251:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5277:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5269:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "5303:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5295:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5329:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5321:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5321:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5258:84:10"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5401:24:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WagePaymentResult_$1480_memory_ptr",
													"typeString": "struct SignToken.WagePaymentResult"
												},
												"typeName": {
													"id": 1514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1513,
														"name": "WagePaymentResult",
														"nameLocations": [
															"5401:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1480,
														"src": "5401:17:10"
													},
													"referencedDeclaration": 1480,
													"src": "5401:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WagePaymentResult_$1480_storage_ptr",
														"typeString": "struct SignToken.WagePaymentResult"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5400:26:10"
									},
									"scope": 1844,
									"src": "5242:2753:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "8192:209:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1673,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "8207:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8230:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8222:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1674,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8222:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8222:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8207:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "8203:58:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1679,
															"name": "InvalidNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "8241:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8241:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1681,
													"nodeType": "RevertStatement",
													"src": "8234:27:10"
												}
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "8272:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1684,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "8291:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8272:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "8272:30:10"
											},
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1687,
														"name": "signsNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "8313:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISignsNFT_$1194",
															"typeString": "contract ISignsNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1689,
																"name": "_newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "8334:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1688,
															"name": "ISignsNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "8324:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISignsNFT_$1194_$",
																"typeString": "type(contract ISignsNFT)"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8324:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISignsNFT_$1194",
															"typeString": "contract ISignsNFT"
														}
													},
													"src": "8313:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISignsNFT_$1194",
														"typeString": "contract ISignsNFT"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "8313:33:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1694,
															"name": "_newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "8381:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1693,
														"name": "NFTContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "8362:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8362:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "EmitStatement",
												"src": "8357:36:10"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "8003:111:10",
										"text": " @dev Updates the SignsNFT contract address\n @param _newAddress New contract address"
									},
									"functionSelector": "2fcdc5fd",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1671,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1670,
												"name": "onlyOwner",
												"nameLocations": [
													"8182:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8182:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8182:9:10"
										}
									],
									"name": "updateSignsNFTContract",
									"nameLocation": "8129:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_newAddress",
												"nameLocation": "8160:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "8152:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:21:10"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8192:0:10"
									},
									"scope": 1844,
									"src": "8120:281:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "8643:198:10",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8789:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1707,
												"id": 1709,
												"nodeType": "Return",
												"src": "8782:11:10"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "8409:145:10",
										"text": " @dev Checks if an address owns a specific sign\n @param owner Address to check\n @param tokenId Sign ID to check"
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSignOwner",
									"nameLocation": "8569:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8590:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "8582:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8605:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "8597:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8597:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:32:10"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "8637:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8637:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8636:6:10"
									},
									"scope": 1844,
									"src": "8560:281:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "8921:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1716,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "8932:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8932:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "8932:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1713,
												"name": "onlyOwner",
												"nameLocations": [
													"8911:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8911:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8911:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "8894:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8899:2:10"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8921:0:10"
									},
									"scope": 1844,
									"src": "8885:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "8994:29:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1725,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "9005:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9005:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "9005:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1723,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1722,
												"name": "onlyOwner",
												"nameLocations": [
													"8984:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8984:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8984:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "8965:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8972:2:10"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8994:0:10"
									},
									"scope": 1844,
									"src": "8956:67:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "9249:192:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1737,
														"name": "newCommissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "9264:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1738,
														"name": "BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "9287:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9264:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1743,
												"nodeType": "IfStatement",
												"src": "9260:67:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1740,
															"name": "InvalidCommission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "9308:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9308:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1742,
													"nodeType": "RevertStatement",
													"src": "9301:26:10"
												}
											},
											{
												"expression": {
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1744,
														"name": "commissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "9338:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1745,
														"name": "newCommissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "9358:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9338:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "9338:40:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1749,
															"name": "newCommissionPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "9412:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1748,
														"name": "CommissionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "9394:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9394:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "EmitStatement",
												"src": "9389:44:10"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "9031:137:10",
										"text": " @dev Updates the commission percentage\n @param newCommissionPercent New commission in basis points (1% = 100)"
									},
									"functionSelector": "9d55fba7",
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1734,
												"name": "onlyOwner",
												"nameLocations": [
													"9239:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9239:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9239:9:10"
										}
									],
									"name": "updateCommission",
									"nameLocation": "9183:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "newCommissionPercent",
												"nameLocation": "9208:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "9200:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9200:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9199:30:10"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9249:0:10"
									},
									"scope": 1844,
									"src": "9174:267:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "9642:178:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1761,
														"name": "newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "9657:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9680:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9672:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1762,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9672:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9672:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9657:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "9653:62:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1767,
															"name": "InvalidTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "9691:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1769,
													"nodeType": "RevertStatement",
													"src": "9684:31:10"
												}
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1771,
														"name": "commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "9726:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1772,
														"name": "newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "9747:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9726:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "9726:32:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1776,
															"name": "newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "9800:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1775,
														"name": "CommissionTreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "9774:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9774:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "EmitStatement",
												"src": "9769:43:10"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "9449:113:10",
										"text": " @dev Updates the commission treasury address\n @param newTreasury New treasury address"
									},
									"functionSelector": "74612f19",
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1758,
												"name": "onlyOwner",
												"nameLocations": [
													"9632:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9632:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9632:9:10"
										}
									],
									"name": "updateCommissionTreasury",
									"nameLocation": "9577:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "9610:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "9602:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9602:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9601:21:10"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9642:0:10"
									},
									"scope": 1844,
									"src": "9568:252:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "10044:52:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1794,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "10077:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "10081:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1792,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "10062:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SignToken_$1844_$",
																"typeString": "type(contract super SignToken)"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10068:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "10062:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10062:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1797,
												"nodeType": "Return",
												"src": "10055:33:10"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1788,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1787,
												"name": "whenNotPaused",
												"nameLocations": [
													"9999:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "9999:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9999:13:10"
										}
									],
									"name": "transfer",
									"nameLocation": "9898:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1786,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9980:8:10"
									},
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9915:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "9907:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9907:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9927:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "9919:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9919:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9906:28:10"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "10032:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10032:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10031:6:10"
									},
									"scope": 1844,
									"src": "9889:207:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "10271:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "10308:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1816,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "10314:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1817,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "10318:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1813,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "10289:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SignToken_$1844_$",
																"typeString": "type(contract super SignToken)"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10295:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "10289:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10289:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1819,
												"nodeType": "Return",
												"src": "10282:43:10"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1809,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1808,
												"name": "whenNotPaused",
												"nameLocations": [
													"10228:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "10228:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10228:13:10"
										}
									],
									"name": "transferFrom",
									"nameLocation": "10113:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1807,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10210:8:10"
									},
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10134:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "10126:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10126:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10148:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "10140:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10140:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10160:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "10152:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10125:42:10"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "10260:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10260:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10259:6:10"
									},
									"scope": 1844,
									"src": "10104:229:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "10477:114:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1831,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "10520:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1830,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "10510:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10510:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1834,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "10551:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1837,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10566:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SignToken_$1844",
																				"typeString": "contract SignToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SignToken_$1844",
																				"typeString": "contract SignToken"
																			}
																		],
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10558:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1835,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10558:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10558:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1833,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "10541:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10541:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1840,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10495:88:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1829,
												"id": 1841,
												"nodeType": "Return",
												"src": "10488:95:10"
											}
										]
									},
									"functionSelector": "1ec48cf7",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApprovalInfo",
									"nameLocation": "10354:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10378:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "10370:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10370:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10369:15:10"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "10426:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "10418:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10418:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "contractAllowance",
												"nameLocation": "10452:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "10444:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10444:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10407:69:10"
									},
									"scope": 1844,
									"src": "10345:246:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1845,
							"src": "467:10127:10",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1269,
								1271,
								1273,
								1275,
								1277,
								1279,
								1281,
								1283
							],
							"usedEvents": [
								24,
								295,
								300,
								984,
								993,
								1233,
								1241,
								1249,
								1253,
								1257,
								1261,
								1267,
								1488,
								1498
							]
						}
					],
					"src": "33:10561:10"
				},
				"id": 10
			}
		}
	}
}