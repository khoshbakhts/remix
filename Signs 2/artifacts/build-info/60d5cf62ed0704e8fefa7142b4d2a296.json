{
	"id": "60d5cf62ed0704e8fefa7142b4d2a296",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Signs 2/SignsToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title SignsToken\r\n * @dev ERC20 token for the Signs game economy, managing rewards and wages\r\n */\r\ncontract SignsToken is ERC20, Pausable, Ownable, ReentrancyGuard {\r\n    struct RewardRates {\r\n        uint256 movementBaseRate;    // Base rate for movement rewards (per meter)\r\n        uint256 diaryEntryRate;      // Rate for diary entries\r\n        uint256 photoUploadRate;     // Rate for photo uploads\r\n    }\r\n\r\n    // Game economy parameters\r\n    RewardRates public rates;\r\n    uint256 public dailyEarningsCap;             // Maximum earnings per day per user\r\n    uint256 public constant DAILY_RESET = 1 days; // Reset period for daily earnings\r\n    \r\n    // Contract references\r\n    address public signsNFTContract;\r\n    address public signsHistoryContract;\r\n    \r\n    // User balances and limits\r\n    mapping(address => uint256) public wageBalance;         // Pending wages to be claimed\r\n    mapping(address => uint256) public lastEarningsReset;   // Last time user's daily earnings were reset\r\n    mapping(address => uint256) public earningsToday;       // Track daily earnings\r\n    \r\n    // Events\r\n    event WagePaid(address indexed from, address indexed to, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount, string rewardType);\r\n    event RatesUpdated(uint256 movementBaseRate, uint256 diaryEntryRate, uint256 photoUploadRate);\r\n    event DailyEarningsCapUpdated(uint256 newCap);\r\n    event ContractUpdated(string contractType, address newAddress);\r\n    \r\n    // Errors\r\n    error UnauthorizedCaller();\r\n    error InsufficientBalance();\r\n    error DailyEarningsLimitExceeded();\r\n    error InvalidRate();\r\n    error InvalidAddress();\r\n    error InvalidAmount();\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply,\r\n        address _signsNFTContract,\r\n        address _signsHistoryContract\r\n    ) ERC20(name, symbol) Ownable(msg.sender) {\r\n        if (_signsNFTContract == address(0) || _signsHistoryContract == address(0)) \r\n            revert InvalidAddress();\r\n            \r\n        signsNFTContract = _signsNFTContract;\r\n        signsHistoryContract = _signsHistoryContract;\r\n        \r\n        // Initial rates (can be updated by owner)\r\n        rates = RewardRates({\r\n            movementBaseRate: 1e15,    // 0.001 tokens per meter\r\n            diaryEntryRate: 1e18,      // 1 token per diary entry\r\n            photoUploadRate: 2e18      // 2 tokens per photo\r\n        });\r\n        \r\n        dailyEarningsCap = 100e18;     // 100 tokens per day\r\n        \r\n        // Mint initial supply to contract owner\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    // Modifiers\r\n    modifier onlyGameContracts() {\r\n        if (msg.sender != signsNFTContract && msg.sender != signsHistoryContract)\r\n            revert UnauthorizedCaller();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Records wage owed to a carrier for moving a sign\r\n     * @param carrier Address of the sign carrier\r\n     * @param amount Amount of tokens to be paid\r\n     */\r\n    function recordWage(address carrier, uint256 amount) \r\n        external \r\n        onlyGameContracts \r\n        whenNotPaused \r\n    {\r\n        if (amount == 0) revert InvalidAmount();\r\n        \r\n        // Reset daily earnings if necessary\r\n        _checkAndResetDailyEarnings(carrier);\r\n        \r\n        // Check daily earnings cap\r\n        if (earningsToday[carrier] + amount > dailyEarningsCap)\r\n            revert DailyEarningsLimitExceeded();\r\n            \r\n        wageBalance[carrier] += amount;\r\n        earningsToday[carrier] += amount;\r\n        \r\n        emit WagePaid(msg.sender, carrier, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Pays reward for social activities (diary entries, photos)\r\n     * @param user Address of the user to reward\r\n     * @param rewardType Type of reward (\"diary\" or \"photo\")\r\n     */\r\n    function payReward(address user, string calldata rewardType) \r\n        external \r\n        onlyGameContracts \r\n        whenNotPaused \r\n    {\r\n        uint256 amount;\r\n        if (keccak256(bytes(rewardType)) == keccak256(bytes(\"diary\"))) {\r\n            amount = rates.diaryEntryRate;\r\n        } else if (keccak256(bytes(rewardType)) == keccak256(bytes(\"photo\"))) {\r\n            amount = rates.photoUploadRate;\r\n        } else {\r\n            revert InvalidRate();\r\n        }\r\n        \r\n        // Reset daily earnings if necessary\r\n        _checkAndResetDailyEarnings(user);\r\n        \r\n        // Check daily earnings cap\r\n        if (earningsToday[user] + amount > dailyEarningsCap)\r\n            revert DailyEarningsLimitExceeded();\r\n            \r\n        earningsToday[user] += amount;\r\n        \r\n        // Transfer reward directly\r\n        _mint(user, amount);\r\n        \r\n        emit RewardPaid(user, amount, rewardType);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows users to claim their accumulated wages\r\n     */\r\n    function claimWages() \r\n        external \r\n        nonReentrant \r\n        whenNotPaused \r\n    {\r\n        uint256 amount = wageBalance[msg.sender];\r\n        if (amount == 0) revert InsufficientBalance();\r\n        \r\n        // Reset wage balance before transfer\r\n        wageBalance[msg.sender] = 0;\r\n        \r\n        // Mint tokens to user\r\n        _mint(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates reward rates\r\n     * @param newRates New reward rates structure\r\n     */\r\n    function updateRates(RewardRates calldata newRates) \r\n        external \r\n        onlyOwner \r\n    {\r\n        rates = newRates;\r\n        emit RatesUpdated(\r\n            newRates.movementBaseRate,\r\n            newRates.diaryEntryRate,\r\n            newRates.photoUploadRate\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Updates daily earnings cap\r\n     * @param newCap New daily earnings cap\r\n     */\r\n    function updateDailyEarningsCap(uint256 newCap) \r\n        external \r\n        onlyOwner \r\n    {\r\n        dailyEarningsCap = newCap;\r\n        emit DailyEarningsCapUpdated(newCap);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates game contract addresses\r\n     * @param contractType Type of contract to update (\"nft\" or \"history\")\r\n     * @param newAddress New contract address\r\n     */\r\n    function updateGameContract(string calldata contractType, address newAddress) \r\n        external \r\n        onlyOwner \r\n    {\r\n        if (newAddress == address(0)) revert InvalidAddress();\r\n        \r\n        if (keccak256(bytes(contractType)) == keccak256(bytes(\"nft\"))) {\r\n            signsNFTContract = newAddress;\r\n        } else if (keccak256(bytes(contractType)) == keccak256(bytes(\"history\"))) {\r\n            signsHistoryContract = newAddress;\r\n        } else {\r\n            revert InvalidRate();\r\n        }\r\n        \r\n        emit ContractUpdated(contractType, newAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to check and reset daily earnings if necessary\r\n     * @param user Address of the user to check\r\n     */\r\n    function _checkAndResetDailyEarnings(address user) internal {\r\n        if (block.timestamp >= lastEarningsReset[user] + DAILY_RESET) {\r\n            earningsToday[user] = 0;\r\n            lastEarningsReset[user] = block.timestamp;\r\n        }\r\n    }\r\n\r\n    // Pause/unpause functionality\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    // Override transfer functions to check for pause state\r\n    function transfer(address to, uint256 amount) \r\n        public \r\n        virtual \r\n        override \r\n        whenNotPaused \r\n        returns (bool) \r\n    {\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Signs 2/SignsToken.sol": {
				"SignsToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_signsNFTContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_signsHistoryContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DailyEarningsLimitExceeded",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRate",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedCaller",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "contractType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCap",
									"type": "uint256"
								}
							],
							"name": "DailyEarningsCapUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "movementBaseRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "diaryEntryRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "photoUploadRate",
									"type": "uint256"
								}
							],
							"name": "RatesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "rewardType",
									"type": "string"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WagePaid",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DAILY_RESET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimWages",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dailyEarningsCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "earningsToday",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastEarningsReset",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "rewardType",
									"type": "string"
								}
							],
							"name": "payReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "movementBaseRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "diaryEntryRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "photoUploadRate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recordWage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signsHistoryContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signsNFTContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCap",
									"type": "uint256"
								}
							],
							"name": "updateDailyEarningsCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "contractType",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "updateGameContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "movementBaseRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "diaryEntryRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "photoUploadRate",
											"type": "uint256"
										}
									],
									"internalType": "struct SignsToken.RewardRates",
									"name": "newRates",
									"type": "tuple"
								}
							],
							"name": "updateRates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "wageBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token for the Signs game economy, managing rewards and wages",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"claimWages()": {
								"details": "Allows users to claim their accumulated wages"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"payReward(address,string)": {
								"details": "Pays reward for social activities (diary entries, photos)",
								"params": {
									"rewardType": "Type of reward (\"diary\" or \"photo\")",
									"user": "Address of the user to reward"
								}
							},
							"recordWage(address,uint256)": {
								"details": "Records wage owed to a carrier for moving a sign",
								"params": {
									"amount": "Amount of tokens to be paid",
									"carrier": "Address of the sign carrier"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateDailyEarningsCap(uint256)": {
								"details": "Updates daily earnings cap",
								"params": {
									"newCap": "New daily earnings cap"
								}
							},
							"updateGameContract(string,address)": {
								"details": "Updates game contract addresses",
								"params": {
									"contractType": "Type of contract to update (\"nft\" or \"history\")",
									"newAddress": "New contract address"
								}
							},
							"updateRates((uint256,uint256,uint256))": {
								"details": "Updates reward rates",
								"params": {
									"newRates": "New reward rates structure"
								}
							}
						},
						"title": "SignsToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Signs 2/SignsToken.sol\":403:8143  contract SignsToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Signs 2/SignsToken.sol\":2010:2961  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Signs 2/SignsToken.sol\":2225:2235  msg.sender */\n  caller\n    /* \"Signs 2/SignsToken.sol\":2203:2207  name */\n  dup6\n    /* \"Signs 2/SignsToken.sol\":2209:2215  symbol */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2281:2282  0 */\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2252:2283  _signsNFTContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Signs 2/SignsToken.sol\":2252:2269  _signsNFTContract */\n  dup3\n    /* \"Signs 2/SignsToken.sol\":2252:2283  _signsNFTContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"Signs 2/SignsToken.sol\":2252:2322  _signsNFTContract == address(0) || _signsHistoryContract == address(0) */\n  dup1\n  tag_22\n  jumpi\n  pop\n    /* \"Signs 2/SignsToken.sol\":2320:2321  0 */\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2287:2322  _signsHistoryContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Signs 2/SignsToken.sol\":2287:2308  _signsHistoryContract */\n  dup2\n    /* \"Signs 2/SignsToken.sol\":2287:2322  _signsHistoryContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"Signs 2/SignsToken.sol\":2252:2322  _signsNFTContract == address(0) || _signsHistoryContract == address(0) */\ntag_22:\n    /* \"Signs 2/SignsToken.sol\":2248:2361  if (_signsNFTContract == address(0) || _signsHistoryContract == address(0)) ... */\n  iszero\n  tag_23\n  jumpi\n    /* \"Signs 2/SignsToken.sol\":2345:2361  InvalidAddress() */\n  mload(0x40)\n  0xe6c4247b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Signs 2/SignsToken.sol\":2248:2361  if (_signsNFTContract == address(0) || _signsHistoryContract == address(0)) ... */\ntag_23:\n    /* \"Signs 2/SignsToken.sol\":2405:2422  _signsNFTContract */\n  dup2\n    /* \"Signs 2/SignsToken.sol\":2386:2402  signsNFTContract */\n  0x0b\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2386:2422  signsNFTContract = _signsNFTContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2456:2477  _signsHistoryContract */\n  dup1\n    /* \"Signs 2/SignsToken.sol\":2433:2453  signsHistoryContract */\n  0x0c\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2433:2477  signsHistoryContract = _signsHistoryContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2558:2778  RewardRates({... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Signs 2/SignsToken.sol\":2603:2607  1e15 */\n  0x038d7ea4c68000\n    /* \"Signs 2/SignsToken.sol\":2558:2778  RewardRates({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Signs 2/SignsToken.sol\":2667:2671  1e18 */\n  0x0de0b6b3a7640000\n    /* \"Signs 2/SignsToken.sol\":2558:2778  RewardRates({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Signs 2/SignsToken.sol\":2735:2739  2e18 */\n  0x1bc16d674ec80000\n    /* \"Signs 2/SignsToken.sol\":2558:2778  RewardRates({... */\n  dup2\n  mstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2550:2555  rates */\n  0x07\n    /* \"Signs 2/SignsToken.sol\":2550:2778  rates = RewardRates({... */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Signs 2/SignsToken.sol\":2818:2824  100e18 */\n  0x056bc75e2d63100000\n    /* \"Signs 2/SignsToken.sol\":2799:2815  dailyEarningsCap */\n  0x0a\n    /* \"Signs 2/SignsToken.sol\":2799:2824  dailyEarningsCap = 100e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2921:2953  _mint(msg.sender, initialSupply) */\n  tag_24\n    /* \"Signs 2/SignsToken.sol\":2927:2937  msg.sender */\n  caller\n    /* \"Signs 2/SignsToken.sol\":2939:2952  initialSupply */\n  dup5\n    /* \"Signs 2/SignsToken.sol\":2921:2926  _mint */\n  shl(0x20, tag_25)\n    /* \"Signs 2/SignsToken.sol\":2921:2953  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Signs 2/SignsToken.sol\":2010:2961  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"Signs 2/SignsToken.sol\":403:8143  contract SignsToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_37)\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_39\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_42)\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_45:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_46:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_47:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_48:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_49:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_50:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_51:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_52:\n    /* \"#utility.yul\":957:984   */\n  tag_95\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_50\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_97\n  tag_51\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1030:1118   */\ntag_96:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_53:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_99\n  tag_45\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_100\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_52\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_54:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_103\n  tag_51\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1434:1490   */\ntag_102:\n    /* \"#utility.yul\":1508:1537   */\n  tag_104\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_50\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_55:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_56:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_107\n    /* \"#utility.yul\":1885:1934   */\n  tag_108\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_54\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1869:1935   */\n  tag_53\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_110\n  tag_49\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2010:2122   */\ntag_109:\n    /* \"#utility.yul\":2131:2183   */\n  tag_111\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_55\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_57:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_114\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2292:2414   */\ntag_113:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_115\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_56\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_58:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_59:\n    /* \"#utility.yul\":2726:2750   */\n  tag_118\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_58\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_119:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_60:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_121\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_59\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3056   */\ntag_61:\n    /* \"#utility.yul\":2967:2974   */\n  0x00\n    /* \"#utility.yul\":3007:3049   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3000:3005   */\n  dup3\n    /* \"#utility.yul\":2996:3050   */\n  and\n    /* \"#utility.yul\":2985:3050   */\n  swap1\n  pop\n    /* \"#utility.yul\":2930:3056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3062:3158   */\ntag_62:\n    /* \"#utility.yul\":3099:3106   */\n  0x00\n    /* \"#utility.yul\":3128:3152   */\n  tag_124\n    /* \"#utility.yul\":3146:3151   */\n  dup3\n    /* \"#utility.yul\":3128:3152   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3117:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3062:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_63:\n    /* \"#utility.yul\":3237:3261   */\n  tag_126\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_127:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_64:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_129\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_63\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4764   */\ntag_3:\n    /* \"#utility.yul\":3567:3573   */\n  0x00\n    /* \"#utility.yul\":3575:3581   */\n  dup1\n    /* \"#utility.yul\":3583:3589   */\n  0x00\n    /* \"#utility.yul\":3591:3597   */\n  dup1\n    /* \"#utility.yul\":3599:3605   */\n  0x00\n    /* \"#utility.yul\":3648:3651   */\n  0xa0\n    /* \"#utility.yul\":3636:3645   */\n  dup7\n    /* \"#utility.yul\":3627:3634   */\n  dup9\n    /* \"#utility.yul\":3623:3646   */\n  sub\n    /* \"#utility.yul\":3619:3652   */\n  slt\n    /* \"#utility.yul\":3616:3736   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3655:3734   */\n  tag_132\n  tag_46\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3616:3736   */\ntag_131:\n    /* \"#utility.yul\":3796:3797   */\n  0x00\n    /* \"#utility.yul\":3785:3794   */\n  dup7\n    /* \"#utility.yul\":3781:3798   */\n  add\n    /* \"#utility.yul\":3775:3799   */\n  mload\n    /* \"#utility.yul\":3826:3844   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3818:3824   */\n  dup2\n    /* \"#utility.yul\":3815:3845   */\n  gt\n    /* \"#utility.yul\":3812:3929   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":3848:3927   */\n  tag_134\n  tag_47\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3812:3929   */\ntag_133:\n    /* \"#utility.yul\":3953:4027   */\n  tag_135\n    /* \"#utility.yul\":4019:4026   */\n  dup9\n    /* \"#utility.yul\":4010:4016   */\n  dup3\n    /* \"#utility.yul\":3999:4008   */\n  dup10\n    /* \"#utility.yul\":3995:4017   */\n  add\n    /* \"#utility.yul\":3953:4027   */\n  tag_57\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3943:4027   */\n  swap6\n  pop\n    /* \"#utility.yul\":3746:4037   */\n  pop\n    /* \"#utility.yul\":4097:4099   */\n  0x20\n    /* \"#utility.yul\":4086:4095   */\n  dup7\n    /* \"#utility.yul\":4082:4100   */\n  add\n    /* \"#utility.yul\":4076:4101   */\n  mload\n    /* \"#utility.yul\":4128:4146   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4120:4126   */\n  dup2\n    /* \"#utility.yul\":4117:4147   */\n  gt\n    /* \"#utility.yul\":4114:4231   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4150:4229   */\n  tag_137\n  tag_47\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4114:4231   */\ntag_136:\n    /* \"#utility.yul\":4255:4329   */\n  tag_138\n    /* \"#utility.yul\":4321:4328   */\n  dup9\n    /* \"#utility.yul\":4312:4318   */\n  dup3\n    /* \"#utility.yul\":4301:4310   */\n  dup10\n    /* \"#utility.yul\":4297:4319   */\n  add\n    /* \"#utility.yul\":4255:4329   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4245:4329   */\n  swap5\n  pop\n    /* \"#utility.yul\":4047:4339   */\n  pop\n    /* \"#utility.yul\":4378:4380   */\n  0x40\n    /* \"#utility.yul\":4404:4468   */\n  tag_139\n    /* \"#utility.yul\":4460:4467   */\n  dup9\n    /* \"#utility.yul\":4451:4457   */\n  dup3\n    /* \"#utility.yul\":4440:4449   */\n  dup10\n    /* \"#utility.yul\":4436:4458   */\n  add\n    /* \"#utility.yul\":4404:4468   */\n  tag_60\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4394:4468   */\n  swap4\n  pop\n    /* \"#utility.yul\":4349:4478   */\n  pop\n    /* \"#utility.yul\":4517:4519   */\n  0x60\n    /* \"#utility.yul\":4543:4607   */\n  tag_140\n    /* \"#utility.yul\":4599:4606   */\n  dup9\n    /* \"#utility.yul\":4590:4596   */\n  dup3\n    /* \"#utility.yul\":4579:4588   */\n  dup10\n    /* \"#utility.yul\":4575:4597   */\n  add\n    /* \"#utility.yul\":4543:4607   */\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4533:4607   */\n  swap3\n  pop\n    /* \"#utility.yul\":4488:4617   */\n  pop\n    /* \"#utility.yul\":4656:4659   */\n  0x80\n    /* \"#utility.yul\":4683:4747   */\n  tag_141\n    /* \"#utility.yul\":4739:4746   */\n  dup9\n    /* \"#utility.yul\":4730:4736   */\n  dup3\n    /* \"#utility.yul\":4719:4728   */\n  dup10\n    /* \"#utility.yul\":4715:4737   */\n  add\n    /* \"#utility.yul\":4683:4747   */\n  tag_64\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4673:4747   */\n  swap2\n  pop\n    /* \"#utility.yul\":4627:4757   */\n  pop\n    /* \"#utility.yul\":3441:4764   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4770:4869   */\ntag_65:\n    /* \"#utility.yul\":4822:4828   */\n  0x00\n    /* \"#utility.yul\":4856:4861   */\n  dup2\n    /* \"#utility.yul\":4850:4862   */\n  mload\n    /* \"#utility.yul\":4840:4862   */\n  swap1\n  pop\n    /* \"#utility.yul\":4770:4869   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4875:5055   */\ntag_66:\n    /* \"#utility.yul\":4923:5000   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4920:4921   */\n  0x00\n    /* \"#utility.yul\":4913:5001   */\n  mstore\n    /* \"#utility.yul\":5020:5024   */\n  0x22\n    /* \"#utility.yul\":5017:5018   */\n  0x04\n    /* \"#utility.yul\":5010:5025   */\n  mstore\n    /* \"#utility.yul\":5044:5048   */\n  0x24\n    /* \"#utility.yul\":5041:5042   */\n  0x00\n    /* \"#utility.yul\":5034:5049   */\n  revert\n    /* \"#utility.yul\":5061:5381   */\ntag_67:\n    /* \"#utility.yul\":5105:5111   */\n  0x00\n    /* \"#utility.yul\":5142:5143   */\n  0x02\n    /* \"#utility.yul\":5136:5140   */\n  dup3\n    /* \"#utility.yul\":5132:5144   */\n  div\n    /* \"#utility.yul\":5122:5144   */\n  swap1\n  pop\n    /* \"#utility.yul\":5189:5190   */\n  0x01\n    /* \"#utility.yul\":5183:5187   */\n  dup3\n    /* \"#utility.yul\":5179:5191   */\n  and\n    /* \"#utility.yul\":5210:5228   */\n  dup1\n    /* \"#utility.yul\":5200:5281   */\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5266:5270   */\n  0x7f\n    /* \"#utility.yul\":5258:5264   */\n  dup3\n    /* \"#utility.yul\":5254:5271   */\n  and\n    /* \"#utility.yul\":5244:5271   */\n  swap2\n  pop\n    /* \"#utility.yul\":5200:5281   */\ntag_145:\n    /* \"#utility.yul\":5328:5330   */\n  0x20\n    /* \"#utility.yul\":5320:5326   */\n  dup3\n    /* \"#utility.yul\":5317:5331   */\n  lt\n    /* \"#utility.yul\":5297:5315   */\n  dup2\n    /* \"#utility.yul\":5294:5332   */\n  sub\n    /* \"#utility.yul\":5291:5375   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5347:5365   */\n  tag_147\n  tag_66\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5291:5375   */\ntag_146:\n    /* \"#utility.yul\":5112:5381   */\n  pop\n    /* \"#utility.yul\":5061:5381   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5387:5528   */\ntag_68:\n    /* \"#utility.yul\":5436:5440   */\n  0x00\n    /* \"#utility.yul\":5459:5462   */\n  dup2\n    /* \"#utility.yul\":5451:5462   */\n  swap1\n  pop\n    /* \"#utility.yul\":5482:5485   */\n  dup2\n    /* \"#utility.yul\":5479:5480   */\n  0x00\n    /* \"#utility.yul\":5472:5486   */\n  mstore\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5513:5514   */\n  0x00\n    /* \"#utility.yul\":5503:5521   */\n  keccak256\n    /* \"#utility.yul\":5495:5521   */\n  swap1\n  pop\n    /* \"#utility.yul\":5387:5528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5627   */\ntag_69:\n    /* \"#utility.yul\":5571:5577   */\n  0x00\n    /* \"#utility.yul\":5618:5620   */\n  0x20\n    /* \"#utility.yul\":5613:5615   */\n  0x1f\n    /* \"#utility.yul\":5606:5611   */\n  dup4\n    /* \"#utility.yul\":5602:5616   */\n  add\n    /* \"#utility.yul\":5598:5621   */\n  div\n    /* \"#utility.yul\":5588:5621   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5627   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5633:5740   */\ntag_70:\n    /* \"#utility.yul\":5677:5685   */\n  0x00\n    /* \"#utility.yul\":5727:5732   */\n  dup3\n    /* \"#utility.yul\":5721:5725   */\n  dup3\n    /* \"#utility.yul\":5717:5733   */\n  shl\n    /* \"#utility.yul\":5696:5733   */\n  swap1\n  pop\n    /* \"#utility.yul\":5633:5740   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5746:6139   */\ntag_71:\n    /* \"#utility.yul\":5815:5821   */\n  0x00\n    /* \"#utility.yul\":5865:5866   */\n  0x08\n    /* \"#utility.yul\":5853:5863   */\n  dup4\n    /* \"#utility.yul\":5849:5867   */\n  mul\n    /* \"#utility.yul\":5888:5985   */\n  tag_152\n    /* \"#utility.yul\":5918:5984   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5907:5916   */\n  dup3\n    /* \"#utility.yul\":5888:5985   */\n  tag_70\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6006:6045   */\n  tag_153\n    /* \"#utility.yul\":6036:6044   */\n  dup7\n    /* \"#utility.yul\":6025:6034   */\n  dup4\n    /* \"#utility.yul\":6006:6045   */\n  tag_70\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5994:6045   */\n  swap6\n  pop\n    /* \"#utility.yul\":6078:6082   */\n  dup1\n    /* \"#utility.yul\":6074:6083   */\n  not\n    /* \"#utility.yul\":6067:6072   */\n  dup5\n    /* \"#utility.yul\":6063:6084   */\n  and\n    /* \"#utility.yul\":6054:6084   */\n  swap4\n  pop\n    /* \"#utility.yul\":6127:6131   */\n  dup1\n    /* \"#utility.yul\":6117:6125   */\n  dup7\n    /* \"#utility.yul\":6113:6132   */\n  and\n    /* \"#utility.yul\":6106:6111   */\n  dup5\n    /* \"#utility.yul\":6103:6133   */\n  or\n    /* \"#utility.yul\":6093:6133   */\n  swap3\n  pop\n    /* \"#utility.yul\":5822:6139   */\n  pop\n  pop\n    /* \"#utility.yul\":5746:6139   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6145:6205   */\ntag_72:\n    /* \"#utility.yul\":6173:6176   */\n  0x00\n    /* \"#utility.yul\":6194:6199   */\n  dup2\n    /* \"#utility.yul\":6187:6199   */\n  swap1\n  pop\n    /* \"#utility.yul\":6145:6205   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6211:6353   */\ntag_73:\n    /* \"#utility.yul\":6261:6270   */\n  0x00\n    /* \"#utility.yul\":6294:6347   */\n  tag_156\n    /* \"#utility.yul\":6312:6346   */\n  tag_157\n    /* \"#utility.yul\":6321:6345   */\n  tag_158\n    /* \"#utility.yul\":6339:6344   */\n  dup5\n    /* \"#utility.yul\":6321:6345   */\n  tag_58\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6312:6346   */\n  tag_72\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6294:6347   */\n  tag_58\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6281:6347   */\n  swap1\n  pop\n    /* \"#utility.yul\":6211:6353   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6359:6434   */\ntag_74:\n    /* \"#utility.yul\":6402:6405   */\n  0x00\n    /* \"#utility.yul\":6423:6428   */\n  dup2\n    /* \"#utility.yul\":6416:6428   */\n  swap1\n  pop\n    /* \"#utility.yul\":6359:6434   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6440:6709   */\ntag_75:\n    /* \"#utility.yul\":6550:6589   */\n  tag_161\n    /* \"#utility.yul\":6581:6588   */\n  dup4\n    /* \"#utility.yul\":6550:6589   */\n  tag_73\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6611:6702   */\n  tag_162\n    /* \"#utility.yul\":6660:6701   */\n  tag_163\n    /* \"#utility.yul\":6684:6700   */\n  dup3\n    /* \"#utility.yul\":6660:6701   */\n  tag_74\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6652:6658   */\n  dup5\n    /* \"#utility.yul\":6645:6649   */\n  dup5\n    /* \"#utility.yul\":6639:6650   */\n  sload\n    /* \"#utility.yul\":6611:6702   */\n  tag_71\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6605:6609   */\n  dup3\n    /* \"#utility.yul\":6598:6703   */\n  sstore\n    /* \"#utility.yul\":6516:6709   */\n  pop\n    /* \"#utility.yul\":6440:6709   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6715:6788   */\ntag_76:\n    /* \"#utility.yul\":6760:6763   */\n  0x00\n    /* \"#utility.yul\":6715:6788   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6794:6983   */\ntag_77:\n    /* \"#utility.yul\":6871:6903   */\n  tag_166\n  tag_76\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6912:6977   */\n  tag_167\n    /* \"#utility.yul\":6970:6976   */\n  dup2\n    /* \"#utility.yul\":6962:6968   */\n  dup5\n    /* \"#utility.yul\":6956:6960   */\n  dup5\n    /* \"#utility.yul\":6912:6977   */\n  tag_75\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6847:6983   */\n  pop\n    /* \"#utility.yul\":6794:6983   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6989:7175   */\ntag_78:\n    /* \"#utility.yul\":7049:7169   */\ntag_169:\n    /* \"#utility.yul\":7066:7069   */\n  dup2\n    /* \"#utility.yul\":7059:7064   */\n  dup2\n    /* \"#utility.yul\":7056:7070   */\n  lt\n    /* \"#utility.yul\":7049:7169   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":7120:7159   */\n  tag_172\n    /* \"#utility.yul\":7157:7158   */\n  0x00\n    /* \"#utility.yul\":7150:7155   */\n  dup3\n    /* \"#utility.yul\":7120:7159   */\n  tag_77\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7093:7094   */\n  0x01\n    /* \"#utility.yul\":7086:7091   */\n  dup2\n    /* \"#utility.yul\":7082:7095   */\n  add\n    /* \"#utility.yul\":7073:7095   */\n  swap1\n  pop\n    /* \"#utility.yul\":7049:7169   */\n  jump(tag_169)\ntag_171:\n    /* \"#utility.yul\":6989:7175   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7181:7724   */\ntag_79:\n    /* \"#utility.yul\":7282:7284   */\n  0x1f\n    /* \"#utility.yul\":7277:7280   */\n  dup3\n    /* \"#utility.yul\":7274:7285   */\n  gt\n    /* \"#utility.yul\":7271:7717   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":7316:7354   */\n  tag_175\n    /* \"#utility.yul\":7348:7353   */\n  dup2\n    /* \"#utility.yul\":7316:7354   */\n  tag_68\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7400:7429   */\n  tag_176\n    /* \"#utility.yul\":7418:7428   */\n  dup5\n    /* \"#utility.yul\":7400:7429   */\n  tag_69\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7390:7398   */\n  dup2\n    /* \"#utility.yul\":7386:7430   */\n  add\n    /* \"#utility.yul\":7583:7585   */\n  0x20\n    /* \"#utility.yul\":7571:7581   */\n  dup6\n    /* \"#utility.yul\":7568:7586   */\n  lt\n    /* \"#utility.yul\":7565:7614   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":7604:7612   */\n  dup2\n    /* \"#utility.yul\":7589:7612   */\n  swap1\n  pop\n    /* \"#utility.yul\":7565:7614   */\ntag_177:\n    /* \"#utility.yul\":7627:7707   */\n  tag_178\n    /* \"#utility.yul\":7683:7705   */\n  tag_179\n    /* \"#utility.yul\":7701:7704   */\n  dup6\n    /* \"#utility.yul\":7683:7705   */\n  tag_69\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7673:7681   */\n  dup4\n    /* \"#utility.yul\":7669:7706   */\n  add\n    /* \"#utility.yul\":7656:7667   */\n  dup3\n    /* \"#utility.yul\":7627:7707   */\n  tag_78\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7286:7717   */\n  pop\n  pop\n    /* \"#utility.yul\":7271:7717   */\ntag_174:\n    /* \"#utility.yul\":7181:7724   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7730:7847   */\ntag_80:\n    /* \"#utility.yul\":7784:7792   */\n  0x00\n    /* \"#utility.yul\":7834:7839   */\n  dup3\n    /* \"#utility.yul\":7828:7832   */\n  dup3\n    /* \"#utility.yul\":7824:7840   */\n  shr\n    /* \"#utility.yul\":7803:7840   */\n  swap1\n  pop\n    /* \"#utility.yul\":7730:7847   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7853:8022   */\ntag_81:\n    /* \"#utility.yul\":7897:7903   */\n  0x00\n    /* \"#utility.yul\":7930:7981   */\n  tag_182\n    /* \"#utility.yul\":7978:7979   */\n  0x00\n    /* \"#utility.yul\":7974:7980   */\n  not\n    /* \"#utility.yul\":7966:7971   */\n  dup5\n    /* \"#utility.yul\":7963:7964   */\n  0x08\n    /* \"#utility.yul\":7959:7972   */\n  mul\n    /* \"#utility.yul\":7930:7981   */\n  tag_80\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7926:7982   */\n  not\n    /* \"#utility.yul\":8011:8015   */\n  dup1\n    /* \"#utility.yul\":8005:8009   */\n  dup4\n    /* \"#utility.yul\":8001:8016   */\n  and\n    /* \"#utility.yul\":7991:8016   */\n  swap2\n  pop\n    /* \"#utility.yul\":7904:8022   */\n  pop\n    /* \"#utility.yul\":7853:8022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8027:8322   */\ntag_82:\n    /* \"#utility.yul\":8103:8107   */\n  0x00\n    /* \"#utility.yul\":8249:8278   */\n  tag_184\n    /* \"#utility.yul\":8274:8277   */\n  dup4\n    /* \"#utility.yul\":8268:8272   */\n  dup4\n    /* \"#utility.yul\":8249:8278   */\n  tag_81\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8241:8278   */\n  swap2\n  pop\n    /* \"#utility.yul\":8311:8314   */\n  dup3\n    /* \"#utility.yul\":8308:8309   */\n  0x02\n    /* \"#utility.yul\":8304:8315   */\n  mul\n    /* \"#utility.yul\":8298:8302   */\n  dup3\n    /* \"#utility.yul\":8295:8316   */\n  or\n    /* \"#utility.yul\":8287:8316   */\n  swap1\n  pop\n    /* \"#utility.yul\":8027:8322   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8327:9722   */\ntag_11:\n    /* \"#utility.yul\":8444:8481   */\n  tag_186\n    /* \"#utility.yul\":8477:8480   */\n  dup3\n    /* \"#utility.yul\":8444:8481   */\n  tag_65\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8546:8564   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8538:8544   */\n  dup2\n    /* \"#utility.yul\":8535:8565   */\n  gt\n    /* \"#utility.yul\":8532:8588   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8568:8586   */\n  tag_188\n  tag_51\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8532:8588   */\ntag_187:\n    /* \"#utility.yul\":8612:8650   */\n  tag_189\n    /* \"#utility.yul\":8644:8648   */\n  dup3\n    /* \"#utility.yul\":8638:8649   */\n  sload\n    /* \"#utility.yul\":8612:8650   */\n  tag_67\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8697:8764   */\n  tag_190\n    /* \"#utility.yul\":8757:8763   */\n  dup3\n    /* \"#utility.yul\":8749:8755   */\n  dup3\n    /* \"#utility.yul\":8743:8747   */\n  dup6\n    /* \"#utility.yul\":8697:8764   */\n  tag_79\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8791:8792   */\n  0x00\n    /* \"#utility.yul\":8815:8819   */\n  0x20\n    /* \"#utility.yul\":8802:8819   */\n  swap1\n  pop\n    /* \"#utility.yul\":8847:8849   */\n  0x1f\n    /* \"#utility.yul\":8839:8845   */\n  dup4\n    /* \"#utility.yul\":8836:8850   */\n  gt\n    /* \"#utility.yul\":8864:8865   */\n  0x01\n    /* \"#utility.yul\":8859:9477   */\n  dup2\n  eq\n  tag_192\n  jumpi\n    /* \"#utility.yul\":9521:9522   */\n  0x00\n    /* \"#utility.yul\":9538:9544   */\n  dup5\n    /* \"#utility.yul\":9535:9612   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":9587:9596   */\n  dup3\n    /* \"#utility.yul\":9582:9585   */\n  dup8\n    /* \"#utility.yul\":9578:9597   */\n  add\n    /* \"#utility.yul\":9572:9598   */\n  mload\n    /* \"#utility.yul\":9563:9598   */\n  swap1\n  pop\n    /* \"#utility.yul\":9535:9612   */\ntag_193:\n    /* \"#utility.yul\":9638:9705   */\n  tag_194\n    /* \"#utility.yul\":9698:9704   */\n  dup6\n    /* \"#utility.yul\":9691:9696   */\n  dup3\n    /* \"#utility.yul\":9638:9705   */\n  tag_82\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9632:9636   */\n  dup7\n    /* \"#utility.yul\":9625:9706   */\n  sstore\n    /* \"#utility.yul\":9494:9716   */\n  pop\n    /* \"#utility.yul\":8829:9716   */\n  jump(tag_191)\n    /* \"#utility.yul\":8859:9477   */\ntag_192:\n    /* \"#utility.yul\":8911:8915   */\n  0x1f\n    /* \"#utility.yul\":8907:8916   */\n  not\n    /* \"#utility.yul\":8899:8905   */\n  dup5\n    /* \"#utility.yul\":8895:8917   */\n  and\n    /* \"#utility.yul\":8945:8982   */\n  tag_195\n    /* \"#utility.yul\":8977:8981   */\n  dup7\n    /* \"#utility.yul\":8945:8982   */\n  tag_68\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9004:9005   */\n  0x00\n    /* \"#utility.yul\":9018:9226   */\ntag_196:\n    /* \"#utility.yul\":9032:9039   */\n  dup3\n    /* \"#utility.yul\":9029:9030   */\n  dup2\n    /* \"#utility.yul\":9026:9040   */\n  lt\n    /* \"#utility.yul\":9018:9226   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9111:9120   */\n  dup5\n    /* \"#utility.yul\":9106:9109   */\n  dup10\n    /* \"#utility.yul\":9102:9121   */\n  add\n    /* \"#utility.yul\":9096:9122   */\n  mload\n    /* \"#utility.yul\":9088:9094   */\n  dup3\n    /* \"#utility.yul\":9081:9123   */\n  sstore\n    /* \"#utility.yul\":9162:9163   */\n  0x01\n    /* \"#utility.yul\":9154:9160   */\n  dup3\n    /* \"#utility.yul\":9150:9164   */\n  add\n    /* \"#utility.yul\":9140:9164   */\n  swap2\n  pop\n    /* \"#utility.yul\":9209:9211   */\n  0x20\n    /* \"#utility.yul\":9198:9207   */\n  dup6\n    /* \"#utility.yul\":9194:9212   */\n  add\n    /* \"#utility.yul\":9181:9212   */\n  swap5\n  pop\n    /* \"#utility.yul\":9055:9059   */\n  0x20\n    /* \"#utility.yul\":9052:9053   */\n  dup2\n    /* \"#utility.yul\":9048:9060   */\n  add\n    /* \"#utility.yul\":9043:9060   */\n  swap1\n  pop\n    /* \"#utility.yul\":9018:9226   */\n  jump(tag_196)\ntag_198:\n    /* \"#utility.yul\":9254:9260   */\n  dup7\n    /* \"#utility.yul\":9245:9252   */\n  dup4\n    /* \"#utility.yul\":9242:9261   */\n  lt\n    /* \"#utility.yul\":9239:9418   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":9312:9321   */\n  dup5\n    /* \"#utility.yul\":9307:9310   */\n  dup10\n    /* \"#utility.yul\":9303:9322   */\n  add\n    /* \"#utility.yul\":9297:9323   */\n  mload\n    /* \"#utility.yul\":9355:9403   */\n  tag_200\n    /* \"#utility.yul\":9397:9401   */\n  0x1f\n    /* \"#utility.yul\":9389:9395   */\n  dup10\n    /* \"#utility.yul\":9385:9402   */\n  and\n    /* \"#utility.yul\":9374:9383   */\n  dup3\n    /* \"#utility.yul\":9355:9403   */\n  tag_81\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9347:9353   */\n  dup4\n    /* \"#utility.yul\":9340:9404   */\n  sstore\n    /* \"#utility.yul\":9262:9418   */\n  pop\n    /* \"#utility.yul\":9239:9418   */\ntag_199:\n    /* \"#utility.yul\":9464:9465   */\n  0x01\n    /* \"#utility.yul\":9460:9461   */\n  0x02\n    /* \"#utility.yul\":9452:9458   */\n  dup9\n    /* \"#utility.yul\":9448:9462   */\n  mul\n    /* \"#utility.yul\":9444:9466   */\n  add\n    /* \"#utility.yul\":9438:9442   */\n  dup9\n    /* \"#utility.yul\":9431:9467   */\n  sstore\n    /* \"#utility.yul\":8866:9477   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8829:9716   */\ntag_191:\n  pop\n    /* \"#utility.yul\":8419:9722   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8327:9722   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9728:9846   */\ntag_83:\n    /* \"#utility.yul\":9815:9839   */\n  tag_202\n    /* \"#utility.yul\":9833:9838   */\n  dup2\n    /* \"#utility.yul\":9815:9839   */\n  tag_62\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9810:9813   */\n  dup3\n    /* \"#utility.yul\":9803:9840   */\n  mstore\n    /* \"#utility.yul\":9728:9846   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9852:10074   */\ntag_17:\n    /* \"#utility.yul\":9945:9949   */\n  0x00\n    /* \"#utility.yul\":9983:9985   */\n  0x20\n    /* \"#utility.yul\":9972:9981   */\n  dup3\n    /* \"#utility.yul\":9968:9986   */\n  add\n    /* \"#utility.yul\":9960:9986   */\n  swap1\n  pop\n    /* \"#utility.yul\":9996:10067   */\n  tag_204\n    /* \"#utility.yul\":10064:10065   */\n  0x00\n    /* \"#utility.yul\":10053:10062   */\n  dup4\n    /* \"#utility.yul\":10049:10066   */\n  add\n    /* \"#utility.yul\":10040:10046   */\n  dup5\n    /* \"#utility.yul\":9996:10067   */\n  tag_83\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9852:10074   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10080:10260   */\ntag_84:\n    /* \"#utility.yul\":10128:10205   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10125:10126   */\n  0x00\n    /* \"#utility.yul\":10118:10206   */\n  mstore\n    /* \"#utility.yul\":10225:10229   */\n  0x11\n    /* \"#utility.yul\":10222:10223   */\n  0x04\n    /* \"#utility.yul\":10215:10230   */\n  mstore\n    /* \"#utility.yul\":10249:10253   */\n  0x24\n    /* \"#utility.yul\":10246:10247   */\n  0x00\n    /* \"#utility.yul\":10239:10254   */\n  revert\n    /* \"#utility.yul\":10266:10457   */\ntag_36:\n    /* \"#utility.yul\":10306:10309   */\n  0x00\n    /* \"#utility.yul\":10325:10345   */\n  tag_207\n    /* \"#utility.yul\":10343:10344   */\n  dup3\n    /* \"#utility.yul\":10325:10345   */\n  tag_58\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10320:10345   */\n  swap2\n  pop\n    /* \"#utility.yul\":10359:10379   */\n  tag_208\n    /* \"#utility.yul\":10377:10378   */\n  dup4\n    /* \"#utility.yul\":10359:10379   */\n  tag_58\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10354:10379   */\n  swap3\n  pop\n    /* \"#utility.yul\":10402:10403   */\n  dup3\n    /* \"#utility.yul\":10399:10400   */\n  dup3\n    /* \"#utility.yul\":10395:10404   */\n  add\n    /* \"#utility.yul\":10388:10404   */\n  swap1\n  pop\n    /* \"#utility.yul\":10423:10426   */\n  dup1\n    /* \"#utility.yul\":10420:10421   */\n  dup3\n    /* \"#utility.yul\":10417:10427   */\n  gt\n    /* \"#utility.yul\":10414:10450   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":10430:10448   */\n  tag_210\n  tag_84\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10414:10450   */\ntag_209:\n    /* \"#utility.yul\":10266:10457   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10463:10581   */\ntag_85:\n    /* \"#utility.yul\":10550:10574   */\n  tag_212\n    /* \"#utility.yul\":10568:10573   */\n  dup2\n    /* \"#utility.yul\":10550:10574   */\n  tag_58\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10545:10548   */\n  dup3\n    /* \"#utility.yul\":10538:10575   */\n  mstore\n    /* \"#utility.yul\":10463:10581   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10587:11029   */\ntag_40:\n    /* \"#utility.yul\":10736:10740   */\n  0x00\n    /* \"#utility.yul\":10774:10776   */\n  0x60\n    /* \"#utility.yul\":10763:10772   */\n  dup3\n    /* \"#utility.yul\":10759:10777   */\n  add\n    /* \"#utility.yul\":10751:10777   */\n  swap1\n  pop\n    /* \"#utility.yul\":10787:10858   */\n  tag_214\n    /* \"#utility.yul\":10855:10856   */\n  0x00\n    /* \"#utility.yul\":10844:10853   */\n  dup4\n    /* \"#utility.yul\":10840:10857   */\n  add\n    /* \"#utility.yul\":10831:10837   */\n  dup7\n    /* \"#utility.yul\":10787:10858   */\n  tag_83\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10868:10940   */\n  tag_215\n    /* \"#utility.yul\":10936:10938   */\n  0x20\n    /* \"#utility.yul\":10925:10934   */\n  dup4\n    /* \"#utility.yul\":10921:10939   */\n  add\n    /* \"#utility.yul\":10912:10918   */\n  dup6\n    /* \"#utility.yul\":10868:10940   */\n  tag_85\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10950:11022   */\n  tag_216\n    /* \"#utility.yul\":11018:11020   */\n  0x40\n    /* \"#utility.yul\":11007:11016   */\n  dup4\n    /* \"#utility.yul\":11003:11021   */\n  add\n    /* \"#utility.yul\":10994:11000   */\n  dup5\n    /* \"#utility.yul\":10950:11022   */\n  tag_85\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10587:11029   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11035:11257   */\ntag_44:\n    /* \"#utility.yul\":11128:11132   */\n  0x00\n    /* \"#utility.yul\":11166:11168   */\n  0x20\n    /* \"#utility.yul\":11155:11164   */\n  dup3\n    /* \"#utility.yul\":11151:11169   */\n  add\n    /* \"#utility.yul\":11143:11169   */\n  swap1\n  pop\n    /* \"#utility.yul\":11179:11250   */\n  tag_218\n    /* \"#utility.yul\":11247:11248   */\n  0x00\n    /* \"#utility.yul\":11236:11245   */\n  dup4\n    /* \"#utility.yul\":11232:11249   */\n  add\n    /* \"#utility.yul\":11223:11229   */\n  dup5\n    /* \"#utility.yul\":11179:11250   */\n  tag_85\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11035:11257   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Signs 2/SignsToken.sol\":403:8143  contract SignsToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Signs 2/SignsToken.sol\":403:8143  contract SignsToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc0008d0c\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd06a2e0e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd06a2e0e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf4f831a0\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xc0008d0c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc1f3bdde\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xca1c7238\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xce55b584\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xa3262ea2\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa3262ea2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa6ec1c6d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa775ced3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9778d0cd\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x43f48fbd\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x849d13a3\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8d9d7307\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x43f48fbd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x23b872dd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2a504a97\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":7911:8140  function transferFrom(address from, address to, uint256 amount)... */\n    tag_6:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":1111:1157  mapping(address => uint256) public wageBalance */\n    tag_7:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":7560:7627  function unpause() external onlyOwner {... */\n    tag_9:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Signs 2/SignsToken.sol\":754:778  RewardRates public rates */\n    tag_10:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"Signs 2/SignsToken.sol\":7489:7552  function pause() external onlyOwner {... */\n    tag_14:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"Signs 2/SignsToken.sol\":5682:5970  function updateRates(RewardRates calldata newRates) ... */\n    tag_15:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"Signs 2/SignsToken.sol\":6459:7046  function updateGameContract(string calldata contractType, address newAddress) ... */\n    tag_16:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":1203:1255  mapping(address => uint256) public lastEarningsReset */\n    tag_19:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":992:1023  address public signsNFTContract */\n    tag_20:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":1310:1358  mapping(address => uint256) public earningsToday */\n    tag_21:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":1030:1065  address public signsHistoryContract */\n    tag_22:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":7696:7903  function transfer(address to, uint256 amount) ... */\n    tag_23:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":4173:5104  function payReward(address user, string calldata rewardType) ... */\n    tag_24:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n    tag_117:\n      stop\n        /* \"Signs 2/SignsToken.sol\":872:916  uint256 public constant DAILY_RESET = 1 days */\n    tag_25:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":5189:5571  function claimWages() ... */\n    tag_26:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      stop\n        /* \"Signs 2/SignsToken.sol\":6081:6265  function updateDailyEarningsCap(uint256 newCap) ... */\n    tag_27:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n    tag_126:\n      stop\n        /* \"Signs 2/SignsToken.sol\":3350:3964  function recordWage(address carrier, uint256 amount) ... */\n    tag_28:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      tag_136\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"Signs 2/SignsToken.sol\":785:816  uint256 public dailyEarningsCap */\n    tag_31:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_146\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":7911:8140  function transferFrom(address from, address to, uint256 amount)... */\n    tag_56:\n        /* \"Signs 2/SignsToken.sol\":8067:8071  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_158\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_159\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_158:\n        /* \"Signs 2/SignsToken.sol\":8096:8132  super.transferFrom(from, to, amount) */\n      tag_161\n        /* \"Signs 2/SignsToken.sol\":8115:8119  from */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":8121:8123  to */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":8125:8131  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":8096:8114  super.transferFrom */\n      tag_162\n        /* \"Signs 2/SignsToken.sol\":8096:8132  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_161:\n        /* \"Signs 2/SignsToken.sol\":8089:8132  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":7911:8140  function transferFrom(address from, address to, uint256 amount)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":1111:1157  mapping(address => uint256) public wageBalance */\n    tag_61:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":7560:7627  function unpause() external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"Signs 2/SignsToken.sol\":7609:7619  _unpause() */\n      tag_168\n        /* \"Signs 2/SignsToken.sol\":7609:7617  _unpause */\n      tag_169\n        /* \"Signs 2/SignsToken.sol\":7609:7619  _unpause() */\n      jump\t// in\n    tag_168:\n        /* \"Signs 2/SignsToken.sol\":7560:7627  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":754:778  RewardRates public rates */\n    tag_70:\n      0x07\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":7489:7552  function pause() external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"Signs 2/SignsToken.sol\":7536:7544  _pause() */\n      tag_180\n        /* \"Signs 2/SignsToken.sol\":7536:7542  _pause */\n      tag_181\n        /* \"Signs 2/SignsToken.sol\":7536:7544  _pause() */\n      jump\t// in\n    tag_180:\n        /* \"Signs 2/SignsToken.sol\":7489:7552  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":5682:5970  function updateRates(RewardRates calldata newRates) ... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"Signs 2/SignsToken.sol\":5798:5806  newRates */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":5790:5795  rates */\n      0x07\n        /* \"Signs 2/SignsToken.sol\":5790:5806  rates = newRates */\n      dup2\n      dup2\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      swap1\n      pop\n      pop\n        /* \"Signs 2/SignsToken.sol\":5822:5962  RatesUpdated(... */\n      0x023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b\n        /* \"Signs 2/SignsToken.sol\":5849:5857  newRates */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":5849:5874  newRates.movementBaseRate */\n      0x00\n      add\n      calldataload\n        /* \"Signs 2/SignsToken.sol\":5889:5897  newRates */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5889:5912  newRates.diaryEntryRate */\n      0x20\n      add\n      calldataload\n        /* \"Signs 2/SignsToken.sol\":5927:5935  newRates */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":5927:5951  newRates.photoUploadRate */\n      0x40\n      add\n      calldataload\n        /* \"Signs 2/SignsToken.sol\":5822:5962  RatesUpdated(... */\n      mload(0x40)\n      tag_187\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":5682:5970  function updateRates(RewardRates calldata newRates) ... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":6459:7046  function updateGameContract(string calldata contractType, address newAddress) ... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"Signs 2/SignsToken.sol\":6619:6620  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6597:6621  newAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":6597:6607  newAddress */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":6597:6621  newAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Signs 2/SignsToken.sol\":6593:6646  if (newAddress == address(0)) revert InvalidAddress() */\n      tag_191\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":6630:6646  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":6593:6646  if (newAddress == address(0)) revert InvalidAddress() */\n    tag_191:\n        /* \"Signs 2/SignsToken.sol\":6715:6727  bytes(\"nft\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x6e66740000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6705:6728  keccak256(bytes(\"nft\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":6687:6699  contractType */\n      dup4\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6671:6701  keccak256(bytes(contractType)) */\n      mload(0x40)\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":6671:6728  keccak256(bytes(contractType)) == keccak256(bytes(\"nft\")) */\n      sub\n        /* \"Signs 2/SignsToken.sol\":6667:6972  if (keccak256(bytes(contractType)) == keccak256(bytes(\"nft\"))) {... */\n      tag_194\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":6764:6774  newAddress */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6745:6761  signsNFTContract */\n      0x0b\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6745:6774  signsNFTContract = newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6667:6972  if (keccak256(bytes(contractType)) == keccak256(bytes(\"nft\"))) {... */\n      jump(tag_195)\n    tag_194:\n        /* \"Signs 2/SignsToken.sol\":6840:6856  bytes(\"history\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x686973746f727900000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6830:6857  keccak256(bytes(\"history\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":6812:6824  contractType */\n      dup4\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6796:6826  keccak256(bytes(contractType)) */\n      mload(0x40)\n      tag_196\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":6796:6857  keccak256(bytes(contractType)) == keccak256(bytes(\"history\")) */\n      sub\n        /* \"Signs 2/SignsToken.sol\":6792:6972  if (keccak256(bytes(contractType)) == keccak256(bytes(\"history\"))) {... */\n      tag_197\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":6897:6907  newAddress */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6874:6894  signsHistoryContract */\n      0x0c\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6874:6907  signsHistoryContract = newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6792:6972  if (keccak256(bytes(contractType)) == keccak256(bytes(\"history\"))) {... */\n      jump(tag_198)\n    tag_197:\n        /* \"Signs 2/SignsToken.sol\":6947:6960  InvalidRate() */\n      mload(0x40)\n      0x6a43f8d100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":6792:6972  if (keccak256(bytes(contractType)) == keccak256(bytes(\"history\"))) {... */\n    tag_198:\n        /* \"Signs 2/SignsToken.sol\":6667:6972  if (keccak256(bytes(contractType)) == keccak256(bytes(\"nft\"))) {... */\n    tag_195:\n        /* \"Signs 2/SignsToken.sol\":6997:7038  ContractUpdated(contractType, newAddress) */\n      0xf611fec7babefd259c57ea5b6006acff8140ab17bb816c65ba0aa7e36c09caa8\n        /* \"Signs 2/SignsToken.sol\":7013:7025  contractType */\n      dup4\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7027:7037  newAddress */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6997:7038  ContractUpdated(contractType, newAddress) */\n      mload(0x40)\n      tag_199\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":6459:7046  function updateGameContract(string calldata contractType, address newAddress) ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_146\n      jump\t// in\n    tag_203:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_204\n      swap1\n      tag_146\n      jump\t// in\n    tag_204:\n      dup1\n      iszero\n      tag_205\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_206\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_205)\n    tag_206:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_207:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_207\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":1203:1255  mapping(address => uint256) public lastEarningsReset */\n    tag_101:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":992:1023  address public signsNFTContract */\n    tag_104:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":1310:1358  mapping(address => uint256) public earningsToday */\n    tag_108:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":1030:1065  address public signsHistoryContract */\n    tag_111:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":7696:7903  function transfer(address to, uint256 amount) ... */\n    tag_115:\n        /* \"Signs 2/SignsToken.sol\":7839:7843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_159\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_209:\n        /* \"Signs 2/SignsToken.sol\":7869:7895  super.transfer(to, amount) */\n      tag_211\n        /* \"Signs 2/SignsToken.sol\":7884:7886  to */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7888:7894  amount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7869:7883  super.transfer */\n      tag_212\n        /* \"Signs 2/SignsToken.sol\":7869:7895  super.transfer(to, amount) */\n      jump\t// in\n    tag_211:\n        /* \"Signs 2/SignsToken.sol\":7862:7895  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":7696:7903  function transfer(address to, uint256 amount) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":4173:5104  function payReward(address user, string calldata rewardType) ... */\n    tag_120:\n        /* \"Signs 2/SignsToken.sol\":3045:3061  signsNFTContract */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3031:3061  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3031:3041  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3031:3061  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Signs 2/SignsToken.sol\":3031:3099  msg.sender != signsNFTContract && msg.sender != signsHistoryContract */\n      dup1\n      iszero\n      tag_214\n      jumpi\n      pop\n        /* \"Signs 2/SignsToken.sol\":3079:3099  signsHistoryContract */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3065:3099  msg.sender != signsHistoryContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3065:3075  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3065:3099  msg.sender != signsHistoryContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Signs 2/SignsToken.sol\":3031:3099  msg.sender != signsNFTContract && msg.sender != signsHistoryContract */\n    tag_214:\n        /* \"Signs 2/SignsToken.sol\":3027:3141  if (msg.sender != signsNFTContract && msg.sender != signsHistoryContract)... */\n      iszero\n      tag_215\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3121:3141  UnauthorizedCaller() */\n      mload(0x40)\n      0x5c427cd900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3027:3141  if (msg.sender != signsNFTContract && msg.sender != signsHistoryContract)... */\n    tag_215:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_217\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_159\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_217:\n        /* \"Signs 2/SignsToken.sol\":4322:4336  uint256 amount */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":4393:4407  bytes(\"diary\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x6469617279000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":4383:4408  keccak256(bytes(\"diary\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":4367:4377  rewardType */\n      dup4\n      dup4\n        /* \"Signs 2/SignsToken.sol\":4351:4379  keccak256(bytes(rewardType)) */\n      mload(0x40)\n      tag_219\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":4351:4408  keccak256(bytes(rewardType)) == keccak256(bytes(\"diary\")) */\n      sub\n        /* \"Signs 2/SignsToken.sol\":4347:4645  if (keccak256(bytes(rewardType)) == keccak256(bytes(\"diary\"))) {... */\n      tag_220\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":4434:4439  rates */\n      0x07\n        /* \"Signs 2/SignsToken.sol\":4434:4454  rates.diaryEntryRate */\n      0x01\n      add\n      sload\n        /* \"Signs 2/SignsToken.sol\":4425:4454  amount = rates.diaryEntryRate */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":4347:4645  if (keccak256(bytes(rewardType)) == keccak256(bytes(\"diary\"))) {... */\n      jump(tag_221)\n    tag_220:\n        /* \"Signs 2/SignsToken.sol\":4518:4532  bytes(\"photo\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x70686f746f000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":4508:4533  keccak256(bytes(\"photo\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":4492:4502  rewardType */\n      dup4\n      dup4\n        /* \"Signs 2/SignsToken.sol\":4476:4504  keccak256(bytes(rewardType)) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":4476:4533  keccak256(bytes(rewardType)) == keccak256(bytes(\"photo\")) */\n      sub\n        /* \"Signs 2/SignsToken.sol\":4472:4645  if (keccak256(bytes(rewardType)) == keccak256(bytes(\"photo\"))) {... */\n      tag_223\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":4559:4564  rates */\n      0x07\n        /* \"Signs 2/SignsToken.sol\":4559:4580  rates.photoUploadRate */\n      0x02\n      add\n      sload\n        /* \"Signs 2/SignsToken.sol\":4550:4580  amount = rates.photoUploadRate */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":4472:4645  if (keccak256(bytes(rewardType)) == keccak256(bytes(\"photo\"))) {... */\n      jump(tag_224)\n    tag_223:\n        /* \"Signs 2/SignsToken.sol\":4620:4633  InvalidRate() */\n      mload(0x40)\n      0x6a43f8d100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":4472:4645  if (keccak256(bytes(rewardType)) == keccak256(bytes(\"photo\"))) {... */\n    tag_224:\n        /* \"Signs 2/SignsToken.sol\":4347:4645  if (keccak256(bytes(rewardType)) == keccak256(bytes(\"diary\"))) {... */\n    tag_221:\n        /* \"Signs 2/SignsToken.sol\":4711:4744  _checkAndResetDailyEarnings(user) */\n      tag_225\n        /* \"Signs 2/SignsToken.sol\":4739:4743  user */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":4711:4738  _checkAndResetDailyEarnings */\n      tag_226\n        /* \"Signs 2/SignsToken.sol\":4711:4744  _checkAndResetDailyEarnings(user) */\n      jump\t// in\n    tag_225:\n        /* \"Signs 2/SignsToken.sol\":4837:4853  dailyEarningsCap */\n      sload(0x0a)\n        /* \"Signs 2/SignsToken.sol\":4828:4834  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":4806:4819  earningsToday */\n      0x0f\n        /* \"Signs 2/SignsToken.sol\":4806:4825  earningsToday[user] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":4820:4824  user */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":4806:4825  earningsToday[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":4806:4834  earningsToday[user] + amount */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"Signs 2/SignsToken.sol\":4806:4853  earningsToday[user] + amount > dailyEarningsCap */\n      gt\n        /* \"Signs 2/SignsToken.sol\":4802:4903  if (earningsToday[user] + amount > dailyEarningsCap)... */\n      iszero\n      tag_229\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":4875:4903  DailyEarningsLimitExceeded() */\n      mload(0x40)\n      0xd75747f600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":4802:4903  if (earningsToday[user] + amount > dailyEarningsCap)... */\n    tag_229:\n        /* \"Signs 2/SignsToken.sol\":4951:4957  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":4928:4941  earningsToday */\n      0x0f\n        /* \"Signs 2/SignsToken.sol\":4928:4947  earningsToday[user] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":4942:4946  user */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":4928:4947  earningsToday[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":4928:4957  earningsToday[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":5015:5034  _mint(user, amount) */\n      tag_231\n        /* \"Signs 2/SignsToken.sol\":5021:5025  user */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":5027:5033  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5015:5020  _mint */\n      tag_232\n        /* \"Signs 2/SignsToken.sol\":5015:5034  _mint(user, amount) */\n      jump\t// in\n    tag_231:\n        /* \"Signs 2/SignsToken.sol\":5071:5075  user */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":5060:5096  RewardPaid(user, amount, rewardType) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c\n        /* \"Signs 2/SignsToken.sol\":5077:5083  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5085:5095  rewardType */\n      dup6\n      dup6\n        /* \"Signs 2/SignsToken.sol\":5060:5096  RewardPaid(user, amount, rewardType) */\n      mload(0x40)\n      tag_233\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":4311:5104  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":4173:5104  function payReward(address user, string calldata rewardType) ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":872:916  uint256 public constant DAILY_RESET = 1 days */\n    tag_122:\n        /* \"Signs 2/SignsToken.sol\":910:916  1 days */\n      0x015180\n        /* \"Signs 2/SignsToken.sol\":872:916  uint256 public constant DAILY_RESET = 1 days */\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":5189:5571  function claimWages() ... */\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_237\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_239\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_159\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_239:\n        /* \"Signs 2/SignsToken.sol\":5294:5308  uint256 amount */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5311:5322  wageBalance */\n      0x0d\n        /* \"Signs 2/SignsToken.sol\":5311:5334  wageBalance[msg.sender] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5323:5333  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":5311:5334  wageBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":5294:5334  uint256 amount = wageBalance[msg.sender] */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5359:5360  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5349:5355  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":5349:5360  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":5345:5390  if (amount == 0) revert InsufficientBalance() */\n      tag_241\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":5369:5390  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":5345:5390  if (amount == 0) revert InsufficientBalance() */\n    tag_241:\n        /* \"Signs 2/SignsToken.sol\":5484:5485  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5458:5469  wageBalance */\n      0x0d\n        /* \"Signs 2/SignsToken.sol\":5458:5481  wageBalance[msg.sender] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5470:5480  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":5458:5481  wageBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":5458:5485  wageBalance[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":5538:5563  _mint(msg.sender, amount) */\n      tag_242\n        /* \"Signs 2/SignsToken.sol\":5544:5554  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":5556:5562  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5538:5543  _mint */\n      tag_232\n        /* \"Signs 2/SignsToken.sol\":5538:5563  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_242:\n        /* \"Signs 2/SignsToken.sol\":5283:5571  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_243\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_244\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_243:\n        /* \"Signs 2/SignsToken.sol\":5189:5571  function claimWages() ... */\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":6081:6265  function updateDailyEarningsCap(uint256 newCap) ... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"Signs 2/SignsToken.sol\":6204:6210  newCap */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6185:6201  dailyEarningsCap */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":6185:6210  dailyEarningsCap = newCap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6226:6257  DailyEarningsCapUpdated(newCap) */\n      0xb1cc6c859f8e547a95cbbe7dcece9e0fd5a931c906bd08dcf8413a2c83539713\n        /* \"Signs 2/SignsToken.sol\":6250:6256  newCap */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":6226:6257  DailyEarningsCapUpdated(newCap) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":6081:6265  function updateDailyEarningsCap(uint256 newCap) ... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":3350:3964  function recordWage(address carrier, uint256 amount) ... */\n    tag_132:\n        /* \"Signs 2/SignsToken.sol\":3045:3061  signsNFTContract */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3031:3061  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3031:3041  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3031:3061  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Signs 2/SignsToken.sol\":3031:3099  msg.sender != signsNFTContract && msg.sender != signsHistoryContract */\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n        /* \"Signs 2/SignsToken.sol\":3079:3099  signsHistoryContract */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3065:3099  msg.sender != signsHistoryContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3065:3075  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3065:3099  msg.sender != signsHistoryContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Signs 2/SignsToken.sol\":3031:3099  msg.sender != signsNFTContract && msg.sender != signsHistoryContract */\n    tag_250:\n        /* \"Signs 2/SignsToken.sol\":3027:3141  if (msg.sender != signsNFTContract && msg.sender != signsHistoryContract)... */\n      iszero\n      tag_251\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3121:3141  UnauthorizedCaller() */\n      mload(0x40)\n      0x5c427cd900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3027:3141  if (msg.sender != signsNFTContract && msg.sender != signsHistoryContract)... */\n    tag_251:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_159\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_253:\n        /* \"Signs 2/SignsToken.sol\":3505:3506  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3495:3501  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":3495:3506  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":3491:3530  if (amount == 0) revert InvalidAmount() */\n      tag_255\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3515:3530  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3491:3530  if (amount == 0) revert InvalidAmount() */\n    tag_255:\n        /* \"Signs 2/SignsToken.sol\":3597:3633  _checkAndResetDailyEarnings(carrier) */\n      tag_256\n        /* \"Signs 2/SignsToken.sol\":3625:3632  carrier */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":3597:3624  _checkAndResetDailyEarnings */\n      tag_226\n        /* \"Signs 2/SignsToken.sol\":3597:3633  _checkAndResetDailyEarnings(carrier) */\n      jump\t// in\n    tag_256:\n        /* \"Signs 2/SignsToken.sol\":3729:3745  dailyEarningsCap */\n      sload(0x0a)\n        /* \"Signs 2/SignsToken.sol\":3720:3726  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":3695:3708  earningsToday */\n      0x0f\n        /* \"Signs 2/SignsToken.sol\":3695:3717  earningsToday[carrier] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3709:3716  carrier */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":3695:3717  earningsToday[carrier] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":3695:3726  earningsToday[carrier] + amount */\n      tag_257\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_257:\n        /* \"Signs 2/SignsToken.sol\":3695:3745  earningsToday[carrier] + amount > dailyEarningsCap */\n      gt\n        /* \"Signs 2/SignsToken.sol\":3691:3795  if (earningsToday[carrier] + amount > dailyEarningsCap)... */\n      iszero\n      tag_258\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3767:3795  DailyEarningsLimitExceeded() */\n      mload(0x40)\n      0xd75747f600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3691:3795  if (earningsToday[carrier] + amount > dailyEarningsCap)... */\n    tag_258:\n        /* \"Signs 2/SignsToken.sol\":3844:3850  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3820:3831  wageBalance */\n      0x0d\n        /* \"Signs 2/SignsToken.sol\":3820:3840  wageBalance[carrier] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3832:3839  carrier */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3820:3840  wageBalance[carrier] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3820:3850  wageBalance[carrier] += amount */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":3887:3893  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3861:3874  earningsToday */\n      0x0f\n        /* \"Signs 2/SignsToken.sol\":3861:3883  earningsToday[carrier] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3875:3882  carrier */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3861:3883  earningsToday[carrier] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3861:3893  earningsToday[carrier] += amount */\n      dup3\n      dup3\n      sload\n      tag_260\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_260:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":3940:3947  carrier */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":3919:3956  WagePaid(msg.sender, carrier, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3928:3938  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3919:3956  WagePaid(msg.sender, carrier, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbf26400ffec32b7f7fa346df27788423de869f04ad96fd322dafc7af85002636\n        /* \"Signs 2/SignsToken.sol\":3949:3955  amount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":3919:3956  WagePaid(msg.sender, carrier, amount) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":3350:3964  function recordWage(address carrier, uint256 amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":785:816  uint256 public dailyEarningsCap */\n    tag_142:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_274\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_74\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_291\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_292\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_298\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_159\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_300\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":7199:7445  function _checkAndResetDailyEarnings(address user) internal {... */\n    tag_226:\n        /* \"Signs 2/SignsToken.sol\":910:916  1 days */\n      0x015180\n        /* \"Signs 2/SignsToken.sol\":7293:7310  lastEarningsReset */\n      0x0e\n        /* \"Signs 2/SignsToken.sol\":7293:7316  lastEarningsReset[user] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7311:7315  user */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7293:7316  lastEarningsReset[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":7293:7330  lastEarningsReset[user] + DAILY_RESET */\n      tag_306\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_306:\n        /* \"Signs 2/SignsToken.sol\":7274:7289  block.timestamp */\n      timestamp\n        /* \"Signs 2/SignsToken.sol\":7274:7330  block.timestamp >= lastEarningsReset[user] + DAILY_RESET */\n      lt\n        /* \"Signs 2/SignsToken.sol\":7270:7438  if (block.timestamp >= lastEarningsReset[user] + DAILY_RESET) {... */\n      tag_307\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":7369:7370  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7347:7360  earningsToday */\n      0x0f\n        /* \"Signs 2/SignsToken.sol\":7347:7366  earningsToday[user] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7361:7365  user */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7347:7366  earningsToday[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":7347:7370  earningsToday[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":7411:7426  block.timestamp */\n      timestamp\n        /* \"Signs 2/SignsToken.sol\":7385:7402  lastEarningsReset */\n      0x0e\n        /* \"Signs 2/SignsToken.sol\":7385:7408  lastEarningsReset[user] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7403:7407  user */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7385:7408  lastEarningsReset[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":7385:7426  lastEarningsReset[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":7270:7438  if (block.timestamp >= lastEarningsReset[user] + DAILY_RESET) {... */\n    tag_307:\n        /* \"Signs 2/SignsToken.sol\":7199:7445  function _checkAndResetDailyEarnings(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_314:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_339\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_74\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_345\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_345:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_346)\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_350)\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_351\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_352:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_353:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_354:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_355:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_356:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_406\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_352\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":711:782   */\n      tag_407\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_353\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_408\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_354\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":881:910   */\n      tag_409\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_355\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_42:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_411\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_356\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_358:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_359:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_360:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_361:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_417\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_360\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_362:\n        /* \"#utility.yul\":1876:1900   */\n      tag_419\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_361\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_420:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_363:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_422\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_362\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_364:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_365:\n        /* \"#utility.yul\":2232:2256   */\n      tag_425\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_364\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_426:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_366:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_428\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_365\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_45:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_431\n      tag_358\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2525:2644   */\n    tag_430:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_432\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_363\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_433\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_366\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_367:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_368:\n        /* \"#utility.yul\":3089:3110   */\n      tag_436\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_367\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_48:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_438\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_368\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_369:\n        /* \"#utility.yul\":3426:3450   */\n      tag_440\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_364\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_52:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_442\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_369\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_55:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_445\n      tag_358\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3801:3920   */\n    tag_444:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_446\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_363\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_447\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_363\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_448\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_366\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_60:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_451\n      tag_358\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4392:4511   */\n    tag_450:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_452\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_363\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_370:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_371:\n        /* \"#utility.yul\":4826:4848   */\n      tag_455\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_370\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_66:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_457\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_371\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5523   */\n    tag_72:\n        /* \"#utility.yul\":5230:5234   */\n      0x00\n        /* \"#utility.yul\":5268:5270   */\n      0x60\n        /* \"#utility.yul\":5257:5266   */\n      dup3\n        /* \"#utility.yul\":5253:5271   */\n      add\n        /* \"#utility.yul\":5245:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":5281:5352   */\n      tag_459\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5338:5347   */\n      dup4\n        /* \"#utility.yul\":5334:5351   */\n      add\n        /* \"#utility.yul\":5325:5331   */\n      dup7\n        /* \"#utility.yul\":5281:5352   */\n      tag_369\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5362:5434   */\n      tag_460\n        /* \"#utility.yul\":5430:5432   */\n      0x20\n        /* \"#utility.yul\":5419:5428   */\n      dup4\n        /* \"#utility.yul\":5415:5433   */\n      add\n        /* \"#utility.yul\":5406:5412   */\n      dup6\n        /* \"#utility.yul\":5362:5434   */\n      tag_369\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5444:5516   */\n      tag_461\n        /* \"#utility.yul\":5512:5514   */\n      0x40\n        /* \"#utility.yul\":5501:5510   */\n      dup4\n        /* \"#utility.yul\":5497:5515   */\n      add\n        /* \"#utility.yul\":5488:5494   */\n      dup5\n        /* \"#utility.yul\":5444:5516   */\n      tag_369\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5081:5523   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5529:5646   */\n    tag_372:\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5635:5636   */\n      dup1\n        /* \"#utility.yul\":5628:5640   */\n      revert\n        /* \"#utility.yul\":5689:5924   */\n    tag_373:\n        /* \"#utility.yul\":5766:5771   */\n      0x00\n        /* \"#utility.yul\":5807:5809   */\n      0x60\n        /* \"#utility.yul\":5798:5804   */\n      dup3\n        /* \"#utility.yul\":5793:5796   */\n      dup5\n        /* \"#utility.yul\":5789:5805   */\n      sub\n        /* \"#utility.yul\":5785:5810   */\n      slt\n        /* \"#utility.yul\":5782:5894   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5813:5892   */\n      tag_465\n      tag_372\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5782:5894   */\n    tag_464:\n        /* \"#utility.yul\":5912:5918   */\n      dup2\n        /* \"#utility.yul\":5903:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5689:5924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5930:6321   */\n    tag_86:\n        /* \"#utility.yul\":6020:6026   */\n      0x00\n        /* \"#utility.yul\":6069:6071   */\n      0x60\n        /* \"#utility.yul\":6057:6066   */\n      dup3\n        /* \"#utility.yul\":6048:6055   */\n      dup5\n        /* \"#utility.yul\":6044:6067   */\n      sub\n        /* \"#utility.yul\":6040:6072   */\n      slt\n        /* \"#utility.yul\":6037:6156   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6075:6154   */\n      tag_468\n      tag_358\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6037:6156   */\n    tag_467:\n        /* \"#utility.yul\":6195:6196   */\n      0x00\n        /* \"#utility.yul\":6220:6304   */\n      tag_469\n        /* \"#utility.yul\":6296:6303   */\n      dup5\n        /* \"#utility.yul\":6287:6293   */\n      dup3\n        /* \"#utility.yul\":6276:6285   */\n      dup6\n        /* \"#utility.yul\":6272:6294   */\n      add\n        /* \"#utility.yul\":6220:6304   */\n      tag_373\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6210:6304   */\n      swap2\n      pop\n        /* \"#utility.yul\":6166:6314   */\n      pop\n        /* \"#utility.yul\":5930:6321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6327:6444   */\n    tag_374:\n        /* \"#utility.yul\":6436:6437   */\n      0x00\n        /* \"#utility.yul\":6433:6434   */\n      dup1\n        /* \"#utility.yul\":6426:6438   */\n      revert\n        /* \"#utility.yul\":6450:6567   */\n    tag_375:\n        /* \"#utility.yul\":6559:6560   */\n      0x00\n        /* \"#utility.yul\":6556:6557   */\n      dup1\n        /* \"#utility.yul\":6549:6561   */\n      revert\n        /* \"#utility.yul\":6573:6690   */\n    tag_376:\n        /* \"#utility.yul\":6682:6683   */\n      0x00\n        /* \"#utility.yul\":6679:6680   */\n      dup1\n        /* \"#utility.yul\":6672:6684   */\n      revert\n        /* \"#utility.yul\":6710:7263   */\n    tag_377:\n        /* \"#utility.yul\":6768:6776   */\n      0x00\n        /* \"#utility.yul\":6778:6784   */\n      dup1\n        /* \"#utility.yul\":6828:6831   */\n      dup4\n        /* \"#utility.yul\":6821:6825   */\n      0x1f\n        /* \"#utility.yul\":6813:6819   */\n      dup5\n        /* \"#utility.yul\":6809:6826   */\n      add\n        /* \"#utility.yul\":6805:6832   */\n      slt\n        /* \"#utility.yul\":6795:6917   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6836:6915   */\n      tag_475\n      tag_374\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6795:6917   */\n    tag_474:\n        /* \"#utility.yul\":6949:6955   */\n      dup3\n        /* \"#utility.yul\":6936:6956   */\n      calldataload\n        /* \"#utility.yul\":6926:6956   */\n      swap1\n      pop\n        /* \"#utility.yul\":6979:6997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6971:6977   */\n      dup2\n        /* \"#utility.yul\":6968:6998   */\n      gt\n        /* \"#utility.yul\":6965:7082   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":7001:7080   */\n      tag_477\n      tag_375\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6965:7082   */\n    tag_476:\n        /* \"#utility.yul\":7115:7119   */\n      0x20\n        /* \"#utility.yul\":7107:7113   */\n      dup4\n        /* \"#utility.yul\":7103:7120   */\n      add\n        /* \"#utility.yul\":7091:7120   */\n      swap2\n      pop\n        /* \"#utility.yul\":7169:7172   */\n      dup4\n        /* \"#utility.yul\":7161:7165   */\n      0x01\n        /* \"#utility.yul\":7153:7159   */\n      dup3\n        /* \"#utility.yul\":7149:7166   */\n      mul\n        /* \"#utility.yul\":7139:7147   */\n      dup4\n        /* \"#utility.yul\":7135:7167   */\n      add\n        /* \"#utility.yul\":7132:7173   */\n      gt\n        /* \"#utility.yul\":7129:7257   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":7176:7255   */\n      tag_479\n      tag_376\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7129:7257   */\n    tag_478:\n        /* \"#utility.yul\":6710:7263   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7269:7943   */\n    tag_90:\n        /* \"#utility.yul\":7349:7355   */\n      0x00\n        /* \"#utility.yul\":7357:7363   */\n      dup1\n        /* \"#utility.yul\":7365:7371   */\n      0x00\n        /* \"#utility.yul\":7414:7416   */\n      0x40\n        /* \"#utility.yul\":7402:7411   */\n      dup5\n        /* \"#utility.yul\":7393:7400   */\n      dup7\n        /* \"#utility.yul\":7389:7412   */\n      sub\n        /* \"#utility.yul\":7385:7417   */\n      slt\n        /* \"#utility.yul\":7382:7501   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7420:7499   */\n      tag_482\n      tag_358\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7382:7501   */\n    tag_481:\n        /* \"#utility.yul\":7568:7569   */\n      0x00\n        /* \"#utility.yul\":7557:7566   */\n      dup5\n        /* \"#utility.yul\":7553:7570   */\n      add\n        /* \"#utility.yul\":7540:7571   */\n      calldataload\n        /* \"#utility.yul\":7598:7616   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7590:7596   */\n      dup2\n        /* \"#utility.yul\":7587:7617   */\n      gt\n        /* \"#utility.yul\":7584:7701   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":7620:7699   */\n      tag_484\n      tag_359\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7584:7701   */\n    tag_483:\n        /* \"#utility.yul\":7733:7798   */\n      tag_485\n        /* \"#utility.yul\":7790:7797   */\n      dup7\n        /* \"#utility.yul\":7781:7787   */\n      dup3\n        /* \"#utility.yul\":7770:7779   */\n      dup8\n        /* \"#utility.yul\":7766:7788   */\n      add\n        /* \"#utility.yul\":7733:7798   */\n      tag_377\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7715:7798   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":7511:7808   */\n      pop\n        /* \"#utility.yul\":7847:7849   */\n      0x20\n        /* \"#utility.yul\":7873:7926   */\n      tag_486\n        /* \"#utility.yul\":7918:7925   */\n      dup7\n        /* \"#utility.yul\":7909:7915   */\n      dup3\n        /* \"#utility.yul\":7898:7907   */\n      dup8\n        /* \"#utility.yul\":7894:7916   */\n      add\n        /* \"#utility.yul\":7873:7926   */\n      tag_363\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7863:7926   */\n      swap2\n      pop\n        /* \"#utility.yul\":7818:7936   */\n      pop\n        /* \"#utility.yul\":7269:7943   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7949:8067   */\n    tag_378:\n        /* \"#utility.yul\":8036:8060   */\n      tag_488\n        /* \"#utility.yul\":8054:8059   */\n      dup2\n        /* \"#utility.yul\":8036:8060   */\n      tag_361\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8031:8034   */\n      dup3\n        /* \"#utility.yul\":8024:8061   */\n      mstore\n        /* \"#utility.yul\":7949:8067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8073:8295   */\n    tag_95:\n        /* \"#utility.yul\":8166:8170   */\n      0x00\n        /* \"#utility.yul\":8204:8206   */\n      0x20\n        /* \"#utility.yul\":8193:8202   */\n      dup3\n        /* \"#utility.yul\":8189:8207   */\n      add\n        /* \"#utility.yul\":8181:8207   */\n      swap1\n      pop\n        /* \"#utility.yul\":8217:8288   */\n      tag_490\n        /* \"#utility.yul\":8285:8286   */\n      0x00\n        /* \"#utility.yul\":8274:8283   */\n      dup4\n        /* \"#utility.yul\":8270:8287   */\n      add\n        /* \"#utility.yul\":8261:8267   */\n      dup5\n        /* \"#utility.yul\":8217:8288   */\n      tag_378\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8073:8295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8301:8975   */\n    tag_119:\n        /* \"#utility.yul\":8381:8387   */\n      0x00\n        /* \"#utility.yul\":8389:8395   */\n      dup1\n        /* \"#utility.yul\":8397:8403   */\n      0x00\n        /* \"#utility.yul\":8446:8448   */\n      0x40\n        /* \"#utility.yul\":8434:8443   */\n      dup5\n        /* \"#utility.yul\":8425:8432   */\n      dup7\n        /* \"#utility.yul\":8421:8444   */\n      sub\n        /* \"#utility.yul\":8417:8449   */\n      slt\n        /* \"#utility.yul\":8414:8533   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":8452:8531   */\n      tag_493\n      tag_358\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8414:8533   */\n    tag_492:\n        /* \"#utility.yul\":8572:8573   */\n      0x00\n        /* \"#utility.yul\":8597:8650   */\n      tag_494\n        /* \"#utility.yul\":8642:8649   */\n      dup7\n        /* \"#utility.yul\":8633:8639   */\n      dup3\n        /* \"#utility.yul\":8622:8631   */\n      dup8\n        /* \"#utility.yul\":8618:8640   */\n      add\n        /* \"#utility.yul\":8597:8650   */\n      tag_363\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8587:8650   */\n      swap4\n      pop\n        /* \"#utility.yul\":8543:8660   */\n      pop\n        /* \"#utility.yul\":8727:8729   */\n      0x20\n        /* \"#utility.yul\":8716:8725   */\n      dup5\n        /* \"#utility.yul\":8712:8730   */\n      add\n        /* \"#utility.yul\":8699:8731   */\n      calldataload\n        /* \"#utility.yul\":8758:8776   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8750:8756   */\n      dup2\n        /* \"#utility.yul\":8747:8777   */\n      gt\n        /* \"#utility.yul\":8744:8861   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":8780:8859   */\n      tag_496\n      tag_359\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8744:8861   */\n    tag_495:\n        /* \"#utility.yul\":8893:8958   */\n      tag_497\n        /* \"#utility.yul\":8950:8957   */\n      dup7\n        /* \"#utility.yul\":8941:8947   */\n      dup3\n        /* \"#utility.yul\":8930:8939   */\n      dup8\n        /* \"#utility.yul\":8926:8948   */\n      add\n        /* \"#utility.yul\":8893:8958   */\n      tag_377\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8875:8958   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8670:8968   */\n      pop\n        /* \"#utility.yul\":8301:8975   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8981:9310   */\n    tag_128:\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9089:9091   */\n      0x20\n        /* \"#utility.yul\":9077:9086   */\n      dup3\n        /* \"#utility.yul\":9068:9075   */\n      dup5\n        /* \"#utility.yul\":9064:9087   */\n      sub\n        /* \"#utility.yul\":9060:9092   */\n      slt\n        /* \"#utility.yul\":9057:9176   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":9095:9174   */\n      tag_500\n      tag_358\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9057:9176   */\n    tag_499:\n        /* \"#utility.yul\":9215:9216   */\n      0x00\n        /* \"#utility.yul\":9240:9293   */\n      tag_501\n        /* \"#utility.yul\":9285:9292   */\n      dup5\n        /* \"#utility.yul\":9276:9282   */\n      dup3\n        /* \"#utility.yul\":9265:9274   */\n      dup6\n        /* \"#utility.yul\":9261:9283   */\n      add\n        /* \"#utility.yul\":9240:9293   */\n      tag_366\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9230:9293   */\n      swap2\n      pop\n        /* \"#utility.yul\":9186:9303   */\n      pop\n        /* \"#utility.yul\":8981:9310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9316:9790   */\n    tag_135:\n        /* \"#utility.yul\":9384:9390   */\n      0x00\n        /* \"#utility.yul\":9392:9398   */\n      dup1\n        /* \"#utility.yul\":9441:9443   */\n      0x40\n        /* \"#utility.yul\":9429:9438   */\n      dup4\n        /* \"#utility.yul\":9420:9427   */\n      dup6\n        /* \"#utility.yul\":9416:9439   */\n      sub\n        /* \"#utility.yul\":9412:9444   */\n      slt\n        /* \"#utility.yul\":9409:9528   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":9447:9526   */\n      tag_504\n      tag_358\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9409:9528   */\n    tag_503:\n        /* \"#utility.yul\":9567:9568   */\n      0x00\n        /* \"#utility.yul\":9592:9645   */\n      tag_505\n        /* \"#utility.yul\":9637:9644   */\n      dup6\n        /* \"#utility.yul\":9628:9634   */\n      dup3\n        /* \"#utility.yul\":9617:9626   */\n      dup7\n        /* \"#utility.yul\":9613:9635   */\n      add\n        /* \"#utility.yul\":9592:9645   */\n      tag_363\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9582:9645   */\n      swap3\n      pop\n        /* \"#utility.yul\":9538:9655   */\n      pop\n        /* \"#utility.yul\":9694:9696   */\n      0x20\n        /* \"#utility.yul\":9720:9773   */\n      tag_506\n        /* \"#utility.yul\":9765:9772   */\n      dup6\n        /* \"#utility.yul\":9756:9762   */\n      dup3\n        /* \"#utility.yul\":9745:9754   */\n      dup7\n        /* \"#utility.yul\":9741:9763   */\n      add\n        /* \"#utility.yul\":9720:9773   */\n      tag_363\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9710:9773   */\n      swap2\n      pop\n        /* \"#utility.yul\":9665:9783   */\n      pop\n        /* \"#utility.yul\":9316:9790   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9796:9976   */\n    tag_379:\n        /* \"#utility.yul\":9844:9921   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9841:9842   */\n      0x00\n        /* \"#utility.yul\":9834:9922   */\n      mstore\n        /* \"#utility.yul\":9941:9945   */\n      0x22\n        /* \"#utility.yul\":9938:9939   */\n      0x04\n        /* \"#utility.yul\":9931:9946   */\n      mstore\n        /* \"#utility.yul\":9965:9969   */\n      0x24\n        /* \"#utility.yul\":9962:9963   */\n      0x00\n        /* \"#utility.yul\":9955:9970   */\n      revert\n        /* \"#utility.yul\":9982:10302   */\n    tag_146:\n        /* \"#utility.yul\":10026:10032   */\n      0x00\n        /* \"#utility.yul\":10063:10064   */\n      0x02\n        /* \"#utility.yul\":10057:10061   */\n      dup3\n        /* \"#utility.yul\":10053:10065   */\n      div\n        /* \"#utility.yul\":10043:10065   */\n      swap1\n      pop\n        /* \"#utility.yul\":10110:10111   */\n      0x01\n        /* \"#utility.yul\":10104:10108   */\n      dup3\n        /* \"#utility.yul\":10100:10112   */\n      and\n        /* \"#utility.yul\":10131:10149   */\n      dup1\n        /* \"#utility.yul\":10121:10202   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":10187:10191   */\n      0x7f\n        /* \"#utility.yul\":10179:10185   */\n      dup3\n        /* \"#utility.yul\":10175:10192   */\n      and\n        /* \"#utility.yul\":10165:10192   */\n      swap2\n      pop\n        /* \"#utility.yul\":10121:10202   */\n    tag_509:\n        /* \"#utility.yul\":10249:10251   */\n      0x20\n        /* \"#utility.yul\":10241:10247   */\n      dup3\n        /* \"#utility.yul\":10238:10252   */\n      lt\n        /* \"#utility.yul\":10218:10236   */\n      dup2\n        /* \"#utility.yul\":10215:10253   */\n      sub\n        /* \"#utility.yul\":10212:10296   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":10268:10286   */\n      tag_511\n      tag_379\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10212:10296   */\n    tag_510:\n        /* \"#utility.yul\":10033:10302   */\n      pop\n        /* \"#utility.yul\":9982:10302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10494:10680   */\n    tag_381:\n        /* \"#utility.yul\":10539:10550   */\n      0x00\n        /* \"#utility.yul\":10588:10591   */\n      dup2\n        /* \"#utility.yul\":10575:10592   */\n      calldataload\n        /* \"#utility.yul\":10601:10634   */\n      tag_514\n        /* \"#utility.yul\":10628:10633   */\n      dup2\n        /* \"#utility.yul\":10601:10634   */\n      tag_365\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10668:10673   */\n      dup1\n        /* \"#utility.yul\":10644:10673   */\n      swap2\n      pop\n        /* \"#utility.yul\":10551:10680   */\n      pop\n        /* \"#utility.yul\":10494:10680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10686:10778   */\n    tag_382:\n        /* \"#utility.yul\":10718:10726   */\n      0x00\n        /* \"#utility.yul\":10765:10770   */\n      dup2\n        /* \"#utility.yul\":10762:10763   */\n      0x00\n        /* \"#utility.yul\":10758:10771   */\n      shl\n        /* \"#utility.yul\":10737:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10784:11074   */\n    tag_383:\n        /* \"#utility.yul\":10842:10848   */\n      0x00\n        /* \"#utility.yul\":10871:10937   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10958:10980   */\n      tag_517\n        /* \"#utility.yul\":10971:10979   */\n      dup5\n        /* \"#utility.yul\":10958:10980   */\n      tag_382\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10946:10980   */\n      swap4\n      pop\n        /* \"#utility.yul\":11013:11017   */\n      dup1\n        /* \"#utility.yul\":11009:11018   */\n      not\n        /* \"#utility.yul\":11002:11007   */\n      dup4\n        /* \"#utility.yul\":10998:11019   */\n      and\n        /* \"#utility.yul\":10989:11019   */\n      swap3\n      pop\n        /* \"#utility.yul\":11062:11066   */\n      dup1\n        /* \"#utility.yul\":11052:11060   */\n      dup5\n        /* \"#utility.yul\":11048:11067   */\n      and\n        /* \"#utility.yul\":11041:11046   */\n      dup4\n        /* \"#utility.yul\":11038:11068   */\n      or\n        /* \"#utility.yul\":11028:11068   */\n      swap2\n      pop\n        /* \"#utility.yul\":10849:11074   */\n      pop\n        /* \"#utility.yul\":10784:11074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11080:11140   */\n    tag_384:\n        /* \"#utility.yul\":11108:11111   */\n      0x00\n        /* \"#utility.yul\":11129:11134   */\n      dup2\n        /* \"#utility.yul\":11122:11134   */\n      swap1\n      pop\n        /* \"#utility.yul\":11080:11140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11146:11288   */\n    tag_385:\n        /* \"#utility.yul\":11196:11205   */\n      0x00\n        /* \"#utility.yul\":11229:11282   */\n      tag_520\n        /* \"#utility.yul\":11247:11281   */\n      tag_521\n        /* \"#utility.yul\":11256:11280   */\n      tag_522\n        /* \"#utility.yul\":11274:11279   */\n      dup5\n        /* \"#utility.yul\":11256:11280   */\n      tag_364\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11247:11281   */\n      tag_384\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11229:11282   */\n      tag_364\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11216:11282   */\n      swap1\n      pop\n        /* \"#utility.yul\":11146:11288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11294:11369   */\n    tag_386:\n        /* \"#utility.yul\":11337:11340   */\n      0x00\n        /* \"#utility.yul\":11358:11363   */\n      dup2\n        /* \"#utility.yul\":11351:11363   */\n      swap1\n      pop\n        /* \"#utility.yul\":11294:11369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11375:11637   */\n    tag_387:\n        /* \"#utility.yul\":11485:11524   */\n      tag_525\n        /* \"#utility.yul\":11516:11523   */\n      dup3\n        /* \"#utility.yul\":11485:11524   */\n      tag_385\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11546:11630   */\n      tag_526\n        /* \"#utility.yul\":11588:11629   */\n      tag_527\n        /* \"#utility.yul\":11612:11628   */\n      dup3\n        /* \"#utility.yul\":11588:11629   */\n      tag_386\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11581:11585   */\n      dup4\n        /* \"#utility.yul\":11575:11586   */\n      sload\n        /* \"#utility.yul\":11546:11630   */\n      tag_383\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11540:11544   */\n      dup3\n        /* \"#utility.yul\":11533:11631   */\n      sstore\n        /* \"#utility.yul\":11451:11637   */\n      pop\n        /* \"#utility.yul\":11375:11637   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11643:12794   */\n    tag_388:\n        /* \"#utility.yul\":11827:11828   */\n      0x00\n        /* \"#utility.yul\":11821:11825   */\n      dup2\n        /* \"#utility.yul\":11817:11829   */\n      add\n        /* \"#utility.yul\":11873:11874   */\n      0x00\n        /* \"#utility.yul\":11866:11871   */\n      dup4\n        /* \"#utility.yul\":11862:11875   */\n      add\n        /* \"#utility.yul\":11923:11935   */\n      dup1\n        /* \"#utility.yul\":11966:12008   */\n      tag_529\n        /* \"#utility.yul\":11994:12007   */\n      dup2\n        /* \"#utility.yul\":11966:12008   */\n      tag_381\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11949:12008   */\n      swap1\n      pop\n        /* \"#utility.yul\":12022:12100   */\n      tag_530\n        /* \"#utility.yul\":12086:12099   */\n      dup2\n        /* \"#utility.yul\":12074:12084   */\n      dup5\n        /* \"#utility.yul\":12022:12100   */\n      tag_387\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11784:12111   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12164:12165   */\n      0x01\n        /* \"#utility.yul\":12158:12162   */\n      dup2\n        /* \"#utility.yul\":12154:12166   */\n      add\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12203:12208   */\n      dup4\n        /* \"#utility.yul\":12199:12213   */\n      add\n        /* \"#utility.yul\":12261:12273   */\n      dup1\n        /* \"#utility.yul\":12304:12346   */\n      tag_531\n        /* \"#utility.yul\":12332:12345   */\n      dup2\n        /* \"#utility.yul\":12304:12346   */\n      tag_381\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12287:12346   */\n      swap1\n      pop\n        /* \"#utility.yul\":12360:12438   */\n      tag_532\n        /* \"#utility.yul\":12424:12437   */\n      dup2\n        /* \"#utility.yul\":12412:12422   */\n      dup5\n        /* \"#utility.yul\":12360:12438   */\n      tag_387\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":12121:12449   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12502:12503   */\n      0x02\n        /* \"#utility.yul\":12496:12500   */\n      dup2\n        /* \"#utility.yul\":12492:12504   */\n      add\n        /* \"#utility.yul\":12548:12550   */\n      0x40\n        /* \"#utility.yul\":12541:12546   */\n      dup4\n        /* \"#utility.yul\":12537:12551   */\n      add\n        /* \"#utility.yul\":12599:12611   */\n      dup1\n        /* \"#utility.yul\":12642:12684   */\n      tag_533\n        /* \"#utility.yul\":12670:12683   */\n      dup2\n        /* \"#utility.yul\":12642:12684   */\n      tag_381\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12625:12684   */\n      swap1\n      pop\n        /* \"#utility.yul\":12698:12776   */\n      tag_534\n        /* \"#utility.yul\":12762:12775   */\n      dup2\n        /* \"#utility.yul\":12750:12760   */\n      dup5\n        /* \"#utility.yul\":12698:12776   */\n      tag_387\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12459:12787   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11643:12794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12800:13072   */\n    tag_186:\n        /* \"#utility.yul\":12944:13066   */\n      tag_536\n        /* \"#utility.yul\":13058:13065   */\n      dup3\n        /* \"#utility.yul\":13052:13056   */\n      dup3\n        /* \"#utility.yul\":12944:13066   */\n      tag_388\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12800:13072   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13078:13225   */\n    tag_389:\n        /* \"#utility.yul\":13179:13190   */\n      0x00\n        /* \"#utility.yul\":13216:13219   */\n      dup2\n        /* \"#utility.yul\":13201:13219   */\n      swap1\n      pop\n        /* \"#utility.yul\":13078:13225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13231:13379   */\n    tag_390:\n        /* \"#utility.yul\":13329:13335   */\n      dup3\n        /* \"#utility.yul\":13324:13327   */\n      dup2\n        /* \"#utility.yul\":13319:13322   */\n      dup4\n        /* \"#utility.yul\":13306:13336   */\n      calldatacopy\n        /* \"#utility.yul\":13370:13371   */\n      0x00\n        /* \"#utility.yul\":13361:13367   */\n      dup4\n        /* \"#utility.yul\":13356:13359   */\n      dup4\n        /* \"#utility.yul\":13352:13368   */\n      add\n        /* \"#utility.yul\":13345:13372   */\n      mstore\n        /* \"#utility.yul\":13231:13379   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13407:13734   */\n    tag_391:\n        /* \"#utility.yul\":13521:13524   */\n      0x00\n        /* \"#utility.yul\":13542:13630   */\n      tag_540\n        /* \"#utility.yul\":13623:13629   */\n      dup4\n        /* \"#utility.yul\":13618:13621   */\n      dup6\n        /* \"#utility.yul\":13542:13630   */\n      tag_389\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13535:13630   */\n      swap4\n      pop\n        /* \"#utility.yul\":13640:13696   */\n      tag_541\n        /* \"#utility.yul\":13689:13695   */\n      dup4\n        /* \"#utility.yul\":13684:13687   */\n      dup6\n        /* \"#utility.yul\":13677:13682   */\n      dup5\n        /* \"#utility.yul\":13640:13696   */\n      tag_390\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13721:13727   */\n      dup3\n        /* \"#utility.yul\":13716:13719   */\n      dup5\n        /* \"#utility.yul\":13712:13728   */\n      add\n        /* \"#utility.yul\":13705:13728   */\n      swap1\n      pop\n        /* \"#utility.yul\":13407:13734   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13740:14031   */\n    tag_193:\n        /* \"#utility.yul\":13880:13883   */\n      0x00\n        /* \"#utility.yul\":13902:14005   */\n      tag_543\n        /* \"#utility.yul\":14001:14004   */\n      dup3\n        /* \"#utility.yul\":13992:13998   */\n      dup5\n        /* \"#utility.yul\":13984:13990   */\n      dup7\n        /* \"#utility.yul\":13902:14005   */\n      tag_391\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13895:14005   */\n      swap2\n      pop\n        /* \"#utility.yul\":14022:14025   */\n      dup2\n        /* \"#utility.yul\":14015:14025   */\n      swap1\n      pop\n        /* \"#utility.yul\":13740:14031   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14061:14378   */\n    tag_392:\n        /* \"#utility.yul\":14159:14162   */\n      0x00\n        /* \"#utility.yul\":14180:14251   */\n      tag_545\n        /* \"#utility.yul\":14244:14250   */\n      dup4\n        /* \"#utility.yul\":14239:14242   */\n      dup6\n        /* \"#utility.yul\":14180:14251   */\n      tag_353\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14173:14251   */\n      swap4\n      pop\n        /* \"#utility.yul\":14261:14317   */\n      tag_546\n        /* \"#utility.yul\":14310:14316   */\n      dup4\n        /* \"#utility.yul\":14305:14308   */\n      dup6\n        /* \"#utility.yul\":14298:14303   */\n      dup5\n        /* \"#utility.yul\":14261:14317   */\n      tag_390\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14342:14371   */\n      tag_547\n        /* \"#utility.yul\":14364:14370   */\n      dup4\n        /* \"#utility.yul\":14342:14371   */\n      tag_355\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14337:14340   */\n      dup5\n        /* \"#utility.yul\":14333:14372   */\n      add\n        /* \"#utility.yul\":14326:14372   */\n      swap1\n      pop\n        /* \"#utility.yul\":14061:14378   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14384:14827   */\n    tag_200:\n        /* \"#utility.yul\":14535:14539   */\n      0x00\n        /* \"#utility.yul\":14573:14575   */\n      0x40\n        /* \"#utility.yul\":14562:14571   */\n      dup3\n        /* \"#utility.yul\":14558:14576   */\n      add\n        /* \"#utility.yul\":14550:14576   */\n      swap1\n      pop\n        /* \"#utility.yul\":14622:14631   */\n      dup2\n        /* \"#utility.yul\":14616:14620   */\n      dup2\n        /* \"#utility.yul\":14612:14632   */\n      sub\n        /* \"#utility.yul\":14608:14609   */\n      0x00\n        /* \"#utility.yul\":14597:14606   */\n      dup4\n        /* \"#utility.yul\":14593:14610   */\n      add\n        /* \"#utility.yul\":14586:14633   */\n      mstore\n        /* \"#utility.yul\":14650:14738   */\n      tag_549\n        /* \"#utility.yul\":14733:14737   */\n      dup2\n        /* \"#utility.yul\":14724:14730   */\n      dup6\n        /* \"#utility.yul\":14716:14722   */\n      dup8\n        /* \"#utility.yul\":14650:14738   */\n      tag_392\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14642:14738   */\n      swap1\n      pop\n        /* \"#utility.yul\":14748:14820   */\n      tag_550\n        /* \"#utility.yul\":14816:14818   */\n      0x20\n        /* \"#utility.yul\":14805:14814   */\n      dup4\n        /* \"#utility.yul\":14801:14819   */\n      add\n        /* \"#utility.yul\":14792:14798   */\n      dup5\n        /* \"#utility.yul\":14748:14820   */\n      tag_378\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14384:14827   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14833:15013   */\n    tag_393:\n        /* \"#utility.yul\":14881:14958   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14878:14879   */\n      0x00\n        /* \"#utility.yul\":14871:14959   */\n      mstore\n        /* \"#utility.yul\":14978:14982   */\n      0x11\n        /* \"#utility.yul\":14975:14976   */\n      0x04\n        /* \"#utility.yul\":14968:14983   */\n      mstore\n        /* \"#utility.yul\":15002:15006   */\n      0x24\n        /* \"#utility.yul\":14999:15000   */\n      0x00\n        /* \"#utility.yul\":14992:15007   */\n      revert\n        /* \"#utility.yul\":15019:15210   */\n    tag_228:\n        /* \"#utility.yul\":15059:15062   */\n      0x00\n        /* \"#utility.yul\":15078:15098   */\n      tag_553\n        /* \"#utility.yul\":15096:15097   */\n      dup3\n        /* \"#utility.yul\":15078:15098   */\n      tag_364\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15073:15098   */\n      swap2\n      pop\n        /* \"#utility.yul\":15112:15132   */\n      tag_554\n        /* \"#utility.yul\":15130:15131   */\n      dup4\n        /* \"#utility.yul\":15112:15132   */\n      tag_364\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":15107:15132   */\n      swap3\n      pop\n        /* \"#utility.yul\":15155:15156   */\n      dup3\n        /* \"#utility.yul\":15152:15153   */\n      dup3\n        /* \"#utility.yul\":15148:15157   */\n      add\n        /* \"#utility.yul\":15141:15157   */\n      swap1\n      pop\n        /* \"#utility.yul\":15176:15179   */\n      dup1\n        /* \"#utility.yul\":15173:15174   */\n      dup3\n        /* \"#utility.yul\":15170:15180   */\n      gt\n        /* \"#utility.yul\":15167:15203   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":15183:15201   */\n      tag_556\n      tag_393\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15167:15203   */\n    tag_555:\n        /* \"#utility.yul\":15019:15210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15216:15659   */\n    tag_234:\n        /* \"#utility.yul\":15367:15371   */\n      0x00\n        /* \"#utility.yul\":15405:15407   */\n      0x40\n        /* \"#utility.yul\":15394:15403   */\n      dup3\n        /* \"#utility.yul\":15390:15408   */\n      add\n        /* \"#utility.yul\":15382:15408   */\n      swap1\n      pop\n        /* \"#utility.yul\":15418:15489   */\n      tag_558\n        /* \"#utility.yul\":15486:15487   */\n      0x00\n        /* \"#utility.yul\":15475:15484   */\n      dup4\n        /* \"#utility.yul\":15471:15488   */\n      add\n        /* \"#utility.yul\":15462:15468   */\n      dup7\n        /* \"#utility.yul\":15418:15489   */\n      tag_369\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":15536:15545   */\n      dup2\n        /* \"#utility.yul\":15530:15534   */\n      dup2\n        /* \"#utility.yul\":15526:15546   */\n      sub\n        /* \"#utility.yul\":15521:15523   */\n      0x20\n        /* \"#utility.yul\":15510:15519   */\n      dup4\n        /* \"#utility.yul\":15506:15524   */\n      add\n        /* \"#utility.yul\":15499:15547   */\n      mstore\n        /* \"#utility.yul\":15564:15652   */\n      tag_559\n        /* \"#utility.yul\":15647:15651   */\n      dup2\n        /* \"#utility.yul\":15638:15644   */\n      dup5\n        /* \"#utility.yul\":15630:15636   */\n      dup7\n        /* \"#utility.yul\":15564:15652   */\n      tag_392\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15556:15652   */\n      swap1\n      pop\n        /* \"#utility.yul\":15216:15659   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15665:15831   */\n    tag_394:\n        /* \"#utility.yul\":15805:15823   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":15801:15802   */\n      0x00\n        /* \"#utility.yul\":15793:15799   */\n      dup3\n        /* \"#utility.yul\":15789:15803   */\n      add\n        /* \"#utility.yul\":15782:15824   */\n      mstore\n        /* \"#utility.yul\":15665:15831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15837:16203   */\n    tag_395:\n        /* \"#utility.yul\":15979:15982   */\n      0x00\n        /* \"#utility.yul\":16000:16067   */\n      tag_562\n        /* \"#utility.yul\":16064:16066   */\n      0x10\n        /* \"#utility.yul\":16059:16062   */\n      dup4\n        /* \"#utility.yul\":16000:16067   */\n      tag_353\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15993:16067   */\n      swap2\n      pop\n        /* \"#utility.yul\":16076:16169   */\n      tag_563\n        /* \"#utility.yul\":16165:16168   */\n      dup3\n        /* \"#utility.yul\":16076:16169   */\n      tag_394\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16194:16196   */\n      0x20\n        /* \"#utility.yul\":16189:16192   */\n      dup3\n        /* \"#utility.yul\":16185:16197   */\n      add\n        /* \"#utility.yul\":16178:16197   */\n      swap1\n      pop\n        /* \"#utility.yul\":15837:16203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16209:16628   */\n    tag_277:\n        /* \"#utility.yul\":16375:16379   */\n      0x00\n        /* \"#utility.yul\":16413:16415   */\n      0x20\n        /* \"#utility.yul\":16402:16411   */\n      dup3\n        /* \"#utility.yul\":16398:16416   */\n      add\n        /* \"#utility.yul\":16390:16416   */\n      swap1\n      pop\n        /* \"#utility.yul\":16462:16471   */\n      dup2\n        /* \"#utility.yul\":16456:16460   */\n      dup2\n        /* \"#utility.yul\":16452:16472   */\n      sub\n        /* \"#utility.yul\":16448:16449   */\n      0x00\n        /* \"#utility.yul\":16437:16446   */\n      dup4\n        /* \"#utility.yul\":16433:16450   */\n      add\n        /* \"#utility.yul\":16426:16473   */\n      mstore\n        /* \"#utility.yul\":16490:16621   */\n      tag_565\n        /* \"#utility.yul\":16616:16620   */\n      dup2\n        /* \"#utility.yul\":16490:16621   */\n      tag_395\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16482:16621   */\n      swap1\n      pop\n        /* \"#utility.yul\":16209:16628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16634:16815   */\n    tag_396:\n        /* \"#utility.yul\":16774:16807   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":16770:16771   */\n      0x00\n        /* \"#utility.yul\":16762:16768   */\n      dup3\n        /* \"#utility.yul\":16758:16772   */\n      add\n        /* \"#utility.yul\":16751:16808   */\n      mstore\n        /* \"#utility.yul\":16634:16815   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16821:17187   */\n    tag_397:\n        /* \"#utility.yul\":16963:16966   */\n      0x00\n        /* \"#utility.yul\":16984:17051   */\n      tag_568\n        /* \"#utility.yul\":17048:17050   */\n      0x1f\n        /* \"#utility.yul\":17043:17046   */\n      dup4\n        /* \"#utility.yul\":16984:17051   */\n      tag_353\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16977:17051   */\n      swap2\n      pop\n        /* \"#utility.yul\":17060:17153   */\n      tag_569\n        /* \"#utility.yul\":17149:17152   */\n      dup3\n        /* \"#utility.yul\":17060:17153   */\n      tag_396\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":17178:17180   */\n      0x20\n        /* \"#utility.yul\":17173:17176   */\n      dup3\n        /* \"#utility.yul\":17169:17181   */\n      add\n        /* \"#utility.yul\":17162:17181   */\n      swap1\n      pop\n        /* \"#utility.yul\":16821:17187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17193:17612   */\n    tag_316:\n        /* \"#utility.yul\":17359:17363   */\n      0x00\n        /* \"#utility.yul\":17397:17399   */\n      0x20\n        /* \"#utility.yul\":17386:17395   */\n      dup3\n        /* \"#utility.yul\":17382:17400   */\n      add\n        /* \"#utility.yul\":17374:17400   */\n      swap1\n      pop\n        /* \"#utility.yul\":17446:17455   */\n      dup2\n        /* \"#utility.yul\":17440:17444   */\n      dup2\n        /* \"#utility.yul\":17436:17456   */\n      sub\n        /* \"#utility.yul\":17432:17433   */\n      0x00\n        /* \"#utility.yul\":17421:17430   */\n      dup4\n        /* \"#utility.yul\":17417:17434   */\n      add\n        /* \"#utility.yul\":17410:17457   */\n      mstore\n        /* \"#utility.yul\":17474:17605   */\n      tag_571\n        /* \"#utility.yul\":17600:17604   */\n      dup2\n        /* \"#utility.yul\":17474:17605   */\n      tag_397\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":17466:17605   */\n      swap1\n      pop\n        /* \"#utility.yul\":17193:17612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17618:18060   */\n    tag_330:\n        /* \"#utility.yul\":17767:17771   */\n      0x00\n        /* \"#utility.yul\":17805:17807   */\n      0x60\n        /* \"#utility.yul\":17794:17803   */\n      dup3\n        /* \"#utility.yul\":17790:17808   */\n      add\n        /* \"#utility.yul\":17782:17808   */\n      swap1\n      pop\n        /* \"#utility.yul\":17818:17889   */\n      tag_573\n        /* \"#utility.yul\":17886:17887   */\n      0x00\n        /* \"#utility.yul\":17875:17884   */\n      dup4\n        /* \"#utility.yul\":17871:17888   */\n      add\n        /* \"#utility.yul\":17862:17868   */\n      dup7\n        /* \"#utility.yul\":17818:17889   */\n      tag_378\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17899:17971   */\n      tag_574\n        /* \"#utility.yul\":17967:17969   */\n      0x20\n        /* \"#utility.yul\":17956:17965   */\n      dup4\n        /* \"#utility.yul\":17952:17970   */\n      add\n        /* \"#utility.yul\":17943:17949   */\n      dup6\n        /* \"#utility.yul\":17899:17971   */\n      tag_369\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17981:18053   */\n      tag_575\n        /* \"#utility.yul\":18049:18051   */\n      0x40\n        /* \"#utility.yul\":18038:18047   */\n      dup4\n        /* \"#utility.yul\":18034:18052   */\n      add\n        /* \"#utility.yul\":18025:18031   */\n      dup5\n        /* \"#utility.yul\":17981:18053   */\n      tag_369\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":17618:18060   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18066:18236   */\n    tag_398:\n        /* \"#utility.yul\":18206:18228   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":18202:18203   */\n      0x00\n        /* \"#utility.yul\":18194:18200   */\n      dup3\n        /* \"#utility.yul\":18190:18204   */\n      add\n        /* \"#utility.yul\":18183:18229   */\n      mstore\n        /* \"#utility.yul\":18066:18236   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18242:18608   */\n    tag_399:\n        /* \"#utility.yul\":18384:18387   */\n      0x00\n        /* \"#utility.yul\":18405:18472   */\n      tag_578\n        /* \"#utility.yul\":18469:18471   */\n      0x14\n        /* \"#utility.yul\":18464:18467   */\n      dup4\n        /* \"#utility.yul\":18405:18472   */\n      tag_353\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18398:18472   */\n      swap2\n      pop\n        /* \"#utility.yul\":18481:18574   */\n      tag_579\n        /* \"#utility.yul\":18570:18573   */\n      dup3\n        /* \"#utility.yul\":18481:18574   */\n      tag_398\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18599:18601   */\n      0x20\n        /* \"#utility.yul\":18594:18597   */\n      dup3\n        /* \"#utility.yul\":18590:18602   */\n      add\n        /* \"#utility.yul\":18583:18602   */\n      swap1\n      pop\n        /* \"#utility.yul\":18242:18608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18614:19033   */\n    tag_342:\n        /* \"#utility.yul\":18780:18784   */\n      0x00\n        /* \"#utility.yul\":18818:18820   */\n      0x20\n        /* \"#utility.yul\":18807:18816   */\n      dup3\n        /* \"#utility.yul\":18803:18821   */\n      add\n        /* \"#utility.yul\":18795:18821   */\n      swap1\n      pop\n        /* \"#utility.yul\":18867:18876   */\n      dup2\n        /* \"#utility.yul\":18861:18865   */\n      dup2\n        /* \"#utility.yul\":18857:18877   */\n      sub\n        /* \"#utility.yul\":18853:18854   */\n      0x00\n        /* \"#utility.yul\":18842:18851   */\n      dup4\n        /* \"#utility.yul\":18838:18855   */\n      add\n        /* \"#utility.yul\":18831:18878   */\n      mstore\n        /* \"#utility.yul\":18895:19026   */\n      tag_581\n        /* \"#utility.yul\":19021:19025   */\n      dup2\n        /* \"#utility.yul\":18895:19026   */\n      tag_399\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":18887:19026   */\n      swap1\n      pop\n        /* \"#utility.yul\":18614:19033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e93a3dda12e59d805089ced78b15a294e153ce06bc445c77987a3646d52885a264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 853,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 656,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 986,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11260:9",
										"nodeType": "YulBlock",
										"src": "0:11260:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:77:9",
													"nodeType": "YulBlock",
													"src": "1672:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:9"
																},
																"nativeSrc": "1683:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:9"
															},
															"nativeSrc": "1683:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:9"
																},
																"nativeSrc": "1715:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:9"
															},
															"nativeSrc": "1715:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:139:9"
											},
											{
												"body": {
													"nativeSrc": "1850:339:9",
													"nodeType": "YulBlock",
													"src": "1850:339:9",
													"statements": [
														{
															"nativeSrc": "1860:75:9",
															"nodeType": "YulAssignment",
															"src": "1860:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:9"
																		},
																		"nativeSrc": "1885:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:9"
																},
																"nativeSrc": "1869:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																},
																"nativeSrc": "1944:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:9"
															},
															"nativeSrc": "1944:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:9"
														},
														{
															"nativeSrc": "1974:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:9"
																},
																"nativeSrc": "1985:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:9",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:9",
																"nodeType": "YulBlock",
																"src": "2039:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:9"
																			},
																			"nativeSrc": "2041:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:9"
																		},
																		"nativeSrc": "2041:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:9"
																		},
																		"nativeSrc": "2016:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:9"
																},
																"nativeSrc": "2013:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:9"
															},
															"nativeSrc": "2010:112:9",
															"nodeType": "YulIf",
															"src": "2010:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:9"
																},
																"nativeSrc": "2131:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:9"
															},
															"nativeSrc": "2131:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:9",
														"nodeType": "YulTypedName",
														"src": "1823:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:9",
														"nodeType": "YulTypedName",
														"src": "1828:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:9",
														"nodeType": "YulTypedName",
														"src": "1836:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:9",
														"nodeType": "YulTypedName",
														"src": "1844:5:9",
														"type": ""
													}
												],
												"src": "1755:434:9"
											},
											{
												"body": {
													"nativeSrc": "2282:282:9",
													"nodeType": "YulBlock",
													"src": "2282:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:9",
																"nodeType": "YulBlock",
																"src": "2331:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:9"
																			},
																			"nativeSrc": "2333:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:9"
																		},
																		"nativeSrc": "2333:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:9"
																				},
																				"nativeSrc": "2306:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:9"
															},
															"nativeSrc": "2292:122:9",
															"nodeType": "YulIf",
															"src": "2292:122:9"
														},
														{
															"nativeSrc": "2423:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:9"
																},
																"nativeSrc": "2437:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:9",
															"nodeType": "YulAssignment",
															"src": "2459:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:9"
																		},
																		"nativeSrc": "2527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:9"
																},
																"nativeSrc": "2468:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:9",
														"nodeType": "YulTypedName",
														"src": "2260:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:9",
														"nodeType": "YulTypedName",
														"src": "2268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:9",
														"nodeType": "YulTypedName",
														"src": "2276:5:9",
														"type": ""
													}
												],
												"src": "2209:355:9"
											},
											{
												"body": {
													"nativeSrc": "2615:32:9",
													"nodeType": "YulBlock",
													"src": "2615:32:9",
													"statements": [
														{
															"nativeSrc": "2625:16:9",
															"nodeType": "YulAssignment",
															"src": "2625:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:9",
																"nodeType": "YulIdentifier",
																"src": "2636:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:9",
														"nodeType": "YulTypedName",
														"src": "2597:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:9",
														"nodeType": "YulTypedName",
														"src": "2607:7:9",
														"type": ""
													}
												],
												"src": "2570:77:9"
											},
											{
												"body": {
													"nativeSrc": "2696:79:9",
													"nodeType": "YulBlock",
													"src": "2696:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:9",
																"nodeType": "YulBlock",
																"src": "2753:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:9"
																			},
																			"nativeSrc": "2755:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:9"
																		},
																		"nativeSrc": "2755:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:9"
																				},
																				"nativeSrc": "2726:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:9"
																		},
																		"nativeSrc": "2716:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:9"
																},
																"nativeSrc": "2709:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:9"
															},
															"nativeSrc": "2706:63:9",
															"nodeType": "YulIf",
															"src": "2706:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:9",
														"nodeType": "YulTypedName",
														"src": "2689:5:9",
														"type": ""
													}
												],
												"src": "2653:122:9"
											},
											{
												"body": {
													"nativeSrc": "2844:80:9",
													"nodeType": "YulBlock",
													"src": "2844:80:9",
													"statements": [
														{
															"nativeSrc": "2854:22:9",
															"nodeType": "YulAssignment",
															"src": "2854:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:9"
																},
																"nativeSrc": "2863:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:9"
																},
																"nativeSrc": "2885:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:9"
															},
															"nativeSrc": "2885:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:9",
														"nodeType": "YulTypedName",
														"src": "2822:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:9",
														"nodeType": "YulTypedName",
														"src": "2830:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:9",
														"nodeType": "YulTypedName",
														"src": "2838:5:9",
														"type": ""
													}
												],
												"src": "2781:143:9"
											},
											{
												"body": {
													"nativeSrc": "2975:81:9",
													"nodeType": "YulBlock",
													"src": "2975:81:9",
													"statements": [
														{
															"nativeSrc": "2985:65:9",
															"nodeType": "YulAssignment",
															"src": "2985:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3000:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3000:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3007:42:9",
																		"nodeType": "YulLiteral",
																		"src": "3007:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:9"
																},
																"nativeSrc": "2996:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2996:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2985:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2985:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2930:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2957:5:9",
														"nodeType": "YulTypedName",
														"src": "2957:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2967:7:9",
														"nodeType": "YulTypedName",
														"src": "2967:7:9",
														"type": ""
													}
												],
												"src": "2930:126:9"
											},
											{
												"body": {
													"nativeSrc": "3107:51:9",
													"nodeType": "YulBlock",
													"src": "3107:51:9",
													"statements": [
														{
															"nativeSrc": "3117:35:9",
															"nodeType": "YulAssignment",
															"src": "3117:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3146:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3146:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3128:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3128:17:9"
																},
																"nativeSrc": "3128:24:9",
																"nodeType": "YulFunctionCall",
																"src": "3128:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3117:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3117:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3062:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3089:5:9",
														"nodeType": "YulTypedName",
														"src": "3089:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3099:7:9",
														"nodeType": "YulTypedName",
														"src": "3099:7:9",
														"type": ""
													}
												],
												"src": "3062:96:9"
											},
											{
												"body": {
													"nativeSrc": "3207:79:9",
													"nodeType": "YulBlock",
													"src": "3207:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:9",
																"nodeType": "YulBlock",
																"src": "3264:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:9"
																			},
																			"nativeSrc": "3266:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:9"
																		},
																		"nativeSrc": "3266:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3237:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:9"
																				},
																				"nativeSrc": "3237:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:9"
																		},
																		"nativeSrc": "3227:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:9"
																},
																"nativeSrc": "3220:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:9"
															},
															"nativeSrc": "3217:63:9",
															"nodeType": "YulIf",
															"src": "3217:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3164:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:9",
														"nodeType": "YulTypedName",
														"src": "3200:5:9",
														"type": ""
													}
												],
												"src": "3164:122:9"
											},
											{
												"body": {
													"nativeSrc": "3355:80:9",
													"nodeType": "YulBlock",
													"src": "3355:80:9",
													"statements": [
														{
															"nativeSrc": "3365:22:9",
															"nodeType": "YulAssignment",
															"src": "3365:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:9"
																},
																"nativeSrc": "3374:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3396:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:9"
																},
																"nativeSrc": "3396:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:9"
															},
															"nativeSrc": "3396:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3292:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:9",
														"nodeType": "YulTypedName",
														"src": "3333:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:9",
														"nodeType": "YulTypedName",
														"src": "3341:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:9",
														"nodeType": "YulTypedName",
														"src": "3349:5:9",
														"type": ""
													}
												],
												"src": "3292:143:9"
											},
											{
												"body": {
													"nativeSrc": "3606:1158:9",
													"nodeType": "YulBlock",
													"src": "3606:1158:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3653:83:9",
																"nodeType": "YulBlock",
																"src": "3653:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3655:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3655:77:9"
																			},
																			"nativeSrc": "3655:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3655:79:9"
																		},
																		"nativeSrc": "3655:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3655:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3627:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3627:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3636:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3636:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3623:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3623:3:9"
																		},
																		"nativeSrc": "3623:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3623:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3648:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3648:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3619:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:9"
																},
																"nativeSrc": "3619:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3619:33:9"
															},
															"nativeSrc": "3616:120:9",
															"nodeType": "YulIf",
															"src": "3616:120:9"
														},
														{
															"nativeSrc": "3746:291:9",
															"nodeType": "YulBlock",
															"src": "3746:291:9",
															"statements": [
																{
																	"nativeSrc": "3761:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3761:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3785:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3796:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3796:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3781:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:9"
																				},
																				"nativeSrc": "3781:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3781:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3775:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3775:5:9"
																		},
																		"nativeSrc": "3775:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3765:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3765:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3846:83:9",
																		"nodeType": "YulBlock",
																		"src": "3846:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3848:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3848:77:9"
																					},
																					"nativeSrc": "3848:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3848:79:9"
																				},
																				"nativeSrc": "3848:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3848:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3818:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3818:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3826:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3826:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3815:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3815:2:9"
																		},
																		"nativeSrc": "3815:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3815:30:9"
																	},
																	"nativeSrc": "3812:117:9",
																	"nodeType": "YulIf",
																	"src": "3812:117:9"
																},
																{
																	"nativeSrc": "3943:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3943:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3999:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3999:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4010:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4010:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3995:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3995:3:9"
																				},
																				"nativeSrc": "3995:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3995:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4019:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4019:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3953:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3953:41:9"
																		},
																		"nativeSrc": "3953:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3953:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3943:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3943:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4047:292:9",
															"nodeType": "YulBlock",
															"src": "4047:292:9",
															"statements": [
																{
																	"nativeSrc": "4062:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4062:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4086:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4086:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4097:2:9",
																						"nodeType": "YulLiteral",
																						"src": "4097:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4082:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4082:3:9"
																				},
																				"nativeSrc": "4082:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4082:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4076:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4076:5:9"
																		},
																		"nativeSrc": "4076:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4066:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4066:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4148:83:9",
																		"nodeType": "YulBlock",
																		"src": "4148:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4150:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "4150:77:9"
																					},
																					"nativeSrc": "4150:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4150:79:9"
																				},
																				"nativeSrc": "4150:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4150:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4120:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4120:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4128:18:9",
																				"nodeType": "YulLiteral",
																				"src": "4128:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4117:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4117:2:9"
																		},
																		"nativeSrc": "4117:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4117:30:9"
																	},
																	"nativeSrc": "4114:117:9",
																	"nodeType": "YulIf",
																	"src": "4114:117:9"
																},
																{
																	"nativeSrc": "4245:84:9",
																	"nodeType": "YulAssignment",
																	"src": "4245:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4301:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4301:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4312:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4312:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4297:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4297:3:9"
																				},
																				"nativeSrc": "4297:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4297:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4321:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4321:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4255:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "4255:41:9"
																		},
																		"nativeSrc": "4255:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4255:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4245:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4245:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4349:129:9",
															"nodeType": "YulBlock",
															"src": "4349:129:9",
															"statements": [
																{
																	"nativeSrc": "4364:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4364:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4378:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4368:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4368:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4394:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4394:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4440:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4440:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4451:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4451:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4436:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4436:3:9"
																				},
																				"nativeSrc": "4436:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4436:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4460:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4460:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4404:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4404:31:9"
																		},
																		"nativeSrc": "4404:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4394:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4394:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4488:129:9",
															"nodeType": "YulBlock",
															"src": "4488:129:9",
															"statements": [
																{
																	"nativeSrc": "4503:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4503:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4517:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4507:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4507:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4533:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4533:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4579:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4590:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4575:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:9"
																				},
																				"nativeSrc": "4575:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4599:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4543:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4543:31:9"
																		},
																		"nativeSrc": "4543:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4533:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4533:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4627:130:9",
															"nodeType": "YulBlock",
															"src": "4627:130:9",
															"statements": [
																{
																	"nativeSrc": "4642:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4656:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4656:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4646:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4673:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4673:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4719:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4719:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4730:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4730:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4715:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4715:3:9"
																				},
																				"nativeSrc": "4715:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4715:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4739:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4739:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4683:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4683:31:9"
																		},
																		"nativeSrc": "4683:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4673:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4673:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory",
												"nativeSrc": "3441:1323:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3544:9:9",
														"nodeType": "YulTypedName",
														"src": "3544:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3555:7:9",
														"nodeType": "YulTypedName",
														"src": "3555:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3567:6:9",
														"nodeType": "YulTypedName",
														"src": "3567:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3575:6:9",
														"nodeType": "YulTypedName",
														"src": "3575:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3583:6:9",
														"nodeType": "YulTypedName",
														"src": "3583:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3591:6:9",
														"nodeType": "YulTypedName",
														"src": "3591:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3599:6:9",
														"nodeType": "YulTypedName",
														"src": "3599:6:9",
														"type": ""
													}
												],
												"src": "3441:1323:9"
											},
											{
												"body": {
													"nativeSrc": "4829:40:9",
													"nodeType": "YulBlock",
													"src": "4829:40:9",
													"statements": [
														{
															"nativeSrc": "4840:22:9",
															"nodeType": "YulAssignment",
															"src": "4840:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4856:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4856:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4850:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4850:5:9"
																},
																"nativeSrc": "4850:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4850:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4840:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4770:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4812:5:9",
														"nodeType": "YulTypedName",
														"src": "4812:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4822:6:9",
														"nodeType": "YulTypedName",
														"src": "4822:6:9",
														"type": ""
													}
												],
												"src": "4770:99:9"
											},
											{
												"body": {
													"nativeSrc": "4903:152:9",
													"nodeType": "YulBlock",
													"src": "4903:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4920:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4920:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4923:77:9",
																		"nodeType": "YulLiteral",
																		"src": "4923:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:9"
																},
																"nativeSrc": "4913:88:9",
																"nodeType": "YulFunctionCall",
																"src": "4913:88:9"
															},
															"nativeSrc": "4913:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "4913:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5017:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5017:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5020:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5020:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5010:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5010:6:9"
																},
																"nativeSrc": "5010:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5010:15:9"
															},
															"nativeSrc": "5010:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5010:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5041:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5041:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5044:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5044:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5034:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:9"
																},
																"nativeSrc": "5034:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5034:15:9"
															},
															"nativeSrc": "5034:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5034:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4875:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4875:180:9"
											},
											{
												"body": {
													"nativeSrc": "5112:269:9",
													"nodeType": "YulBlock",
													"src": "5112:269:9",
													"statements": [
														{
															"nativeSrc": "5122:22:9",
															"nodeType": "YulAssignment",
															"src": "5122:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5136:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5136:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5142:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5142:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5132:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5132:3:9"
																},
																"nativeSrc": "5132:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5132:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5122:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:9"
																}
															]
														},
														{
															"nativeSrc": "5153:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5153:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5183:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5183:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5179:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:9"
																},
																"nativeSrc": "5179:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5179:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5157:18:9",
																	"nodeType": "YulTypedName",
																	"src": "5157:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5230:51:9",
																"nodeType": "YulBlock",
																"src": "5230:51:9",
																"statements": [
																	{
																		"nativeSrc": "5244:27:9",
																		"nodeType": "YulAssignment",
																		"src": "5244:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5258:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5258:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5266:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5266:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5254:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5254:3:9"
																			},
																			"nativeSrc": "5254:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5254:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5244:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5244:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5210:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "5210:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5203:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5203:6:9"
																},
																"nativeSrc": "5203:26:9",
																"nodeType": "YulFunctionCall",
																"src": "5203:26:9"
															},
															"nativeSrc": "5200:81:9",
															"nodeType": "YulIf",
															"src": "5200:81:9"
														},
														{
															"body": {
																"nativeSrc": "5333:42:9",
																"nodeType": "YulBlock",
																"src": "5333:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5347:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5347:16:9"
																			},
																			"nativeSrc": "5347:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5347:18:9"
																		},
																		"nativeSrc": "5347:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5347:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5297:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "5297:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5320:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5320:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5328:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5328:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5317:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5317:2:9"
																		},
																		"nativeSrc": "5317:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5294:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5294:2:9"
																},
																"nativeSrc": "5294:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5294:38:9"
															},
															"nativeSrc": "5291:84:9",
															"nodeType": "YulIf",
															"src": "5291:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5061:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5096:4:9",
														"nodeType": "YulTypedName",
														"src": "5096:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5105:6:9",
														"nodeType": "YulTypedName",
														"src": "5105:6:9",
														"type": ""
													}
												],
												"src": "5061:320:9"
											},
											{
												"body": {
													"nativeSrc": "5441:87:9",
													"nodeType": "YulBlock",
													"src": "5441:87:9",
													"statements": [
														{
															"nativeSrc": "5451:11:9",
															"nodeType": "YulAssignment",
															"src": "5451:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "5459:3:9",
																"nodeType": "YulIdentifier",
																"src": "5459:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5451:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5451:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5479:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5479:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5482:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5482:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5472:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:9"
																},
																"nativeSrc": "5472:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5472:14:9"
															},
															"nativeSrc": "5472:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "5472:14:9"
														},
														{
															"nativeSrc": "5495:26:9",
															"nodeType": "YulAssignment",
															"src": "5495:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5513:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5513:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5516:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5503:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:9"
																},
																"nativeSrc": "5503:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5503:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5495:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5495:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5387:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5428:3:9",
														"nodeType": "YulTypedName",
														"src": "5428:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5436:4:9",
														"nodeType": "YulTypedName",
														"src": "5436:4:9",
														"type": ""
													}
												],
												"src": "5387:141:9"
											},
											{
												"body": {
													"nativeSrc": "5578:49:9",
													"nodeType": "YulBlock",
													"src": "5578:49:9",
													"statements": [
														{
															"nativeSrc": "5588:33:9",
															"nodeType": "YulAssignment",
															"src": "5588:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5606:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5606:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5613:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5613:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5602:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:9"
																		},
																		"nativeSrc": "5602:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5618:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5618:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5598:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5598:3:9"
																},
																"nativeSrc": "5598:23:9",
																"nodeType": "YulFunctionCall",
																"src": "5598:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5588:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5534:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5561:5:9",
														"nodeType": "YulTypedName",
														"src": "5561:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5571:6:9",
														"nodeType": "YulTypedName",
														"src": "5571:6:9",
														"type": ""
													}
												],
												"src": "5534:93:9"
											},
											{
												"body": {
													"nativeSrc": "5686:54:9",
													"nodeType": "YulBlock",
													"src": "5686:54:9",
													"statements": [
														{
															"nativeSrc": "5696:37:9",
															"nodeType": "YulAssignment",
															"src": "5696:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5721:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5721:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5727:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5727:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5717:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:9"
																},
																"nativeSrc": "5717:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5717:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5696:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5696:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5633:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5661:4:9",
														"nodeType": "YulTypedName",
														"src": "5661:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5667:5:9",
														"nodeType": "YulTypedName",
														"src": "5667:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5677:8:9",
														"nodeType": "YulTypedName",
														"src": "5677:8:9",
														"type": ""
													}
												],
												"src": "5633:107:9"
											},
											{
												"body": {
													"nativeSrc": "5822:317:9",
													"nodeType": "YulBlock",
													"src": "5822:317:9",
													"statements": [
														{
															"nativeSrc": "5832:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5832:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5853:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "5853:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5849:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5849:3:9"
																},
																"nativeSrc": "5849:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5849:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5836:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5836:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5876:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5876:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5907:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5907:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5918:66:9",
																		"nodeType": "YulLiteral",
																		"src": "5918:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5888:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5888:18:9"
																},
																"nativeSrc": "5888:97:9",
																"nodeType": "YulFunctionCall",
																"src": "5888:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5880:4:9",
																	"nodeType": "YulTypedName",
																	"src": "5880:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5994:51:9",
															"nodeType": "YulAssignment",
															"src": "5994:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6025:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6025:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6036:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "6036:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6006:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6006:18:9"
																},
																"nativeSrc": "6006:39:9",
																"nodeType": "YulFunctionCall",
																"src": "6006:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5994:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5994:8:9"
																}
															]
														},
														{
															"nativeSrc": "6054:30:9",
															"nodeType": "YulAssignment",
															"src": "6054:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6067:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6067:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6078:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6078:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6074:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:9"
																		},
																		"nativeSrc": "6074:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6063:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:9"
																},
																"nativeSrc": "6063:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6063:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6054:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6054:5:9"
																}
															]
														},
														{
															"nativeSrc": "6093:40:9",
															"nodeType": "YulAssignment",
															"src": "6093:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6106:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6106:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6117:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "6117:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6127:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6127:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6113:3:9"
																		},
																		"nativeSrc": "6113:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6103:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6103:2:9"
																},
																"nativeSrc": "6103:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6103:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6093:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5746:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5783:5:9",
														"nodeType": "YulTypedName",
														"src": "5783:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5790:10:9",
														"nodeType": "YulTypedName",
														"src": "5790:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5802:8:9",
														"nodeType": "YulTypedName",
														"src": "5802:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5815:6:9",
														"nodeType": "YulTypedName",
														"src": "5815:6:9",
														"type": ""
													}
												],
												"src": "5746:393:9"
											},
											{
												"body": {
													"nativeSrc": "6177:28:9",
													"nodeType": "YulBlock",
													"src": "6177:28:9",
													"statements": [
														{
															"nativeSrc": "6187:12:9",
															"nodeType": "YulAssignment",
															"src": "6187:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6194:5:9",
																"nodeType": "YulIdentifier",
																"src": "6194:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6187:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6145:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6163:5:9",
														"nodeType": "YulTypedName",
														"src": "6163:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6173:3:9",
														"nodeType": "YulTypedName",
														"src": "6173:3:9",
														"type": ""
													}
												],
												"src": "6145:60:9"
											},
											{
												"body": {
													"nativeSrc": "6271:82:9",
													"nodeType": "YulBlock",
													"src": "6271:82:9",
													"statements": [
														{
															"nativeSrc": "6281:66:9",
															"nodeType": "YulAssignment",
															"src": "6281:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6339:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6339:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6321:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6321:17:9"
																				},
																				"nativeSrc": "6321:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6321:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6312:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "6312:8:9"
																		},
																		"nativeSrc": "6312:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6312:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6294:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6294:17:9"
																},
																"nativeSrc": "6294:53:9",
																"nodeType": "YulFunctionCall",
																"src": "6294:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6281:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6281:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6211:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6251:5:9",
														"nodeType": "YulTypedName",
														"src": "6251:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6261:9:9",
														"nodeType": "YulTypedName",
														"src": "6261:9:9",
														"type": ""
													}
												],
												"src": "6211:142:9"
											},
											{
												"body": {
													"nativeSrc": "6406:28:9",
													"nodeType": "YulBlock",
													"src": "6406:28:9",
													"statements": [
														{
															"nativeSrc": "6416:12:9",
															"nodeType": "YulAssignment",
															"src": "6416:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6423:5:9",
																"nodeType": "YulIdentifier",
																"src": "6423:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6416:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6416:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6359:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6392:5:9",
														"nodeType": "YulTypedName",
														"src": "6392:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6402:3:9",
														"nodeType": "YulTypedName",
														"src": "6402:3:9",
														"type": ""
													}
												],
												"src": "6359:75:9"
											},
											{
												"body": {
													"nativeSrc": "6516:193:9",
													"nodeType": "YulBlock",
													"src": "6516:193:9",
													"statements": [
														{
															"nativeSrc": "6526:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6581:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "6581:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6550:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6550:30:9"
																},
																"nativeSrc": "6550:39:9",
																"nodeType": "YulFunctionCall",
																"src": "6550:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6530:16:9",
																	"nodeType": "YulTypedName",
																	"src": "6530:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6605:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6605:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6645:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6645:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6639:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6639:5:9"
																				},
																				"nativeSrc": "6639:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6639:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6652:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6652:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6684:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "6684:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6660:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "6660:23:9"
																				},
																				"nativeSrc": "6660:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6660:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6611:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "6611:27:9"
																		},
																		"nativeSrc": "6611:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6611:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6598:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:9"
																},
																"nativeSrc": "6598:105:9",
																"nodeType": "YulFunctionCall",
																"src": "6598:105:9"
															},
															"nativeSrc": "6598:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "6598:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6440:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6493:4:9",
														"nodeType": "YulTypedName",
														"src": "6493:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6499:6:9",
														"nodeType": "YulTypedName",
														"src": "6499:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6507:7:9",
														"nodeType": "YulTypedName",
														"src": "6507:7:9",
														"type": ""
													}
												],
												"src": "6440:269:9"
											},
											{
												"body": {
													"nativeSrc": "6764:24:9",
													"nodeType": "YulBlock",
													"src": "6764:24:9",
													"statements": [
														{
															"nativeSrc": "6774:8:9",
															"nodeType": "YulAssignment",
															"src": "6774:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6781:1:9",
																"nodeType": "YulLiteral",
																"src": "6781:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6774:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6774:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6715:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6760:3:9",
														"nodeType": "YulTypedName",
														"src": "6760:3:9",
														"type": ""
													}
												],
												"src": "6715:73:9"
											},
											{
												"body": {
													"nativeSrc": "6847:136:9",
													"nodeType": "YulBlock",
													"src": "6847:136:9",
													"statements": [
														{
															"nativeSrc": "6857:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6857:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6871:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6871:30:9"
																},
																"nativeSrc": "6871:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6871:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6861:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6861:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6956:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6956:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6962:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6962:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6912:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6912:43:9"
																},
																"nativeSrc": "6912:65:9",
																"nodeType": "YulFunctionCall",
																"src": "6912:65:9"
															},
															"nativeSrc": "6912:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "6912:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6794:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6833:4:9",
														"nodeType": "YulTypedName",
														"src": "6833:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6839:6:9",
														"nodeType": "YulTypedName",
														"src": "6839:6:9",
														"type": ""
													}
												],
												"src": "6794:189:9"
											},
											{
												"body": {
													"nativeSrc": "7039:136:9",
													"nodeType": "YulBlock",
													"src": "7039:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7106:63:9",
																"nodeType": "YulBlock",
																"src": "7106:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7150:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7150:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7157:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7157:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7120:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "7120:29:9"
																			},
																			"nativeSrc": "7120:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7120:39:9"
																		},
																		"nativeSrc": "7120:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7120:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7059:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7059:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7066:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7066:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7056:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7056:2:9"
																},
																"nativeSrc": "7056:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7056:14:9"
															},
															"nativeSrc": "7049:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7071:26:9",
																"nodeType": "YulBlock",
																"src": "7071:26:9",
																"statements": [
																	{
																		"nativeSrc": "7073:22:9",
																		"nodeType": "YulAssignment",
																		"src": "7073:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7086:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7086:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7093:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7093:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7082:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7082:3:9"
																			},
																			"nativeSrc": "7082:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7082:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7073:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7073:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7053:2:9",
																"nodeType": "YulBlock",
																"src": "7053:2:9",
																"statements": []
															},
															"src": "7049:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6989:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7027:5:9",
														"nodeType": "YulTypedName",
														"src": "7027:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7034:3:9",
														"nodeType": "YulTypedName",
														"src": "7034:3:9",
														"type": ""
													}
												],
												"src": "6989:186:9"
											},
											{
												"body": {
													"nativeSrc": "7260:464:9",
													"nodeType": "YulBlock",
													"src": "7260:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:431:9",
																"nodeType": "YulBlock",
																"src": "7286:431:9",
																"statements": [
																	{
																		"nativeSrc": "7300:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7300:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7348:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7348:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7316:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "7316:31:9"
																			},
																			"nativeSrc": "7316:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7316:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7304:8:9",
																				"nodeType": "YulTypedName",
																				"src": "7304:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7367:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7367:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7390:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "7390:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7418:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "7418:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7400:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "7400:17:9"
																					},
																					"nativeSrc": "7400:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7400:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7386:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7386:3:9"
																			},
																			"nativeSrc": "7386:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7386:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7371:11:9",
																				"nodeType": "YulTypedName",
																				"src": "7371:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7587:27:9",
																			"nodeType": "YulBlock",
																			"src": "7587:27:9",
																			"statements": [
																				{
																					"nativeSrc": "7589:23:9",
																					"nodeType": "YulAssignment",
																					"src": "7589:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7604:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "7604:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7589:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "7589:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7571:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "7571:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7583:2:9",
																					"nodeType": "YulLiteral",
																					"src": "7583:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7568:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "7568:2:9"
																			},
																			"nativeSrc": "7568:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7568:18:9"
																		},
																		"nativeSrc": "7565:49:9",
																		"nodeType": "YulIf",
																		"src": "7565:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7656:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "7656:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7673:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "7673:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7701:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7701:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7683:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "7683:17:9"
																							},
																							"nativeSrc": "7683:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7683:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7669:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7669:3:9"
																					},
																					"nativeSrc": "7669:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7669:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7627:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "7627:28:9"
																			},
																			"nativeSrc": "7627:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7627:80:9"
																		},
																		"nativeSrc": "7627:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7627:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7277:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7277:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7282:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7282:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7274:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7274:2:9"
																},
																"nativeSrc": "7274:11:9",
																"nodeType": "YulFunctionCall",
																"src": "7274:11:9"
															},
															"nativeSrc": "7271:446:9",
															"nodeType": "YulIf",
															"src": "7271:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7181:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7236:5:9",
														"nodeType": "YulTypedName",
														"src": "7236:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7243:3:9",
														"nodeType": "YulTypedName",
														"src": "7243:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7248:10:9",
														"nodeType": "YulTypedName",
														"src": "7248:10:9",
														"type": ""
													}
												],
												"src": "7181:543:9"
											},
											{
												"body": {
													"nativeSrc": "7793:54:9",
													"nodeType": "YulBlock",
													"src": "7793:54:9",
													"statements": [
														{
															"nativeSrc": "7803:37:9",
															"nodeType": "YulAssignment",
															"src": "7803:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7828:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7828:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7834:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7834:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7824:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:9"
																},
																"nativeSrc": "7824:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7824:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7803:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7803:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7730:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7768:4:9",
														"nodeType": "YulTypedName",
														"src": "7768:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7774:5:9",
														"nodeType": "YulTypedName",
														"src": "7774:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7784:8:9",
														"nodeType": "YulTypedName",
														"src": "7784:8:9",
														"type": ""
													}
												],
												"src": "7730:117:9"
											},
											{
												"body": {
													"nativeSrc": "7904:118:9",
													"nodeType": "YulBlock",
													"src": "7904:118:9",
													"statements": [
														{
															"nativeSrc": "7914:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7963:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7963:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7966:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7966:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7959:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7959:3:9"
																				},
																				"nativeSrc": "7959:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7959:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7978:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7978:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7974:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7974:3:9"
																				},
																				"nativeSrc": "7974:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7974:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7930:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "7930:28:9"
																		},
																		"nativeSrc": "7930:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7930:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7926:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:9"
																},
																"nativeSrc": "7926:56:9",
																"nodeType": "YulFunctionCall",
																"src": "7926:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7918:4:9",
																	"nodeType": "YulTypedName",
																	"src": "7918:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7991:25:9",
															"nodeType": "YulAssignment",
															"src": "7991:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8005:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8005:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8011:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8011:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8001:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8001:3:9"
																},
																"nativeSrc": "8001:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8001:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7991:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7991:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7853:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7881:4:9",
														"nodeType": "YulTypedName",
														"src": "7881:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7887:5:9",
														"nodeType": "YulTypedName",
														"src": "7887:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7897:6:9",
														"nodeType": "YulTypedName",
														"src": "7897:6:9",
														"type": ""
													}
												],
												"src": "7853:169:9"
											},
											{
												"body": {
													"nativeSrc": "8108:214:9",
													"nodeType": "YulBlock",
													"src": "8108:214:9",
													"statements": [
														{
															"nativeSrc": "8241:37:9",
															"nodeType": "YulAssignment",
															"src": "8241:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8268:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8268:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8274:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8274:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8249:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "8249:18:9"
																},
																"nativeSrc": "8249:29:9",
																"nodeType": "YulFunctionCall",
																"src": "8249:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8241:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8241:4:9"
																}
															]
														},
														{
															"nativeSrc": "8287:29:9",
															"nodeType": "YulAssignment",
															"src": "8287:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8298:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8298:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8308:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8308:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8311:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8311:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8304:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:9"
																		},
																		"nativeSrc": "8304:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8304:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8295:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8295:2:9"
																},
																"nativeSrc": "8295:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8295:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8287:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8287:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8027:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8089:4:9",
														"nodeType": "YulTypedName",
														"src": "8089:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8095:3:9",
														"nodeType": "YulTypedName",
														"src": "8095:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8103:4:9",
														"nodeType": "YulTypedName",
														"src": "8103:4:9",
														"type": ""
													}
												],
												"src": "8027:295:9"
											},
											{
												"body": {
													"nativeSrc": "8419:1303:9",
													"nodeType": "YulBlock",
													"src": "8419:1303:9",
													"statements": [
														{
															"nativeSrc": "8430:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8430:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8477:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8477:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8444:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "8444:32:9"
																},
																"nativeSrc": "8444:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8444:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8434:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8434:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8566:22:9",
																"nodeType": "YulBlock",
																"src": "8566:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8568:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8568:16:9"
																			},
																			"nativeSrc": "8568:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8568:18:9"
																		},
																		"nativeSrc": "8568:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8568:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8538:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8538:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8546:18:9",
																		"nodeType": "YulLiteral",
																		"src": "8546:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8535:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8535:2:9"
																},
																"nativeSrc": "8535:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8535:30:9"
															},
															"nativeSrc": "8532:56:9",
															"nodeType": "YulIf",
															"src": "8532:56:9"
														},
														{
															"nativeSrc": "8598:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8598:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8644:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8644:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8638:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8638:5:9"
																		},
																		"nativeSrc": "8638:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8612:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "8612:25:9"
																},
																"nativeSrc": "8612:38:9",
																"nodeType": "YulFunctionCall",
																"src": "8612:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8602:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8602:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8743:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8743:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8749:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8749:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8757:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8757:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8697:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "8697:45:9"
																},
																"nativeSrc": "8697:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8697:67:9"
															},
															"nativeSrc": "8697:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "8697:67:9"
														},
														{
															"nativeSrc": "8774:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8774:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8791:1:9",
																"nodeType": "YulLiteral",
																"src": "8791:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8778:9:9",
																	"nodeType": "YulTypedName",
																	"src": "8778:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8802:17:9",
															"nodeType": "YulAssignment",
															"src": "8802:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8815:4:9",
																"nodeType": "YulLiteral",
																"src": "8815:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8802:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "8802:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8866:611:9",
																		"nodeType": "YulBlock",
																		"src": "8866:611:9",
																		"statements": [
																			{
																				"nativeSrc": "8880:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8880:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8899:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8899:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8911:4:9",
																									"nodeType": "YulLiteral",
																									"src": "8911:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8907:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8907:3:9"
																							},
																							"nativeSrc": "8907:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8907:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8895:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8895:3:9"
																					},
																					"nativeSrc": "8895:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8895:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8884:7:9",
																						"nodeType": "YulTypedName",
																						"src": "8884:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8931:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8931:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8977:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8977:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8945:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "8945:31:9"
																					},
																					"nativeSrc": "8945:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8945:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8935:6:9",
																						"nodeType": "YulTypedName",
																						"src": "8935:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8995:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8995:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9004:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9004:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8999:1:9",
																						"nodeType": "YulTypedName",
																						"src": "8999:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9063:163:9",
																					"nodeType": "YulBlock",
																					"src": "9063:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9088:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9088:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9106:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "9106:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9111:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "9111:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9102:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "9102:3:9"
																												},
																												"nativeSrc": "9102:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "9102:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9096:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "9096:5:9"
																										},
																										"nativeSrc": "9096:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9096:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9081:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9081:6:9"
																								},
																								"nativeSrc": "9081:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9081:42:9"
																							},
																							"nativeSrc": "9081:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9081:42:9"
																						},
																						{
																							"nativeSrc": "9140:24:9",
																							"nodeType": "YulAssignment",
																							"src": "9140:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9154:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9154:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9162:1:9",
																										"nodeType": "YulLiteral",
																										"src": "9162:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9150:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9150:3:9"
																								},
																								"nativeSrc": "9150:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9150:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9140:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9140:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9181:31:9",
																							"nodeType": "YulAssignment",
																							"src": "9181:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9198:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "9198:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9209:2:9",
																										"nodeType": "YulLiteral",
																										"src": "9209:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9194:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9194:3:9"
																								},
																								"nativeSrc": "9194:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9194:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9181:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "9181:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9029:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "9029:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9032:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "9032:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9026:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9026:2:9"
																					},
																					"nativeSrc": "9026:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9026:14:9"
																				},
																				"nativeSrc": "9018:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9041:21:9",
																					"nodeType": "YulBlock",
																					"src": "9041:21:9",
																					"statements": [
																						{
																							"nativeSrc": "9043:17:9",
																							"nodeType": "YulAssignment",
																							"src": "9043:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9052:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "9052:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9055:4:9",
																										"nodeType": "YulLiteral",
																										"src": "9055:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9048:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9048:3:9"
																								},
																								"nativeSrc": "9048:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9048:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9043:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "9043:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9022:3:9",
																					"nodeType": "YulBlock",
																					"src": "9022:3:9",
																					"statements": []
																				},
																				"src": "9018:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "9262:156:9",
																					"nodeType": "YulBlock",
																					"src": "9262:156:9",
																					"statements": [
																						{
																							"nativeSrc": "9280:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9280:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9307:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "9307:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9312:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9312:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9303:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "9303:3:9"
																										},
																										"nativeSrc": "9303:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9303:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9297:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9297:5:9"
																								},
																								"nativeSrc": "9297:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9297:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9284:9:9",
																									"nodeType": "YulTypedName",
																									"src": "9284:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9347:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9347:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9374:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9374:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9389:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "9389:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9397:4:9",
																														"nodeType": "YulLiteral",
																														"src": "9397:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9385:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "9385:3:9"
																												},
																												"nativeSrc": "9385:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "9385:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9355:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "9355:18:9"
																										},
																										"nativeSrc": "9355:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9355:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9340:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9340:6:9"
																								},
																								"nativeSrc": "9340:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9340:64:9"
																							},
																							"nativeSrc": "9340:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9340:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9245:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "9245:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9254:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "9254:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9242:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9242:2:9"
																					},
																					"nativeSrc": "9242:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9242:19:9"
																				},
																				"nativeSrc": "9239:179:9",
																				"nodeType": "YulIf",
																				"src": "9239:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9438:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9438:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9452:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "9452:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9460:1:9",
																											"nodeType": "YulLiteral",
																											"src": "9460:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9448:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "9448:3:9"
																									},
																									"nativeSrc": "9448:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "9448:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9464:1:9",
																									"nodeType": "YulLiteral",
																									"src": "9464:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9444:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "9444:3:9"
																							},
																							"nativeSrc": "9444:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9444:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9431:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9431:6:9"
																					},
																					"nativeSrc": "9431:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9431:36:9"
																				},
																				"nativeSrc": "9431:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9431:36:9"
																			}
																		]
																	},
																	"nativeSrc": "8859:618:9",
																	"nodeType": "YulCase",
																	"src": "8859:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8864:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8864:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9494:222:9",
																		"nodeType": "YulBlock",
																		"src": "9494:222:9",
																		"statements": [
																			{
																				"nativeSrc": "9508:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9508:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9521:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9521:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9512:5:9",
																						"nodeType": "YulTypedName",
																						"src": "9512:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9545:67:9",
																					"nodeType": "YulBlock",
																					"src": "9545:67:9",
																					"statements": [
																						{
																							"nativeSrc": "9563:35:9",
																							"nodeType": "YulAssignment",
																							"src": "9563:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9582:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "9582:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9587:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9587:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9578:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "9578:3:9"
																										},
																										"nativeSrc": "9578:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9578:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9572:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9572:5:9"
																								},
																								"nativeSrc": "9572:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9572:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9563:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9563:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9538:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9538:6:9"
																				},
																				"nativeSrc": "9535:77:9",
																				"nodeType": "YulIf",
																				"src": "9535:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9632:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9632:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9691:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9691:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9698:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9698:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9638:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "9638:52:9"
																							},
																							"nativeSrc": "9638:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9638:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9625:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9625:6:9"
																					},
																					"nativeSrc": "9625:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9625:81:9"
																				},
																				"nativeSrc": "9625:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9625:81:9"
																			}
																		]
																	},
																	"nativeSrc": "9486:230:9",
																	"nodeType": "YulCase",
																	"src": "9486:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8839:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8839:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8847:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8847:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8836:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8836:2:9"
																},
																"nativeSrc": "8836:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8836:14:9"
															},
															"nativeSrc": "8829:887:9",
															"nodeType": "YulSwitch",
															"src": "8829:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8327:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8408:4:9",
														"nodeType": "YulTypedName",
														"src": "8408:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8414:3:9",
														"nodeType": "YulTypedName",
														"src": "8414:3:9",
														"type": ""
													}
												],
												"src": "8327:1395:9"
											},
											{
												"body": {
													"nativeSrc": "9793:53:9",
													"nodeType": "YulBlock",
													"src": "9793:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9810:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9810:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9833:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9833:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9815:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "9815:17:9"
																		},
																		"nativeSrc": "9815:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9815:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9803:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:9"
																},
																"nativeSrc": "9803:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9803:37:9"
															},
															"nativeSrc": "9803:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9803:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9728:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9781:5:9",
														"nodeType": "YulTypedName",
														"src": "9781:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9788:3:9",
														"nodeType": "YulTypedName",
														"src": "9788:3:9",
														"type": ""
													}
												],
												"src": "9728:118:9"
											},
											{
												"body": {
													"nativeSrc": "9950:124:9",
													"nodeType": "YulBlock",
													"src": "9950:124:9",
													"statements": [
														{
															"nativeSrc": "9960:26:9",
															"nodeType": "YulAssignment",
															"src": "9960:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9972:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9972:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9983:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9983:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9968:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9968:3:9"
																},
																"nativeSrc": "9968:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9968:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9960:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9960:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10040:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10040:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10053:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10053:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10064:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10064:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10049:3:9"
																		},
																		"nativeSrc": "10049:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10049:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9996:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9996:43:9"
																},
																"nativeSrc": "9996:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9996:71:9"
															},
															"nativeSrc": "9996:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9996:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9852:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9922:9:9",
														"nodeType": "YulTypedName",
														"src": "9922:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9934:6:9",
														"nodeType": "YulTypedName",
														"src": "9934:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9945:4:9",
														"nodeType": "YulTypedName",
														"src": "9945:4:9",
														"type": ""
													}
												],
												"src": "9852:222:9"
											},
											{
												"body": {
													"nativeSrc": "10108:152:9",
													"nodeType": "YulBlock",
													"src": "10108:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10125:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10125:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10128:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10128:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10118:6:9"
																},
																"nativeSrc": "10118:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10118:88:9"
															},
															"nativeSrc": "10118:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10118:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10222:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10222:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10225:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10225:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10215:6:9"
																},
																"nativeSrc": "10215:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10215:15:9"
															},
															"nativeSrc": "10215:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10215:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10246:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10246:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10249:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10249:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10239:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10239:6:9"
																},
																"nativeSrc": "10239:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10239:15:9"
															},
															"nativeSrc": "10239:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10239:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10080:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10080:180:9"
											},
											{
												"body": {
													"nativeSrc": "10310:147:9",
													"nodeType": "YulBlock",
													"src": "10310:147:9",
													"statements": [
														{
															"nativeSrc": "10320:25:9",
															"nodeType": "YulAssignment",
															"src": "10320:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10343:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10343:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10325:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10325:17:9"
																},
																"nativeSrc": "10325:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10325:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10320:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10320:1:9"
																}
															]
														},
														{
															"nativeSrc": "10354:25:9",
															"nodeType": "YulAssignment",
															"src": "10354:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10377:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10377:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10359:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10359:17:9"
																},
																"nativeSrc": "10359:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10359:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10354:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10354:1:9"
																}
															]
														},
														{
															"nativeSrc": "10388:16:9",
															"nodeType": "YulAssignment",
															"src": "10388:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10399:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10399:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10402:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10402:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10395:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10395:3:9"
																},
																"nativeSrc": "10395:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10395:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10388:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10388:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10428:22:9",
																"nodeType": "YulBlock",
																"src": "10428:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10430:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10430:16:9"
																			},
																			"nativeSrc": "10430:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10430:18:9"
																		},
																		"nativeSrc": "10430:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10430:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10420:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10420:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10423:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10423:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10417:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10417:2:9"
																},
																"nativeSrc": "10417:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10417:10:9"
															},
															"nativeSrc": "10414:36:9",
															"nodeType": "YulIf",
															"src": "10414:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10266:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10297:1:9",
														"nodeType": "YulTypedName",
														"src": "10297:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10300:1:9",
														"nodeType": "YulTypedName",
														"src": "10300:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10306:3:9",
														"nodeType": "YulTypedName",
														"src": "10306:3:9",
														"type": ""
													}
												],
												"src": "10266:191:9"
											},
											{
												"body": {
													"nativeSrc": "10528:53:9",
													"nodeType": "YulBlock",
													"src": "10528:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10545:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10545:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10568:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10568:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10550:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "10550:17:9"
																		},
																		"nativeSrc": "10550:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10550:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10538:6:9"
																},
																"nativeSrc": "10538:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10538:37:9"
															},
															"nativeSrc": "10538:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "10538:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10463:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10516:5:9",
														"nodeType": "YulTypedName",
														"src": "10516:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10523:3:9",
														"nodeType": "YulTypedName",
														"src": "10523:3:9",
														"type": ""
													}
												],
												"src": "10463:118:9"
											},
											{
												"body": {
													"nativeSrc": "10741:288:9",
													"nodeType": "YulBlock",
													"src": "10741:288:9",
													"statements": [
														{
															"nativeSrc": "10751:26:9",
															"nodeType": "YulAssignment",
															"src": "10751:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10763:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10763:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10774:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10774:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10759:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10759:3:9"
																},
																"nativeSrc": "10759:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10759:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10751:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10751:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10831:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10831:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10844:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10844:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10855:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10855:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:9"
																		},
																		"nativeSrc": "10840:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10787:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10787:43:9"
																},
																"nativeSrc": "10787:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10787:71:9"
															},
															"nativeSrc": "10787:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10787:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10912:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10912:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10925:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10925:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10936:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10936:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10921:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10921:3:9"
																		},
																		"nativeSrc": "10921:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10921:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10868:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10868:43:9"
																},
																"nativeSrc": "10868:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10868:72:9"
															},
															"nativeSrc": "10868:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10868:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10994:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10994:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11007:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11007:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11018:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11018:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11003:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11003:3:9"
																		},
																		"nativeSrc": "11003:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11003:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10950:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10950:43:9"
																},
																"nativeSrc": "10950:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10950:72:9"
															},
															"nativeSrc": "10950:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10950:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10587:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10697:9:9",
														"nodeType": "YulTypedName",
														"src": "10697:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10709:6:9",
														"nodeType": "YulTypedName",
														"src": "10709:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10717:6:9",
														"nodeType": "YulTypedName",
														"src": "10717:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10725:6:9",
														"nodeType": "YulTypedName",
														"src": "10725:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10736:4:9",
														"nodeType": "YulTypedName",
														"src": "10736:4:9",
														"type": ""
													}
												],
												"src": "10587:442:9"
											},
											{
												"body": {
													"nativeSrc": "11133:124:9",
													"nodeType": "YulBlock",
													"src": "11133:124:9",
													"statements": [
														{
															"nativeSrc": "11143:26:9",
															"nodeType": "YulAssignment",
															"src": "11143:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11155:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11155:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11166:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11166:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11151:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11151:3:9"
																},
																"nativeSrc": "11151:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11151:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11143:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11223:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11223:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11236:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11236:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11247:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11247:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11232:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:9"
																		},
																		"nativeSrc": "11232:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11179:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11179:43:9"
																},
																"nativeSrc": "11179:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11179:71:9"
															},
															"nativeSrc": "11179:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11179:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11035:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11105:9:9",
														"nodeType": "YulTypedName",
														"src": "11105:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11117:6:9",
														"nodeType": "YulTypedName",
														"src": "11117:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11128:4:9",
														"nodeType": "YulTypedName",
														"src": "11128:4:9",
														"type": ""
													}
												],
												"src": "11035:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051613268380380613268833981810160405281019061003191906107cd565b33858581600390816100439190610a80565b5080600490816100539190610a80565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d69190610b5e565b60405180910390fd5b6100ee8161029060201b60201c565b5060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061015c57505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610193576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051806060016040528066038d7ea4c680008152602001670de0b6b3a76400008152602001671bc16d674ec8000081525060075f820151815f0155602082015181600101556040820151816002015590505068056bc75e2d63100000600a81905550610286338461035560201b60201c565b5050505050610c34565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103bc9190610b5e565b60405180910390fd5b6103d65f83836103da60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042a578060025f82825461041e9190610ba4565b925050819055506104f8565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104b3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104aa93929190610be6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361053f578060025f8282540392505081905550610589565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105e69190610c1b565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106528261060c565b810181811067ffffffffffffffff821117156106715761067061061c565b5b80604052505050565b5f6106836105f3565b905061068f8282610649565b919050565b5f67ffffffffffffffff8211156106ae576106ad61061c565b5b6106b78261060c565b9050602081019050919050565b8281835e5f83830152505050565b5f6106e46106df84610694565b61067a565b905082815260208101848484011115610700576106ff610608565b5b61070b8482856106c4565b509392505050565b5f82601f83011261072757610726610604565b5b81516107378482602086016106d2565b91505092915050565b5f819050919050565b61075281610740565b811461075c575f80fd5b50565b5f8151905061076d81610749565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61079c82610773565b9050919050565b6107ac81610792565b81146107b6575f80fd5b50565b5f815190506107c7816107a3565b92915050565b5f805f805f60a086880312156107e6576107e56105fc565b5b5f86015167ffffffffffffffff81111561080357610802610600565b5b61080f88828901610713565b955050602086015167ffffffffffffffff8111156108305761082f610600565b5b61083c88828901610713565b945050604061084d8882890161075f565b935050606061085e888289016107b9565b925050608061086f888289016107b9565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806108ca57607f821691505b6020821081036108dd576108dc610886565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261093f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610904565b6109498683610904565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61098461097f61097a84610740565b610961565b610740565b9050919050565b5f819050919050565b61099d8361096a565b6109b16109a98261098b565b848454610910565b825550505050565b5f90565b6109c56109b9565b6109d0818484610994565b505050565b5b818110156109f3576109e85f826109bd565b6001810190506109d6565b5050565b601f821115610a3857610a09816108e3565b610a12846108f5565b81016020851015610a21578190505b610a35610a2d856108f5565b8301826109d5565b50505b505050565b5f82821c905092915050565b5f610a585f1984600802610a3d565b1980831691505092915050565b5f610a708383610a49565b9150826002028217905092915050565b610a898261087c565b67ffffffffffffffff811115610aa257610aa161061c565b5b610aac82546108b3565b610ab78282856109f7565b5f60209050601f831160018114610ae8575f8415610ad6578287015190505b610ae08582610a65565b865550610b47565b601f198416610af6866108e3565b5f5b82811015610b1d57848901518255600182019150602085019450602081019050610af8565b86831015610b3a5784890151610b36601f891682610a49565b8355505b6001600288020188555050505b505050505050565b610b5881610792565b82525050565b5f602082019050610b715f830184610b4f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610bae82610740565b9150610bb983610740565b9250828201905080821115610bd157610bd0610b77565b5b92915050565b610be081610740565b82525050565b5f606082019050610bf95f830186610b4f565b610c066020830185610bd7565b610c136040830184610bd7565b949350505050565b5f602082019050610c2e5f830184610bd7565b92915050565b61262780610c415f395ff3fe608060405234801561000f575f80fd5b50600436106101cd575f3560e01c80638da5cb5b11610102578063c0008d0c116100a0578063d06a2e0e1161006f578063d06a2e0e146104e7578063dd62ed3e14610503578063f2fde38b14610533578063f4f831a01461054f576101cd565b8063c0008d0c14610487578063c1f3bdde146104a3578063ca1c7238146104c1578063ce55b584146104cb576101cd565b8063a3262ea2116100dc578063a3262ea2146103eb578063a6ec1c6d14610409578063a775ced314610439578063a9059cbb14610457576101cd565b80638da5cb5b1461037f57806395d89b411461039d5780639778d0cd146103bb576101cd565b806343f48fbd1161016f578063715018a611610149578063715018a6146103335780638456cb591461033d578063849d13a3146103475780638d9d730714610363576101cd565b806343f48fbd146102c55780635c975abb146102e557806370a0823114610303576101cd565b806323b872dd116101ab57806323b872dd1461023d5780632a504a971461026d578063313ce5671461029d5780633f4ba83a146102bb576101cd565b806306fdde03146101d1578063095ea7b3146101ef57806318160ddd1461021f575b5f80fd5b6101d961056d565b6040516101e69190611d92565b60405180910390f35b61020960048036038101906102049190611e47565b6105fd565b6040516102169190611e9f565b60405180910390f35b61022761061f565b6040516102349190611ec7565b60405180910390f35b61025760048036038101906102529190611ee0565b610628565b6040516102649190611e9f565b60405180910390f35b61028760048036038101906102829190611f30565b610645565b6040516102949190611ec7565b60405180910390f35b6102a561065a565b6040516102b29190611f76565b60405180910390f35b6102c3610662565b005b6102cd610674565b6040516102dc93929190611f8f565b60405180910390f35b6102ed61068b565b6040516102fa9190611e9f565b60405180910390f35b61031d60048036038101906103189190611f30565b6106a0565b60405161032a9190611ec7565b60405180910390f35b61033b6106e5565b005b6103456106f8565b005b610361600480360381019061035c9190611fe6565b61070a565b005b61037d60048036038101906103789190612072565b61076d565b005b61038761098b565b60405161039491906120de565b60405180910390f35b6103a56109b4565b6040516103b29190611d92565b60405180910390f35b6103d560048036038101906103d09190611f30565b610a44565b6040516103e29190611ec7565b60405180910390f35b6103f3610a59565b60405161040091906120de565b60405180910390f35b610423600480360381019061041e9190611f30565b610a7e565b6040516104309190611ec7565b60405180910390f35b610441610a93565b60405161044e91906120de565b60405180910390f35b610471600480360381019061046c9190611e47565b610ab8565b60405161047e9190611e9f565b60405180910390f35b6104a1600480360381019061049c91906120f7565b610ad3565b005b6104ab610e00565b6040516104b89190611ec7565b60405180910390f35b6104c9610e07565b005b6104e560048036038101906104e09190612154565b610ee8565b005b61050160048036038101906104fc9190611e47565b610f31565b005b61051d6004803603810190610518919061217f565b6111ef565b60405161052a9190611ec7565b60405180910390f35b61054d60048036038101906105489190611f30565b611271565b005b6105576112f5565b6040516105649190611ec7565b60405180910390f35b60606003805461057c906121ea565b80601f01602080910402602001604051908101604052809291908181526020018280546105a8906121ea565b80156105f35780601f106105ca576101008083540402835291602001916105f3565b820191905f5260205f20905b8154815290600101906020018083116105d657829003601f168201915b5050505050905090565b5f806106076112fb565b9050610614818585611302565b600191505092915050565b5f600254905090565b5f610631611314565b61063c84848461135e565b90509392505050565b600d602052805f5260405f205f915090505481565b5f6012905090565b61066a61138c565b610672611413565b565b6007805f0154908060010154908060020154905083565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106ed61138c565b6106f65f611474565b565b61070061138c565b610708611539565b565b61071261138c565b80600781816107219190612336565b9050507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b815f01358260200135836040013560405161076293929190611f8f565b60405180910390a150565b61077561138c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107da576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600381526020017f6e66740000000000000000000000000000000000000000000000000000000000815250805190602001208383604051610827929190612380565b6040518091039020036108795780600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061094b565b6040518060400160405280600781526020017f686973746f7279000000000000000000000000000000000000000000000000008152508051906020012083836040516108c6929190612380565b6040518091039020036109185780600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061094a565b6040517f6a43f8d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b7ff611fec7babefd259c57ea5b6006acff8140ab17bb816c65ba0aa7e36c09caa883838360405161097e939291906123c4565b60405180910390a1505050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109c3906121ea565b80601f01602080910402602001604051908101604052809291908181526020018280546109ef906121ea565b8015610a3a5780601f10610a1157610100808354040283529160200191610a3a565b820191905f5260205f20905b815481529060010190602001808311610a1d57829003601f168201915b5050505050905090565b600e602052805f5260405f205f915090505481565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f602052805f5260405f205f915090505481565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610ac1611314565b610acb838361159b565b905092915050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610b7d5750600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610bb4576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bbc611314565b5f6040518060400160405280600581526020017f6469617279000000000000000000000000000000000000000000000000000000815250805190602001208383604051610c0a929190612380565b604051809103902003610c24576007600101549050610cbe565b6040518060400160405280600581526020017f70686f746f000000000000000000000000000000000000000000000000000000815250805190602001208383604051610c71929190612380565b604051809103902003610c8b576007600201549050610cbd565b6040517f6a43f8d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610cc7846115bd565b600a5481600f5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d139190612421565b1115610d4b576040517fd75747f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d979190612421565b92505081905550610da88482611697565b8373ffffffffffffffffffffffffffffffffffffffff167f21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c828585604051610df293929190612454565b60405180910390a250505050565b6201518081565b610e0f611716565b610e17611314565b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103610e91576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610edd3382611697565b50610ee6611765565b565b610ef061138c565b80600a819055507fb1cc6c859f8e547a95cbbe7dcece9e0fd5a931c906bd08dcf8413a2c8353971381604051610f269190611ec7565b60405180910390a150565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610fdb5750600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611012576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61101a611314565b5f8103611053576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61105c826115bd565b600a5481600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110a89190612421565b11156110e0576040517fd75747f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461112c9190612421565b9250508190555080600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461117f9190612421565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbf26400ffec32b7f7fa346df27788423de869f04ad96fd322dafc7af85002636836040516111e39190611ec7565b60405180910390a35050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61127961138c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112e9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112e091906120de565b60405180910390fd5b6112f281611474565b50565b600a5481565b5f33905090565b61130f838383600161176f565b505050565b61131c61068b565b1561135c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611353906124ce565b60405180910390fd5b565b5f806113686112fb565b905061137585828561193e565b6113808585856119d0565b60019150509392505050565b6113946112fb565b73ffffffffffffffffffffffffffffffffffffffff166113b261098b565b73ffffffffffffffffffffffffffffffffffffffff1614611411576113d56112fb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161140891906120de565b60405180910390fd5b565b61141b611ac0565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61145d6112fb565b60405161146a91906120de565b60405180910390a1565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611541611314565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115846112fb565b60405161159191906120de565b60405180910390a1565b5f806115a56112fb565b90506115b28185856119d0565b600191505092915050565b62015180600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116099190612421565b4210611694575f600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b50565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611707575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116fe91906120de565b60405180910390fd5b6117125f8383611b09565b5050565b60026006540361175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290612536565b60405180910390fd5b6002600681905550565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117df575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117d691906120de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361184f575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161184691906120de565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611938578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161192f9190611ec7565b60405180910390a35b50505050565b5f61194984846111ef565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146119ca57818110156119bb578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016119b293929190612554565b60405180910390fd5b6119c984848484035f61176f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a40575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a3791906120de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ab0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aa791906120de565b60405180910390fd5b611abb838383611b09565b505050565b611ac861068b565b611b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afe906125d3565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b59578060025f828254611b4d9190612421565b92505081905550611c27565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611be2578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611bd993929190612554565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c6e578060025f8282540392505081905550611cb8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d159190611ec7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d6482611d22565b611d6e8185611d2c565b9350611d7e818560208601611d3c565b611d8781611d4a565b840191505092915050565b5f6020820190508181035f830152611daa8184611d5a565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611de382611dba565b9050919050565b611df381611dd9565b8114611dfd575f80fd5b50565b5f81359050611e0e81611dea565b92915050565b5f819050919050565b611e2681611e14565b8114611e30575f80fd5b50565b5f81359050611e4181611e1d565b92915050565b5f8060408385031215611e5d57611e5c611db2565b5b5f611e6a85828601611e00565b9250506020611e7b85828601611e33565b9150509250929050565b5f8115159050919050565b611e9981611e85565b82525050565b5f602082019050611eb25f830184611e90565b92915050565b611ec181611e14565b82525050565b5f602082019050611eda5f830184611eb8565b92915050565b5f805f60608486031215611ef757611ef6611db2565b5b5f611f0486828701611e00565b9350506020611f1586828701611e00565b9250506040611f2686828701611e33565b9150509250925092565b5f60208284031215611f4557611f44611db2565b5b5f611f5284828501611e00565b91505092915050565b5f60ff82169050919050565b611f7081611f5b565b82525050565b5f602082019050611f895f830184611f67565b92915050565b5f606082019050611fa25f830186611eb8565b611faf6020830185611eb8565b611fbc6040830184611eb8565b949350505050565b5f80fd5b5f60608284031215611fdd57611fdc611fc4565b5b81905092915050565b5f60608284031215611ffb57611ffa611db2565b5b5f61200884828501611fc8565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261203257612031612011565b5b8235905067ffffffffffffffff81111561204f5761204e612015565b5b60208301915083600182028301111561206b5761206a612019565b5b9250929050565b5f805f6040848603121561208957612088611db2565b5b5f84013567ffffffffffffffff8111156120a6576120a5611db6565b5b6120b28682870161201d565b935093505060206120c586828701611e00565b9150509250925092565b6120d881611dd9565b82525050565b5f6020820190506120f15f8301846120cf565b92915050565b5f805f6040848603121561210e5761210d611db2565b5b5f61211b86828701611e00565b935050602084013567ffffffffffffffff81111561213c5761213b611db6565b5b6121488682870161201d565b92509250509250925092565b5f6020828403121561216957612168611db2565b5b5f61217684828501611e33565b91505092915050565b5f806040838503121561219557612194611db2565b5b5f6121a285828601611e00565b92505060206121b385828601611e00565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061220157607f821691505b602082108103612214576122136121bd565b5b50919050565b5f813561222681611e1d565b80915050919050565b5f815f1b9050919050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6122658461222f565b9350801983169250808416831791505092915050565b5f819050919050565b5f61229e61229961229484611e14565b61227b565b611e14565b9050919050565b5f819050919050565b6122b782612284565b6122ca6122c3826122a5565b835461223a565b8255505050565b5f81015f8301806122e18161221a565b90506122ed81846122ae565b5050506001810160208301806123028161221a565b905061230e81846122ae565b5050506002810160408301806123238161221a565b905061232f81846122ae565b5050505050565b61234082826122d1565b5050565b5f81905092915050565b828183375f83830152505050565b5f6123678385612344565b935061237483858461234e565b82840190509392505050565b5f61238c82848661235c565b91508190509392505050565b5f6123a38385611d2c565b93506123b083858461234e565b6123b983611d4a565b840190509392505050565b5f6040820190508181035f8301526123dd818587612398565b90506123ec60208301846120cf565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61242b82611e14565b915061243683611e14565b925082820190508082111561244e5761244d6123f4565b5b92915050565b5f6040820190506124675f830186611eb8565b818103602083015261247a818486612398565b9050949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6124b8601083611d2c565b91506124c382612484565b602082019050919050565b5f6020820190508181035f8301526124e5816124ac565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612520601f83611d2c565b915061252b826124ec565b602082019050919050565b5f6020820190508181035f83015261254d81612514565b9050919050565b5f6060820190506125675f8301866120cf565b6125746020830185611eb8565b6125816040830184611eb8565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6125bd601483611d2c565b91506125c882612589565b602082019050919050565b5f6020820190508181035f8301526125ea816125b1565b905091905056fea2646970667358221220e93a3dda12e59d805089ced78b15a294e153ce06bc445c77987a3646d52885a264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3268 CODESIZE SUB DUP1 PUSH2 0x3268 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST CALLER DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x290 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x15C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x38D7EA4C68000 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1BC16D674EC80000 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH9 0x56BC75E2D63100000 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x286 CALLER DUP5 PUSH2 0x355 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH2 0xC34 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D6 PUSH0 DUP4 DUP4 PUSH2 0x3DA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4F8 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x53F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x589 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x652 DUP3 PUSH2 0x60C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x671 JUMPI PUSH2 0x670 PUSH2 0x61C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x683 PUSH2 0x5F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x68F DUP3 DUP3 PUSH2 0x649 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x6AD PUSH2 0x61C JUMP JUMPDEST JUMPDEST PUSH2 0x6B7 DUP3 PUSH2 0x60C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E4 PUSH2 0x6DF DUP5 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x700 JUMPI PUSH2 0x6FF PUSH2 0x608 JUMP JUMPDEST JUMPDEST PUSH2 0x70B DUP5 DUP3 DUP6 PUSH2 0x6C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x604 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x737 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x740 JUMP JUMPDEST DUP2 EQ PUSH2 0x75C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x76D DUP2 PUSH2 0x749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x79C DUP3 PUSH2 0x773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AC DUP2 PUSH2 0x792 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7C7 DUP2 PUSH2 0x7A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0x5FC JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH2 0x80F DUP9 DUP3 DUP10 ADD PUSH2 0x713 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x830 JUMPI PUSH2 0x82F PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH2 0x83C DUP9 DUP3 DUP10 ADD PUSH2 0x713 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x84D DUP9 DUP3 DUP10 ADD PUSH2 0x75F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x85E DUP9 DUP3 DUP10 ADD PUSH2 0x7B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x86F DUP9 DUP3 DUP10 ADD PUSH2 0x7B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8DD JUMPI PUSH2 0x8DC PUSH2 0x886 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x93F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x949 DUP7 DUP4 PUSH2 0x904 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x984 PUSH2 0x97F PUSH2 0x97A DUP5 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99D DUP4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A9 DUP3 PUSH2 0x98B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x910 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x9D0 DUP2 DUP5 DUP5 PUSH2 0x994 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9F3 JUMPI PUSH2 0x9E8 PUSH0 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA09 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0xA12 DUP5 PUSH2 0x8F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA21 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA35 PUSH2 0xA2D DUP6 PUSH2 0x8F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x9D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA58 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA3D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA70 DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA89 DUP3 PUSH2 0x87C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0x61C JUMP JUMPDEST JUMPDEST PUSH2 0xAAC DUP3 SLOAD PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0xAB7 DUP3 DUP3 DUP6 PUSH2 0x9F7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAE8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xAD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAE0 DUP6 DUP3 PUSH2 0xA65 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xAF6 DUP7 PUSH2 0x8E3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB1D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAF8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB3A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB36 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA49 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB58 DUP2 PUSH2 0x792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB71 PUSH0 DUP4 ADD DUP5 PUSH2 0xB4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBAE DUP3 PUSH2 0x740 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB9 DUP4 PUSH2 0x740 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD0 PUSH2 0xB77 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0x740 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH0 DUP4 ADD DUP7 PUSH2 0xB4F JUMP JUMPDEST PUSH2 0xC06 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0xC13 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2E PUSH0 DUP4 ADD DUP5 PUSH2 0xBD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP1 PUSH2 0xC41 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC0008D0C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD06A2E0E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD06A2E0E EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xF4F831A0 EQ PUSH2 0x54F JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xC0008D0C EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xC1F3BDDE EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xCA1C7238 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xCE55B584 EQ PUSH2 0x4CB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xA3262EA2 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA3262EA2 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xA6EC1C6D EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xA775CED3 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x457 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x9778D0CD EQ PUSH2 0x3BB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x43F48FBD GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x849D13A3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x8D9D7307 EQ PUSH2 0x363 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x43F48FBD EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x2A504A97 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D9 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH2 0xE07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x501 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x557 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x57C SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A8 SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x607 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP PUSH2 0x614 DUP2 DUP6 DUP6 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x631 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x63C DUP5 DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x66A PUSH2 0x138C JUMP JUMPDEST PUSH2 0x672 PUSH2 0x1413 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x138C JUMP JUMPDEST PUSH2 0x6F6 PUSH0 PUSH2 0x1474 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x700 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x708 PUSH2 0x1539 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x712 PUSH2 0x138C JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 DUP2 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x2336 JUMP JUMPDEST SWAP1 POP POP PUSH32 0x23010BC68E7F4C0BE9887F513C570C7A0F5F511B9716ABCCD42BF3B8943532B DUP2 PUSH0 ADD CALLDATALOAD DUP3 PUSH1 0x20 ADD CALLDATALOAD DUP4 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x762 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x775 PUSH2 0x138C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E66740000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x827 SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x879 JUMPI DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x686973746F727900000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C6 SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x918 JUMPI DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6A43F8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH32 0xF611FEC7BABEFD259C57EA5B6006ACFF8140AB17BB816C65BA0AA7E36C09CAA8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x97E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9C3 SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9EF SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA3A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA1D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xAC1 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0xACB DUP4 DUP4 PUSH2 0x159B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI POP PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBBC PUSH2 0x1314 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6469617279000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0A SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xC24 JUMPI PUSH1 0x7 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70686F746F000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC71 SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xC8B JUMPI PUSH1 0x7 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6A43F8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0xCC7 DUP5 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0xF PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST GT ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD75747F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDA8 DUP5 DUP3 PUSH2 0x1697 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21A82678DAA5235B7B5DE669FDF9599453D3D885CEE0826E92636D747419689C DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xDF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0xE0F PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xE17 PUSH2 0x1314 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEDD CALLER DUP3 PUSH2 0x1697 JUMP JUMPDEST POP PUSH2 0xEE6 PUSH2 0x1765 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEF0 PUSH2 0x138C JUMP JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xB1CC6C859F8E547A95CBBE7DCECE9E0FD5A931C906BD08DCF8413A2C83539713 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xFDB JUMPI POP PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101A PUSH2 0x1314 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105C DUP3 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10A8 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST GT ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD75747F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x117F SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF26400FFEC32B7F7FA346DF27788423DE869F04AD96FD322DAFC7AF85002636 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x138C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F2 DUP2 PUSH2 0x1474 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x130F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x131C PUSH2 0x68B JUMP JUMPDEST ISZERO PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1353 SWAP1 PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1368 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP PUSH2 0x1375 DUP6 DUP3 DUP6 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1380 DUP6 DUP6 DUP6 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1394 PUSH2 0x12FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B2 PUSH2 0x98B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1411 JUMPI PUSH2 0x13D5 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1AC0 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x145D PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1541 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1584 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x15A5 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP PUSH2 0x15B2 DUP2 DUP6 DUP6 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1609 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1694 JUMPI PUSH0 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1707 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1712 PUSH0 DUP4 DUP4 PUSH2 0x1B09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x175B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP1 PUSH2 0x2536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x184F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1846 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1938 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x192F SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1949 DUP5 DUP5 PUSH2 0x11EF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x19CA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x19BB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x176F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AB0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA7 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ABB DUP4 DUP4 DUP4 PUSH2 0x1B09 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AC8 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x1B07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFE SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B59 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B4D SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C27 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BE2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C6E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D15 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D64 DUP3 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x1D6E DUP2 DUP6 PUSH2 0x1D2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x1D87 DUP2 PUSH2 0x1D4A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAA DUP2 DUP5 PUSH2 0x1D5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE3 DUP3 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF3 DUP2 PUSH2 0x1DD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E0E DUP2 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E26 DUP2 PUSH2 0x1E14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E41 DUP2 PUSH2 0x1E1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6A DUP6 DUP3 DUP7 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7B DUP6 DUP3 DUP7 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E99 DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x1E14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDA PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF6 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F04 DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F15 DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F26 DUP7 DUP3 DUP8 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F52 DUP5 DUP3 DUP6 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1F5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FA2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FAF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FBC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1FC4 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2008 DUP5 DUP3 DUP6 ADD PUSH2 0x1FC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2032 JUMPI PUSH2 0x2031 PUSH2 0x2011 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x2015 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x206B JUMPI PUSH2 0x206A PUSH2 0x2019 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2089 JUMPI PUSH2 0x2088 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x1DB6 JUMP JUMPDEST JUMPDEST PUSH2 0x20B2 DUP7 DUP3 DUP8 ADD PUSH2 0x201D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x20C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x1DD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x210E JUMPI PUSH2 0x210D PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x211B DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x1DB6 JUMP JUMPDEST JUMPDEST PUSH2 0x2148 DUP7 DUP3 DUP8 ADD PUSH2 0x201D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2169 JUMPI PUSH2 0x2168 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2176 DUP5 DUP3 DUP6 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2201 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2214 JUMPI PUSH2 0x2213 PUSH2 0x21BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD PUSH2 0x2226 DUP2 PUSH2 0x1E1D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2265 DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x229E PUSH2 0x2299 PUSH2 0x2294 DUP5 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x227B JUMP JUMPDEST PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B7 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x22CA PUSH2 0x22C3 DUP3 PUSH2 0x22A5 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x223A JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 ADD PUSH0 DUP4 ADD DUP1 PUSH2 0x22E1 DUP2 PUSH2 0x221A JUMP JUMPDEST SWAP1 POP PUSH2 0x22ED DUP2 DUP5 PUSH2 0x22AE JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x2302 DUP2 PUSH2 0x221A JUMP JUMPDEST SWAP1 POP PUSH2 0x230E DUP2 DUP5 PUSH2 0x22AE JUMP JUMPDEST POP POP POP PUSH1 0x2 DUP2 ADD PUSH1 0x40 DUP4 ADD DUP1 PUSH2 0x2323 DUP2 PUSH2 0x221A JUMP JUMPDEST SWAP1 POP PUSH2 0x232F DUP2 DUP5 PUSH2 0x22AE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2340 DUP3 DUP3 PUSH2 0x22D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2367 DUP4 DUP6 PUSH2 0x2344 JUMP JUMPDEST SWAP4 POP PUSH2 0x2374 DUP4 DUP6 DUP5 PUSH2 0x234E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x238C DUP3 DUP5 DUP7 PUSH2 0x235C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23A3 DUP4 DUP6 PUSH2 0x1D2C JUMP JUMPDEST SWAP4 POP PUSH2 0x23B0 DUP4 DUP6 DUP5 PUSH2 0x234E JUMP JUMPDEST PUSH2 0x23B9 DUP4 PUSH2 0x1D4A JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23DD DUP2 DUP6 DUP8 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP PUSH2 0x23EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x242B DUP3 PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP PUSH2 0x2436 DUP4 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x23F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2467 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EB8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x247A DUP2 DUP5 DUP7 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24B8 PUSH1 0x10 DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 POP PUSH2 0x24C3 DUP3 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E5 DUP2 PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2520 PUSH1 0x1F DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 POP PUSH2 0x252B DUP3 PUSH2 0x24EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x254D DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2567 PUSH0 DUP4 ADD DUP7 PUSH2 0x20CF JUMP JUMPDEST PUSH2 0x2574 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x2581 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25BD PUSH1 0x14 DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 POP PUSH2 0x25C8 DUP3 PUSH2 0x2589 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25EA DUP2 PUSH2 0x25B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 GASPRICE RETURNDATASIZE 0xDA SLT 0xE5 SWAP14 DUP1 POP DUP10 0xCE 0xD7 DUP12 ISZERO LOG2 SWAP5 0xE1 MSTORE8 0xCE MOD 0xBC PREVRANDAO TLOAD PUSH24 0x987A3646D52885A264736F6C634300081A00330000000000 ",
							"sourceMap": "403:7740:8:-:0;;;2010:951;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2225:10;2203:4;2209:6;1675:5:4;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;2281:1:8::2;2252:31;;:17;:31;;;:70;;;;2320:1;2287:35;;:21;:35;;;2252:70;2248:113;;;2345:16;;;;;;;;;;;;;;2248:113;2405:17;2386:16;;:36;;;;;;;;;;;;;;;;;;2456:21;2433:20;;:44;;;;;;;;;;;;;;;;;;2558:220;;;;;;;;2603:4;2558:220;;;;2667:4;2558:220;;;;2735:4;2558:220;;::::0;2550:5:::2;:228;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:6;2799:16;:25;;;;2921:32;2927:10;2939:13;2921:5;;;:32;;:::i;:::-;2010:951:::0;;;;;403:7740;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:126::-;2967:7;3007:42;3000:5;2996:54;2985:65;;2930:126;;;:::o;3062:96::-;3099:7;3128:24;3146:5;3128:24;:::i;:::-;3117:35;;3062:96;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1323::-;3567:6;3575;3583;3591;3599;3648:3;3636:9;3627:7;3623:23;3619:33;3616:120;;;3655:79;;:::i;:::-;3616:120;3796:1;3785:9;3781:17;3775:24;3826:18;3818:6;3815:30;3812:117;;;3848:79;;:::i;:::-;3812:117;3953:74;4019:7;4010:6;3999:9;3995:22;3953:74;:::i;:::-;3943:84;;3746:291;4097:2;4086:9;4082:18;4076:25;4128:18;4120:6;4117:30;4114:117;;;4150:79;;:::i;:::-;4114:117;4255:74;4321:7;4312:6;4301:9;4297:22;4255:74;:::i;:::-;4245:84;;4047:292;4378:2;4404:64;4460:7;4451:6;4440:9;4436:22;4404:64;:::i;:::-;4394:74;;4349:129;4517:2;4543:64;4599:7;4590:6;4579:9;4575:22;4543:64;:::i;:::-;4533:74;;4488:129;4656:3;4683:64;4739:7;4730:6;4719:9;4715:22;4683:64;:::i;:::-;4673:74;;4627:130;3441:1323;;;;;;;;:::o;4770:99::-;4822:6;4856:5;4850:12;4840:22;;4770:99;;;:::o;4875:180::-;4923:77;4920:1;4913:88;5020:4;5017:1;5010:15;5044:4;5041:1;5034:15;5061:320;5105:6;5142:1;5136:4;5132:12;5122:22;;5189:1;5183:4;5179:12;5210:18;5200:81;;5266:4;5258:6;5254:17;5244:27;;5200:81;5328:2;5320:6;5317:14;5297:18;5294:38;5291:84;;5347:18;;:::i;:::-;5291:84;5112:269;5061:320;;;:::o;5387:141::-;5436:4;5459:3;5451:11;;5482:3;5479:1;5472:14;5516:4;5513:1;5503:18;5495:26;;5387:141;;;:::o;5534:93::-;5571:6;5618:2;5613;5606:5;5602:14;5598:23;5588:33;;5534:93;;;:::o;5633:107::-;5677:8;5727:5;5721:4;5717:16;5696:37;;5633:107;;;;:::o;5746:393::-;5815:6;5865:1;5853:10;5849:18;5888:97;5918:66;5907:9;5888:97;:::i;:::-;6006:39;6036:8;6025:9;6006:39;:::i;:::-;5994:51;;6078:4;6074:9;6067:5;6063:21;6054:30;;6127:4;6117:8;6113:19;6106:5;6103:30;6093:40;;5822:317;;5746:393;;;;;:::o;6145:60::-;6173:3;6194:5;6187:12;;6145:60;;;:::o;6211:142::-;6261:9;6294:53;6312:34;6321:24;6339:5;6321:24;:::i;:::-;6312:34;:::i;:::-;6294:53;:::i;:::-;6281:66;;6211:142;;;:::o;6359:75::-;6402:3;6423:5;6416:12;;6359:75;;;:::o;6440:269::-;6550:39;6581:7;6550:39;:::i;:::-;6611:91;6660:41;6684:16;6660:41;:::i;:::-;6652:6;6645:4;6639:11;6611:91;:::i;:::-;6605:4;6598:105;6516:193;6440:269;;;:::o;6715:73::-;6760:3;6715:73;:::o;6794:189::-;6871:32;;:::i;:::-;6912:65;6970:6;6962;6956:4;6912:65;:::i;:::-;6847:136;6794:189;;:::o;6989:186::-;7049:120;7066:3;7059:5;7056:14;7049:120;;;7120:39;7157:1;7150:5;7120:39;:::i;:::-;7093:1;7086:5;7082:13;7073:22;;7049:120;;;6989:186;;:::o;7181:543::-;7282:2;7277:3;7274:11;7271:446;;;7316:38;7348:5;7316:38;:::i;:::-;7400:29;7418:10;7400:29;:::i;:::-;7390:8;7386:44;7583:2;7571:10;7568:18;7565:49;;;7604:8;7589:23;;7565:49;7627:80;7683:22;7701:3;7683:22;:::i;:::-;7673:8;7669:37;7656:11;7627:80;:::i;:::-;7286:431;;7271:446;7181:543;;;:::o;7730:117::-;7784:8;7834:5;7828:4;7824:16;7803:37;;7730:117;;;;:::o;7853:169::-;7897:6;7930:51;7978:1;7974:6;7966:5;7963:1;7959:13;7930:51;:::i;:::-;7926:56;8011:4;8005;8001:15;7991:25;;7904:118;7853:169;;;;:::o;8027:295::-;8103:4;8249:29;8274:3;8268:4;8249:29;:::i;:::-;8241:37;;8311:3;8308:1;8304:11;8298:4;8295:21;8287:29;;8027:295;;;;:::o;8327:1395::-;8444:37;8477:3;8444:37;:::i;:::-;8546:18;8538:6;8535:30;8532:56;;;8568:18;;:::i;:::-;8532:56;8612:38;8644:4;8638:11;8612:38;:::i;:::-;8697:67;8757:6;8749;8743:4;8697:67;:::i;:::-;8791:1;8815:4;8802:17;;8847:2;8839:6;8836:14;8864:1;8859:618;;;;9521:1;9538:6;9535:77;;;9587:9;9582:3;9578:19;9572:26;9563:35;;9535:77;9638:67;9698:6;9691:5;9638:67;:::i;:::-;9632:4;9625:81;9494:222;8829:887;;8859:618;8911:4;8907:9;8899:6;8895:22;8945:37;8977:4;8945:37;:::i;:::-;9004:1;9018:208;9032:7;9029:1;9026:14;9018:208;;;9111:9;9106:3;9102:19;9096:26;9088:6;9081:42;9162:1;9154:6;9150:14;9140:24;;9209:2;9198:9;9194:18;9181:31;;9055:4;9052:1;9048:12;9043:17;;9018:208;;;9254:6;9245:7;9242:19;9239:179;;;9312:9;9307:3;9303:19;9297:26;9355:48;9397:4;9389:6;9385:17;9374:9;9355:48;:::i;:::-;9347:6;9340:64;9262:156;9239:179;9464:1;9460;9452:6;9448:14;9444:22;9438:4;9431:36;8866:611;;;8829:887;;8419:1303;;;8327:1395;;:::o;9728:118::-;9815:24;9833:5;9815:24;:::i;:::-;9810:3;9803:37;9728:118;;:::o;9852:222::-;9945:4;9983:2;9972:9;9968:18;9960:26;;9996:71;10064:1;10053:9;10049:17;10040:6;9996:71;:::i;:::-;9852:222;;;;:::o;10080:180::-;10128:77;10125:1;10118:88;10225:4;10222:1;10215:15;10249:4;10246:1;10239:15;10266:191;10306:3;10325:20;10343:1;10325:20;:::i;:::-;10320:25;;10359:20;10377:1;10359:20;:::i;:::-;10354:25;;10402:1;10399;10395:9;10388:16;;10423:3;10420:1;10417:10;10414:36;;;10430:18;;:::i;:::-;10414:36;10266:191;;;;:::o;10463:118::-;10550:24;10568:5;10550:24;:::i;:::-;10545:3;10538:37;10463:118;;:::o;10587:442::-;10736:4;10774:2;10763:9;10759:18;10751:26;;10787:71;10855:1;10844:9;10840:17;10831:6;10787:71;:::i;:::-;10868:72;10936:2;10925:9;10921:18;10912:6;10868:72;:::i;:::-;10950;11018:2;11007:9;11003:18;10994:6;10950:72;:::i;:::-;10587:442;;;;;;:::o;11035:222::-;11128:4;11166:2;11155:9;11151:18;11143:26;;11179:71;11247:1;11236:9;11232:17;11223:6;11179:71;:::i;:::-;11035:222;;;;:::o;403:7740:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAILY_RESET_1136": {
									"entryPoint": 3584,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_863": {
									"entryPoint": 4866,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 5999,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAndResetDailyEarnings_1600": {
									"entryPoint": 5565,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5004,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 5783,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1088": {
									"entryPoint": 4859,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": 5989,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 5910,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_375": {
									"entryPoint": 5433,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 4884,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 6848,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_971": {
									"entryPoint": 6462,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5236,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 6608,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 5139,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 6921,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_599": {
									"entryPoint": 4591,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 1533,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": 1696,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimWages_1462": {
									"entryPoint": 3591,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dailyEarningsCap_1133": {
									"entryPoint": 4853,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 1626,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@earningsToday_1152": {
									"entryPoint": 2686,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastEarningsReset_1148": {
									"entryPoint": 2628,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_518": {
									"entryPoint": 1389,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2443,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1609": {
									"entryPoint": 1784,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 1675,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payReward_1426": {
									"entryPoint": 2771,
									"id": 1426,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@rates_1131": {
									"entryPoint": 1652,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recordWage_1334": {
									"entryPoint": 3889,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1765,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signsHistoryContract_1140": {
									"entryPoint": 2707,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signsNFTContract_1138": {
									"entryPoint": 2649,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_527": {
									"entryPoint": 2484,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_545": {
									"entryPoint": 1567,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1659": {
									"entryPoint": 1576,
									"id": 1659,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_655": {
									"entryPoint": 4958,
									"id": 655,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4721,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1637": {
									"entryPoint": 2744,
									"id": 1637,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_582": {
									"entryPoint": 5531,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1618": {
									"entryPoint": 1634,
									"id": 1618,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateDailyEarningsCap_1502": {
									"entryPoint": 3816,
									"id": 1502,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateGameContract_1570": {
									"entryPoint": 1901,
									"id": 1570,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateRates_1485": {
									"entryPoint": 1802,
									"id": 1485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@wageBalance_1144": {
									"entryPoint": 1605,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_struct$_RewardRates_$1128_calldata_ptr": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_string_calldata_ptr": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptrt_address": {
									"entryPoint": 8306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_struct$_RewardRates_$1128_calldata_ptr": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9052,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9112,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9088,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_struct_to_storage_from_t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage": {
									"entryPoint": 8913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x00": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_calldatat_uint256": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 8132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_0": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 9348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_32_shift_0": {
									"entryPoint": 8762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"update_storage_value_offset_0t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offset_0t_uint256_to_t_uint256": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19036:9",
										"nodeType": "YulBlock",
										"src": "0:19036:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4382:263:9",
													"nodeType": "YulBlock",
													"src": "4382:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:9",
																"nodeType": "YulBlock",
																"src": "4428:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:9"
																			},
																			"nativeSrc": "4430:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:9"
																		},
																		"nativeSrc": "4430:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:9"
																		},
																		"nativeSrc": "4399:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:9"
																},
																"nativeSrc": "4395:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:9"
															},
															"nativeSrc": "4392:119:9",
															"nodeType": "YulIf",
															"src": "4392:119:9"
														},
														{
															"nativeSrc": "4521:117:9",
															"nodeType": "YulBlock",
															"src": "4521:117:9",
															"statements": [
																{
																	"nativeSrc": "4536:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:9"
																				},
																				"nativeSrc": "4596:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4575:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:9"
																		},
																		"nativeSrc": "4575:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4316:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:9",
														"nodeType": "YulTypedName",
														"src": "4352:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:9",
														"nodeType": "YulTypedName",
														"src": "4363:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:9",
														"nodeType": "YulTypedName",
														"src": "4375:6:9",
														"type": ""
													}
												],
												"src": "4316:329:9"
											},
											{
												"body": {
													"nativeSrc": "4694:43:9",
													"nodeType": "YulBlock",
													"src": "4694:43:9",
													"statements": [
														{
															"nativeSrc": "4704:27:9",
															"nodeType": "YulAssignment",
															"src": "4704:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:9"
																},
																"nativeSrc": "4715:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:9",
														"nodeType": "YulTypedName",
														"src": "4676:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:9",
														"nodeType": "YulTypedName",
														"src": "4686:7:9",
														"type": ""
													}
												],
												"src": "4651:86:9"
											},
											{
												"body": {
													"nativeSrc": "4804:51:9",
													"nodeType": "YulBlock",
													"src": "4804:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:9"
																		},
																		"nativeSrc": "4826:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:9"
																},
																"nativeSrc": "4814:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:9"
															},
															"nativeSrc": "4814:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:9",
														"nodeType": "YulTypedName",
														"src": "4792:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:9",
														"nodeType": "YulTypedName",
														"src": "4799:3:9",
														"type": ""
													}
												],
												"src": "4743:112:9"
											},
											{
												"body": {
													"nativeSrc": "4955:120:9",
													"nodeType": "YulBlock",
													"src": "4955:120:9",
													"statements": [
														{
															"nativeSrc": "4965:26:9",
															"nodeType": "YulAssignment",
															"src": "4965:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:9"
																},
																"nativeSrc": "4973:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:9"
																		},
																		"nativeSrc": "5050:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:9"
																},
																"nativeSrc": "5001:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:9"
															},
															"nativeSrc": "5001:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:9",
														"nodeType": "YulTypedName",
														"src": "4927:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:9",
														"nodeType": "YulTypedName",
														"src": "4939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:9",
														"nodeType": "YulTypedName",
														"src": "4950:4:9",
														"type": ""
													}
												],
												"src": "4861:214:9"
											},
											{
												"body": {
													"nativeSrc": "5235:288:9",
													"nodeType": "YulBlock",
													"src": "5235:288:9",
													"statements": [
														{
															"nativeSrc": "5245:26:9",
															"nodeType": "YulAssignment",
															"src": "5245:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5257:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5253:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:9"
																},
																"nativeSrc": "5253:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5253:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5245:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5245:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5325:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5325:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5338:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5338:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5349:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5349:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5334:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5334:3:9"
																		},
																		"nativeSrc": "5334:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5334:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5281:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5281:43:9"
																},
																"nativeSrc": "5281:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5281:71:9"
															},
															"nativeSrc": "5281:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5281:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5406:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5406:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5419:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5430:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5430:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:9"
																		},
																		"nativeSrc": "5415:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5415:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5362:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5362:43:9"
																},
																"nativeSrc": "5362:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5362:72:9"
															},
															"nativeSrc": "5362:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5362:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5488:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5488:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5501:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5501:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5512:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5512:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5497:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5497:3:9"
																		},
																		"nativeSrc": "5497:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5497:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5444:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5444:43:9"
																},
																"nativeSrc": "5444:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5444:72:9"
															},
															"nativeSrc": "5444:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5444:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5081:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5191:9:9",
														"nodeType": "YulTypedName",
														"src": "5191:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5203:6:9",
														"nodeType": "YulTypedName",
														"src": "5203:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5211:6:9",
														"nodeType": "YulTypedName",
														"src": "5211:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5219:6:9",
														"nodeType": "YulTypedName",
														"src": "5219:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5230:4:9",
														"nodeType": "YulTypedName",
														"src": "5230:4:9",
														"type": ""
													}
												],
												"src": "5081:442:9"
											},
											{
												"body": {
													"nativeSrc": "5618:28:9",
													"nodeType": "YulBlock",
													"src": "5618:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5635:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5635:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5638:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5638:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5628:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:9"
																},
																"nativeSrc": "5628:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5628:12:9"
															},
															"nativeSrc": "5628:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "5628:12:9"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nativeSrc": "5529:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5529:117:9"
											},
											{
												"body": {
													"nativeSrc": "5772:152:9",
													"nodeType": "YulBlock",
													"src": "5772:152:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5811:83:9",
																"nodeType": "YulBlock",
																"src": "5811:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nativeSrc": "5813:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5813:77:9"
																			},
																			"nativeSrc": "5813:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5813:79:9"
																		},
																		"nativeSrc": "5813:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5813:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "5793:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5793:3:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5798:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5798:6:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:9"
																		},
																		"nativeSrc": "5789:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5807:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5807:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5785:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5785:3:9"
																},
																"nativeSrc": "5785:25:9",
																"nodeType": "YulFunctionCall",
																"src": "5785:25:9"
															},
															"nativeSrc": "5782:112:9",
															"nodeType": "YulIf",
															"src": "5782:112:9"
														},
														{
															"nativeSrc": "5903:15:9",
															"nodeType": "YulAssignment",
															"src": "5903:15:9",
															"value": {
																"name": "offset",
																"nativeSrc": "5912:6:9",
																"nodeType": "YulIdentifier",
																"src": "5912:6:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5903:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5903:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_RewardRates_$1128_calldata_ptr",
												"nativeSrc": "5689:235:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5750:6:9",
														"nodeType": "YulTypedName",
														"src": "5750:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5758:3:9",
														"nodeType": "YulTypedName",
														"src": "5758:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5766:5:9",
														"nodeType": "YulTypedName",
														"src": "5766:5:9",
														"type": ""
													}
												],
												"src": "5689:235:9"
											},
											{
												"body": {
													"nativeSrc": "6027:294:9",
													"nodeType": "YulBlock",
													"src": "6027:294:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6073:83:9",
																"nodeType": "YulBlock",
																"src": "6073:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6075:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6075:77:9"
																			},
																			"nativeSrc": "6075:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6075:79:9"
																		},
																		"nativeSrc": "6075:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6075:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6048:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6048:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6057:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6044:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6044:3:9"
																		},
																		"nativeSrc": "6044:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6069:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6069:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6040:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:9"
																},
																"nativeSrc": "6040:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6040:32:9"
															},
															"nativeSrc": "6037:119:9",
															"nodeType": "YulIf",
															"src": "6037:119:9"
														},
														{
															"nativeSrc": "6166:148:9",
															"nodeType": "YulBlock",
															"src": "6166:148:9",
															"statements": [
																{
																	"nativeSrc": "6181:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6181:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6195:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6195:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6185:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6185:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6210:94:9",
																	"nodeType": "YulAssignment",
																	"src": "6210:94:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6276:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6276:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6287:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6287:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6272:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6272:3:9"
																				},
																				"nativeSrc": "6272:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6296:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6296:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_RewardRates_$1128_calldata_ptr",
																			"nativeSrc": "6220:51:9",
																			"nodeType": "YulIdentifier",
																			"src": "6220:51:9"
																		},
																		"nativeSrc": "6220:84:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6220:84:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6210:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6210:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_RewardRates_$1128_calldata_ptr",
												"nativeSrc": "5930:391:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5997:9:9",
														"nodeType": "YulTypedName",
														"src": "5997:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6008:7:9",
														"nodeType": "YulTypedName",
														"src": "6008:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6020:6:9",
														"nodeType": "YulTypedName",
														"src": "6020:6:9",
														"type": ""
													}
												],
												"src": "5930:391:9"
											},
											{
												"body": {
													"nativeSrc": "6416:28:9",
													"nodeType": "YulBlock",
													"src": "6416:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6433:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6433:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6436:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6436:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6426:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:9"
																},
																"nativeSrc": "6426:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6426:12:9"
															},
															"nativeSrc": "6426:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6426:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6327:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6327:117:9"
											},
											{
												"body": {
													"nativeSrc": "6539:28:9",
													"nodeType": "YulBlock",
													"src": "6539:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6556:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6556:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6559:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6559:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6549:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6549:6:9"
																},
																"nativeSrc": "6549:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6549:12:9"
															},
															"nativeSrc": "6549:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6549:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "6450:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6450:117:9"
											},
											{
												"body": {
													"nativeSrc": "6662:28:9",
													"nodeType": "YulBlock",
													"src": "6662:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6679:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6679:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6682:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6682:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6672:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:9"
																},
																"nativeSrc": "6672:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6672:12:9"
															},
															"nativeSrc": "6672:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6672:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6573:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6573:117:9"
											},
											{
												"body": {
													"nativeSrc": "6785:478:9",
													"nodeType": "YulBlock",
													"src": "6785:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6834:83:9",
																"nodeType": "YulBlock",
																"src": "6834:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6836:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6836:77:9"
																			},
																			"nativeSrc": "6836:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6836:79:9"
																		},
																		"nativeSrc": "6836:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6836:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6813:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6813:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6821:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6821:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6809:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6809:3:9"
																				},
																				"nativeSrc": "6809:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6809:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6828:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6828:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6805:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:9"
																		},
																		"nativeSrc": "6805:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6805:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:9"
																},
																"nativeSrc": "6798:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6798:35:9"
															},
															"nativeSrc": "6795:122:9",
															"nodeType": "YulIf",
															"src": "6795:122:9"
														},
														{
															"nativeSrc": "6926:30:9",
															"nodeType": "YulAssignment",
															"src": "6926:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6949:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6936:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6936:12:9"
																},
																"nativeSrc": "6936:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6936:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6926:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6999:83:9",
																"nodeType": "YulBlock",
																"src": "6999:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "7001:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7001:77:9"
																			},
																			"nativeSrc": "7001:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7001:79:9"
																		},
																		"nativeSrc": "7001:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7001:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6971:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6971:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6979:18:9",
																		"nodeType": "YulLiteral",
																		"src": "6979:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6968:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6968:2:9"
																},
																"nativeSrc": "6968:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6968:30:9"
															},
															"nativeSrc": "6965:117:9",
															"nodeType": "YulIf",
															"src": "6965:117:9"
														},
														{
															"nativeSrc": "7091:29:9",
															"nodeType": "YulAssignment",
															"src": "7091:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7107:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7107:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7115:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7115:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7103:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7103:3:9"
																},
																"nativeSrc": "7103:17:9",
																"nodeType": "YulFunctionCall",
																"src": "7103:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7091:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7091:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7174:83:9",
																"nodeType": "YulBlock",
																"src": "7174:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7176:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7176:77:9"
																			},
																			"nativeSrc": "7176:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7176:79:9"
																		},
																		"nativeSrc": "7176:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7176:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7139:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "7139:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7153:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7153:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7161:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7161:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7149:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7149:3:9"
																				},
																				"nativeSrc": "7149:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7149:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7135:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:9"
																		},
																		"nativeSrc": "7135:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7169:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7169:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7132:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7132:2:9"
																},
																"nativeSrc": "7132:41:9",
																"nodeType": "YulFunctionCall",
																"src": "7132:41:9"
															},
															"nativeSrc": "7129:128:9",
															"nodeType": "YulIf",
															"src": "7129:128:9"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "6710:553:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6752:6:9",
														"nodeType": "YulTypedName",
														"src": "6752:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6760:3:9",
														"nodeType": "YulTypedName",
														"src": "6760:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "6768:8:9",
														"nodeType": "YulTypedName",
														"src": "6768:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6778:6:9",
														"nodeType": "YulTypedName",
														"src": "6778:6:9",
														"type": ""
													}
												],
												"src": "6710:553:9"
											},
											{
												"body": {
													"nativeSrc": "7372:571:9",
													"nodeType": "YulBlock",
													"src": "7372:571:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7418:83:9",
																"nodeType": "YulBlock",
																"src": "7418:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7420:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7420:77:9"
																			},
																			"nativeSrc": "7420:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7420:79:9"
																		},
																		"nativeSrc": "7420:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7420:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7393:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7393:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7402:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7402:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7389:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:9"
																		},
																		"nativeSrc": "7389:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7389:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7414:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7414:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7385:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:9"
																},
																"nativeSrc": "7385:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7385:32:9"
															},
															"nativeSrc": "7382:119:9",
															"nodeType": "YulIf",
															"src": "7382:119:9"
														},
														{
															"nativeSrc": "7511:297:9",
															"nodeType": "YulBlock",
															"src": "7511:297:9",
															"statements": [
																{
																	"nativeSrc": "7526:45:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7526:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7557:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7557:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7568:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7568:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7553:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7553:3:9"
																				},
																				"nativeSrc": "7553:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7553:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7540:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "7540:12:9"
																		},
																		"nativeSrc": "7540:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7530:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7530:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7618:83:9",
																		"nodeType": "YulBlock",
																		"src": "7618:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7620:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "7620:77:9"
																					},
																					"nativeSrc": "7620:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7620:79:9"
																				},
																				"nativeSrc": "7620:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7620:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7590:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7590:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7598:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7598:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7587:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7587:2:9"
																		},
																		"nativeSrc": "7587:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7587:30:9"
																	},
																	"nativeSrc": "7584:117:9",
																	"nodeType": "YulIf",
																	"src": "7584:117:9"
																},
																{
																	"nativeSrc": "7715:83:9",
																	"nodeType": "YulAssignment",
																	"src": "7715:83:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7770:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7770:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7781:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7781:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7766:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7766:3:9"
																				},
																				"nativeSrc": "7766:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7766:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7790:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7790:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "7733:32:9",
																			"nodeType": "YulIdentifier",
																			"src": "7733:32:9"
																		},
																		"nativeSrc": "7733:65:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7733:65:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7715:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7715:6:9"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "7723:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7723:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7818:118:9",
															"nodeType": "YulBlock",
															"src": "7818:118:9",
															"statements": [
																{
																	"nativeSrc": "7833:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7833:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7847:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7847:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7837:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7837:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7863:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7863:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7898:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7898:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7909:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7909:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7894:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7894:3:9"
																				},
																				"nativeSrc": "7894:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7894:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7918:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7918:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7873:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7873:20:9"
																		},
																		"nativeSrc": "7873:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7873:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7863:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7863:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_address",
												"nativeSrc": "7269:674:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7326:9:9",
														"nodeType": "YulTypedName",
														"src": "7326:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7337:7:9",
														"nodeType": "YulTypedName",
														"src": "7337:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7349:6:9",
														"nodeType": "YulTypedName",
														"src": "7349:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7357:6:9",
														"nodeType": "YulTypedName",
														"src": "7357:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7365:6:9",
														"nodeType": "YulTypedName",
														"src": "7365:6:9",
														"type": ""
													}
												],
												"src": "7269:674:9"
											},
											{
												"body": {
													"nativeSrc": "8014:53:9",
													"nodeType": "YulBlock",
													"src": "8014:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8031:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8031:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8054:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8054:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8036:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8036:17:9"
																		},
																		"nativeSrc": "8036:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8036:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8024:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8024:6:9"
																},
																"nativeSrc": "8024:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8024:37:9"
															},
															"nativeSrc": "8024:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8024:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7949:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8002:5:9",
														"nodeType": "YulTypedName",
														"src": "8002:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8009:3:9",
														"nodeType": "YulTypedName",
														"src": "8009:3:9",
														"type": ""
													}
												],
												"src": "7949:118:9"
											},
											{
												"body": {
													"nativeSrc": "8171:124:9",
													"nodeType": "YulBlock",
													"src": "8171:124:9",
													"statements": [
														{
															"nativeSrc": "8181:26:9",
															"nodeType": "YulAssignment",
															"src": "8181:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8193:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8193:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8204:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8204:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8189:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:9"
																},
																"nativeSrc": "8189:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8189:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8181:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8181:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8261:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8261:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8274:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8274:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8285:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8285:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8270:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8270:3:9"
																		},
																		"nativeSrc": "8270:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8217:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8217:43:9"
																},
																"nativeSrc": "8217:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8217:71:9"
															},
															"nativeSrc": "8217:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8217:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8073:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8143:9:9",
														"nodeType": "YulTypedName",
														"src": "8143:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8155:6:9",
														"nodeType": "YulTypedName",
														"src": "8155:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8166:4:9",
														"nodeType": "YulTypedName",
														"src": "8166:4:9",
														"type": ""
													}
												],
												"src": "8073:222:9"
											},
											{
												"body": {
													"nativeSrc": "8404:571:9",
													"nodeType": "YulBlock",
													"src": "8404:571:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8450:83:9",
																"nodeType": "YulBlock",
																"src": "8450:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8452:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8452:77:9"
																			},
																			"nativeSrc": "8452:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8452:79:9"
																		},
																		"nativeSrc": "8452:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8452:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8425:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8425:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8434:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8434:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8421:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:9"
																		},
																		"nativeSrc": "8421:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8421:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8446:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8417:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8417:3:9"
																},
																"nativeSrc": "8417:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8417:32:9"
															},
															"nativeSrc": "8414:119:9",
															"nodeType": "YulIf",
															"src": "8414:119:9"
														},
														{
															"nativeSrc": "8543:117:9",
															"nodeType": "YulBlock",
															"src": "8543:117:9",
															"statements": [
																{
																	"nativeSrc": "8558:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8558:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8572:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8572:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8562:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8562:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8587:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8587:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8622:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8622:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8633:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8633:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8618:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8618:3:9"
																				},
																				"nativeSrc": "8618:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8618:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8642:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8642:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8597:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8597:20:9"
																		},
																		"nativeSrc": "8597:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8597:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8587:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8587:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8670:298:9",
															"nodeType": "YulBlock",
															"src": "8670:298:9",
															"statements": [
																{
																	"nativeSrc": "8685:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8685:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8716:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8716:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8727:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8727:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8712:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8712:3:9"
																				},
																				"nativeSrc": "8712:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8712:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8699:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "8699:12:9"
																		},
																		"nativeSrc": "8699:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8699:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8689:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8689:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8778:83:9",
																		"nodeType": "YulBlock",
																		"src": "8778:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8780:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "8780:77:9"
																					},
																					"nativeSrc": "8780:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8780:79:9"
																				},
																				"nativeSrc": "8780:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8780:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8750:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8758:18:9",
																				"nodeType": "YulLiteral",
																				"src": "8758:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8747:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8747:2:9"
																		},
																		"nativeSrc": "8747:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8747:30:9"
																	},
																	"nativeSrc": "8744:117:9",
																	"nodeType": "YulIf",
																	"src": "8744:117:9"
																},
																{
																	"nativeSrc": "8875:83:9",
																	"nodeType": "YulAssignment",
																	"src": "8875:83:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8930:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8930:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8941:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8941:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8926:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8926:3:9"
																				},
																				"nativeSrc": "8926:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8926:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8950:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8950:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "8893:32:9",
																			"nodeType": "YulIdentifier",
																			"src": "8893:32:9"
																		},
																		"nativeSrc": "8893:65:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:65:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8875:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8875:6:9"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "8883:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8883:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_calldata_ptr",
												"nativeSrc": "8301:674:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8358:9:9",
														"nodeType": "YulTypedName",
														"src": "8358:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8369:7:9",
														"nodeType": "YulTypedName",
														"src": "8369:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8381:6:9",
														"nodeType": "YulTypedName",
														"src": "8381:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8389:6:9",
														"nodeType": "YulTypedName",
														"src": "8389:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8397:6:9",
														"nodeType": "YulTypedName",
														"src": "8397:6:9",
														"type": ""
													}
												],
												"src": "8301:674:9"
											},
											{
												"body": {
													"nativeSrc": "9047:263:9",
													"nodeType": "YulBlock",
													"src": "9047:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9093:83:9",
																"nodeType": "YulBlock",
																"src": "9093:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9095:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9095:77:9"
																			},
																			"nativeSrc": "9095:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9095:79:9"
																		},
																		"nativeSrc": "9095:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9095:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9068:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9068:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9077:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9077:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9064:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:9"
																		},
																		"nativeSrc": "9064:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9064:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9089:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9089:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9060:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9060:3:9"
																},
																"nativeSrc": "9060:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9060:32:9"
															},
															"nativeSrc": "9057:119:9",
															"nodeType": "YulIf",
															"src": "9057:119:9"
														},
														{
															"nativeSrc": "9186:117:9",
															"nodeType": "YulBlock",
															"src": "9186:117:9",
															"statements": [
																{
																	"nativeSrc": "9201:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9201:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9215:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9215:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9205:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9205:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9261:3:9"
																				},
																				"nativeSrc": "9261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9240:20:9"
																		},
																		"nativeSrc": "9240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8981:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9017:9:9",
														"nodeType": "YulTypedName",
														"src": "9017:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9028:7:9",
														"nodeType": "YulTypedName",
														"src": "9028:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9040:6:9",
														"nodeType": "YulTypedName",
														"src": "9040:6:9",
														"type": ""
													}
												],
												"src": "8981:329:9"
											},
											{
												"body": {
													"nativeSrc": "9399:391:9",
													"nodeType": "YulBlock",
													"src": "9399:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9445:83:9",
																"nodeType": "YulBlock",
																"src": "9445:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9447:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9447:77:9"
																			},
																			"nativeSrc": "9447:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9447:79:9"
																		},
																		"nativeSrc": "9447:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9447:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9420:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9420:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9429:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9429:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9416:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:9"
																		},
																		"nativeSrc": "9416:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9441:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9412:3:9"
																},
																"nativeSrc": "9412:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9412:32:9"
															},
															"nativeSrc": "9409:119:9",
															"nodeType": "YulIf",
															"src": "9409:119:9"
														},
														{
															"nativeSrc": "9538:117:9",
															"nodeType": "YulBlock",
															"src": "9538:117:9",
															"statements": [
																{
																	"nativeSrc": "9553:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9553:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9567:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9567:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9557:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9557:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9582:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9582:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9617:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9617:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9628:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9628:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9613:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9613:3:9"
																				},
																				"nativeSrc": "9613:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9613:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9637:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9637:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9592:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9592:20:9"
																		},
																		"nativeSrc": "9592:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9592:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9582:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9582:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9665:118:9",
															"nodeType": "YulBlock",
															"src": "9665:118:9",
															"statements": [
																{
																	"nativeSrc": "9680:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9680:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9694:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9694:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9684:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9684:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9710:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9710:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9745:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9745:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9756:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9756:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9741:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9741:3:9"
																				},
																				"nativeSrc": "9741:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9741:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9765:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9765:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9720:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9720:20:9"
																		},
																		"nativeSrc": "9720:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9710:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9710:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9316:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9361:9:9",
														"nodeType": "YulTypedName",
														"src": "9361:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9372:7:9",
														"nodeType": "YulTypedName",
														"src": "9372:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9384:6:9",
														"nodeType": "YulTypedName",
														"src": "9384:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9392:6:9",
														"nodeType": "YulTypedName",
														"src": "9392:6:9",
														"type": ""
													}
												],
												"src": "9316:474:9"
											},
											{
												"body": {
													"nativeSrc": "9824:152:9",
													"nodeType": "YulBlock",
													"src": "9824:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9841:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9841:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9844:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9844:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9834:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9834:6:9"
																},
																"nativeSrc": "9834:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9834:88:9"
															},
															"nativeSrc": "9834:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9834:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9938:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9938:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9941:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9941:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9931:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9931:6:9"
																},
																"nativeSrc": "9931:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9931:15:9"
															},
															"nativeSrc": "9931:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9931:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9962:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9962:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9965:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9965:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9955:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9955:6:9"
																},
																"nativeSrc": "9955:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9955:15:9"
															},
															"nativeSrc": "9955:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9955:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9796:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9796:180:9"
											},
											{
												"body": {
													"nativeSrc": "10033:269:9",
													"nodeType": "YulBlock",
													"src": "10033:269:9",
													"statements": [
														{
															"nativeSrc": "10043:22:9",
															"nodeType": "YulAssignment",
															"src": "10043:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10057:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10057:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10063:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10063:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10053:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10053:3:9"
																},
																"nativeSrc": "10053:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10053:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10043:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:9"
																}
															]
														},
														{
															"nativeSrc": "10074:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10074:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10104:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10104:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10110:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10110:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10100:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10100:3:9"
																},
																"nativeSrc": "10100:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10100:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10078:18:9",
																	"nodeType": "YulTypedName",
																	"src": "10078:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10151:51:9",
																"nodeType": "YulBlock",
																"src": "10151:51:9",
																"statements": [
																	{
																		"nativeSrc": "10165:27:9",
																		"nodeType": "YulAssignment",
																		"src": "10165:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10179:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10179:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10187:4:9",
																					"nodeType": "YulLiteral",
																					"src": "10187:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10175:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10175:3:9"
																			},
																			"nativeSrc": "10175:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10175:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10165:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10165:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10131:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10131:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10124:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10124:6:9"
																},
																"nativeSrc": "10124:26:9",
																"nodeType": "YulFunctionCall",
																"src": "10124:26:9"
															},
															"nativeSrc": "10121:81:9",
															"nodeType": "YulIf",
															"src": "10121:81:9"
														},
														{
															"body": {
																"nativeSrc": "10254:42:9",
																"nodeType": "YulBlock",
																"src": "10254:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10268:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10268:16:9"
																			},
																			"nativeSrc": "10268:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10268:18:9"
																		},
																		"nativeSrc": "10268:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10268:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10218:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10218:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10241:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10241:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10249:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10249:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10238:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10238:2:9"
																		},
																		"nativeSrc": "10238:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10238:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10215:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10215:2:9"
																},
																"nativeSrc": "10215:38:9",
																"nodeType": "YulFunctionCall",
																"src": "10215:38:9"
															},
															"nativeSrc": "10212:84:9",
															"nodeType": "YulIf",
															"src": "10212:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9982:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10017:4:9",
														"nodeType": "YulTypedName",
														"src": "10017:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10026:6:9",
														"nodeType": "YulTypedName",
														"src": "10026:6:9",
														"type": ""
													}
												],
												"src": "9982:320:9"
											},
											{
												"body": {
													"nativeSrc": "10336:152:9",
													"nodeType": "YulBlock",
													"src": "10336:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10353:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10353:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10356:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10356:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10346:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10346:6:9"
																},
																"nativeSrc": "10346:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10346:88:9"
															},
															"nativeSrc": "10346:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10346:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10450:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10450:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10453:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10453:4:9",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10443:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:9"
																},
																"nativeSrc": "10443:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10443:15:9"
															},
															"nativeSrc": "10443:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10443:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10474:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10474:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10477:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10477:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10467:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:9"
																},
																"nativeSrc": "10467:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10467:15:9"
															},
															"nativeSrc": "10467:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10467:15:9"
														}
													]
												},
												"name": "panic_error_0x00",
												"nativeSrc": "10308:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10308:180:9"
											},
											{
												"body": {
													"nativeSrc": "10551:129:9",
													"nodeType": "YulBlock",
													"src": "10551:129:9",
													"statements": [
														{
															"nativeSrc": "10562:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10562:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "10588:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10588:3:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10575:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "10575:12:9"
																},
																"nativeSrc": "10575:17:9",
																"nodeType": "YulFunctionCall",
																"src": "10575:17:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10566:5:9",
																	"nodeType": "YulTypedName",
																	"src": "10566:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10628:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10628:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10601:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "10601:26:9"
																},
																"nativeSrc": "10601:33:9",
																"nodeType": "YulFunctionCall",
																"src": "10601:33:9"
															},
															"nativeSrc": "10601:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "10601:33:9"
														},
														{
															"nativeSrc": "10644:29:9",
															"nodeType": "YulAssignment",
															"src": "10644:29:9",
															"value": {
																"name": "value",
																"nativeSrc": "10668:5:9",
																"nodeType": "YulIdentifier",
																"src": "10668:5:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "10644:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "10644:11:9"
																}
															]
														}
													]
												},
												"name": "read_from_calldatat_uint256",
												"nativeSrc": "10494:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10531:3:9",
														"nodeType": "YulTypedName",
														"src": "10531:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "10539:11:9",
														"nodeType": "YulTypedName",
														"src": "10539:11:9",
														"type": ""
													}
												],
												"src": "10494:186:9"
											},
											{
												"body": {
													"nativeSrc": "10727:51:9",
													"nodeType": "YulBlock",
													"src": "10727:51:9",
													"statements": [
														{
															"nativeSrc": "10737:34:9",
															"nodeType": "YulAssignment",
															"src": "10737:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10762:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10762:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10765:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10765:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "10758:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10758:3:9"
																},
																"nativeSrc": "10758:13:9",
																"nodeType": "YulFunctionCall",
																"src": "10758:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10737:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "10737:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_0",
												"nativeSrc": "10686:92:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10708:5:9",
														"nodeType": "YulTypedName",
														"src": "10708:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10718:8:9",
														"nodeType": "YulTypedName",
														"src": "10718:8:9",
														"type": ""
													}
												],
												"src": "10686:92:9"
											},
											{
												"body": {
													"nativeSrc": "10849:225:9",
													"nodeType": "YulBlock",
													"src": "10849:225:9",
													"statements": [
														{
															"nativeSrc": "10859:78:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10859:78:9",
															"value": {
																"kind": "number",
																"nativeSrc": "10871:66:9",
																"nodeType": "YulLiteral",
																"src": "10871:66:9",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "10863:4:9",
																	"nodeType": "YulTypedName",
																	"src": "10863:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10946:34:9",
															"nodeType": "YulAssignment",
															"src": "10946:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "toInsert",
																		"nativeSrc": "10971:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10971:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_0",
																	"nativeSrc": "10958:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "10958:12:9"
																},
																"nativeSrc": "10958:22:9",
																"nodeType": "YulFunctionCall",
																"src": "10958:22:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "10946:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "10946:8:9"
																}
															]
														},
														{
															"nativeSrc": "10989:30:9",
															"nodeType": "YulAssignment",
															"src": "10989:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11002:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11002:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "11013:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11013:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11009:3:9"
																		},
																		"nativeSrc": "11009:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11009:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10998:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10998:3:9"
																},
																"nativeSrc": "10998:21:9",
																"nodeType": "YulFunctionCall",
																"src": "10998:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10989:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10989:5:9"
																}
															]
														},
														{
															"nativeSrc": "11028:40:9",
															"nodeType": "YulAssignment",
															"src": "11028:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11041:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11041:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "11052:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "11052:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "11062:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11062:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11048:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11048:3:9"
																		},
																		"nativeSrc": "11048:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11048:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11038:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11038:2:9"
																},
																"nativeSrc": "11038:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11038:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11028:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11028:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_32_shift_0",
												"nativeSrc": "10784:290:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10822:5:9",
														"nodeType": "YulTypedName",
														"src": "10822:5:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "10829:8:9",
														"nodeType": "YulTypedName",
														"src": "10829:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10842:6:9",
														"nodeType": "YulTypedName",
														"src": "10842:6:9",
														"type": ""
													}
												],
												"src": "10784:290:9"
											},
											{
												"body": {
													"nativeSrc": "11112:28:9",
													"nodeType": "YulBlock",
													"src": "11112:28:9",
													"statements": [
														{
															"nativeSrc": "11122:12:9",
															"nodeType": "YulAssignment",
															"src": "11122:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "11129:5:9",
																"nodeType": "YulIdentifier",
																"src": "11129:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11122:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11122:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11080:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11098:5:9",
														"nodeType": "YulTypedName",
														"src": "11098:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11108:3:9",
														"nodeType": "YulTypedName",
														"src": "11108:3:9",
														"type": ""
													}
												],
												"src": "11080:60:9"
											},
											{
												"body": {
													"nativeSrc": "11206:82:9",
													"nodeType": "YulBlock",
													"src": "11206:82:9",
													"statements": [
														{
															"nativeSrc": "11216:66:9",
															"nodeType": "YulAssignment",
															"src": "11216:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11274:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11274:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11256:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "11256:17:9"
																				},
																				"nativeSrc": "11256:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11256:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11247:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "11247:8:9"
																		},
																		"nativeSrc": "11247:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11247:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11229:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11229:17:9"
																},
																"nativeSrc": "11229:53:9",
																"nodeType": "YulFunctionCall",
																"src": "11229:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11216:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "11216:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "11146:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11186:5:9",
														"nodeType": "YulTypedName",
														"src": "11186:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11196:9:9",
														"nodeType": "YulTypedName",
														"src": "11196:9:9",
														"type": ""
													}
												],
												"src": "11146:142:9"
											},
											{
												"body": {
													"nativeSrc": "11341:28:9",
													"nodeType": "YulBlock",
													"src": "11341:28:9",
													"statements": [
														{
															"nativeSrc": "11351:12:9",
															"nodeType": "YulAssignment",
															"src": "11351:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "11358:5:9",
																"nodeType": "YulIdentifier",
																"src": "11358:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11351:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11351:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "11294:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11327:5:9",
														"nodeType": "YulTypedName",
														"src": "11327:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11337:3:9",
														"nodeType": "YulTypedName",
														"src": "11337:3:9",
														"type": ""
													}
												],
												"src": "11294:75:9"
											},
											{
												"body": {
													"nativeSrc": "11451:186:9",
													"nodeType": "YulBlock",
													"src": "11451:186:9",
													"statements": [
														{
															"nativeSrc": "11461:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11461:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "11516:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "11516:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "11485:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "11485:30:9"
																},
																"nativeSrc": "11485:39:9",
																"nodeType": "YulFunctionCall",
																"src": "11485:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "11465:16:9",
																	"nodeType": "YulTypedName",
																	"src": "11465:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11540:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11540:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11581:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "11581:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11575:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "11575:5:9"
																				},
																				"nativeSrc": "11575:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11575:11:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "11612:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "11612:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "11588:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "11588:23:9"
																				},
																				"nativeSrc": "11588:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11588:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_32_shift_0",
																			"nativeSrc": "11546:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "11546:28:9"
																		},
																		"nativeSrc": "11546:84:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11546:84:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "11533:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11533:6:9"
																},
																"nativeSrc": "11533:98:9",
																"nodeType": "YulFunctionCall",
																"src": "11533:98:9"
															},
															"nativeSrc": "11533:98:9",
															"nodeType": "YulExpressionStatement",
															"src": "11533:98:9"
														}
													]
												},
												"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
												"nativeSrc": "11375:262:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11436:4:9",
														"nodeType": "YulTypedName",
														"src": "11436:4:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "11442:7:9",
														"nodeType": "YulTypedName",
														"src": "11442:7:9",
														"type": ""
													}
												],
												"src": "11375:262:9"
											},
											{
												"body": {
													"nativeSrc": "11773:1021:9",
													"nodeType": "YulBlock",
													"src": "11773:1021:9",
													"statements": [
														{
															"nativeSrc": "11784:327:9",
															"nodeType": "YulBlock",
															"src": "11784:327:9",
															"statements": [
																{
																	"nativeSrc": "11799:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11799:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "11821:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11821:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11827:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11827:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11817:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11817:3:9"
																		},
																		"nativeSrc": "11817:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11817:12:9"
																	},
																	"variables": [
																		{
																			"name": "memberSlot",
																			"nativeSrc": "11803:10:9",
																			"nodeType": "YulTypedName",
																			"src": "11803:10:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11842:33:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11842:33:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11866:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11866:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11873:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11873:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11862:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:9"
																		},
																		"nativeSrc": "11862:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11862:13:9"
																	},
																	"variables": [
																		{
																			"name": "memberSrcPtr",
																			"nativeSrc": "11846:12:9",
																			"nodeType": "YulTypedName",
																			"src": "11846:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11889:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11889:46:9",
																	"value": {
																		"name": "memberSrcPtr",
																		"nativeSrc": "11923:12:9",
																		"nodeType": "YulIdentifier",
																		"src": "11923:12:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "11893:13:9",
																			"nodeType": "YulTypedName",
																			"src": "11893:13:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11949:59:9",
																	"nodeType": "YulAssignment",
																	"src": "11949:59:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "11994:13:9",
																				"nodeType": "YulIdentifier",
																				"src": "11994:13:9"
																			}
																		],
																		"functionName": {
																			"name": "read_from_calldatat_uint256",
																			"nativeSrc": "11966:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "11966:27:9"
																		},
																		"nativeSrc": "11966:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11966:42:9"
																	},
																	"variableNames": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "11949:13:9",
																			"nodeType": "YulIdentifier",
																			"src": "11949:13:9"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberSlot",
																				"nativeSrc": "12074:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "12074:10:9"
																			},
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "12086:13:9",
																				"nodeType": "YulIdentifier",
																				"src": "12086:13:9"
																			}
																		],
																		"functionName": {
																			"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
																			"nativeSrc": "12022:51:9",
																			"nodeType": "YulIdentifier",
																			"src": "12022:51:9"
																		},
																		"nativeSrc": "12022:78:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12022:78:9"
																	},
																	"nativeSrc": "12022:78:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "12022:78:9"
																}
															]
														},
														{
															"nativeSrc": "12121:328:9",
															"nodeType": "YulBlock",
															"src": "12121:328:9",
															"statements": [
																{
																	"nativeSrc": "12136:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12136:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "12158:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12158:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12164:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12164:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12154:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12154:3:9"
																		},
																		"nativeSrc": "12154:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12154:12:9"
																	},
																	"variables": [
																		{
																			"name": "memberSlot",
																			"nativeSrc": "12140:10:9",
																			"nodeType": "YulTypedName",
																			"src": "12140:10:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12179:34:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12179:34:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12203:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12203:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12210:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12199:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12199:3:9"
																		},
																		"nativeSrc": "12199:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12199:14:9"
																	},
																	"variables": [
																		{
																			"name": "memberSrcPtr",
																			"nativeSrc": "12183:12:9",
																			"nodeType": "YulTypedName",
																			"src": "12183:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12227:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12227:46:9",
																	"value": {
																		"name": "memberSrcPtr",
																		"nativeSrc": "12261:12:9",
																		"nodeType": "YulIdentifier",
																		"src": "12261:12:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "12231:13:9",
																			"nodeType": "YulTypedName",
																			"src": "12231:13:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12287:59:9",
																	"nodeType": "YulAssignment",
																	"src": "12287:59:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "12332:13:9",
																				"nodeType": "YulIdentifier",
																				"src": "12332:13:9"
																			}
																		],
																		"functionName": {
																			"name": "read_from_calldatat_uint256",
																			"nativeSrc": "12304:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "12304:27:9"
																		},
																		"nativeSrc": "12304:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12304:42:9"
																	},
																	"variableNames": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "12287:13:9",
																			"nodeType": "YulIdentifier",
																			"src": "12287:13:9"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberSlot",
																				"nativeSrc": "12412:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "12412:10:9"
																			},
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "12424:13:9",
																				"nodeType": "YulIdentifier",
																				"src": "12424:13:9"
																			}
																		],
																		"functionName": {
																			"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
																			"nativeSrc": "12360:51:9",
																			"nodeType": "YulIdentifier",
																			"src": "12360:51:9"
																		},
																		"nativeSrc": "12360:78:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12360:78:9"
																	},
																	"nativeSrc": "12360:78:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "12360:78:9"
																}
															]
														},
														{
															"nativeSrc": "12459:328:9",
															"nodeType": "YulBlock",
															"src": "12459:328:9",
															"statements": [
																{
																	"nativeSrc": "12474:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12474:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "12496:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12496:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12502:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12502:1:9",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12492:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:9"
																		},
																		"nativeSrc": "12492:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12492:12:9"
																	},
																	"variables": [
																		{
																			"name": "memberSlot",
																			"nativeSrc": "12478:10:9",
																			"nodeType": "YulTypedName",
																			"src": "12478:10:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12517:34:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12517:34:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12541:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12541:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12548:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12548:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12537:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12537:3:9"
																		},
																		"nativeSrc": "12537:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12537:14:9"
																	},
																	"variables": [
																		{
																			"name": "memberSrcPtr",
																			"nativeSrc": "12521:12:9",
																			"nodeType": "YulTypedName",
																			"src": "12521:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12565:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12565:46:9",
																	"value": {
																		"name": "memberSrcPtr",
																		"nativeSrc": "12599:12:9",
																		"nodeType": "YulIdentifier",
																		"src": "12599:12:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "12569:13:9",
																			"nodeType": "YulTypedName",
																			"src": "12569:13:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12625:59:9",
																	"nodeType": "YulAssignment",
																	"src": "12625:59:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "12670:13:9",
																				"nodeType": "YulIdentifier",
																				"src": "12670:13:9"
																			}
																		],
																		"functionName": {
																			"name": "read_from_calldatat_uint256",
																			"nativeSrc": "12642:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "12642:27:9"
																		},
																		"nativeSrc": "12642:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12642:42:9"
																	},
																	"variableNames": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "12625:13:9",
																			"nodeType": "YulIdentifier",
																			"src": "12625:13:9"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberSlot",
																				"nativeSrc": "12750:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "12750:10:9"
																			},
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "12762:13:9",
																				"nodeType": "YulIdentifier",
																				"src": "12762:13:9"
																			}
																		],
																		"functionName": {
																			"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
																			"nativeSrc": "12698:51:9",
																			"nodeType": "YulIdentifier",
																			"src": "12698:51:9"
																		},
																		"nativeSrc": "12698:78:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12698:78:9"
																	},
																	"nativeSrc": "12698:78:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "12698:78:9"
																}
															]
														}
													]
												},
												"name": "copy_struct_to_storage_from_t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage",
												"nativeSrc": "11643:1151:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11760:4:9",
														"nodeType": "YulTypedName",
														"src": "11760:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11766:5:9",
														"nodeType": "YulTypedName",
														"src": "11766:5:9",
														"type": ""
													}
												],
												"src": "11643:1151:9"
											},
											{
												"body": {
													"nativeSrc": "12933:139:9",
													"nodeType": "YulBlock",
													"src": "12933:139:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13052:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13052:4:9"
																	},
																	{
																		"name": "value_0",
																		"nativeSrc": "13058:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "13058:7:9"
																	}
																],
																"functionName": {
																	"name": "copy_struct_to_storage_from_t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage",
																	"nativeSrc": "12944:107:9",
																	"nodeType": "YulIdentifier",
																	"src": "12944:107:9"
																},
																"nativeSrc": "12944:122:9",
																"nodeType": "YulFunctionCall",
																"src": "12944:122:9"
															},
															"nativeSrc": "12944:122:9",
															"nodeType": "YulExpressionStatement",
															"src": "12944:122:9"
														}
													]
												},
												"name": "update_storage_value_offset_0t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage",
												"nativeSrc": "12800:272:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12918:4:9",
														"nodeType": "YulTypedName",
														"src": "12918:4:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "12924:7:9",
														"nodeType": "YulTypedName",
														"src": "12924:7:9",
														"type": ""
													}
												],
												"src": "12800:272:9"
											},
											{
												"body": {
													"nativeSrc": "13191:34:9",
													"nodeType": "YulBlock",
													"src": "13191:34:9",
													"statements": [
														{
															"nativeSrc": "13201:18:9",
															"nodeType": "YulAssignment",
															"src": "13201:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "13216:3:9",
																"nodeType": "YulIdentifier",
																"src": "13216:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13201:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "13201:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13078:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13163:3:9",
														"nodeType": "YulTypedName",
														"src": "13163:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13168:6:9",
														"nodeType": "YulTypedName",
														"src": "13168:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13179:11:9",
														"nodeType": "YulTypedName",
														"src": "13179:11:9",
														"type": ""
													}
												],
												"src": "13078:147:9"
											},
											{
												"body": {
													"nativeSrc": "13295:84:9",
													"nodeType": "YulBlock",
													"src": "13295:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13319:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13319:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "13324:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13324:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13329:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13329:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "13306:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "13306:12:9"
																},
																"nativeSrc": "13306:30:9",
																"nodeType": "YulFunctionCall",
																"src": "13306:30:9"
															},
															"nativeSrc": "13306:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "13306:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13356:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "13356:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13361:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13361:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13352:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:9"
																		},
																		"nativeSrc": "13352:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13352:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13370:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13370:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13345:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13345:6:9"
																},
																"nativeSrc": "13345:27:9",
																"nodeType": "YulFunctionCall",
																"src": "13345:27:9"
															},
															"nativeSrc": "13345:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "13345:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "13231:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13277:3:9",
														"nodeType": "YulTypedName",
														"src": "13277:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13282:3:9",
														"nodeType": "YulTypedName",
														"src": "13282:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13287:6:9",
														"nodeType": "YulTypedName",
														"src": "13287:6:9",
														"type": ""
													}
												],
												"src": "13231:148:9"
											},
											{
												"body": {
													"nativeSrc": "13525:209:9",
													"nodeType": "YulBlock",
													"src": "13525:209:9",
													"statements": [
														{
															"nativeSrc": "13535:95:9",
															"nodeType": "YulAssignment",
															"src": "13535:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13618:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13618:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13623:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13623:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13542:75:9",
																	"nodeType": "YulIdentifier",
																	"src": "13542:75:9"
																},
																"nativeSrc": "13542:88:9",
																"nodeType": "YulFunctionCall",
																"src": "13542:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13535:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13535:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13677:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13677:5:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13684:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13684:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13689:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13689:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "13640:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "13640:36:9"
																},
																"nativeSrc": "13640:56:9",
																"nodeType": "YulFunctionCall",
																"src": "13640:56:9"
															},
															"nativeSrc": "13640:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "13640:56:9"
														},
														{
															"nativeSrc": "13705:23:9",
															"nodeType": "YulAssignment",
															"src": "13705:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13716:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13716:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13721:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13721:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13712:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13712:3:9"
																},
																"nativeSrc": "13712:16:9",
																"nodeType": "YulFunctionCall",
																"src": "13712:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13705:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13705:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13407:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13498:5:9",
														"nodeType": "YulTypedName",
														"src": "13498:5:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13505:6:9",
														"nodeType": "YulTypedName",
														"src": "13505:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13513:3:9",
														"nodeType": "YulTypedName",
														"src": "13513:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13521:3:9",
														"nodeType": "YulTypedName",
														"src": "13521:3:9",
														"type": ""
													}
												],
												"src": "13407:327:9"
											},
											{
												"body": {
													"nativeSrc": "13884:147:9",
													"nodeType": "YulBlock",
													"src": "13884:147:9",
													"statements": [
														{
															"nativeSrc": "13895:110:9",
															"nodeType": "YulAssignment",
															"src": "13895:110:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13984:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13984:6:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13992:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13992:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14001:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14001:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13902:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "13902:81:9"
																},
																"nativeSrc": "13902:103:9",
																"nodeType": "YulFunctionCall",
																"src": "13902:103:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13895:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13895:3:9"
																}
															]
														},
														{
															"nativeSrc": "14015:10:9",
															"nodeType": "YulAssignment",
															"src": "14015:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "14022:3:9",
																"nodeType": "YulIdentifier",
																"src": "14022:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14015:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14015:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13740:291:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13855:3:9",
														"nodeType": "YulTypedName",
														"src": "13855:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13861:6:9",
														"nodeType": "YulTypedName",
														"src": "13861:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13869:6:9",
														"nodeType": "YulTypedName",
														"src": "13869:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13880:3:9",
														"nodeType": "YulTypedName",
														"src": "13880:3:9",
														"type": ""
													}
												],
												"src": "13740:291:9"
											},
											{
												"body": {
													"nativeSrc": "14163:215:9",
													"nodeType": "YulBlock",
													"src": "14163:215:9",
													"statements": [
														{
															"nativeSrc": "14173:78:9",
															"nodeType": "YulAssignment",
															"src": "14173:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14239:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14239:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14244:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14244:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14180:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14180:58:9"
																},
																"nativeSrc": "14180:71:9",
																"nodeType": "YulFunctionCall",
																"src": "14180:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14173:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14173:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14298:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14298:5:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14305:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14305:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14310:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14310:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "14261:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "14261:36:9"
																},
																"nativeSrc": "14261:56:9",
																"nodeType": "YulFunctionCall",
																"src": "14261:56:9"
															},
															"nativeSrc": "14261:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "14261:56:9"
														},
														{
															"nativeSrc": "14326:46:9",
															"nodeType": "YulAssignment",
															"src": "14326:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14337:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14337:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14364:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14364:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14342:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "14342:21:9"
																		},
																		"nativeSrc": "14342:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14342:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14333:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14333:3:9"
																},
																"nativeSrc": "14333:39:9",
																"nodeType": "YulFunctionCall",
																"src": "14333:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14326:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14326:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14061:317:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14136:5:9",
														"nodeType": "YulTypedName",
														"src": "14136:5:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14143:6:9",
														"nodeType": "YulTypedName",
														"src": "14143:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14151:3:9",
														"nodeType": "YulTypedName",
														"src": "14151:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14159:3:9",
														"nodeType": "YulTypedName",
														"src": "14159:3:9",
														"type": ""
													}
												],
												"src": "14061:317:9"
											},
											{
												"body": {
													"nativeSrc": "14540:287:9",
													"nodeType": "YulBlock",
													"src": "14540:287:9",
													"statements": [
														{
															"nativeSrc": "14550:26:9",
															"nodeType": "YulAssignment",
															"src": "14550:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14562:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14562:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14573:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14573:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14558:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14558:3:9"
																},
																"nativeSrc": "14558:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14558:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14550:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14550:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14597:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14597:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14608:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14608:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14593:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14593:3:9"
																		},
																		"nativeSrc": "14593:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14593:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14616:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14616:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14622:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14622:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14612:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14612:3:9"
																		},
																		"nativeSrc": "14612:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14612:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14586:6:9"
																},
																"nativeSrc": "14586:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14586:47:9"
															},
															"nativeSrc": "14586:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14586:47:9"
														},
														{
															"nativeSrc": "14642:96:9",
															"nodeType": "YulAssignment",
															"src": "14642:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14716:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14716:6:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14724:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14724:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14733:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14733:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14650:65:9",
																	"nodeType": "YulIdentifier",
																	"src": "14650:65:9"
																},
																"nativeSrc": "14650:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14650:88:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14642:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14642:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14792:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14792:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14805:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14805:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14816:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14816:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14801:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14801:3:9"
																		},
																		"nativeSrc": "14801:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14801:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14748:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14748:43:9"
																},
																"nativeSrc": "14748:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14748:72:9"
															},
															"nativeSrc": "14748:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14748:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "14384:443:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14496:9:9",
														"nodeType": "YulTypedName",
														"src": "14496:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14508:6:9",
														"nodeType": "YulTypedName",
														"src": "14508:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14516:6:9",
														"nodeType": "YulTypedName",
														"src": "14516:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14524:6:9",
														"nodeType": "YulTypedName",
														"src": "14524:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14535:4:9",
														"nodeType": "YulTypedName",
														"src": "14535:4:9",
														"type": ""
													}
												],
												"src": "14384:443:9"
											},
											{
												"body": {
													"nativeSrc": "14861:152:9",
													"nodeType": "YulBlock",
													"src": "14861:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14878:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14878:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14881:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14881:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14871:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14871:6:9"
																},
																"nativeSrc": "14871:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14871:88:9"
															},
															"nativeSrc": "14871:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14871:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14975:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14975:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14978:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14978:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14968:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14968:6:9"
																},
																"nativeSrc": "14968:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14968:15:9"
															},
															"nativeSrc": "14968:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14968:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14999:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14999:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15002:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15002:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14992:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14992:6:9"
																},
																"nativeSrc": "14992:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14992:15:9"
															},
															"nativeSrc": "14992:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14992:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14833:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14833:180:9"
											},
											{
												"body": {
													"nativeSrc": "15063:147:9",
													"nodeType": "YulBlock",
													"src": "15063:147:9",
													"statements": [
														{
															"nativeSrc": "15073:25:9",
															"nodeType": "YulAssignment",
															"src": "15073:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15096:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15096:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15078:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15078:17:9"
																},
																"nativeSrc": "15078:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15078:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15073:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15073:1:9"
																}
															]
														},
														{
															"nativeSrc": "15107:25:9",
															"nodeType": "YulAssignment",
															"src": "15107:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15130:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15130:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15112:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15112:17:9"
																},
																"nativeSrc": "15112:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15112:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15107:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15107:1:9"
																}
															]
														},
														{
															"nativeSrc": "15141:16:9",
															"nodeType": "YulAssignment",
															"src": "15141:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15152:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15152:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15155:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15155:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15148:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15148:3:9"
																},
																"nativeSrc": "15148:9:9",
																"nodeType": "YulFunctionCall",
																"src": "15148:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15141:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15141:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15181:22:9",
																"nodeType": "YulBlock",
																"src": "15181:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15183:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "15183:16:9"
																			},
																			"nativeSrc": "15183:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15183:18:9"
																		},
																		"nativeSrc": "15183:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15183:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15173:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15173:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15176:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15176:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15170:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "15170:2:9"
																},
																"nativeSrc": "15170:10:9",
																"nodeType": "YulFunctionCall",
																"src": "15170:10:9"
															},
															"nativeSrc": "15167:36:9",
															"nodeType": "YulIf",
															"src": "15167:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15019:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15050:1:9",
														"nodeType": "YulTypedName",
														"src": "15050:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15053:1:9",
														"nodeType": "YulTypedName",
														"src": "15053:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15059:3:9",
														"nodeType": "YulTypedName",
														"src": "15059:3:9",
														"type": ""
													}
												],
												"src": "15019:191:9"
											},
											{
												"body": {
													"nativeSrc": "15372:287:9",
													"nodeType": "YulBlock",
													"src": "15372:287:9",
													"statements": [
														{
															"nativeSrc": "15382:26:9",
															"nodeType": "YulAssignment",
															"src": "15382:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15394:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15394:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15405:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15405:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15390:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15390:3:9"
																},
																"nativeSrc": "15390:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15390:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15382:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15382:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15462:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15462:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15475:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15475:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15486:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15486:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15471:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15471:3:9"
																		},
																		"nativeSrc": "15471:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15471:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15418:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15418:43:9"
																},
																"nativeSrc": "15418:71:9",
																"nodeType": "YulFunctionCall",
																"src": "15418:71:9"
															},
															"nativeSrc": "15418:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "15418:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15510:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15510:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15521:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15521:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15506:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15506:3:9"
																		},
																		"nativeSrc": "15506:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15506:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15530:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15530:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15536:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15536:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15526:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15526:3:9"
																		},
																		"nativeSrc": "15526:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15526:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15499:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15499:6:9"
																},
																"nativeSrc": "15499:48:9",
																"nodeType": "YulFunctionCall",
																"src": "15499:48:9"
															},
															"nativeSrc": "15499:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "15499:48:9"
														},
														{
															"nativeSrc": "15556:96:9",
															"nodeType": "YulAssignment",
															"src": "15556:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15630:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15630:6:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "15638:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15638:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15647:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15647:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15564:65:9",
																	"nodeType": "YulIdentifier",
																	"src": "15564:65:9"
																},
																"nativeSrc": "15564:88:9",
																"nodeType": "YulFunctionCall",
																"src": "15564:88:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15556:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15556:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15216:443:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15328:9:9",
														"nodeType": "YulTypedName",
														"src": "15328:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15340:6:9",
														"nodeType": "YulTypedName",
														"src": "15340:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15348:6:9",
														"nodeType": "YulTypedName",
														"src": "15348:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15356:6:9",
														"nodeType": "YulTypedName",
														"src": "15356:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15367:4:9",
														"nodeType": "YulTypedName",
														"src": "15367:4:9",
														"type": ""
													}
												],
												"src": "15216:443:9"
											},
											{
												"body": {
													"nativeSrc": "15771:60:9",
													"nodeType": "YulBlock",
													"src": "15771:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15793:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15793:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15801:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15801:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15789:3:9"
																		},
																		"nativeSrc": "15789:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15789:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "15805:18:9",
																		"nodeType": "YulLiteral",
																		"src": "15805:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15782:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15782:6:9"
																},
																"nativeSrc": "15782:42:9",
																"nodeType": "YulFunctionCall",
																"src": "15782:42:9"
															},
															"nativeSrc": "15782:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "15782:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "15665:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15763:6:9",
														"nodeType": "YulTypedName",
														"src": "15763:6:9",
														"type": ""
													}
												],
												"src": "15665:166:9"
											},
											{
												"body": {
													"nativeSrc": "15983:220:9",
													"nodeType": "YulBlock",
													"src": "15983:220:9",
													"statements": [
														{
															"nativeSrc": "15993:74:9",
															"nodeType": "YulAssignment",
															"src": "15993:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16059:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16059:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16064:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16064:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16000:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16000:58:9"
																},
																"nativeSrc": "16000:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16000:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15993:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15993:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16165:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16165:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "16076:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16076:88:9"
																},
																"nativeSrc": "16076:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16076:93:9"
															},
															"nativeSrc": "16076:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16076:93:9"
														},
														{
															"nativeSrc": "16178:19:9",
															"nodeType": "YulAssignment",
															"src": "16178:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16189:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16189:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16194:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16194:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16185:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16185:3:9"
																},
																"nativeSrc": "16185:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16185:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16178:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16178:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15837:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15971:3:9",
														"nodeType": "YulTypedName",
														"src": "15971:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15979:3:9",
														"nodeType": "YulTypedName",
														"src": "15979:3:9",
														"type": ""
													}
												],
												"src": "15837:366:9"
											},
											{
												"body": {
													"nativeSrc": "16380:248:9",
													"nodeType": "YulBlock",
													"src": "16380:248:9",
													"statements": [
														{
															"nativeSrc": "16390:26:9",
															"nodeType": "YulAssignment",
															"src": "16390:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16402:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16402:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16413:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16413:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16398:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:9"
																},
																"nativeSrc": "16398:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16398:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16390:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16390:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16437:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16437:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16448:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16448:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16433:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16433:3:9"
																		},
																		"nativeSrc": "16433:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16433:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16456:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16456:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16462:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16462:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16452:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16452:3:9"
																		},
																		"nativeSrc": "16452:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16452:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16426:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16426:6:9"
																},
																"nativeSrc": "16426:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16426:47:9"
															},
															"nativeSrc": "16426:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16426:47:9"
														},
														{
															"nativeSrc": "16482:139:9",
															"nodeType": "YulAssignment",
															"src": "16482:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16616:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16616:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16490:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16490:124:9"
																},
																"nativeSrc": "16490:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16490:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16482:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16482:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16209:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16360:9:9",
														"nodeType": "YulTypedName",
														"src": "16360:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16375:4:9",
														"nodeType": "YulTypedName",
														"src": "16375:4:9",
														"type": ""
													}
												],
												"src": "16209:419:9"
											},
											{
												"body": {
													"nativeSrc": "16740:75:9",
													"nodeType": "YulBlock",
													"src": "16740:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16762:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16762:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16770:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16770:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16758:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16758:3:9"
																		},
																		"nativeSrc": "16758:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16758:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "16774:33:9",
																		"nodeType": "YulLiteral",
																		"src": "16774:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16751:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16751:6:9"
																},
																"nativeSrc": "16751:57:9",
																"nodeType": "YulFunctionCall",
																"src": "16751:57:9"
															},
															"nativeSrc": "16751:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "16751:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "16634:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16732:6:9",
														"nodeType": "YulTypedName",
														"src": "16732:6:9",
														"type": ""
													}
												],
												"src": "16634:181:9"
											},
											{
												"body": {
													"nativeSrc": "16967:220:9",
													"nodeType": "YulBlock",
													"src": "16967:220:9",
													"statements": [
														{
															"nativeSrc": "16977:74:9",
															"nodeType": "YulAssignment",
															"src": "16977:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17043:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17043:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17048:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16984:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16984:58:9"
																},
																"nativeSrc": "16984:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16984:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16977:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16977:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17149:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17149:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "17060:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17060:88:9"
																},
																"nativeSrc": "17060:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17060:93:9"
															},
															"nativeSrc": "17060:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17060:93:9"
														},
														{
															"nativeSrc": "17162:19:9",
															"nodeType": "YulAssignment",
															"src": "17162:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17173:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17173:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17178:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17178:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17169:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17169:3:9"
																},
																"nativeSrc": "17169:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17169:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17162:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17162:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16821:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16955:3:9",
														"nodeType": "YulTypedName",
														"src": "16955:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16963:3:9",
														"nodeType": "YulTypedName",
														"src": "16963:3:9",
														"type": ""
													}
												],
												"src": "16821:366:9"
											},
											{
												"body": {
													"nativeSrc": "17364:248:9",
													"nodeType": "YulBlock",
													"src": "17364:248:9",
													"statements": [
														{
															"nativeSrc": "17374:26:9",
															"nodeType": "YulAssignment",
															"src": "17374:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17386:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17386:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17397:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17397:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17382:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17382:3:9"
																},
																"nativeSrc": "17382:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17382:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17374:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17374:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17421:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17421:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17432:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17432:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17417:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17417:3:9"
																		},
																		"nativeSrc": "17417:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17417:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17440:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17440:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17446:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17446:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17436:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17436:3:9"
																		},
																		"nativeSrc": "17436:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17436:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17410:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17410:6:9"
																},
																"nativeSrc": "17410:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17410:47:9"
															},
															"nativeSrc": "17410:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17410:47:9"
														},
														{
															"nativeSrc": "17466:139:9",
															"nodeType": "YulAssignment",
															"src": "17466:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17600:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17600:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17474:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17474:124:9"
																},
																"nativeSrc": "17474:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17474:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17466:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17466:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17193:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17344:9:9",
														"nodeType": "YulTypedName",
														"src": "17344:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17359:4:9",
														"nodeType": "YulTypedName",
														"src": "17359:4:9",
														"type": ""
													}
												],
												"src": "17193:419:9"
											},
											{
												"body": {
													"nativeSrc": "17772:288:9",
													"nodeType": "YulBlock",
													"src": "17772:288:9",
													"statements": [
														{
															"nativeSrc": "17782:26:9",
															"nodeType": "YulAssignment",
															"src": "17782:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17794:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17794:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17805:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17805:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17790:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17790:3:9"
																},
																"nativeSrc": "17790:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17790:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17782:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17782:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17862:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17862:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17875:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17875:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17886:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17886:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17871:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17871:3:9"
																		},
																		"nativeSrc": "17871:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17871:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17818:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17818:43:9"
																},
																"nativeSrc": "17818:71:9",
																"nodeType": "YulFunctionCall",
																"src": "17818:71:9"
															},
															"nativeSrc": "17818:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "17818:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17943:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17943:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17956:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17956:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17967:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17967:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17952:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17952:3:9"
																		},
																		"nativeSrc": "17952:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17952:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17899:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17899:43:9"
																},
																"nativeSrc": "17899:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17899:72:9"
															},
															"nativeSrc": "17899:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17899:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18025:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18025:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18038:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18038:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18049:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18049:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18034:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18034:3:9"
																		},
																		"nativeSrc": "18034:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18034:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17981:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17981:43:9"
																},
																"nativeSrc": "17981:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17981:72:9"
															},
															"nativeSrc": "17981:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17981:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17618:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17728:9:9",
														"nodeType": "YulTypedName",
														"src": "17728:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17740:6:9",
														"nodeType": "YulTypedName",
														"src": "17740:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17748:6:9",
														"nodeType": "YulTypedName",
														"src": "17748:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17756:6:9",
														"nodeType": "YulTypedName",
														"src": "17756:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17767:4:9",
														"nodeType": "YulTypedName",
														"src": "17767:4:9",
														"type": ""
													}
												],
												"src": "17618:442:9"
											},
											{
												"body": {
													"nativeSrc": "18172:64:9",
													"nodeType": "YulBlock",
													"src": "18172:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18194:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18194:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18202:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18202:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18190:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18190:3:9"
																		},
																		"nativeSrc": "18190:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18190:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "18206:22:9",
																		"nodeType": "YulLiteral",
																		"src": "18206:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18183:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18183:6:9"
																},
																"nativeSrc": "18183:46:9",
																"nodeType": "YulFunctionCall",
																"src": "18183:46:9"
															},
															"nativeSrc": "18183:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "18183:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "18066:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18164:6:9",
														"nodeType": "YulTypedName",
														"src": "18164:6:9",
														"type": ""
													}
												],
												"src": "18066:170:9"
											},
											{
												"body": {
													"nativeSrc": "18388:220:9",
													"nodeType": "YulBlock",
													"src": "18388:220:9",
													"statements": [
														{
															"nativeSrc": "18398:74:9",
															"nodeType": "YulAssignment",
															"src": "18398:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18464:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18464:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18469:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18469:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18405:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18405:58:9"
																},
																"nativeSrc": "18405:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18405:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18398:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18398:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18570:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18570:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "18481:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18481:88:9"
																},
																"nativeSrc": "18481:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18481:93:9"
															},
															"nativeSrc": "18481:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18481:93:9"
														},
														{
															"nativeSrc": "18583:19:9",
															"nodeType": "YulAssignment",
															"src": "18583:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18594:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18594:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18599:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18599:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18590:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18590:3:9"
																},
																"nativeSrc": "18590:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18590:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18583:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18583:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18242:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18376:3:9",
														"nodeType": "YulTypedName",
														"src": "18376:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18384:3:9",
														"nodeType": "YulTypedName",
														"src": "18384:3:9",
														"type": ""
													}
												],
												"src": "18242:366:9"
											},
											{
												"body": {
													"nativeSrc": "18785:248:9",
													"nodeType": "YulBlock",
													"src": "18785:248:9",
													"statements": [
														{
															"nativeSrc": "18795:26:9",
															"nodeType": "YulAssignment",
															"src": "18795:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18807:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18807:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18818:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18818:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18803:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18803:3:9"
																},
																"nativeSrc": "18803:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18803:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18795:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18795:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18842:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18853:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18853:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18838:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18838:3:9"
																		},
																		"nativeSrc": "18838:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18838:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18861:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18861:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18867:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18867:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18857:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18857:3:9"
																		},
																		"nativeSrc": "18857:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18857:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18831:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18831:6:9"
																},
																"nativeSrc": "18831:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18831:47:9"
															},
															"nativeSrc": "18831:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18831:47:9"
														},
														{
															"nativeSrc": "18887:139:9",
															"nodeType": "YulAssignment",
															"src": "18887:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19021:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19021:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18895:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18895:124:9"
																},
																"nativeSrc": "18895:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18895:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18887:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18887:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18614:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18765:9:9",
														"nodeType": "YulTypedName",
														"src": "18765:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18780:4:9",
														"nodeType": "YulTypedName",
														"src": "18780:4:9",
														"type": ""
													}
												],
												"src": "18614:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct SignsToken.RewardRates\n    function abi_decode_t_struct$_RewardRates_$1128_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 96) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_RewardRates_$1128_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_RewardRates_$1128_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x00() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x00)\n        revert(0, 0x24)\n    }\n\n    function read_from_calldatat_uint256(ptr) -> returnValue {\n\n        let value := calldataload(ptr)\n        validator_revert_t_uint256(value)\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_0(value) -> newValue {\n        newValue :=\n\n        shl(0, value)\n\n    }\n\n    function update_byte_slice_32_shift_0(value, toInsert) -> result {\n        let mask := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        toInsert := shift_left_0(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_offset_0t_uint256_to_t_uint256(slot, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_32_shift_0(sload(slot), prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function copy_struct_to_storage_from_t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage(slot, value) {\n\n        {\n\n            let memberSlot := add(slot, 0)\n            let memberSrcPtr := add(value, 0)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint256(memberValue_0)\n\n            update_storage_value_offset_0t_uint256_to_t_uint256(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 32)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint256(memberValue_0)\n\n            update_storage_value_offset_0t_uint256_to_t_uint256(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 2)\n            let memberSrcPtr := add(value, 64)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint256(memberValue_0)\n\n            update_storage_value_offset_0t_uint256_to_t_uint256(memberSlot, memberValue_0)\n\n        }\n\n    }\n\n    function update_storage_value_offset_0t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage(slot, value_0) {\n\n        copy_struct_to_storage_from_t_struct$_RewardRates_$1128_calldata_ptr_to_t_struct$_RewardRates_$1128_storage(slot, value_0)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101cd575f3560e01c80638da5cb5b11610102578063c0008d0c116100a0578063d06a2e0e1161006f578063d06a2e0e146104e7578063dd62ed3e14610503578063f2fde38b14610533578063f4f831a01461054f576101cd565b8063c0008d0c14610487578063c1f3bdde146104a3578063ca1c7238146104c1578063ce55b584146104cb576101cd565b8063a3262ea2116100dc578063a3262ea2146103eb578063a6ec1c6d14610409578063a775ced314610439578063a9059cbb14610457576101cd565b80638da5cb5b1461037f57806395d89b411461039d5780639778d0cd146103bb576101cd565b806343f48fbd1161016f578063715018a611610149578063715018a6146103335780638456cb591461033d578063849d13a3146103475780638d9d730714610363576101cd565b806343f48fbd146102c55780635c975abb146102e557806370a0823114610303576101cd565b806323b872dd116101ab57806323b872dd1461023d5780632a504a971461026d578063313ce5671461029d5780633f4ba83a146102bb576101cd565b806306fdde03146101d1578063095ea7b3146101ef57806318160ddd1461021f575b5f80fd5b6101d961056d565b6040516101e69190611d92565b60405180910390f35b61020960048036038101906102049190611e47565b6105fd565b6040516102169190611e9f565b60405180910390f35b61022761061f565b6040516102349190611ec7565b60405180910390f35b61025760048036038101906102529190611ee0565b610628565b6040516102649190611e9f565b60405180910390f35b61028760048036038101906102829190611f30565b610645565b6040516102949190611ec7565b60405180910390f35b6102a561065a565b6040516102b29190611f76565b60405180910390f35b6102c3610662565b005b6102cd610674565b6040516102dc93929190611f8f565b60405180910390f35b6102ed61068b565b6040516102fa9190611e9f565b60405180910390f35b61031d60048036038101906103189190611f30565b6106a0565b60405161032a9190611ec7565b60405180910390f35b61033b6106e5565b005b6103456106f8565b005b610361600480360381019061035c9190611fe6565b61070a565b005b61037d60048036038101906103789190612072565b61076d565b005b61038761098b565b60405161039491906120de565b60405180910390f35b6103a56109b4565b6040516103b29190611d92565b60405180910390f35b6103d560048036038101906103d09190611f30565b610a44565b6040516103e29190611ec7565b60405180910390f35b6103f3610a59565b60405161040091906120de565b60405180910390f35b610423600480360381019061041e9190611f30565b610a7e565b6040516104309190611ec7565b60405180910390f35b610441610a93565b60405161044e91906120de565b60405180910390f35b610471600480360381019061046c9190611e47565b610ab8565b60405161047e9190611e9f565b60405180910390f35b6104a1600480360381019061049c91906120f7565b610ad3565b005b6104ab610e00565b6040516104b89190611ec7565b60405180910390f35b6104c9610e07565b005b6104e560048036038101906104e09190612154565b610ee8565b005b61050160048036038101906104fc9190611e47565b610f31565b005b61051d6004803603810190610518919061217f565b6111ef565b60405161052a9190611ec7565b60405180910390f35b61054d60048036038101906105489190611f30565b611271565b005b6105576112f5565b6040516105649190611ec7565b60405180910390f35b60606003805461057c906121ea565b80601f01602080910402602001604051908101604052809291908181526020018280546105a8906121ea565b80156105f35780601f106105ca576101008083540402835291602001916105f3565b820191905f5260205f20905b8154815290600101906020018083116105d657829003601f168201915b5050505050905090565b5f806106076112fb565b9050610614818585611302565b600191505092915050565b5f600254905090565b5f610631611314565b61063c84848461135e565b90509392505050565b600d602052805f5260405f205f915090505481565b5f6012905090565b61066a61138c565b610672611413565b565b6007805f0154908060010154908060020154905083565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106ed61138c565b6106f65f611474565b565b61070061138c565b610708611539565b565b61071261138c565b80600781816107219190612336565b9050507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b815f01358260200135836040013560405161076293929190611f8f565b60405180910390a150565b61077561138c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107da576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600381526020017f6e66740000000000000000000000000000000000000000000000000000000000815250805190602001208383604051610827929190612380565b6040518091039020036108795780600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061094b565b6040518060400160405280600781526020017f686973746f7279000000000000000000000000000000000000000000000000008152508051906020012083836040516108c6929190612380565b6040518091039020036109185780600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061094a565b6040517f6a43f8d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b7ff611fec7babefd259c57ea5b6006acff8140ab17bb816c65ba0aa7e36c09caa883838360405161097e939291906123c4565b60405180910390a1505050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109c3906121ea565b80601f01602080910402602001604051908101604052809291908181526020018280546109ef906121ea565b8015610a3a5780601f10610a1157610100808354040283529160200191610a3a565b820191905f5260205f20905b815481529060010190602001808311610a1d57829003601f168201915b5050505050905090565b600e602052805f5260405f205f915090505481565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f602052805f5260405f205f915090505481565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610ac1611314565b610acb838361159b565b905092915050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610b7d5750600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610bb4576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bbc611314565b5f6040518060400160405280600581526020017f6469617279000000000000000000000000000000000000000000000000000000815250805190602001208383604051610c0a929190612380565b604051809103902003610c24576007600101549050610cbe565b6040518060400160405280600581526020017f70686f746f000000000000000000000000000000000000000000000000000000815250805190602001208383604051610c71929190612380565b604051809103902003610c8b576007600201549050610cbd565b6040517f6a43f8d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610cc7846115bd565b600a5481600f5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d139190612421565b1115610d4b576040517fd75747f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d979190612421565b92505081905550610da88482611697565b8373ffffffffffffffffffffffffffffffffffffffff167f21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c828585604051610df293929190612454565b60405180910390a250505050565b6201518081565b610e0f611716565b610e17611314565b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103610e91576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610edd3382611697565b50610ee6611765565b565b610ef061138c565b80600a819055507fb1cc6c859f8e547a95cbbe7dcece9e0fd5a931c906bd08dcf8413a2c8353971381604051610f269190611ec7565b60405180910390a150565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610fdb5750600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611012576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61101a611314565b5f8103611053576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61105c826115bd565b600a5481600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110a89190612421565b11156110e0576040517fd75747f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461112c9190612421565b9250508190555080600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461117f9190612421565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbf26400ffec32b7f7fa346df27788423de869f04ad96fd322dafc7af85002636836040516111e39190611ec7565b60405180910390a35050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61127961138c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112e9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112e091906120de565b60405180910390fd5b6112f281611474565b50565b600a5481565b5f33905090565b61130f838383600161176f565b505050565b61131c61068b565b1561135c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611353906124ce565b60405180910390fd5b565b5f806113686112fb565b905061137585828561193e565b6113808585856119d0565b60019150509392505050565b6113946112fb565b73ffffffffffffffffffffffffffffffffffffffff166113b261098b565b73ffffffffffffffffffffffffffffffffffffffff1614611411576113d56112fb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161140891906120de565b60405180910390fd5b565b61141b611ac0565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61145d6112fb565b60405161146a91906120de565b60405180910390a1565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611541611314565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115846112fb565b60405161159191906120de565b60405180910390a1565b5f806115a56112fb565b90506115b28185856119d0565b600191505092915050565b62015180600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116099190612421565b4210611694575f600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b50565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611707575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116fe91906120de565b60405180910390fd5b6117125f8383611b09565b5050565b60026006540361175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290612536565b60405180910390fd5b6002600681905550565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117df575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117d691906120de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361184f575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161184691906120de565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611938578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161192f9190611ec7565b60405180910390a35b50505050565b5f61194984846111ef565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146119ca57818110156119bb578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016119b293929190612554565b60405180910390fd5b6119c984848484035f61176f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a40575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a3791906120de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ab0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aa791906120de565b60405180910390fd5b611abb838383611b09565b505050565b611ac861068b565b611b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afe906125d3565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b59578060025f828254611b4d9190612421565b92505081905550611c27565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611be2578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611bd993929190612554565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c6e578060025f8282540392505081905550611cb8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d159190611ec7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d6482611d22565b611d6e8185611d2c565b9350611d7e818560208601611d3c565b611d8781611d4a565b840191505092915050565b5f6020820190508181035f830152611daa8184611d5a565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611de382611dba565b9050919050565b611df381611dd9565b8114611dfd575f80fd5b50565b5f81359050611e0e81611dea565b92915050565b5f819050919050565b611e2681611e14565b8114611e30575f80fd5b50565b5f81359050611e4181611e1d565b92915050565b5f8060408385031215611e5d57611e5c611db2565b5b5f611e6a85828601611e00565b9250506020611e7b85828601611e33565b9150509250929050565b5f8115159050919050565b611e9981611e85565b82525050565b5f602082019050611eb25f830184611e90565b92915050565b611ec181611e14565b82525050565b5f602082019050611eda5f830184611eb8565b92915050565b5f805f60608486031215611ef757611ef6611db2565b5b5f611f0486828701611e00565b9350506020611f1586828701611e00565b9250506040611f2686828701611e33565b9150509250925092565b5f60208284031215611f4557611f44611db2565b5b5f611f5284828501611e00565b91505092915050565b5f60ff82169050919050565b611f7081611f5b565b82525050565b5f602082019050611f895f830184611f67565b92915050565b5f606082019050611fa25f830186611eb8565b611faf6020830185611eb8565b611fbc6040830184611eb8565b949350505050565b5f80fd5b5f60608284031215611fdd57611fdc611fc4565b5b81905092915050565b5f60608284031215611ffb57611ffa611db2565b5b5f61200884828501611fc8565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261203257612031612011565b5b8235905067ffffffffffffffff81111561204f5761204e612015565b5b60208301915083600182028301111561206b5761206a612019565b5b9250929050565b5f805f6040848603121561208957612088611db2565b5b5f84013567ffffffffffffffff8111156120a6576120a5611db6565b5b6120b28682870161201d565b935093505060206120c586828701611e00565b9150509250925092565b6120d881611dd9565b82525050565b5f6020820190506120f15f8301846120cf565b92915050565b5f805f6040848603121561210e5761210d611db2565b5b5f61211b86828701611e00565b935050602084013567ffffffffffffffff81111561213c5761213b611db6565b5b6121488682870161201d565b92509250509250925092565b5f6020828403121561216957612168611db2565b5b5f61217684828501611e33565b91505092915050565b5f806040838503121561219557612194611db2565b5b5f6121a285828601611e00565b92505060206121b385828601611e00565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061220157607f821691505b602082108103612214576122136121bd565b5b50919050565b5f813561222681611e1d565b80915050919050565b5f815f1b9050919050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6122658461222f565b9350801983169250808416831791505092915050565b5f819050919050565b5f61229e61229961229484611e14565b61227b565b611e14565b9050919050565b5f819050919050565b6122b782612284565b6122ca6122c3826122a5565b835461223a565b8255505050565b5f81015f8301806122e18161221a565b90506122ed81846122ae565b5050506001810160208301806123028161221a565b905061230e81846122ae565b5050506002810160408301806123238161221a565b905061232f81846122ae565b5050505050565b61234082826122d1565b5050565b5f81905092915050565b828183375f83830152505050565b5f6123678385612344565b935061237483858461234e565b82840190509392505050565b5f61238c82848661235c565b91508190509392505050565b5f6123a38385611d2c565b93506123b083858461234e565b6123b983611d4a565b840190509392505050565b5f6040820190508181035f8301526123dd818587612398565b90506123ec60208301846120cf565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61242b82611e14565b915061243683611e14565b925082820190508082111561244e5761244d6123f4565b5b92915050565b5f6040820190506124675f830186611eb8565b818103602083015261247a818486612398565b9050949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6124b8601083611d2c565b91506124c382612484565b602082019050919050565b5f6020820190508181035f8301526124e5816124ac565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612520601f83611d2c565b915061252b826124ec565b602082019050919050565b5f6020820190508181035f83015261254d81612514565b9050919050565b5f6060820190506125675f8301866120cf565b6125746020830185611eb8565b6125816040830184611eb8565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6125bd601483611d2c565b91506125c882612589565b602082019050919050565b5f6020820190508181035f8301526125ea816125b1565b905091905056fea2646970667358221220e93a3dda12e59d805089ced78b15a294e153ce06bc445c77987a3646d52885a264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC0008D0C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD06A2E0E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD06A2E0E EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xF4F831A0 EQ PUSH2 0x54F JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xC0008D0C EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xC1F3BDDE EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xCA1C7238 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xCE55B584 EQ PUSH2 0x4CB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xA3262EA2 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA3262EA2 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xA6EC1C6D EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xA775CED3 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x457 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x9778D0CD EQ PUSH2 0x3BB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x43F48FBD GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x849D13A3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x8D9D7307 EQ PUSH2 0x363 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x43F48FBD EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x2A504A97 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D9 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH2 0xE07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x501 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x557 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x57C SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A8 SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x607 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP PUSH2 0x614 DUP2 DUP6 DUP6 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x631 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x63C DUP5 DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x66A PUSH2 0x138C JUMP JUMPDEST PUSH2 0x672 PUSH2 0x1413 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x138C JUMP JUMPDEST PUSH2 0x6F6 PUSH0 PUSH2 0x1474 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x700 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x708 PUSH2 0x1539 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x712 PUSH2 0x138C JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 DUP2 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x2336 JUMP JUMPDEST SWAP1 POP POP PUSH32 0x23010BC68E7F4C0BE9887F513C570C7A0F5F511B9716ABCCD42BF3B8943532B DUP2 PUSH0 ADD CALLDATALOAD DUP3 PUSH1 0x20 ADD CALLDATALOAD DUP4 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x762 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x775 PUSH2 0x138C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E66740000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x827 SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x879 JUMPI DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x686973746F727900000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C6 SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x918 JUMPI DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6A43F8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH32 0xF611FEC7BABEFD259C57EA5B6006ACFF8140AB17BB816C65BA0AA7E36C09CAA8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x97E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9C3 SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9EF SWAP1 PUSH2 0x21EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA3A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA1D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xAC1 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0xACB DUP4 DUP4 PUSH2 0x159B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI POP PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBBC PUSH2 0x1314 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6469617279000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0A SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xC24 JUMPI PUSH1 0x7 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70686F746F000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC71 SWAP3 SWAP2 SWAP1 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xC8B JUMPI PUSH1 0x7 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6A43F8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0xCC7 DUP5 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0xF PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST GT ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD75747F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDA8 DUP5 DUP3 PUSH2 0x1697 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21A82678DAA5235B7B5DE669FDF9599453D3D885CEE0826E92636D747419689C DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xDF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0xE0F PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xE17 PUSH2 0x1314 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEDD CALLER DUP3 PUSH2 0x1697 JUMP JUMPDEST POP PUSH2 0xEE6 PUSH2 0x1765 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEF0 PUSH2 0x138C JUMP JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xB1CC6C859F8E547A95CBBE7DCECE9E0FD5A931C906BD08DCF8413A2C83539713 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xFDB JUMPI POP PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101A PUSH2 0x1314 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105C DUP3 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10A8 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST GT ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD75747F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x117F SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF26400FFEC32B7F7FA346DF27788423DE869F04AD96FD322DAFC7AF85002636 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1279 PUSH2 0x138C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F2 DUP2 PUSH2 0x1474 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x130F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x131C PUSH2 0x68B JUMP JUMPDEST ISZERO PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1353 SWAP1 PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1368 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP PUSH2 0x1375 DUP6 DUP3 DUP6 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1380 DUP6 DUP6 DUP6 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1394 PUSH2 0x12FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B2 PUSH2 0x98B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1411 JUMPI PUSH2 0x13D5 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1AC0 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x145D PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1541 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1584 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x15A5 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP PUSH2 0x15B2 DUP2 DUP6 DUP6 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1609 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1694 JUMPI PUSH0 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1707 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1712 PUSH0 DUP4 DUP4 PUSH2 0x1B09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x175B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP1 PUSH2 0x2536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x184F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1846 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1938 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x192F SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1949 DUP5 DUP5 PUSH2 0x11EF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x19CA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x19BB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x176F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AB0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA7 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ABB DUP4 DUP4 DUP4 PUSH2 0x1B09 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AC8 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x1B07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFE SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B59 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B4D SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C27 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BE2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C6E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D15 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D64 DUP3 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x1D6E DUP2 DUP6 PUSH2 0x1D2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x1D87 DUP2 PUSH2 0x1D4A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAA DUP2 DUP5 PUSH2 0x1D5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE3 DUP3 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF3 DUP2 PUSH2 0x1DD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E0E DUP2 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E26 DUP2 PUSH2 0x1E14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E41 DUP2 PUSH2 0x1E1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6A DUP6 DUP3 DUP7 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7B DUP6 DUP3 DUP7 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E99 DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x1E14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDA PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF6 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F04 DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F15 DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F26 DUP7 DUP3 DUP8 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F52 DUP5 DUP3 DUP6 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1F5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FA2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FAF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1FBC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1FC4 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2008 DUP5 DUP3 DUP6 ADD PUSH2 0x1FC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2032 JUMPI PUSH2 0x2031 PUSH2 0x2011 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x2015 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x206B JUMPI PUSH2 0x206A PUSH2 0x2019 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2089 JUMPI PUSH2 0x2088 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x1DB6 JUMP JUMPDEST JUMPDEST PUSH2 0x20B2 DUP7 DUP3 DUP8 ADD PUSH2 0x201D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x20C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x1DD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x210E JUMPI PUSH2 0x210D PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x211B DUP7 DUP3 DUP8 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x1DB6 JUMP JUMPDEST JUMPDEST PUSH2 0x2148 DUP7 DUP3 DUP8 ADD PUSH2 0x201D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2169 JUMPI PUSH2 0x2168 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2176 DUP5 DUP3 DUP6 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2201 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2214 JUMPI PUSH2 0x2213 PUSH2 0x21BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD PUSH2 0x2226 DUP2 PUSH2 0x1E1D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2265 DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x229E PUSH2 0x2299 PUSH2 0x2294 DUP5 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x227B JUMP JUMPDEST PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B7 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x22CA PUSH2 0x22C3 DUP3 PUSH2 0x22A5 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x223A JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 ADD PUSH0 DUP4 ADD DUP1 PUSH2 0x22E1 DUP2 PUSH2 0x221A JUMP JUMPDEST SWAP1 POP PUSH2 0x22ED DUP2 DUP5 PUSH2 0x22AE JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x2302 DUP2 PUSH2 0x221A JUMP JUMPDEST SWAP1 POP PUSH2 0x230E DUP2 DUP5 PUSH2 0x22AE JUMP JUMPDEST POP POP POP PUSH1 0x2 DUP2 ADD PUSH1 0x40 DUP4 ADD DUP1 PUSH2 0x2323 DUP2 PUSH2 0x221A JUMP JUMPDEST SWAP1 POP PUSH2 0x232F DUP2 DUP5 PUSH2 0x22AE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2340 DUP3 DUP3 PUSH2 0x22D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2367 DUP4 DUP6 PUSH2 0x2344 JUMP JUMPDEST SWAP4 POP PUSH2 0x2374 DUP4 DUP6 DUP5 PUSH2 0x234E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x238C DUP3 DUP5 DUP7 PUSH2 0x235C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23A3 DUP4 DUP6 PUSH2 0x1D2C JUMP JUMPDEST SWAP4 POP PUSH2 0x23B0 DUP4 DUP6 DUP5 PUSH2 0x234E JUMP JUMPDEST PUSH2 0x23B9 DUP4 PUSH2 0x1D4A JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23DD DUP2 DUP6 DUP8 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP PUSH2 0x23EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x242B DUP3 PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP PUSH2 0x2436 DUP4 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x23F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2467 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EB8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x247A DUP2 DUP5 DUP7 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24B8 PUSH1 0x10 DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 POP PUSH2 0x24C3 DUP3 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E5 DUP2 PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2520 PUSH1 0x1F DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 POP PUSH2 0x252B DUP3 PUSH2 0x24EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x254D DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2567 PUSH0 DUP4 ADD DUP7 PUSH2 0x20CF JUMP JUMPDEST PUSH2 0x2574 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x2581 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25BD PUSH1 0x14 DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 POP PUSH2 0x25C8 DUP3 PUSH2 0x2589 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25EA DUP2 PUSH2 0x25B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 GASPRICE RETURNDATASIZE 0xDA SLT 0xE5 SWAP14 DUP1 POP DUP10 0xCE 0xD7 DUP12 ISZERO LOG2 SWAP5 0xE1 MSTORE8 0xCE MOD 0xBC PREVRANDAO TLOAD PUSH24 0x987A3646D52885A264736F6C634300081A00330000000000 ",
							"sourceMap": "403:7740:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7911:229:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1111:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7560:67:8;;;:::i;:::-;;754:24;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;7489:63:8;;;:::i;:::-;;5682:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6459:587;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1203:52:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;992:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1310:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7696:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4173:931;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;872:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5189:382;;;:::i;:::-;;6081:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3350:614;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;785:31:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:4;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;7911:229:8:-;8067:4;1239:19:2;:17;:19::i;:::-;8096:36:8::1;8115:4;8121:2;8125:6;8096:18;:36::i;:::-;8089:43;;7911:229:::0;;;;;:::o;1111:46::-;;;;;;;;;;;;;;;;;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;7560:67:8:-;1531:13:0;:11;:13::i;:::-;7609:10:8::1;:8;:10::i;:::-;7560:67::o:0;754:24::-;;;;;;;;;;;;;;;;;;;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7489:63:8:-;1531:13:0;:11;:13::i;:::-;7536:8:8::1;:6;:8::i;:::-;7489:63::o:0;5682:288::-;1531:13:0;:11;:13::i;:::-;5798:8:8::1;5790:5;:16;;;;;;:::i;:::-;;;;5822:140;5849:8;:25;;;5889:8;:23;;;5927:8;:24;;;5822:140;;;;;;;;:::i;:::-;;;;;;;;5682:288:::0;:::o;6459:587::-;1531:13:0;:11;:13::i;:::-;6619:1:8::1;6597:24;;:10;:24;;::::0;6593:53:::1;;6630:16;;;;;;;;;;;;;;6593:53;6715:12;;;;;;;;;;;;;;;;::::0;6705:23:::1;;;;;;6687:12;;6671:30;;;;;;;:::i;:::-;;;;;;;;:57:::0;6667:305:::1;;6764:10;6745:16;;:29;;;;;;;;;;;;;;;;;;6667:305;;;6840:16;;;;;;;;;;;;;;;;::::0;6830:27:::1;;;;;;6812:12;;6796:30;;;;;;;:::i;:::-;;;;;;;;:61:::0;6792:180:::1;;6897:10;6874:20;;:33;;;;;;;;;;;;;;;;;;6792:180;;;6947:13;;;;;;;;;;;;;;6792:180;6667:305;6997:41;7013:12;;7027:10;6997:41;;;;;;;;:::i;:::-;;;;;;;;6459:587:::0;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1203:52:8:-;;;;;;;;;;;;;;;;;:::o;992:31::-;;;;;;;;;;;;;:::o;1310:48::-;;;;;;;;;;;;;;;;;:::o;1030:35::-;;;;;;;;;;;;;:::o;7696:207::-;7839:4;1239:19:2;:17;:19::i;:::-;7869:26:8::1;7884:2;7888:6;7869:14;:26::i;:::-;7862:33;;7696:207:::0;;;;:::o;4173:931::-;3045:16;;;;;;;;;;;3031:30;;:10;:30;;;;:68;;;;;3079:20;;;;;;;;;;;3065:34;;:10;:34;;;;3031:68;3027:114;;;3121:20;;;;;;;;;;;;;;3027:114;1239:19:2::1;:17;:19::i;:::-;4322:14:8::2;4393;;;;;;;;;;;;;;;;::::0;4383:25:::2;;;;;;4367:10;;4351:28;;;;;;;:::i;:::-;;;;;;;;:57:::0;4347:298:::2;;4434:5;:20;;;4425:29;;4347:298;;;4518:14;;;;;;;;;;;;;;;;::::0;4508:25:::2;;;;;;4492:10;;4476:28;;;;;;;:::i;:::-;;;;;;;;:57:::0;4472:173:::2;;4559:5;:21;;;4550:30;;4472:173;;;4620:13;;;;;;;;;;;;;;4472:173;4347:298;4711:33;4739:4;4711:27;:33::i;:::-;4837:16;;4828:6;4806:13;:19;4820:4;4806:19;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;:47;4802:101;;;4875:28;;;;;;;;;;;;;;4802:101;4951:6;4928:13;:19;4942:4;4928:19;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;5015:19;5021:4;5027:6;5015:5;:19::i;:::-;5071:4;5060:36;;;5077:6;5085:10;;5060:36;;;;;;;;:::i;:::-;;;;;;;;4311:793;4173:931:::0;;;:::o;872:44::-;910:6;872:44;:::o;5189:382::-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;5294:14:8::2;5311:11;:23;5323:10;5311:23;;;;;;;;;;;;;;;;5294:40;;5359:1;5349:6;:11:::0;5345:45:::2;;5369:21;;;;;;;;;;;;;;5345:45;5484:1;5458:11;:23;5470:10;5458:23;;;;;;;;;;;;;;;:27;;;;5538:25;5544:10;5556:6;5538:5;:25::i;:::-;5283:288;2303:20:3::0;:18;:20::i;:::-;5189:382:8:o;6081:184::-;1531:13:0;:11;:13::i;:::-;6204:6:8::1;6185:16;:25;;;;6226:31;6250:6;6226:31;;;;;;:::i;:::-;;;;;;;;6081:184:::0;:::o;3350:614::-;3045:16;;;;;;;;;;;3031:30;;:10;:30;;;;:68;;;;;3079:20;;;;;;;;;;;3065:34;;:10;:34;;;;3031:68;3027:114;;;3121:20;;;;;;;;;;;;;;3027:114;1239:19:2::1;:17;:19::i;:::-;3505:1:8::2;3495:6;:11:::0;3491:39:::2;;3515:15;;;;;;;;;;;;;;3491:39;3597:36;3625:7;3597:27;:36::i;:::-;3729:16;;3720:6;3695:13;:22;3709:7;3695:22;;;;;;;;;;;;;;;;:31;;;;:::i;:::-;:50;3691:104;;;3767:28;;;;;;;;;;;;;;3691:104;3844:6;3820:11;:20;3832:7;3820:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3887:6;3861:13;:22;3875:7;3861:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;3940:7;3919:37;;3928:10;3919:37;;;3949:6;3919:37;;;;;;:::i;:::-;;;;;;;;3350:614:::0;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;785:31:8:-;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;4776:244:4:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;7199:246:8:-;910:6;7293:17;:23;7311:4;7293:23;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;7274:15;:56;7270:168;;7369:1;7347:13;:19;7361:4;7347:19;;;;;;;;;;;;;;;:23;;;;7411:15;7385:17;:23;7403:4;7385:23;;;;;;;;;;;;;;;:41;;;;7270:168;7199:246;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;9701:432:4:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:442::-;5230:4;5268:2;5257:9;5253:18;5245:26;;5281:71;5349:1;5338:9;5334:17;5325:6;5281:71;:::i;:::-;5362:72;5430:2;5419:9;5415:18;5406:6;5362:72;:::i;:::-;5444;5512:2;5501:9;5497:18;5488:6;5444:72;:::i;:::-;5081:442;;;;;;:::o;5529:117::-;5638:1;5635;5628:12;5689:235;5766:5;5807:2;5798:6;5793:3;5789:16;5785:25;5782:112;;;5813:79;;:::i;:::-;5782:112;5912:6;5903:15;;5689:235;;;;:::o;5930:391::-;6020:6;6069:2;6057:9;6048:7;6044:23;6040:32;6037:119;;;6075:79;;:::i;:::-;6037:119;6195:1;6220:84;6296:7;6287:6;6276:9;6272:22;6220:84;:::i;:::-;6210:94;;6166:148;5930:391;;;;:::o;6327:117::-;6436:1;6433;6426:12;6450:117;6559:1;6556;6549:12;6573:117;6682:1;6679;6672:12;6710:553;6768:8;6778:6;6828:3;6821:4;6813:6;6809:17;6805:27;6795:122;;6836:79;;:::i;:::-;6795:122;6949:6;6936:20;6926:30;;6979:18;6971:6;6968:30;6965:117;;;7001:79;;:::i;:::-;6965:117;7115:4;7107:6;7103:17;7091:29;;7169:3;7161:4;7153:6;7149:17;7139:8;7135:32;7132:41;7129:128;;;7176:79;;:::i;:::-;7129:128;6710:553;;;;;:::o;7269:674::-;7349:6;7357;7365;7414:2;7402:9;7393:7;7389:23;7385:32;7382:119;;;7420:79;;:::i;:::-;7382:119;7568:1;7557:9;7553:17;7540:31;7598:18;7590:6;7587:30;7584:117;;;7620:79;;:::i;:::-;7584:117;7733:65;7790:7;7781:6;7770:9;7766:22;7733:65;:::i;:::-;7715:83;;;;7511:297;7847:2;7873:53;7918:7;7909:6;7898:9;7894:22;7873:53;:::i;:::-;7863:63;;7818:118;7269:674;;;;;:::o;7949:118::-;8036:24;8054:5;8036:24;:::i;:::-;8031:3;8024:37;7949:118;;:::o;8073:222::-;8166:4;8204:2;8193:9;8189:18;8181:26;;8217:71;8285:1;8274:9;8270:17;8261:6;8217:71;:::i;:::-;8073:222;;;;:::o;8301:674::-;8381:6;8389;8397;8446:2;8434:9;8425:7;8421:23;8417:32;8414:119;;;8452:79;;:::i;:::-;8414:119;8572:1;8597:53;8642:7;8633:6;8622:9;8618:22;8597:53;:::i;:::-;8587:63;;8543:117;8727:2;8716:9;8712:18;8699:32;8758:18;8750:6;8747:30;8744:117;;;8780:79;;:::i;:::-;8744:117;8893:65;8950:7;8941:6;8930:9;8926:22;8893:65;:::i;:::-;8875:83;;;;8670:298;8301:674;;;;;:::o;8981:329::-;9040:6;9089:2;9077:9;9068:7;9064:23;9060:32;9057:119;;;9095:79;;:::i;:::-;9057:119;9215:1;9240:53;9285:7;9276:6;9265:9;9261:22;9240:53;:::i;:::-;9230:63;;9186:117;8981:329;;;;:::o;9316:474::-;9384:6;9392;9441:2;9429:9;9420:7;9416:23;9412:32;9409:119;;;9447:79;;:::i;:::-;9409:119;9567:1;9592:53;9637:7;9628:6;9617:9;9613:22;9592:53;:::i;:::-;9582:63;;9538:117;9694:2;9720:53;9765:7;9756:6;9745:9;9741:22;9720:53;:::i;:::-;9710:63;;9665:118;9316:474;;;;;:::o;9796:180::-;9844:77;9841:1;9834:88;9941:4;9938:1;9931:15;9965:4;9962:1;9955:15;9982:320;10026:6;10063:1;10057:4;10053:12;10043:22;;10110:1;10104:4;10100:12;10131:18;10121:81;;10187:4;10179:6;10175:17;10165:27;;10121:81;10249:2;10241:6;10238:14;10218:18;10215:38;10212:84;;10268:18;;:::i;:::-;10212:84;10033:269;9982:320;;;:::o;10494:186::-;10539:11;10588:3;10575:17;10601:33;10628:5;10601:33;:::i;:::-;10668:5;10644:29;;10551:129;10494:186;;;:::o;10686:92::-;10718:8;10765:5;10762:1;10758:13;10737:34;;10686:92;;;:::o;10784:290::-;10842:6;10871:66;10958:22;10971:8;10958:22;:::i;:::-;10946:34;;11013:4;11009:9;11002:5;10998:21;10989:30;;11062:4;11052:8;11048:19;11041:5;11038:30;11028:40;;10849:225;10784:290;;;;:::o;11080:60::-;11108:3;11129:5;11122:12;;11080:60;;;:::o;11146:142::-;11196:9;11229:53;11247:34;11256:24;11274:5;11256:24;:::i;:::-;11247:34;:::i;:::-;11229:53;:::i;:::-;11216:66;;11146:142;;;:::o;11294:75::-;11337:3;11358:5;11351:12;;11294:75;;;:::o;11375:262::-;11485:39;11516:7;11485:39;:::i;:::-;11546:84;11588:41;11612:16;11588:41;:::i;:::-;11581:4;11575:11;11546:84;:::i;:::-;11540:4;11533:98;11451:186;11375:262;;:::o;11643:1151::-;11827:1;11821:4;11817:12;11873:1;11866:5;11862:13;11923:12;11966:42;11994:13;11966:42;:::i;:::-;11949:59;;12022:78;12086:13;12074:10;12022:78;:::i;:::-;11784:327;;;12164:1;12158:4;12154:12;12210:2;12203:5;12199:14;12261:12;12304:42;12332:13;12304:42;:::i;:::-;12287:59;;12360:78;12424:13;12412:10;12360:78;:::i;:::-;12121:328;;;12502:1;12496:4;12492:12;12548:2;12541:5;12537:14;12599:12;12642:42;12670:13;12642:42;:::i;:::-;12625:59;;12698:78;12762:13;12750:10;12698:78;:::i;:::-;12459:328;;;11643:1151;;:::o;12800:272::-;12944:122;13058:7;13052:4;12944:122;:::i;:::-;12800:272;;:::o;13078:147::-;13179:11;13216:3;13201:18;;13078:147;;;;:::o;13231:148::-;13329:6;13324:3;13319;13306:30;13370:1;13361:6;13356:3;13352:16;13345:27;13231:148;;;:::o;13407:327::-;13521:3;13542:88;13623:6;13618:3;13542:88;:::i;:::-;13535:95;;13640:56;13689:6;13684:3;13677:5;13640:56;:::i;:::-;13721:6;13716:3;13712:16;13705:23;;13407:327;;;;;:::o;13740:291::-;13880:3;13902:103;14001:3;13992:6;13984;13902:103;:::i;:::-;13895:110;;14022:3;14015:10;;13740:291;;;;;:::o;14061:317::-;14159:3;14180:71;14244:6;14239:3;14180:71;:::i;:::-;14173:78;;14261:56;14310:6;14305:3;14298:5;14261:56;:::i;:::-;14342:29;14364:6;14342:29;:::i;:::-;14337:3;14333:39;14326:46;;14061:317;;;;;:::o;14384:443::-;14535:4;14573:2;14562:9;14558:18;14550:26;;14622:9;14616:4;14612:20;14608:1;14597:9;14593:17;14586:47;14650:88;14733:4;14724:6;14716;14650:88;:::i;:::-;14642:96;;14748:72;14816:2;14805:9;14801:18;14792:6;14748:72;:::i;:::-;14384:443;;;;;;:::o;14833:180::-;14881:77;14878:1;14871:88;14978:4;14975:1;14968:15;15002:4;14999:1;14992:15;15019:191;15059:3;15078:20;15096:1;15078:20;:::i;:::-;15073:25;;15112:20;15130:1;15112:20;:::i;:::-;15107:25;;15155:1;15152;15148:9;15141:16;;15176:3;15173:1;15170:10;15167:36;;;15183:18;;:::i;:::-;15167:36;15019:191;;;;:::o;15216:443::-;15367:4;15405:2;15394:9;15390:18;15382:26;;15418:71;15486:1;15475:9;15471:17;15462:6;15418:71;:::i;:::-;15536:9;15530:4;15526:20;15521:2;15510:9;15506:18;15499:48;15564:88;15647:4;15638:6;15630;15564:88;:::i;:::-;15556:96;;15216:443;;;;;;:::o;15665:166::-;15805:18;15801:1;15793:6;15789:14;15782:42;15665:166;:::o;15837:366::-;15979:3;16000:67;16064:2;16059:3;16000:67;:::i;:::-;15993:74;;16076:93;16165:3;16076:93;:::i;:::-;16194:2;16189:3;16185:12;16178:19;;15837:366;;;:::o;16209:419::-;16375:4;16413:2;16402:9;16398:18;16390:26;;16462:9;16456:4;16452:20;16448:1;16437:9;16433:17;16426:47;16490:131;16616:4;16490:131;:::i;:::-;16482:139;;16209:419;;;:::o;16634:181::-;16774:33;16770:1;16762:6;16758:14;16751:57;16634:181;:::o;16821:366::-;16963:3;16984:67;17048:2;17043:3;16984:67;:::i;:::-;16977:74;;17060:93;17149:3;17060:93;:::i;:::-;17178:2;17173:3;17169:12;17162:19;;16821:366;;;:::o;17193:419::-;17359:4;17397:2;17386:9;17382:18;17374:26;;17446:9;17440:4;17436:20;17432:1;17421:9;17417:17;17410:47;17474:131;17600:4;17474:131;:::i;:::-;17466:139;;17193:419;;;:::o;17618:442::-;17767:4;17805:2;17794:9;17790:18;17782:26;;17818:71;17886:1;17875:9;17871:17;17862:6;17818:71;:::i;:::-;17899:72;17967:2;17956:9;17952:18;17943:6;17899:72;:::i;:::-;17981;18049:2;18038:9;18034:18;18025:6;17981:72;:::i;:::-;17618:442;;;;;;:::o;18066:170::-;18206:22;18202:1;18194:6;18190:14;18183:46;18066:170;:::o;18242:366::-;18384:3;18405:67;18469:2;18464:3;18405:67;:::i;:::-;18398:74;;18481:93;18570:3;18481:93;:::i;:::-;18599:2;18594:3;18590:12;18583:19;;18242:366;;;:::o;18614:419::-;18780:4;18818:2;18807:9;18803:18;18795:26;;18867:9;18861:4;18857:20;18853:1;18842:9;18838:17;18831:47;18895:131;19021:4;18895:131;:::i;:::-;18887:139;;18614:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1953400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAILY_RESET()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2919",
								"claimWages()": "infinite",
								"dailyEarningsCap()": "2535",
								"decimals()": "428",
								"earningsToday(address)": "2869",
								"lastEarningsReset(address)": "2892",
								"name()": "infinite",
								"owner()": "2612",
								"pause()": "infinite",
								"paused()": "2541",
								"payReward(address,string)": "infinite",
								"rates()": "infinite",
								"recordWage(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"signsHistoryContract()": "2597",
								"signsNFTContract()": "2553",
								"symbol()": "infinite",
								"totalSupply()": "2523",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateDailyEarningsCap(uint256)": "infinite",
								"updateGameContract(string,address)": "infinite",
								"updateRates((uint256,uint256,uint256))": "infinite",
								"wageBalance(address)": "2870"
							},
							"internal": {
								"_checkAndResetDailyEarnings(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2010,
									"end": 2961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2225,
									"end": 2235,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2203,
									"end": 2207,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2215,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2281,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2252,
									"end": 2283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2252,
									"end": 2283,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2269,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2252,
									"end": 2283,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2283,
									"modifierDepth": 2,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2322,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2322,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2252,
									"end": 2322,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2322,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2320,
									"end": 2321,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2322,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2287,
									"end": 2322,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 2308,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 2322,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2287,
									"end": 2322,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 2322,
									"modifierDepth": 2,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2252,
									"end": 2322,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2252,
									"end": 2322,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2248,
									"end": 2361,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2248,
									"end": 2361,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2248,
									"end": 2361,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2361,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2248,
									"end": 2361,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2248,
									"end": 2361,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2405,
									"end": 2422,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2402,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2386,
									"end": 2402,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2422,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2456,
									"end": 2477,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2453,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 2433,
									"end": 2453,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2477,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2603,
									"end": 2607,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2667,
									"end": 2671,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2558,
									"end": 2778,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2555,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2778,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2824,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 2799,
									"end": 2815,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 2799,
									"end": 2824,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2799,
									"end": 2824,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2799,
									"end": 2824,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2799,
									"end": 2824,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2921,
									"end": 2953,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2927,
									"end": 2937,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2939,
									"end": 2952,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2921,
									"end": 2926,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2921,
									"end": 2926,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2921,
									"end": 2926,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2921,
									"end": 2953,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2921,
									"end": 2953,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2921,
									"end": 2953,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2921,
									"end": 2953,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2921,
									"end": 2953,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2967,
									"end": 2974,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3007,
									"end": 3049,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3000,
									"end": 3005,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3050,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2985,
									"end": 3050,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2985,
									"end": 3050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3099,
									"end": 3106,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 3146,
									"end": 3151,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3128,
									"end": 3152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3117,
									"end": 3152,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3117,
									"end": 3152,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3062,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3575,
									"end": 3581,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3583,
									"end": 3589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3591,
									"end": 3597,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3599,
									"end": 3605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 3651,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 3636,
									"end": 3645,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3634,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3623,
									"end": 3646,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3619,
									"end": 3652,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 3655,
									"end": 3734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3796,
									"end": 3797,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3794,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3781,
									"end": 3798,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3775,
									"end": 3799,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3826,
									"end": 3844,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3818,
									"end": 3824,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3815,
									"end": 3845,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3848,
									"end": 3927,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4019,
									"end": 4026,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4016,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3999,
									"end": 4008,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4017,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3953,
									"end": 4027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4027,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4027,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3746,
									"end": 4037,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4097,
									"end": 4099,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4095,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4082,
									"end": 4100,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4076,
									"end": 4101,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4120,
									"end": 4126,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4117,
									"end": 4147,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 4150,
									"end": 4229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 4321,
									"end": 4328,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4312,
									"end": 4318,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4301,
									"end": 4310,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 4255,
									"end": 4329,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4329,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4329,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4339,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4378,
									"end": 4380,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 4460,
									"end": 4467,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4457,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4440,
									"end": 4449,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4458,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4404,
									"end": 4468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4394,
									"end": 4468,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4394,
									"end": 4468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4349,
									"end": 4478,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4517,
									"end": 4519,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 4599,
									"end": 4606,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4590,
									"end": 4596,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4579,
									"end": 4588,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4575,
									"end": 4597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4543,
									"end": 4607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4533,
									"end": 4607,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4533,
									"end": 4607,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4488,
									"end": 4617,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4659,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 4739,
									"end": 4746,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4730,
									"end": 4736,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4719,
									"end": 4728,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4737,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4683,
									"end": 4747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4747,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4747,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4822,
									"end": 4828,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4856,
									"end": 4861,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4850,
									"end": 4862,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4862,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4862,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4875,
									"end": 5055,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 4875,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4923,
									"end": 5000,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4920,
									"end": 4921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4913,
									"end": 5001,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5020,
									"end": 5024,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 5017,
									"end": 5018,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5010,
									"end": 5025,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5044,
									"end": 5048,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5041,
									"end": 5042,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5034,
									"end": 5049,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5105,
									"end": 5111,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5142,
									"end": 5143,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5136,
									"end": 5140,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5132,
									"end": 5144,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 5122,
									"end": 5144,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5122,
									"end": 5144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5189,
									"end": 5190,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5183,
									"end": 5187,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5179,
									"end": 5191,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5228,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5266,
									"end": 5270,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 5258,
									"end": 5264,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5254,
									"end": 5271,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5244,
									"end": 5271,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5244,
									"end": 5271,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5328,
									"end": 5330,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5320,
									"end": 5326,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5317,
									"end": 5331,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5297,
									"end": 5315,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5294,
									"end": 5332,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5347,
									"end": 5365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5112,
									"end": 5381,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5061,
									"end": 5381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5436,
									"end": 5440,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5459,
									"end": 5462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5451,
									"end": 5462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5451,
									"end": 5462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5482,
									"end": 5485,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5479,
									"end": 5480,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5472,
									"end": 5486,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5513,
									"end": 5514,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5503,
									"end": 5521,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 5495,
									"end": 5521,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5495,
									"end": 5521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5387,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5571,
									"end": 5577,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5618,
									"end": 5620,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5613,
									"end": 5615,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5602,
									"end": 5616,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5598,
									"end": 5621,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 5588,
									"end": 5621,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5588,
									"end": 5621,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5534,
									"end": 5627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5677,
									"end": 5685,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5727,
									"end": 5732,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5721,
									"end": 5725,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5717,
									"end": 5733,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5733,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5733,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5633,
									"end": 5740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5815,
									"end": 5821,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 5853,
									"end": 5863,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5849,
									"end": 5867,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5918,
									"end": 5984,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5907,
									"end": 5916,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 5888,
									"end": 5985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 6036,
									"end": 6044,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6034,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 6006,
									"end": 6045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5994,
									"end": 6045,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 5994,
									"end": 6045,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6074,
									"end": 6083,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6067,
									"end": 6072,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6063,
									"end": 6084,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6084,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6084,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6127,
									"end": 6131,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6117,
									"end": 6125,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6113,
									"end": 6132,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6106,
									"end": 6111,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6103,
									"end": 6133,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 6093,
									"end": 6133,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6093,
									"end": 6133,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5822,
									"end": 6139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5822,
									"end": 6139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6173,
									"end": 6176,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6194,
									"end": 6199,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6187,
									"end": 6199,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6187,
									"end": 6199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6261,
									"end": 6270,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 6339,
									"end": 6344,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 6321,
									"end": 6345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6312,
									"end": 6346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 6294,
									"end": 6347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6281,
									"end": 6347,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6281,
									"end": 6347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6405,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6423,
									"end": 6428,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6416,
									"end": 6428,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6416,
									"end": 6428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6359,
									"end": 6434,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 6581,
									"end": 6588,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6550,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 6684,
									"end": 6700,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6660,
									"end": 6701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6639,
									"end": 6650,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6611,
									"end": 6702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "tag",
									"source": 9,
									"value": "162"
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6605,
									"end": 6609,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6598,
									"end": 6703,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6709,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6715,
									"end": 6788,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 6715,
									"end": 6788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6760,
									"end": 6763,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6715,
									"end": 6788,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6715,
									"end": 6788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 6871,
									"end": 6903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 6970,
									"end": 6976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6962,
									"end": 6968,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6956,
									"end": 6960,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6912,
									"end": 6977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7066,
									"end": 7069,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7059,
									"end": 7064,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7056,
									"end": 7070,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7150,
									"end": 7155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 7120,
									"end": 7159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7093,
									"end": 7094,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7086,
									"end": 7091,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7082,
									"end": 7095,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7073,
									"end": 7095,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7073,
									"end": 7095,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6989,
									"end": 7175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7282,
									"end": 7284,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7277,
									"end": 7280,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7274,
									"end": 7285,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 7348,
									"end": 7353,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 7316,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 7418,
									"end": 7428,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7400,
									"end": 7429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7390,
									"end": 7398,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7386,
									"end": 7430,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7583,
									"end": 7585,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7571,
									"end": 7581,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7568,
									"end": 7586,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7604,
									"end": 7612,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7589,
									"end": 7612,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7589,
									"end": 7612,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 7701,
									"end": 7704,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7683,
									"end": 7705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7673,
									"end": 7681,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7669,
									"end": 7706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7656,
									"end": 7667,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 7627,
									"end": 7707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7286,
									"end": 7717,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7286,
									"end": 7717,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7181,
									"end": 7724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7784,
									"end": 7792,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7834,
									"end": 7839,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7828,
									"end": 7832,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7824,
									"end": 7840,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 7803,
									"end": 7840,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7803,
									"end": 7840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7730,
									"end": 7847,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7897,
									"end": 7903,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 7978,
									"end": 7979,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7974,
									"end": 7980,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7966,
									"end": 7971,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7963,
									"end": 7964,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 7959,
									"end": 7972,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 7930,
									"end": 7981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7926,
									"end": 7982,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8011,
									"end": 8015,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 8005,
									"end": 8009,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8001,
									"end": 8016,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7991,
									"end": 8016,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7991,
									"end": 8016,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7904,
									"end": 8022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 8022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8107,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8274,
									"end": 8277,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8268,
									"end": 8272,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 8249,
									"end": 8278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8241,
									"end": 8278,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8241,
									"end": 8278,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8311,
									"end": 8314,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8308,
									"end": 8309,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8304,
									"end": 8315,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8298,
									"end": 8302,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8295,
									"end": 8316,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8316,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8316,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8322,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 8477,
									"end": 8480,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 8444,
									"end": 8481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8546,
									"end": 8564,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8538,
									"end": 8544,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8535,
									"end": 8565,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 8568,
									"end": 8586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "tag",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 8644,
									"end": 8648,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8638,
									"end": 8649,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 8612,
									"end": 8650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 8757,
									"end": 8763,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8749,
									"end": 8755,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8743,
									"end": 8747,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 8697,
									"end": 8764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8791,
									"end": 8792,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8819,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8802,
									"end": 8819,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8802,
									"end": 8819,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8847,
									"end": 8849,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8839,
									"end": 8845,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8836,
									"end": 8850,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8864,
									"end": 8865,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9521,
									"end": 9522,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 9544,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9587,
									"end": 9596,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9582,
									"end": 9585,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 9578,
									"end": 9597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9572,
									"end": 9598,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 9598,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9563,
									"end": 9598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "tag",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9698,
									"end": 9704,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9691,
									"end": 9696,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 9638,
									"end": 9705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9632,
									"end": 9636,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9625,
									"end": 9706,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9494,
									"end": 9716,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8911,
									"end": 8915,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8907,
									"end": 8916,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8899,
									"end": 8905,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8895,
									"end": 8917,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 8977,
									"end": 8981,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 8945,
									"end": 8982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9004,
									"end": 9005,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9032,
									"end": 9039,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9029,
									"end": 9030,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9026,
									"end": 9040,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9111,
									"end": 9120,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9106,
									"end": 9109,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9102,
									"end": 9121,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9096,
									"end": 9122,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9088,
									"end": 9094,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9081,
									"end": 9123,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9162,
									"end": 9163,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9154,
									"end": 9160,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9150,
									"end": 9164,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9140,
									"end": 9164,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9140,
									"end": 9164,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9209,
									"end": 9211,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9198,
									"end": 9207,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9194,
									"end": 9212,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9181,
									"end": 9212,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9181,
									"end": 9212,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9055,
									"end": 9059,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9052,
									"end": 9053,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9048,
									"end": 9060,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9043,
									"end": 9060,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9043,
									"end": 9060,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9254,
									"end": 9260,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9245,
									"end": 9252,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9242,
									"end": 9261,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9312,
									"end": 9321,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9307,
									"end": 9310,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9303,
									"end": 9322,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9297,
									"end": 9323,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 9397,
									"end": 9401,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 9389,
									"end": 9395,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9385,
									"end": 9402,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9374,
									"end": 9383,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 9355,
									"end": 9403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9347,
									"end": 9353,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9340,
									"end": 9404,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9262,
									"end": 9418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9464,
									"end": 9465,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9460,
									"end": 9461,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 9452,
									"end": 9458,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9448,
									"end": 9462,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9444,
									"end": 9466,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9438,
									"end": 9442,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9431,
									"end": 9467,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8866,
									"end": 9477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8866,
									"end": 9477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8866,
									"end": 9477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8419,
									"end": 9722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8419,
									"end": 9722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8419,
									"end": 9722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8327,
									"end": 9722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9833,
									"end": 9838,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 9815,
									"end": 9839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9810,
									"end": 9813,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9840,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9728,
									"end": 9846,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9945,
									"end": 9949,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9983,
									"end": 9985,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9972,
									"end": 9981,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9968,
									"end": 9986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9960,
									"end": 9986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9960,
									"end": 9986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 10064,
									"end": 10065,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10053,
									"end": 10062,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10049,
									"end": 10066,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10040,
									"end": 10046,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 9996,
									"end": 10067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "tag",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9852,
									"end": 10074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10080,
									"end": 10260,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 10080,
									"end": 10260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10128,
									"end": 10205,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10125,
									"end": 10126,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10118,
									"end": 10206,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10225,
									"end": 10229,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 10222,
									"end": 10223,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 10215,
									"end": 10230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10249,
									"end": 10253,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 10246,
									"end": 10247,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10239,
									"end": 10254,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10306,
									"end": 10309,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 10343,
									"end": 10344,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 10325,
									"end": 10345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10320,
									"end": 10345,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10320,
									"end": 10345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 10377,
									"end": 10378,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 10359,
									"end": 10379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10354,
									"end": 10379,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10354,
									"end": 10379,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10402,
									"end": 10403,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10399,
									"end": 10400,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10395,
									"end": 10404,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10388,
									"end": 10404,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10388,
									"end": 10404,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10423,
									"end": 10426,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10420,
									"end": 10421,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10417,
									"end": 10427,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 10430,
									"end": 10448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "tag",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "tag",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10266,
									"end": 10457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "212"
								},
								{
									"begin": 10568,
									"end": 10573,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 10550,
									"end": 10574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "tag",
									"source": 9,
									"value": "212"
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10545,
									"end": 10548,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10538,
									"end": 10575,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10463,
									"end": 10581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10736,
									"end": 10740,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10774,
									"end": 10776,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 10763,
									"end": 10772,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10759,
									"end": 10777,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10751,
									"end": 10777,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10751,
									"end": 10777,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 10855,
									"end": 10856,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10844,
									"end": 10853,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10840,
									"end": 10857,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10831,
									"end": 10837,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 10787,
									"end": 10858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "tag",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 10936,
									"end": 10938,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10925,
									"end": 10934,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10921,
									"end": 10939,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10912,
									"end": 10918,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 10868,
									"end": 10940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "tag",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 11018,
									"end": 11020,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 11007,
									"end": 11016,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11003,
									"end": 11021,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10994,
									"end": 11000,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 10950,
									"end": 11022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "tag",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10587,
									"end": 11029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11128,
									"end": 11132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11166,
									"end": 11168,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11155,
									"end": 11164,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11151,
									"end": 11169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11143,
									"end": 11169,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11143,
									"end": 11169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11247,
									"end": 11248,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11236,
									"end": 11245,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11232,
									"end": 11249,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11223,
									"end": 11229,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 11179,
									"end": 11250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "tag",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11035,
									"end": 11257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 8143,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e93a3dda12e59d805089ced78b15a294e153ce06bc445c77987a3646d52885a264736f6c634300081a0033",
									".code": [
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "C0008D0C"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "D06A2E0E"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "D06A2E0E"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "F4F831A0"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "C0008D0C"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "C1F3BDDE"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "CA1C7238"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "CE55B584"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "A3262EA2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "A3262EA2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "A6EC1C6D"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "A775CED3"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "9778D0CD"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "43F48FBD"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "849D13A3"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "8D9D7307"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "43F48FBD"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "2A504A97"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 8143,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7911,
											"end": 8140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 7911,
											"end": 8140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7911,
											"end": 8140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1111,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1111,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1111,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 7560,
											"end": 7627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 754,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 754,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 7489,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5682,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5682,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6459,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6459,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1203,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1203,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1203,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 992,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 992,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1310,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1310,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1310,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1030,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1030,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 7696,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 7696,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7696,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4173,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4173,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 872,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 872,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5189,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6081,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6081,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3350,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3350,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 785,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 785,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8096,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8115,
											"end": 8119,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8121,
											"end": 8123,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8131,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 8096,
											"end": 8132,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8132,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8096,
											"end": 8132,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 8140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 7560,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7609,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7609,
											"end": 7617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7609,
											"end": 7619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7609,
											"end": 7619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 754,
											"end": 778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 7536,
											"end": 7544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 7536,
											"end": 7544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5806,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5790,
											"end": 5806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "23010BC68E7F4C0BE9887F513C570C7A0F5F511B9716ABCCD42BF3B8943532B"
										},
										{
											"begin": 5849,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5849,
											"end": 5874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5849,
											"end": 5874,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5889,
											"end": 5912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5912,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5951,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5951,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5822,
											"end": 5962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5962,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6619,
											"end": 6620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6597,
											"end": 6621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6597,
											"end": 6621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6621,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6593,
											"end": 6646,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6646,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6593,
											"end": 6646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6E66740000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6705,
											"end": 6728,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6728,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6687,
											"end": 6699,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6687,
											"end": 6699,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6671,
											"end": 6701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6701,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6728,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6764,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6745,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6774,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "686973746F727900000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6830,
											"end": 6857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6857,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6796,
											"end": 6826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6826,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6857,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 6874,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6874,
											"end": 6907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6A43F8D100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6792,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6667,
											"end": 6972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F611FEC7BABEFD259C57EA5B6006ACFF8140AB17BB816C65BA0AA7E36C09CAA8"
										},
										{
											"begin": 7013,
											"end": 7025,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7025,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7027,
											"end": 7037,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6997,
											"end": 7038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7038,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 7046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 7884,
											"end": 7886,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 7869,
											"end": 7895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 7869,
											"end": 7895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3041,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "5C427CD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4336,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "6469617279000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4377,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4377,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4351,
											"end": 4379,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4379,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4408,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4434,
											"end": 4454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4434,
											"end": 4454,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4454,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4454,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4454,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "70686F746F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4533,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4533,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4533,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4533,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4502,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4502,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4476,
											"end": 4504,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4504,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4533,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4559,
											"end": 4580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4559,
											"end": 4580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4580,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4580,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4580,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "6A43F8D100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4633,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4472,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4347,
											"end": 4645,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 4744,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4739,
											"end": 4743,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 4738,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4711,
											"end": 4744,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 4744,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4711,
											"end": 4744,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 4837,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4834,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4819,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4824,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4825,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4834,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4806,
											"end": 4834,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4834,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4834,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4806,
											"end": 4834,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4834,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4806,
											"end": 4834,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4853,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4802,
											"end": 4903,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4802,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4802,
											"end": 4903,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D75747F600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4903,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4802,
											"end": 4903,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4802,
											"end": 4903,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4957,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4946,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4928,
											"end": 4957,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4957,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5015,
											"end": 5034,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5021,
											"end": 5025,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5033,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5015,
											"end": 5020,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 5015,
											"end": 5034,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5015,
											"end": 5034,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5015,
											"end": 5034,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5075,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "21A82678DAA5235B7B5DE669FDF9599453D3D885CEE0826E92636D747419689C"
										},
										{
											"begin": 5077,
											"end": 5083,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5095,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5095,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5060,
											"end": 5096,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5096,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4311,
											"end": 5104,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 872,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 872,
											"end": 916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5189,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5333,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5334,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5334,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5355,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5360,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5390,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5345,
											"end": 5390,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5390,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5390,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5345,
											"end": 5390,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5485,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5480,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5481,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5485,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5485,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5485,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5485,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5563,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5544,
											"end": 5554,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5556,
											"end": 5562,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5543,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 5538,
											"end": 5563,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5563,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5538,
											"end": 5563,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5571,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5189,
											"end": 5571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 6185,
											"end": 6210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6210,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B1CC6C859F8E547A95CBBE7DCECE9E0FD5A931C906BD08DCF8413A2C83539713"
										},
										{
											"begin": 6250,
											"end": 6256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 6226,
											"end": 6257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6257,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3041,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3061,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3079,
											"end": 3099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "5C427CD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3141,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3027,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3505,
											"end": 3506,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3501,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3495,
											"end": 3506,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 3530,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3491,
											"end": 3530,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3530,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 3530,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3491,
											"end": 3530,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3633,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3625,
											"end": 3632,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3624,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3597,
											"end": 3633,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3633,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3597,
											"end": 3633,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3729,
											"end": 3745,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3726,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3708,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3716,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3717,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3695,
											"end": 3726,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3726,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3695,
											"end": 3726,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3726,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3695,
											"end": 3726,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3745,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3795,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3795,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3691,
											"end": 3795,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D75747F600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3795,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3795,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3691,
											"end": 3795,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3844,
											"end": 3850,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3839,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3820,
											"end": 3850,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3893,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3882,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3861,
											"end": 3893,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3947,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 3938,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "BF26400FFEC32B7F7FA346DF27788423DE869F04AD96FD322DAFC7AF85002636"
										},
										{
											"begin": 3949,
											"end": 3955,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3919,
											"end": 3956,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3956,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 785,
											"end": 816,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 7293,
											"end": 7310,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7293,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7293,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7289,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7330,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 7270,
											"end": 7438,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7360,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7366,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7426,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7402,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7408,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7426,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7438,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 7270,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5281,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 5281,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5362,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 5362,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5501,
											"end": 5510,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5444,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 5444,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5640,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5924,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 5689,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5809,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5798,
											"end": 5804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5793,
											"end": 5796,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5805,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5810,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 5782,
											"end": 5894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 5813,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5813,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5892,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 5813,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5894,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 5782,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5924,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5924,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 6321,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5930,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6071,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6048,
											"end": 6055,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6067,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6072,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 6037,
											"end": 6156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6075,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 6075,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6075,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6075,
											"end": 6154,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 6075,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6156,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 6037,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 6296,
											"end": 6303,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6287,
											"end": 6293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6220,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6220,
											"end": 6304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6220,
											"end": 6304,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 6220,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 6321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 6321,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 6321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 6321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6444,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6327,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6426,
											"end": 6438,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6567,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6450,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6557,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6561,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6690,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6573,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6828,
											"end": 6831,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6825,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6809,
											"end": 6826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6795,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 6795,
											"end": 6917,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 6836,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6836,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6915,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 6836,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6795,
											"end": 6917,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 6795,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6956,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6926,
											"end": 6956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6926,
											"end": 6956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6971,
											"end": 6977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 6998,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 7082,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 7082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 6965,
											"end": 7082,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7001,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7001,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7001,
											"end": 7080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7001,
											"end": 7080,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7001,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 7082,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 6965,
											"end": 7082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7119,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7161,
											"end": 7165,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7153,
											"end": 7159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7147,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7173,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 7129,
											"end": 7257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7176,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7176,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7257,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 7129,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 7263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7402,
											"end": 7411,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7389,
											"end": 7412,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7385,
											"end": 7417,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7501,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7382,
											"end": 7501,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7420,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7420,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7420,
											"end": 7499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7420,
											"end": 7499,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7420,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7501,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7382,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7540,
											"end": 7571,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7590,
											"end": 7596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7617,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7701,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7584,
											"end": 7701,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7620,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7620,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7620,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7620,
											"end": 7699,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7620,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7701,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7584,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7790,
											"end": 7797,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7733,
											"end": 7798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7798,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7733,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7798,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7798,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7873,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7918,
											"end": 7925,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7907,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7873,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7926,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7873,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7926,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8067,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 7949,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 8054,
											"end": 8059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 8036,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8060,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 8036,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8295,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8073,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8206,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8283,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8267,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8217,
											"end": 8288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8288,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 8217,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8295,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8381,
											"end": 8387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8397,
											"end": 8403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8434,
											"end": 8443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8417,
											"end": 8449,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 8452,
											"end": 8531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8572,
											"end": 8573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 8642,
											"end": 8649,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 8639,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 8597,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8587,
											"end": 8650,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8587,
											"end": 8650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8727,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8725,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8699,
											"end": 8731,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8750,
											"end": 8756,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8747,
											"end": 8777,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8780,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 8780,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 8780,
											"end": 8859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8780,
											"end": 8859,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 8780,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8893,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 8950,
											"end": 8957,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8941,
											"end": 8947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8939,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8926,
											"end": 8948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8893,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8893,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8893,
											"end": 8958,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 8893,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8670,
											"end": 8968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9310,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 8981,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9091,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9075,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9087,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9060,
											"end": 9092,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9176,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 9057,
											"end": 9176,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 9095,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9095,
											"end": 9174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9174,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 9095,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9176,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 9057,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 9285,
											"end": 9292,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9265,
											"end": 9274,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9240,
											"end": 9293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9293,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 9240,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9398,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9438,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9420,
											"end": 9427,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 9439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9444,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9447,
											"end": 9526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 9637,
											"end": 9644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9592,
											"end": 9645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9645,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 9592,
											"end": 9645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9538,
											"end": 9655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9694,
											"end": 9696,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 9765,
											"end": 9772,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9754,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9720,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9773,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 9720,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9976,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9796,
											"end": 9976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9921,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9841,
											"end": 9842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9931,
											"end": 9946,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9965,
											"end": 9969,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9962,
											"end": 9963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9970,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10302,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 9982,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10057,
											"end": 10061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10053,
											"end": 10065,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10104,
											"end": 10108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10100,
											"end": 10112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10131,
											"end": 10149,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10121,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 10121,
											"end": 10202,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10187,
											"end": 10191,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10179,
											"end": 10185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10192,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10121,
											"end": 10202,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 10121,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10241,
											"end": 10247,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10215,
											"end": 10253,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10212,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 10212,
											"end": 10296,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 10268,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 10268,
											"end": 10286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10286,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 10268,
											"end": 10286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10212,
											"end": 10296,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 10212,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10033,
											"end": 10302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10680,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 10494,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10575,
											"end": 10592,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 10628,
											"end": 10633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10601,
											"end": 10634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10634,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 10601,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10644,
											"end": 10673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10644,
											"end": 10673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10778,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10686,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10762,
											"end": 10763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10771,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11074,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10784,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10848,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10871,
											"end": 10937,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10958,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 10971,
											"end": 10979,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10958,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10958,
											"end": 10980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10958,
											"end": 10980,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 10958,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10946,
											"end": 10980,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10946,
											"end": 10980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11017,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11009,
											"end": 11018,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11002,
											"end": 11007,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11019,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10989,
											"end": 11019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10989,
											"end": 11019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11041,
											"end": 11046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11028,
											"end": 11068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11028,
											"end": 11068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10849,
											"end": 11074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11074,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11140,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11080,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11288,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11146,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 11247,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 11274,
											"end": 11279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11256,
											"end": 11280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11247,
											"end": 11281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11281,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 11247,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11229,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11229,
											"end": 11282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11229,
											"end": 11282,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 11229,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11369,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11294,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11637,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11375,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11485,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 11516,
											"end": 11523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11485,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11485,
											"end": 11524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11485,
											"end": 11524,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 11485,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 11588,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 11612,
											"end": 11628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11588,
											"end": 11629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11629,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 11588,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11581,
											"end": 11585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11586,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11546,
											"end": 11630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11630,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 11546,
											"end": 11630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11540,
											"end": 11544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11533,
											"end": 11631,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11643,
											"end": 12794,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11643,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11827,
											"end": 11828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11821,
											"end": 11825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11817,
											"end": 11829,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11873,
											"end": 11874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 11875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11923,
											"end": 11935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 11994,
											"end": 12007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11966,
											"end": 12008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 12008,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 11966,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 12008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 12008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12022,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 12086,
											"end": 12099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12074,
											"end": 12084,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12022,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12022,
											"end": 12100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12022,
											"end": 12100,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 12022,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 12111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 12111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 12111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12158,
											"end": 12162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12154,
											"end": 12166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12208,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12199,
											"end": 12213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12261,
											"end": 12273,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12304,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 12332,
											"end": 12345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12304,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 12304,
											"end": 12346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12304,
											"end": 12346,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 12304,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 12424,
											"end": 12437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12422,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12360,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12438,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 12360,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12503,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 12504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12548,
											"end": 12550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12541,
											"end": 12546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12599,
											"end": 12611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 12670,
											"end": 12683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 12642,
											"end": 12684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12684,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 12642,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12625,
											"end": 12684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12625,
											"end": 12684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12762,
											"end": 12775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12750,
											"end": 12760,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12698,
											"end": 12776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12776,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12698,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11643,
											"end": 12794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11643,
											"end": 12794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11643,
											"end": 12794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12800,
											"end": 13072,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 12800,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 13058,
											"end": 13065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13052,
											"end": 13056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 12944,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13066,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 12944,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12800,
											"end": 13072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12800,
											"end": 13072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12800,
											"end": 13072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13225,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13078,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13216,
											"end": 13219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13225,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13231,
											"end": 13379,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13231,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13324,
											"end": 13327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13319,
											"end": 13322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13336,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13361,
											"end": 13367,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13356,
											"end": 13359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13352,
											"end": 13368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13345,
											"end": 13372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13231,
											"end": 13379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13231,
											"end": 13379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13231,
											"end": 13379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13231,
											"end": 13379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13521,
											"end": 13524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 13623,
											"end": 13629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13618,
											"end": 13621,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13542,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13542,
											"end": 13630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13542,
											"end": 13630,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 13542,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13535,
											"end": 13630,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13535,
											"end": 13630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13640,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 13689,
											"end": 13695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13687,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13682,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13640,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13640,
											"end": 13696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13640,
											"end": 13696,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 13640,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13719,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13705,
											"end": 13728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13705,
											"end": 13728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13902,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 14001,
											"end": 14004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13992,
											"end": 13998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13984,
											"end": 13990,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 13902,
											"end": 14005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14005,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 13902,
											"end": 14005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 14005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 14005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14022,
											"end": 14025,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14015,
											"end": 14025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14015,
											"end": 14025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13740,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14159,
											"end": 14162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14180,
											"end": 14251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 14244,
											"end": 14250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14242,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14180,
											"end": 14251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 14180,
											"end": 14251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14180,
											"end": 14251,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 14180,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14251,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 14310,
											"end": 14316,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14305,
											"end": 14308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14298,
											"end": 14303,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 14261,
											"end": 14317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14317,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 14261,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14342,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 14364,
											"end": 14370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14342,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 14342,
											"end": 14371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14342,
											"end": 14371,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 14342,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14340,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14333,
											"end": 14372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14061,
											"end": 14378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14573,
											"end": 14575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14562,
											"end": 14571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14550,
											"end": 14576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14550,
											"end": 14576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14622,
											"end": 14631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14616,
											"end": 14620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14612,
											"end": 14632,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14608,
											"end": 14609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14597,
											"end": 14606,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14586,
											"end": 14633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14650,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 14733,
											"end": 14737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14730,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14716,
											"end": 14722,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14650,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 14650,
											"end": 14738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14650,
											"end": 14738,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 14650,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14748,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 14816,
											"end": 14818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14805,
											"end": 14814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14798,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14748,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 14748,
											"end": 14820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14748,
											"end": 14820,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 14748,
											"end": 14820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14833,
											"end": 15013,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 14833,
											"end": 15013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14881,
											"end": 14958,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14878,
											"end": 14879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14871,
											"end": 14959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14978,
											"end": 14982,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14975,
											"end": 14976,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14968,
											"end": 14983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15002,
											"end": 15006,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14999,
											"end": 15000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15007,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15210,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 15019,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15059,
											"end": 15062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15078,
											"end": 15098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15073,
											"end": 15098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15073,
											"end": 15098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15112,
											"end": 15132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 15130,
											"end": 15131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15112,
											"end": 15132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15112,
											"end": 15132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15112,
											"end": 15132,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 15112,
											"end": 15132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15107,
											"end": 15132,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15107,
											"end": 15132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15152,
											"end": 15153,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15141,
											"end": 15157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15141,
											"end": 15157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15176,
											"end": 15179,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15173,
											"end": 15174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15170,
											"end": 15180,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15167,
											"end": 15203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15167,
											"end": 15203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 15167,
											"end": 15203,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 15183,
											"end": 15201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15167,
											"end": 15203,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 15167,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15210,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15405,
											"end": 15407,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15394,
											"end": 15403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15408,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15382,
											"end": 15408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15382,
											"end": 15408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15418,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 15486,
											"end": 15487,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15475,
											"end": 15484,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15471,
											"end": 15488,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15462,
											"end": 15468,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15418,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 15418,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15418,
											"end": 15489,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 15418,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15536,
											"end": 15545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15530,
											"end": 15534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15526,
											"end": 15546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15521,
											"end": 15523,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15519,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15499,
											"end": 15547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15564,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 15647,
											"end": 15651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15638,
											"end": 15644,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15630,
											"end": 15636,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15564,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 15564,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15564,
											"end": 15652,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 15564,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15665,
											"end": 15831,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 15665,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 15801,
											"end": 15802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15789,
											"end": 15803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15782,
											"end": 15824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15665,
											"end": 15831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15665,
											"end": 15831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15979,
											"end": 15982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 16064,
											"end": 16066,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 16059,
											"end": 16062,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 16000,
											"end": 16067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15993,
											"end": 16067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15993,
											"end": 16067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 16165,
											"end": 16168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 16076,
											"end": 16169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16194,
											"end": 16196,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16189,
											"end": 16192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16185,
											"end": 16197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16413,
											"end": 16415,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16402,
											"end": 16411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16456,
											"end": 16460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16452,
											"end": 16472,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16448,
											"end": 16449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16437,
											"end": 16446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16433,
											"end": 16450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16426,
											"end": 16473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 16490,
											"end": 16621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16482,
											"end": 16621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16482,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16209,
											"end": 16628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16634,
											"end": 16815,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 16634,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16774,
											"end": 16807,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 16770,
											"end": 16771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16762,
											"end": 16768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16751,
											"end": 16808,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16634,
											"end": 16815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16634,
											"end": 16815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16821,
											"end": 17187,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 16821,
											"end": 17187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16963,
											"end": 16966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 17051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 17048,
											"end": 17050,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17043,
											"end": 17046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 16984,
											"end": 17051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17051,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 16984,
											"end": 17051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 17149,
											"end": 17152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 17060,
											"end": 17153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17153,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 17060,
											"end": 17153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17178,
											"end": 17180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17173,
											"end": 17176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17169,
											"end": 17181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17162,
											"end": 17181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17162,
											"end": 17181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16821,
											"end": 17187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16821,
											"end": 17187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16821,
											"end": 17187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16821,
											"end": 17187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17612,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 17193,
											"end": 17612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17359,
											"end": 17363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17397,
											"end": 17399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17386,
											"end": 17395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17374,
											"end": 17400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17374,
											"end": 17400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17446,
											"end": 17455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17436,
											"end": 17456,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17432,
											"end": 17433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17430,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17417,
											"end": 17434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17474,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 17600,
											"end": 17604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17474,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 17474,
											"end": 17605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17474,
											"end": 17605,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 17474,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17466,
											"end": 17605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17466,
											"end": 17605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17767,
											"end": 17771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17805,
											"end": 17807,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17794,
											"end": 17803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17790,
											"end": 17808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17782,
											"end": 17808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17782,
											"end": 17808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17818,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 17886,
											"end": 17887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17884,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17871,
											"end": 17888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17862,
											"end": 17868,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17818,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 17818,
											"end": 17889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17818,
											"end": 17889,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 17818,
											"end": 17889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17899,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 17967,
											"end": 17969,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17956,
											"end": 17965,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17952,
											"end": 17970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17949,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17899,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 17899,
											"end": 17971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17899,
											"end": 17971,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 17899,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17981,
											"end": 18053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 18049,
											"end": 18051,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18038,
											"end": 18047,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18034,
											"end": 18052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18025,
											"end": 18031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17981,
											"end": 18053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 17981,
											"end": 18053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17981,
											"end": 18053,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 17981,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17618,
											"end": 18060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18066,
											"end": 18236,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 18066,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18206,
											"end": 18228,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 18202,
											"end": 18203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18190,
											"end": 18204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18183,
											"end": 18229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18066,
											"end": 18236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18066,
											"end": 18236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18384,
											"end": 18387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 18469,
											"end": 18471,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 18464,
											"end": 18467,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 18405,
											"end": 18472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18398,
											"end": 18472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18398,
											"end": 18472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 18570,
											"end": 18573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 18481,
											"end": 18574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18599,
											"end": 18601,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18594,
											"end": 18597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18590,
											"end": 18602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18583,
											"end": 18602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18583,
											"end": 18602,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18242,
											"end": 18608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18780,
											"end": 18784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18820,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18807,
											"end": 18816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18803,
											"end": 18821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18795,
											"end": 18821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18795,
											"end": 18821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18867,
											"end": 18876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18861,
											"end": 18865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18857,
											"end": 18877,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18853,
											"end": 18854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18842,
											"end": 18851,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18838,
											"end": 18855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18831,
											"end": 18878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 19021,
											"end": 19025,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 18895,
											"end": 19026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18887,
											"end": 19026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18887,
											"end": 19026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 19033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Signs 2/SignsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAILY_RESET()": "c1f3bdde",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimWages()": "ca1c7238",
							"dailyEarningsCap()": "f4f831a0",
							"decimals()": "313ce567",
							"earningsToday(address)": "a6ec1c6d",
							"lastEarningsReset(address)": "9778d0cd",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"payReward(address,string)": "c0008d0c",
							"rates()": "43f48fbd",
							"recordWage(address,uint256)": "d06a2e0e",
							"renounceOwnership()": "715018a6",
							"signsHistoryContract()": "a775ced3",
							"signsNFTContract()": "a3262ea2",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateDailyEarningsCap(uint256)": "ce55b584",
							"updateGameContract(string,address)": "8d9d7307",
							"updateRates((uint256,uint256,uint256))": "849d13a3",
							"wageBalance(address)": "2a504a97"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_signsNFTContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signsHistoryContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DailyEarningsLimitExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRate\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"DailyEarningsCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"movementBaseRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"diaryEntryRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"photoUploadRate\",\"type\":\"uint256\"}],\"name\":\"RatesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WagePaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAILY_RESET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimWages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyEarningsCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"earningsToday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastEarningsReset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"}],\"name\":\"payReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"movementBaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"diaryEntryRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"photoUploadRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recordWage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signsHistoryContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signsNFTContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"updateDailyEarningsCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateGameContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"movementBaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"diaryEntryRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"photoUploadRate\",\"type\":\"uint256\"}],\"internalType\":\"struct SignsToken.RewardRates\",\"name\":\"newRates\",\"type\":\"tuple\"}],\"name\":\"updateRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wageBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token for the Signs game economy, managing rewards and wages\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimWages()\":{\"details\":\"Allows users to claim their accumulated wages\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payReward(address,string)\":{\"details\":\"Pays reward for social activities (diary entries, photos)\",\"params\":{\"rewardType\":\"Type of reward (\\\"diary\\\" or \\\"photo\\\")\",\"user\":\"Address of the user to reward\"}},\"recordWage(address,uint256)\":{\"details\":\"Records wage owed to a carrier for moving a sign\",\"params\":{\"amount\":\"Amount of tokens to be paid\",\"carrier\":\"Address of the sign carrier\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateDailyEarningsCap(uint256)\":{\"details\":\"Updates daily earnings cap\",\"params\":{\"newCap\":\"New daily earnings cap\"}},\"updateGameContract(string,address)\":{\"details\":\"Updates game contract addresses\",\"params\":{\"contractType\":\"Type of contract to update (\\\"nft\\\" or \\\"history\\\")\",\"newAddress\":\"New contract address\"}},\"updateRates((uint256,uint256,uint256))\":{\"details\":\"Updates reward rates\",\"params\":{\"newRates\":\"New reward rates structure\"}}},\"title\":\"SignsToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Signs 2/SignsToken.sol\":\"SignsToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Signs 2/SignsToken.sol\":{\"keccak256\":\"0x2fb352e4fa9120899572a99c0741cd57c2aca73729bb30a39f4d464870568f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9af07e9b9c5671c47b39fd289ef1bf29a7df1a4b31b9d03e5430d5708e48e2d4\",\"dweb:/ipfs/QmaRvMGyLREFibFuMuVCB92NNXf1NcZgC9bUEArjW2m6ev\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 302,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1131,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "rates",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(RewardRates)1128_storage"
							},
							{
								"astId": 1133,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "dailyEarningsCap",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1138,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "signsNFTContract",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1140,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "signsHistoryContract",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 1144,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "wageBalance",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1148,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "lastEarningsReset",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1152,
								"contract": "Signs 2/SignsToken.sol:SignsToken",
								"label": "earningsToday",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RewardRates)1128_storage": {
								"encoding": "inplace",
								"label": "struct SignsToken.RewardRates",
								"members": [
									{
										"astId": 1123,
										"contract": "Signs 2/SignsToken.sol:SignsToken",
										"label": "movementBaseRate",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1125,
										"contract": "Signs 2/SignsToken.sol:SignsToken",
										"label": "diaryEntryRate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1127,
										"contract": "Signs 2/SignsToken.sol:SignsToken",
										"label": "photoUploadRate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1107,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1106
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1107,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1106
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1077,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1107,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1133:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1142:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1150:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 972,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 972,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 972,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 972,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 972,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 972,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 972,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 972,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 972,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 972,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 972,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 972,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 972,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 972,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 972,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 972,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 972,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1106:9788:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1050,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1050,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1050,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1050,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1050,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1050,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1051,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "306:6:6"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1076,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1076,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1076,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1106,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1106,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1106,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"Signs 2/SignsToken.sol": {
				"ast": {
					"absolutePath": "Signs 2/SignsToken.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						],
						"SignsToken": [
							1660
						]
					},
					"id": 1661,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 973,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 393,
							"src": "118:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 148,
							"src": "175:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 458,
							"src": "229:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "ERC20",
										"nameLocations": [
											"426:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "426:5:8"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "426:5:8"
								},
								{
									"baseName": {
										"id": 1116,
										"name": "Pausable",
										"nameLocations": [
											"433:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "433:8:8"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "433:8:8"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "Ownable",
										"nameLocations": [
											"443:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "443:7:8"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "443:7:8"
								},
								{
									"baseName": {
										"id": 1120,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"452:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "452:15:8"
									},
									"id": 1121,
									"nodeType": "InheritanceSpecifier",
									"src": "452:15:8"
								}
							],
							"canonicalName": "SignsToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "295:106:8",
								"text": " @title SignsToken\n @dev ERC20 token for the Signs game economy, managing rewards and wages"
							},
							"fullyImplemented": true,
							"id": 1660,
							"linearizedBaseContracts": [
								1660,
								457,
								147,
								392,
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "SignsToken",
							"nameLocation": "412:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SignsToken.RewardRates",
									"id": 1128,
									"members": [
										{
											"constant": false,
											"id": 1123,
											"mutability": "mutable",
											"name": "movementBaseRate",
											"nameLocation": "513:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1128,
											"src": "505:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "diaryEntryRate",
											"nameLocation": "597:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1128,
											"src": "589:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "589:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "photoUploadRate",
											"nameLocation": "661:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1128,
											"src": "653:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1126,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "653:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RewardRates",
									"nameLocation": "482:11:8",
									"nodeType": "StructDefinition",
									"scope": 1660,
									"src": "475:239:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "43f48fbd",
									"id": 1131,
									"mutability": "mutable",
									"name": "rates",
									"nameLocation": "773:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "754:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
										"typeString": "struct SignsToken.RewardRates"
									},
									"typeName": {
										"id": 1130,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1129,
											"name": "RewardRates",
											"nameLocations": [
												"754:11:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1128,
											"src": "754:11:8"
										},
										"referencedDeclaration": 1128,
										"src": "754:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RewardRates_$1128_storage_ptr",
											"typeString": "struct SignsToken.RewardRates"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f4f831a0",
									"id": 1133,
									"mutability": "mutable",
									"name": "dailyEarningsCap",
									"nameLocation": "800:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "785:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "785:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c1f3bdde",
									"id": 1136,
									"mutability": "constant",
									"name": "DAILY_RESET",
									"nameLocation": "896:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "872:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "872:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "910:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3262ea2",
									"id": 1138,
									"mutability": "mutable",
									"name": "signsNFTContract",
									"nameLocation": "1007:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "992:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1137,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "992:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a775ced3",
									"id": 1140,
									"mutability": "mutable",
									"name": "signsHistoryContract",
									"nameLocation": "1045:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1030:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1030:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a504a97",
									"id": 1144,
									"mutability": "mutable",
									"name": "wageBalance",
									"nameLocation": "1146:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1111:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1143,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1119:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1111:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1130:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9778d0cd",
									"id": 1148,
									"mutability": "mutable",
									"name": "lastEarningsReset",
									"nameLocation": "1238:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1203:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1147,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1211:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1203:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1222:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6ec1c6d",
									"id": 1152,
									"mutability": "mutable",
									"name": "earningsToday",
									"nameLocation": "1345:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1310:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1149,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1318:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1310:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1150,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1329:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bf26400ffec32b7f7fa346df27788423de869f04ad96fd322dafc7af85002636",
									"id": 1160,
									"name": "WagePaid",
									"nameLocation": "1422:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1447:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1431:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1469:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1453:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1481:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1473:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:58:8"
									},
									"src": "1416:73:8"
								},
								{
									"anonymous": false,
									"eventSelector": "21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c",
									"id": 1168,
									"name": "RewardPaid",
									"nameLocation": "1501:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1528:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1512:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1542:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1534:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardType",
												"nameLocation": "1557:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1550:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1165,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:57:8"
									},
									"src": "1495:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b",
									"id": 1176,
									"name": "RatesUpdated",
									"nameLocation": "1581:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "movementBaseRate",
												"nameLocation": "1602:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1594:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "diaryEntryRate",
												"nameLocation": "1628:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1620:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": false,
												"mutability": "mutable",
												"name": "photoUploadRate",
												"nameLocation": "1652:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1644:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:75:8"
									},
									"src": "1575:94:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b1cc6c859f8e547a95cbbe7dcece9e0fd5a931c906bd08dcf8413a2c83539713",
									"id": 1180,
									"name": "DailyEarningsCapUpdated",
									"nameLocation": "1681:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCap",
												"nameLocation": "1713:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1705:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:16:8"
									},
									"src": "1675:46:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f611fec7babefd259c57ea5b6006acff8140ab17bb816c65ba0aa7e36c09caa8",
									"id": 1186,
									"name": "ContractUpdated",
									"nameLocation": "1733:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "contractType",
												"nameLocation": "1756:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "1749:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1749:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1778:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "1770:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:41:8"
									},
									"src": "1727:63:8"
								},
								{
									"errorSelector": "5c427cd9",
									"id": 1188,
									"name": "UnauthorizedCaller",
									"nameLocation": "1823:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:2:8"
									},
									"src": "1817:27:8"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1190,
									"name": "InsufficientBalance",
									"nameLocation": "1856:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1875:2:8"
									},
									"src": "1850:28:8"
								},
								{
									"errorSelector": "d75747f6",
									"id": 1192,
									"name": "DailyEarningsLimitExceeded",
									"nameLocation": "1890:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:2:8"
									},
									"src": "1884:35:8"
								},
								{
									"errorSelector": "6a43f8d1",
									"id": 1194,
									"name": "InvalidRate",
									"nameLocation": "1931:11:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1942:2:8"
									},
									"src": "1925:20:8"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1196,
									"name": "InvalidAddress",
									"nameLocation": "1957:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1971:2:8"
									},
									"src": "1951:23:8"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1198,
									"name": "InvalidAmount",
									"nameLocation": "1986:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1999:2:8"
									},
									"src": "1980:22:8"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "2237:724:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "_signsNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "2252:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2281:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2273:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2273:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2252:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1225,
															"name": "_signsHistoryContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2287:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2320:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2312:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2312:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2312:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2287:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2252:70:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "2248:113:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1232,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "2345:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2345:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1234,
													"nodeType": "RevertStatement",
													"src": "2338:23:8"
												}
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2386:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "_signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "2405:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2386:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "2386:36:8"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "signsHistoryContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "2433:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1241,
														"name": "_signsHistoryContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "2456:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2433:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "2433:44:8"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "rates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2550:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
															"typeString": "struct SignsToken.RewardRates storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653135",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2603:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																"value": "1e15"
															},
															{
																"hexValue": "31653138",
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2667:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															{
																"hexValue": "32653138",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2735:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000000000000000000_by_1",
																	"typeString": "int_const 2000000000000000000"
																},
																"value": "2e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																{
																	"typeIdentifier": "t_rational_2000000000000000000_by_1",
																	"typeString": "int_const 2000000000000000000"
																}
															],
															"id": 1245,
															"name": "RewardRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "2558:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RewardRates_$1128_storage_ptr_$",
																"typeString": "type(struct SignsToken.RewardRates storage pointer)"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2585:16:8",
															"2651:14:8",
															"2718:15:8"
														],
														"names": [
															"movementBaseRate",
															"diaryEntryRate",
															"photoUploadRate"
														],
														"nodeType": "FunctionCall",
														"src": "2558:220:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardRates_$1128_memory_ptr",
															"typeString": "struct SignsToken.RewardRates memory"
														}
													},
													"src": "2550:228:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
														"typeString": "struct SignsToken.RewardRates storage ref"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2550:228:8"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "dailyEarningsCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2799:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030653138",
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2818:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000"
														},
														"value": "100e18"
													},
													"src": "2799:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "2799:25:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2927:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2931:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2927:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "2939:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "2921:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "2921:32:8"
											}
										]
									},
									"id": 1263,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1211,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1200,
													"src": "2203:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1212,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1202,
													"src": "2209:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1213,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1210,
												"name": "ERC20",
												"nameLocations": [
													"2197:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "2197:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2197:19:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1215,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2225:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2229:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2225:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1217,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1214,
												"name": "Ownable",
												"nameLocations": [
													"2217:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2217:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2217:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2046:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2032:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2032:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2075:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2061:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2061:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "2100:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2092:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_signsNFTContract",
												"nameLocation": "2132:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2124:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_signsHistoryContract",
												"nameLocation": "2168:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2160:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:175:8"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2237:0:8"
									},
									"scope": 1660,
									"src": "2010:951:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "3016:145:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3031:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3035:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3031:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1267,
															"name": "signsNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "3045:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3031:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3065:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3069:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3065:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1271,
															"name": "signsHistoryContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3079:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3065:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3031:68:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1277,
												"nodeType": "IfStatement",
												"src": "3027:114:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1274,
															"name": "UnauthorizedCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "3121:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3121:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1276,
													"nodeType": "RevertStatement",
													"src": "3114:27:8"
												}
											},
											{
												"id": 1278,
												"nodeType": "PlaceholderStatement",
												"src": "3152:1:8"
											}
										]
									},
									"id": 1280,
									"name": "onlyGameContracts",
									"nameLocation": "2996:17:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3013:2:8"
									},
									"src": "2987:174:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3480:484:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1292,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3495:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3505:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1298,
												"nodeType": "IfStatement",
												"src": "3491:39:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1295,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "3515:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3515:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1297,
													"nodeType": "RevertStatement",
													"src": "3508:22:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1300,
															"name": "carrier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3625:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1299,
														"name": "_checkAndResetDailyEarnings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "3597:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "3597:36:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1303,
																"name": "earningsToday",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "3695:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1305,
															"indexExpression": {
																"id": 1304,
																"name": "carrier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "3709:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3695:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3720:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3695:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1308,
														"name": "dailyEarningsCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "3729:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3695:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "3691:104:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1310,
															"name": "DailyEarningsLimitExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "3767:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3767:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1312,
													"nodeType": "RevertStatement",
													"src": "3760:35:8"
												}
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1314,
															"name": "wageBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "3820:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1316,
														"indexExpression": {
															"id": 1315,
															"name": "carrier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3832:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3820:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1317,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3844:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3820:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "3820:30:8"
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1320,
															"name": "earningsToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3861:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1322,
														"indexExpression": {
															"id": 1321,
															"name": "carrier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3875:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3861:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1323,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3887:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3861:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "3861:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3928:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3932:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3928:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "carrier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3949:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "WagePaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3919:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3919:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "EmitStatement",
												"src": "3914:42:8"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "3169:175:8",
										"text": " @dev Records wage owed to a carrier for moving a sign\n @param carrier Address of the sign carrier\n @param amount Amount of tokens to be paid"
									},
									"functionSelector": "d06a2e0e",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "onlyGameContracts",
												"nameLocations": [
													"3432:17:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "3432:17:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3432:17:8"
										},
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "whenNotPaused",
												"nameLocations": [
													"3460:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "3460:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3460:13:8"
										}
									],
									"name": "recordWage",
									"nameLocation": "3359:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "3378:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3370:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3370:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3395:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3387:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:33:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3480:0:8"
									},
									"scope": 1660,
									"src": "3350:614:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "4311:793:8",
										"statements": [
											{
												"assignments": [
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4330:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "4322:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1348,
												"nodeType": "VariableDeclarationStatement",
												"src": "4322:14:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1352,
																		"name": "rewardType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "4367:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	],
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4361:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1350,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4361:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4361:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 1349,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "4351:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4351:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "6469617279",
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4399:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6d1adbf96e5d6949b10559a05c3fb6f26a8095ff6283a9a3dee02165777591df",
																			"typeString": "literal_string \"diary\""
																		},
																		"value": "diary"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_6d1adbf96e5d6949b10559a05c3fb6f26a8095ff6283a9a3dee02165777591df",
																			"typeString": "literal_string \"diary\""
																		}
																	],
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4393:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1356,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4393:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4393:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1355,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "4383:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4383:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4351:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1371,
																			"name": "rewardType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "4492:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4486:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1369,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4486:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4486:17:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1368,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4476:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4476:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "70686f746f",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4524:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6c910f9470010ccea7fc0236c4e46ee4dda1dc89348fefefef37f36759f0dc0f",
																				"typeString": "literal_string \"photo\""
																			},
																			"value": "photo"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_6c910f9470010ccea7fc0236c4e46ee4dda1dc89348fefefef37f36759f0dc0f",
																				"typeString": "literal_string \"photo\""
																			}
																		],
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4518:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1375,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4518:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4518:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1374,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4508:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4508:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "4476:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1390,
														"nodeType": "Block",
														"src": "4598:47:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1387,
																		"name": "InvalidRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "4620:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4620:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1389,
																"nodeType": "RevertStatement",
																"src": "4613:20:8"
															}
														]
													},
													"id": 1391,
													"nodeType": "IfStatement",
													"src": "4472:173:8",
													"trueBody": {
														"id": 1386,
														"nodeType": "Block",
														"src": "4535:57:8",
														"statements": [
															{
																"expression": {
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1381,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "4550:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1382,
																			"name": "rates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "4559:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
																				"typeString": "struct SignsToken.RewardRates storage ref"
																			}
																		},
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4565:15:8",
																		"memberName": "photoUploadRate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "4559:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4550:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1385,
																"nodeType": "ExpressionStatement",
																"src": "4550:30:8"
															}
														]
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "4347:298:8",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "4410:56:8",
													"statements": [
														{
															"expression": {
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1362,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "4425:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1363,
																		"name": "rates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "4434:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
																			"typeString": "struct SignsToken.RewardRates storage ref"
																		}
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4440:14:8",
																	"memberName": "diaryEntryRate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1125,
																	"src": "4434:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4425:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1366,
															"nodeType": "ExpressionStatement",
															"src": "4425:29:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1394,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "4739:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1393,
														"name": "_checkAndResetDailyEarnings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "4711:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4711:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "4711:33:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1397,
																"name": "earningsToday",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "4806:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1399,
															"indexExpression": {
																"id": 1398,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "4820:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4806:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "4828:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4806:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1402,
														"name": "dailyEarningsCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "4837:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4806:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1407,
												"nodeType": "IfStatement",
												"src": "4802:101:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1404,
															"name": "DailyEarningsLimitExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "4875:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4875:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1406,
													"nodeType": "RevertStatement",
													"src": "4868:35:8"
												}
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1408,
															"name": "earningsToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "4928:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1410,
														"indexExpression": {
															"id": 1409,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "4942:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4928:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1411,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "4951:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4928:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "4928:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1415,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "5021:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "5027:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1414,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "5015:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "5015:19:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1420,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "5071:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "5077:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1422,
															"name": "rewardType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "5085:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1419,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "5060:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5060:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "EmitStatement",
												"src": "5055:41:8"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "3972:195:8",
										"text": " @dev Pays reward for social activities (diary entries, photos)\n @param user Address of the user to reward\n @param rewardType Type of reward (\"diary\" or \"photo\")"
									},
									"functionSelector": "c0008d0c",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1341,
												"name": "onlyGameContracts",
												"nameLocations": [
													"4263:17:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "4263:17:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4263:17:8"
										},
										{
											"id": 1344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1343,
												"name": "whenNotPaused",
												"nameLocations": [
													"4291:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "4291:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:13:8"
										}
									],
									"name": "payReward",
									"nameLocation": "4182:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4200:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4192:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4192:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "rewardType",
												"nameLocation": "4222:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4206:26:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4206:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4191:42:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4311:0:8"
									},
									"scope": 1660,
									"src": "4173:931:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "5283:288:8",
										"statements": [
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5302:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "5294:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5294:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"baseExpression": {
														"id": 1436,
														"name": "wageBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5311:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1439,
													"indexExpression": {
														"expression": {
															"id": 1437,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5323:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5327:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5323:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5311:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5294:40:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "5349:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5359:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5349:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1447,
												"nodeType": "IfStatement",
												"src": "5345:45:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1444,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "5369:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5369:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1446,
													"nodeType": "RevertStatement",
													"src": "5362:28:8"
												}
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1448,
															"name": "wageBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "5458:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1451,
														"indexExpression": {
															"expression": {
																"id": 1449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5470:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5474:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5470:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5458:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5484:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5458:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "5458:27:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1456,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5544:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5548:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5544:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "5556:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1455,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "5538:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5538:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "5538:25:8"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "5112:71:8",
										"text": " @dev Allows users to claim their accumulated wages"
									},
									"functionSelector": "ca1c7238",
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1429,
												"name": "nonReentrant",
												"nameLocations": [
													"5240:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "5240:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5240:12:8"
										},
										{
											"id": 1432,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1431,
												"name": "whenNotPaused",
												"nameLocations": [
													"5263:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5263:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5263:13:8"
										}
									],
									"name": "claimWages",
									"nameLocation": "5198:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5208:2:8"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5283:0:8"
									},
									"scope": 1660,
									"src": "5189:382:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "5779:191:8",
										"statements": [
											{
												"expression": {
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1471,
														"name": "rates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "5790:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
															"typeString": "struct SignsToken.RewardRates storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1472,
														"name": "newRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "5798:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardRates_$1128_calldata_ptr",
															"typeString": "struct SignsToken.RewardRates calldata"
														}
													},
													"src": "5790:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardRates_$1128_storage",
														"typeString": "struct SignsToken.RewardRates storage ref"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "5790:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1476,
																"name": "newRates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5849:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardRates_$1128_calldata_ptr",
																	"typeString": "struct SignsToken.RewardRates calldata"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5858:16:8",
															"memberName": "movementBaseRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1123,
															"src": "5849:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1478,
																"name": "newRates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5889:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardRates_$1128_calldata_ptr",
																	"typeString": "struct SignsToken.RewardRates calldata"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5898:14:8",
															"memberName": "diaryEntryRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1125,
															"src": "5889:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1480,
																"name": "newRates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5927:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardRates_$1128_calldata_ptr",
																	"typeString": "struct SignsToken.RewardRates calldata"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5936:15:8",
															"memberName": "photoUploadRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "5927:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1475,
														"name": "RatesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5822:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5822:140:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "EmitStatement",
												"src": "5817:145:8"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "5579:97:8",
										"text": " @dev Updates reward rates\n @param newRates New reward rates structure"
									},
									"functionSelector": "849d13a3",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1469,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1468,
												"name": "onlyOwner",
												"nameLocations": [
													"5763:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5763:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5763:9:8"
										}
									],
									"name": "updateRates",
									"nameLocation": "5691:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "newRates",
												"nameLocation": "5724:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "5703:29:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RewardRates_$1128_calldata_ptr",
													"typeString": "struct SignsToken.RewardRates"
												},
												"typeName": {
													"id": 1465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1464,
														"name": "RewardRates",
														"nameLocations": [
															"5703:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1128,
														"src": "5703:11:8"
													},
													"referencedDeclaration": 1128,
													"src": "5703:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardRates_$1128_storage_ptr",
														"typeString": "struct SignsToken.RewardRates"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5702:31:8"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5779:0:8"
									},
									"scope": 1660,
									"src": "5682:288:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "6174:91:8",
										"statements": [
											{
												"expression": {
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1493,
														"name": "dailyEarningsCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "6185:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1494,
														"name": "newCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "6204:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6185:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "6185:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1498,
															"name": "newCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "6250:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1497,
														"name": "DailyEarningsCapUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "6226:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6226:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "EmitStatement",
												"src": "6221:36:8"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "5978:97:8",
										"text": " @dev Updates daily earnings cap\n @param newCap New daily earnings cap"
									},
									"functionSelector": "ce55b584",
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1491,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1490,
												"name": "onlyOwner",
												"nameLocations": [
													"6158:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6158:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6158:9:8"
										}
									],
									"name": "updateDailyEarningsCap",
									"nameLocation": "6090:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "newCap",
												"nameLocation": "6121:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6113:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:16:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6174:0:8"
									},
									"scope": 1660,
									"src": "6081:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "6582:464:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1512,
														"name": "newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "6597:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6619:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6611:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1513,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6611:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6611:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6597:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1521,
												"nodeType": "IfStatement",
												"src": "6593:53:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1518,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "6630:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6630:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1520,
													"nodeType": "RevertStatement",
													"src": "6623:23:8"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1525,
																		"name": "contractType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "6687:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	],
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6681:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1523,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6681:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6681:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 1522,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "6671:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6671:30:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "6e6674",
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7dd481eb4b63b94bb55e6b98aabb06c3b8484f82a4d656d6bca0b0cf9b446be0",
																			"typeString": "literal_string \"nft\""
																		},
																		"value": "nft"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7dd481eb4b63b94bb55e6b98aabb06c3b8484f82a4d656d6bca0b0cf9b446be0",
																			"typeString": "literal_string \"nft\""
																		}
																	],
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6715:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1529,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6715:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6715:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1528,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "6705:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6705:23:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6671:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1543,
																			"name": "contractType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "6812:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6806:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1541,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "6806:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6806:19:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1540,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "6796:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6796:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "686973746f7279",
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6846:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_5cb4ee416d23b95cd5367c15d6b361ec02394b3d48d629418b0e5e7eda675858",
																				"typeString": "literal_string \"history\""
																			},
																			"value": "history"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_5cb4ee416d23b95cd5367c15d6b361ec02394b3d48d629418b0e5e7eda675858",
																				"typeString": "literal_string \"history\""
																			}
																		],
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6840:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1547,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "6840:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6840:16:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1546,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "6830:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6830:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "6796:61:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1561,
														"nodeType": "Block",
														"src": "6925:47:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1558,
																		"name": "InvalidRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "6947:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6947:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1560,
																"nodeType": "RevertStatement",
																"src": "6940:20:8"
															}
														]
													},
													"id": 1562,
													"nodeType": "IfStatement",
													"src": "6792:180:8",
													"trueBody": {
														"id": 1557,
														"nodeType": "Block",
														"src": "6859:60:8",
														"statements": [
															{
																"expression": {
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1553,
																		"name": "signsHistoryContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "6874:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1554,
																		"name": "newAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "6897:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6874:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1556,
																"nodeType": "ExpressionStatement",
																"src": "6874:33:8"
															}
														]
													}
												},
												"id": 1563,
												"nodeType": "IfStatement",
												"src": "6667:305:8",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "6730:56:8",
													"statements": [
														{
															"expression": {
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1535,
																	"name": "signsNFTContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "6745:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1536,
																	"name": "newAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "6764:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6745:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1538,
															"nodeType": "ExpressionStatement",
															"src": "6745:29:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1565,
															"name": "contractType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "7013:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 1566,
															"name": "newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "7027:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1564,
														"name": "ContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "6997:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6997:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "EmitStatement",
												"src": "6992:46:8"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "6273:180:8",
										"text": " @dev Updates game contract addresses\n @param contractType Type of contract to update (\"nft\" or \"history\")\n @param newAddress New contract address"
									},
									"functionSelector": "8d9d7307",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1509,
												"name": "onlyOwner",
												"nameLocations": [
													"6566:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6566:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6566:9:8"
										}
									],
									"name": "updateGameContract",
									"nameLocation": "6468:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "contractType",
												"nameLocation": "6503:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6487:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6487:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "6525:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6517:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6517:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:50:8"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6582:0:8"
									},
									"scope": 1660,
									"src": "6459:587:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "7259:186:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1576,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7274:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7280:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7274:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1578,
																"name": "lastEarningsReset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "7293:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1580,
															"indexExpression": {
																"id": 1579,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "7311:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7293:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1581,
															"name": "DAILY_RESET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "7319:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7293:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7274:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1598,
												"nodeType": "IfStatement",
												"src": "7270:168:8",
												"trueBody": {
													"id": 1597,
													"nodeType": "Block",
													"src": "7332:106:8",
													"statements": [
														{
															"expression": {
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1584,
																		"name": "earningsToday",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "7347:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1586,
																	"indexExpression": {
																		"id": 1585,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "7361:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7347:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7369:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7347:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1589,
															"nodeType": "ExpressionStatement",
															"src": "7347:23:8"
														},
														{
															"expression": {
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1590,
																		"name": "lastEarningsReset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "7385:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1592,
																	"indexExpression": {
																		"id": 1591,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "7403:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7385:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1593,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7411:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7417:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7411:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7385:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1596,
															"nodeType": "ExpressionStatement",
															"src": "7385:41:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "7054:139:8",
										"text": " @dev Internal function to check and reset daily earnings if necessary\n @param user Address of the user to check"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAndResetDailyEarnings",
									"nameLocation": "7208:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7244:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7236:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7236:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7235:14:8"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7259:0:8"
									},
									"scope": 1660,
									"src": "7199:246:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "7525:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1605,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "7536:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7536:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "7536:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1602,
												"name": "onlyOwner",
												"nameLocations": [
													"7515:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7515:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7515:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "7498:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7503:2:8"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7525:0:8"
									},
									"scope": 1660,
									"src": "7489:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "7598:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1614,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "7609:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7609:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "7609:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1611,
												"name": "onlyOwner",
												"nameLocations": [
													"7588:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7588:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7588:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "7569:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7576:2:8"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7598:0:8"
									},
									"scope": 1660,
									"src": "7560:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "7851:52:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "7884:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "7888:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1630,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7869:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SignsToken_$1660_$",
																"typeString": "type(contract super SignsToken)"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7875:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "7869:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1635,
												"nodeType": "Return",
												"src": "7862:33:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1626,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1625,
												"name": "whenNotPaused",
												"nameLocations": [
													"7806:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "7806:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7806:13:8"
										}
									],
									"name": "transfer",
									"nameLocation": "7705:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1624,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7787:8:8"
									},
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7722:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "7714:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7714:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7734:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "7726:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7726:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7713:28:8"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "7839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:6:8"
									},
									"scope": 1660,
									"src": "7696:207:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "8078:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1653,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "8115:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1654,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "8121:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "8125:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1651,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "8096:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SignsToken_$1660_$",
																"typeString": "type(contract super SignsToken)"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8102:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "8096:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8096:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1657,
												"nodeType": "Return",
												"src": "8089:43:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1646,
												"name": "whenNotPaused",
												"nameLocations": [
													"8035:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "8035:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8035:13:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "7920:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8017:8:8"
									},
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7941:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7933:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7933:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7955:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7947:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7947:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7967:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7959:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7932:42:8"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "8067:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8067:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:6:8"
									},
									"scope": 1660,
									"src": "7911:229:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1661,
							"src": "403:7740:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1188,
								1190,
								1192,
								1194,
								1196,
								1198
							],
							"usedEvents": [
								24,
								295,
								300,
								984,
								993,
								1160,
								1168,
								1176,
								1180,
								1186
							]
						}
					],
					"src": "33:8110:8"
				},
				"id": 8
			}
		}
	}
}