{
	"id": "6dcfffaea36597351ed4a1ec0d877d3f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Signs 2/SignsToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title SignToken\r\n * @dev ERC20 token for the Signs game economy, managing sign balances and wage payments\r\n */\r\ncontract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {\r\n    // Contract references\r\n    address public signsNFTContract;\r\n    \r\n    // Commission settings\r\n    uint256 public commissionPercent; // Commission in basis points (1% = 100)\r\n    address public commissionTreasury;\r\n    \r\n    // Constants\r\n    uint256 private constant BASIS_POINTS = 10000; // 100% = 10000\r\n    \r\n    // Sign balances\r\n    mapping(uint256 => uint256) public signBalances;  // tokenId => balance\r\n    \r\n    // Events\r\n    event SignBalanceCharged(uint256 indexed tokenId, uint256 amount);\r\n    event SignBalanceWithdrawn(uint256 indexed tokenId, address indexed owner, uint256 amount);\r\n    event WagePaid(uint256 indexed tokenId, address indexed carrier, uint256 amount);\r\n    event NFTContractUpdated(address newAddress);\r\n    event CommissionUpdated(uint256 newCommissionPercent);\r\n    event CommissionTreasuryUpdated(address newTreasury);\r\n    event CommissionPaid(uint256 indexed tokenId, uint256 amount);\r\n    \r\n    // Errors\r\n    error UnauthorizedCaller();\r\n    error InvalidCommission();\r\n    error InvalidTreasuryAddress();\r\n    error InsufficientSignBalance();\r\n    error InsufficientBalance();\r\n    error InvalidAmount();\r\n    error InvalidNFTContract();\r\n    error UnauthorizedOwner();\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        address _signsNFTContract,\r\n        address _commissionTreasury\r\n    ) ERC20(name, symbol) Ownable(msg.sender) {\r\n        if (_signsNFTContract == address(0)) revert InvalidNFTContract();\r\n        if (_commissionTreasury == address(0)) revert InvalidTreasuryAddress();\r\n        \r\n        signsNFTContract = _signsNFTContract;\r\n        commissionTreasury = _commissionTreasury;\r\n        commissionPercent = 500; // Default 5% commission\r\n\r\n        _mint(msg.sender, 1_000_000 * 10**decimals());\r\n    }\r\n\r\n    // Modifiers\r\n    modifier onlySignsNFT() {\r\n        if (msg.sender != signsNFTContract) revert UnauthorizedCaller();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Charges a sign's balance with tokens\r\n     * @param tokenId The ID of the sign to charge\r\n     * @param amount Amount of tokens to charge\r\n     */\r\n    function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {\r\n        if (amount == 0) revert InvalidAmount();\r\n        \r\n        address sender = msg.sender;\r\n        \r\n        // Transfer tokens from user to SignsNFT contract\r\n        //bool success = transferFrom(sender, signsNFTContract, amount);\r\n        bool success = transfer(signsNFTContract, amount);\r\n        require(success, \"Token transfer failed\");\r\n        \r\n        // Update sign balance\r\n        signBalances[tokenId] += amount;\r\n        \r\n        emit SignBalanceCharged(tokenId, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws tokens from a sign's balance back to the owner\r\n     * @param tokenId The ID of the sign\r\n     * @param amount Amount to withdraw\r\n     */\r\n    function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {\r\n        // Check if caller owns the sign\r\n        if (!_isSignOwner(msg.sender, tokenId)) revert UnauthorizedOwner();\r\n        \r\n        if (amount == 0) revert InvalidAmount();\r\n        if (signBalances[tokenId] < amount) revert InsufficientSignBalance();\r\n        \r\n        // Update balance before transfer\r\n        signBalances[tokenId] -= amount;\r\n        \r\n        // Transfer tokens from SignsNFT contract to owner\r\n        bool success = transferFrom(signsNFTContract, msg.sender, amount);\r\n        require(success, \"Transfer failed\");\r\n        \r\n        emit SignBalanceWithdrawn(tokenId, msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Pays wage to carrier from sign's balance\r\n     * @param tokenId The ID of the sign\r\n     * @param carrier Address of the carrier to pay\r\n     * @param amount Amount of wage to pay\r\n     */\r\n    struct WagePaymentResult {\r\n        uint256 paidAmount;      // Actual amount paid\r\n        uint256 remainingWage;   // Unpaid amount\r\n        bool isPartialPayment;   // Whether this was a partial payment\r\n    }\r\n\r\n    event LowSignBalance(uint256 indexed tokenId, uint256 currentBalance, uint256 requiredAmount);\r\n    event PartialWagePaid(\r\n        uint256 indexed tokenId, \r\n        address indexed carrier, \r\n        uint256 paidAmount, \r\n        uint256 remainingUnpaid\r\n    );\r\n\r\n    /**\r\n     * @dev Pays wage to carrier from sign's balance, handles partial payments\r\n     * @param tokenId The ID of the sign\r\n     * @param carrier Address of the carrier to pay\r\n     * @param amount Amount of wage to pay\r\n     * @return result WagePaymentResult struct with payment details\r\n     */\r\n    function payWage(\r\n        uint256 tokenId,\r\n        address carrier,\r\n        uint256 amount\r\n    ) external onlySignsNFT nonReentrant whenNotPaused returns (WagePaymentResult memory) {\r\n        if (amount == 0) revert InvalidAmount();\r\n        \r\n        uint256 currentBalance = signBalances[tokenId];\r\n        bool isFullPayment = currentBalance >= amount;\r\n        uint256 paymentAmount;\r\n        uint256 commissionAmount;\r\n        \r\n        //bool success = transferFrom(signsNFTContract, carrier, 100000);\r\n        //bool success = transfer(carrier, amount);\r\n        if (isFullPayment) {\r\n            // Calculate commission\r\n            commissionAmount = (amount * commissionPercent) / BASIS_POINTS;\r\n            paymentAmount = amount - commissionAmount;\r\n            \r\n            // Update balance before transfers\r\n            signBalances[tokenId] = currentBalance - amount;\r\n            \r\n            // Transfer commission from SignsNFT contract\r\n            if (commissionAmount > 0) {\r\n                //bool commissionSuccess = transferFrom(signsNFTContract, commissionTreasury, commissionAmount);\r\n                bool commissionSuccess = transfer(commissionTreasury, commissionAmount);\r\n                require(commissionSuccess, \"Commission transfer failed\");\r\n                emit CommissionPaid(tokenId, commissionAmount);\r\n            }\r\n            \r\n            // Transfer wage from SignsNFT contract to carrier\r\n            //bool success = transferFrom(signsNFTContract, carrier, paymentAmount);\r\n            bool success = transfer(carrier, paymentAmount);\r\n            require(success, \"Wage transfer failed\");\r\n            \r\n            emit WagePaid(tokenId, carrier, paymentAmount);\r\n        } else {\r\n            // For partial payments, no commission\r\n            paymentAmount = currentBalance;\r\n            commissionAmount = 0;\r\n            \r\n            // Update balance before transfer\r\n            signBalances[tokenId] = 0;\r\n            \r\n            if (paymentAmount > 0) {\r\n                // Transfer all available balance from SignsNFT contract to carrier\r\n                //bool success = transferFrom(signsNFTContract, carrier, paymentAmount);\r\n                bool success = transfer(carrier, paymentAmount);\r\n                require(success, \"Partial wage transfer failed\");\r\n                \r\n                emit PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount);\r\n            }\r\n            \r\n            emit LowSignBalance(tokenId, currentBalance, amount);\r\n        }\r\n        \r\n        return WagePaymentResult({\r\n            paidAmount: paymentAmount,\r\n            remainingWage: amount - paymentAmount,\r\n            isPartialPayment: !isFullPayment\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the SignsNFT contract address\r\n     * @param _newAddress New contract address\r\n     */\r\n    function updateSignsNFTContract(address _newAddress) external onlyOwner {\r\n        if (_newAddress == address(0)) revert InvalidNFTContract();\r\n        signsNFTContract = _newAddress;\r\n        emit NFTContractUpdated(_newAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if an address owns a specific sign\r\n     * @param owner Address to check\r\n     * @param tokenId Sign ID to check\r\n     */\r\n    function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\r\n        // This should integrate with your SignsNFT contract\r\n        // Implementation depends on your NFT contract interface\r\n        return true; // Placeholder - implement actual check\r\n    }\r\n\r\n    // Pause/unpause functionality\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the commission percentage\r\n     * @param newCommissionPercent New commission in basis points (1% = 100)\r\n     */\r\n    function updateCommission(uint256 newCommissionPercent) external onlyOwner {\r\n        if (newCommissionPercent > BASIS_POINTS) revert InvalidCommission();\r\n        commissionPercent = newCommissionPercent;\r\n        emit CommissionUpdated(newCommissionPercent);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the commission treasury address\r\n     * @param newTreasury New treasury address\r\n     */\r\n    function updateCommissionTreasury(address newTreasury) external onlyOwner {\r\n        if (newTreasury == address(0)) revert InvalidTreasuryAddress();\r\n        commissionTreasury = newTreasury;\r\n        emit CommissionTreasuryUpdated(newTreasury);\r\n    }\r\n\r\n    // Override transfer functions to check for pause state\r\n    function transfer(address to, uint256 amount) \r\n        public \r\n        virtual \r\n        override \r\n        whenNotPaused \r\n        returns (bool) \r\n    {\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n        function getApprovalInfo(address owner) external view returns (\r\n        uint256 balance,\r\n        uint256 contractAllowance\r\n    ) {\r\n        return (\r\n            balanceOf(owner),\r\n            allowance(owner, address(this))\r\n        );\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Signs 2/SignsToken.sol": {
				"SignToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_signsNFTContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_commissionTreasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientSignBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCommission",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNFTContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTreasuryAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CommissionPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "CommissionTreasuryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCommissionPercent",
									"type": "uint256"
								}
							],
							"name": "CommissionUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requiredAmount",
									"type": "uint256"
								}
							],
							"name": "LowSignBalance",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "NFTContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paidAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "remainingUnpaid",
									"type": "uint256"
								}
							],
							"name": "PartialWagePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SignBalanceCharged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SignBalanceWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WagePaid",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "chargeSignBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commissionPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commissionTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getApprovalInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractAllowance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "carrier",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "payWage",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "paidAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "remainingWage",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isPartialPayment",
											"type": "bool"
										}
									],
									"internalType": "struct SignToken.WagePaymentResult",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "signBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signsNFTContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCommissionPercent",
									"type": "uint256"
								}
							],
							"name": "updateCommission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "updateCommissionTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAddress",
									"type": "address"
								}
							],
							"name": "updateSignsNFTContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawSignBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token for the Signs game economy, managing sign balances and wage payments",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"chargeSignBalance(uint256,uint256)": {
								"details": "Charges a sign's balance with tokens",
								"params": {
									"amount": "Amount of tokens to charge",
									"tokenId": "The ID of the sign to charge"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"payWage(uint256,address,uint256)": {
								"details": "Pays wage to carrier from sign's balance, handles partial payments",
								"params": {
									"amount": "Amount of wage to pay",
									"carrier": "Address of the carrier to pay",
									"tokenId": "The ID of the sign"
								},
								"returns": {
									"_0": "result WagePaymentResult struct with payment details"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateCommission(uint256)": {
								"details": "Updates the commission percentage",
								"params": {
									"newCommissionPercent": "New commission in basis points (1% = 100)"
								}
							},
							"updateCommissionTreasury(address)": {
								"details": "Updates the commission treasury address",
								"params": {
									"newTreasury": "New treasury address"
								}
							},
							"updateSignsNFTContract(address)": {
								"details": "Updates the SignsNFT contract address",
								"params": {
									"_newAddress": "New contract address"
								}
							},
							"withdrawSignBalance(uint256,uint256)": {
								"details": "Withdraws tokens from a sign's balance back to the owner",
								"params": {
									"amount": "Amount to withdraw",
									"tokenId": "The ID of the sign"
								}
							}
						},
						"title": "SignToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Signs 2/SignsToken.sol\":416:10443  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Signs 2/SignsToken.sol\":1709:2291  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Signs 2/SignsToken.sol\":1890:1900  msg.sender */\n  caller\n    /* \"Signs 2/SignsToken.sol\":1868:1872  name */\n  dup5\n    /* \"Signs 2/SignsToken.sol\":1874:1880  symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":1946:1947  0 */\n  0x00\n    /* \"Signs 2/SignsToken.sol\":1917:1948  _signsNFTContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Signs 2/SignsToken.sol\":1917:1934  _signsNFTContract */\n  dup3\n    /* \"Signs 2/SignsToken.sol\":1917:1948  _signsNFTContract == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Signs 2/SignsToken.sol\":1913:1977  if (_signsNFTContract == address(0)) revert InvalidNFTContract() */\n  tag_22\n  jumpi\n    /* \"Signs 2/SignsToken.sol\":1957:1977  InvalidNFTContract() */\n  mload(0x40)\n  0xf8af67e500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Signs 2/SignsToken.sol\":1913:1977  if (_signsNFTContract == address(0)) revert InvalidNFTContract() */\ntag_22:\n    /* \"Signs 2/SignsToken.sol\":2023:2024  0 */\n  0x00\n    /* \"Signs 2/SignsToken.sol\":1992:2025  _commissionTreasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Signs 2/SignsToken.sol\":1992:2011  _commissionTreasury */\n  dup2\n    /* \"Signs 2/SignsToken.sol\":1992:2025  _commissionTreasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Signs 2/SignsToken.sol\":1988:2058  if (_commissionTreasury == address(0)) revert InvalidTreasuryAddress() */\n  tag_23\n  jumpi\n    /* \"Signs 2/SignsToken.sol\":2034:2058  InvalidTreasuryAddress() */\n  mload(0x40)\n  0xcfe2ea6300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Signs 2/SignsToken.sol\":1988:2058  if (_commissionTreasury == address(0)) revert InvalidTreasuryAddress() */\ntag_23:\n    /* \"Signs 2/SignsToken.sol\":2098:2115  _signsNFTContract */\n  dup2\n    /* \"Signs 2/SignsToken.sol\":2079:2095  signsNFTContract */\n  0x07\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2079:2115  signsNFTContract = _signsNFTContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2147:2166  _commissionTreasury */\n  dup1\n    /* \"Signs 2/SignsToken.sol\":2126:2144  commissionTreasury */\n  0x09\n  0x00\n    /* \"Signs 2/SignsToken.sol\":2126:2166  commissionTreasury = _commissionTreasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2197:2200  500 */\n  0x01f4\n    /* \"Signs 2/SignsToken.sol\":2177:2194  commissionPercent */\n  0x08\n    /* \"Signs 2/SignsToken.sol\":2177:2200  commissionPercent = 500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Signs 2/SignsToken.sol\":2238:2283  _mint(msg.sender, 1_000_000 * 10**decimals()) */\n  tag_24\n    /* \"Signs 2/SignsToken.sol\":2244:2254  msg.sender */\n  caller\n    /* \"Signs 2/SignsToken.sol\":2272:2282  decimals() */\n  tag_25\n    /* \"Signs 2/SignsToken.sol\":2272:2280  decimals */\n  shl(0x20, tag_26)\n    /* \"Signs 2/SignsToken.sol\":2272:2282  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Signs 2/SignsToken.sol\":2268:2270  10 */\n  0x0a\n    /* \"Signs 2/SignsToken.sol\":2268:2282  10**decimals() */\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"Signs 2/SignsToken.sol\":2256:2265  1_000_000 */\n  0x0f4240\n    /* \"Signs 2/SignsToken.sol\":2256:2282  1_000_000 * 10**decimals() */\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"Signs 2/SignsToken.sol\":2238:2243  _mint */\n  shl(0x20, tag_31)\n    /* \"Signs 2/SignsToken.sol\":2238:2283  _mint(msg.sender, 1_000_000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Signs 2/SignsToken.sol\":1709:2291  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Signs 2/SignsToken.sol\":416:10443  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_44)\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_46\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_49)\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_52:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_53:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_54:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_55:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_56:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_57:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_58:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_59:\n    /* \"#utility.yul\":957:984   */\n  tag_104\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_106\n  tag_58\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1030:1118   */\ntag_105:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_60:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_108\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_109\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_61:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_112\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1434:1490   */\ntag_111:\n    /* \"#utility.yul\":1508:1537   */\n  tag_113\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_57\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_62:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_63:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_116\n    /* \"#utility.yul\":1885:1934   */\n  tag_117\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_61\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1869:1935   */\n  tag_60\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_119\n  tag_56\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2010:2122   */\ntag_118:\n    /* \"#utility.yul\":2131:2183   */\n  tag_120\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_62\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_64:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_123\n  tag_55\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2292:2414   */\ntag_122:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_124\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_63\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_65:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_66:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_127\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_65\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_67:\n    /* \"#utility.yul\":2877:2901   */\n  tag_129\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_66\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_130:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_68:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_132\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4247   */\ntag_3:\n    /* \"#utility.yul\":3198:3204   */\n  0x00\n    /* \"#utility.yul\":3206:3212   */\n  dup1\n    /* \"#utility.yul\":3214:3220   */\n  0x00\n    /* \"#utility.yul\":3222:3228   */\n  dup1\n    /* \"#utility.yul\":3271:3274   */\n  0x80\n    /* \"#utility.yul\":3259:3268   */\n  dup6\n    /* \"#utility.yul\":3250:3257   */\n  dup8\n    /* \"#utility.yul\":3246:3269   */\n  sub\n    /* \"#utility.yul\":3242:3275   */\n  slt\n    /* \"#utility.yul\":3239:3359   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":3278:3357   */\n  tag_135\n  tag_53\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3239:3359   */\ntag_134:\n    /* \"#utility.yul\":3419:3420   */\n  0x00\n    /* \"#utility.yul\":3408:3417   */\n  dup6\n    /* \"#utility.yul\":3404:3421   */\n  add\n    /* \"#utility.yul\":3398:3422   */\n  mload\n    /* \"#utility.yul\":3449:3467   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3441:3447   */\n  dup2\n    /* \"#utility.yul\":3438:3468   */\n  gt\n    /* \"#utility.yul\":3435:3552   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3471:3550   */\n  tag_137\n  tag_54\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3435:3552   */\ntag_136:\n    /* \"#utility.yul\":3576:3650   */\n  tag_138\n    /* \"#utility.yul\":3642:3649   */\n  dup8\n    /* \"#utility.yul\":3633:3639   */\n  dup3\n    /* \"#utility.yul\":3622:3631   */\n  dup9\n    /* \"#utility.yul\":3618:3640   */\n  add\n    /* \"#utility.yul\":3576:3650   */\n  tag_64\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3566:3650   */\n  swap5\n  pop\n    /* \"#utility.yul\":3369:3660   */\n  pop\n    /* \"#utility.yul\":3720:3722   */\n  0x20\n    /* \"#utility.yul\":3709:3718   */\n  dup6\n    /* \"#utility.yul\":3705:3723   */\n  add\n    /* \"#utility.yul\":3699:3724   */\n  mload\n    /* \"#utility.yul\":3751:3769   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3743:3749   */\n  dup2\n    /* \"#utility.yul\":3740:3770   */\n  gt\n    /* \"#utility.yul\":3737:3854   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":3773:3852   */\n  tag_140\n  tag_54\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3737:3854   */\ntag_139:\n    /* \"#utility.yul\":3878:3952   */\n  tag_141\n    /* \"#utility.yul\":3944:3951   */\n  dup8\n    /* \"#utility.yul\":3935:3941   */\n  dup3\n    /* \"#utility.yul\":3924:3933   */\n  dup9\n    /* \"#utility.yul\":3920:3942   */\n  add\n    /* \"#utility.yul\":3878:3952   */\n  tag_64\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3868:3952   */\n  swap4\n  pop\n    /* \"#utility.yul\":3670:3962   */\n  pop\n    /* \"#utility.yul\":4001:4003   */\n  0x40\n    /* \"#utility.yul\":4027:4091   */\n  tag_142\n    /* \"#utility.yul\":4083:4090   */\n  dup8\n    /* \"#utility.yul\":4074:4080   */\n  dup3\n    /* \"#utility.yul\":4063:4072   */\n  dup9\n    /* \"#utility.yul\":4059:4081   */\n  add\n    /* \"#utility.yul\":4027:4091   */\n  tag_68\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4017:4091   */\n  swap3\n  pop\n    /* \"#utility.yul\":3972:4101   */\n  pop\n    /* \"#utility.yul\":4140:4142   */\n  0x60\n    /* \"#utility.yul\":4166:4230   */\n  tag_143\n    /* \"#utility.yul\":4222:4229   */\n  dup8\n    /* \"#utility.yul\":4213:4219   */\n  dup3\n    /* \"#utility.yul\":4202:4211   */\n  dup9\n    /* \"#utility.yul\":4198:4220   */\n  add\n    /* \"#utility.yul\":4166:4230   */\n  tag_68\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4156:4230   */\n  swap2\n  pop\n    /* \"#utility.yul\":4111:4240   */\n  pop\n    /* \"#utility.yul\":3081:4247   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4253:4352   */\ntag_69:\n    /* \"#utility.yul\":4305:4311   */\n  0x00\n    /* \"#utility.yul\":4339:4344   */\n  dup2\n    /* \"#utility.yul\":4333:4345   */\n  mload\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4253:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4538   */\ntag_70:\n    /* \"#utility.yul\":4406:4483   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4403:4404   */\n  0x00\n    /* \"#utility.yul\":4396:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x22\n    /* \"#utility.yul\":4500:4501   */\n  0x04\n    /* \"#utility.yul\":4493:4508   */\n  mstore\n    /* \"#utility.yul\":4527:4531   */\n  0x24\n    /* \"#utility.yul\":4524:4525   */\n  0x00\n    /* \"#utility.yul\":4517:4532   */\n  revert\n    /* \"#utility.yul\":4544:4864   */\ntag_71:\n    /* \"#utility.yul\":4588:4594   */\n  0x00\n    /* \"#utility.yul\":4625:4626   */\n  0x02\n    /* \"#utility.yul\":4619:4623   */\n  dup3\n    /* \"#utility.yul\":4615:4627   */\n  div\n    /* \"#utility.yul\":4605:4627   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4673   */\n  0x01\n    /* \"#utility.yul\":4666:4670   */\n  dup3\n    /* \"#utility.yul\":4662:4674   */\n  and\n    /* \"#utility.yul\":4693:4711   */\n  dup1\n    /* \"#utility.yul\":4683:4764   */\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4749:4753   */\n  0x7f\n    /* \"#utility.yul\":4741:4747   */\n  dup3\n    /* \"#utility.yul\":4737:4754   */\n  and\n    /* \"#utility.yul\":4727:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4764   */\ntag_147:\n    /* \"#utility.yul\":4811:4813   */\n  0x20\n    /* \"#utility.yul\":4803:4809   */\n  dup3\n    /* \"#utility.yul\":4800:4814   */\n  lt\n    /* \"#utility.yul\":4780:4798   */\n  dup2\n    /* \"#utility.yul\":4777:4815   */\n  sub\n    /* \"#utility.yul\":4774:4858   */\n  tag_148\n  jumpi\n    /* \"#utility.yul\":4830:4848   */\n  tag_149\n  tag_70\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4774:4858   */\ntag_148:\n    /* \"#utility.yul\":4595:4864   */\n  pop\n    /* \"#utility.yul\":4544:4864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4870:5011   */\ntag_72:\n    /* \"#utility.yul\":4919:4923   */\n  0x00\n    /* \"#utility.yul\":4942:4945   */\n  dup2\n    /* \"#utility.yul\":4934:4945   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:4968   */\n  dup2\n    /* \"#utility.yul\":4962:4963   */\n  0x00\n    /* \"#utility.yul\":4955:4969   */\n  mstore\n    /* \"#utility.yul\":4999:5003   */\n  0x20\n    /* \"#utility.yul\":4996:4997   */\n  0x00\n    /* \"#utility.yul\":4986:5004   */\n  keccak256\n    /* \"#utility.yul\":4978:5004   */\n  swap1\n  pop\n    /* \"#utility.yul\":4870:5011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5017:5110   */\ntag_73:\n    /* \"#utility.yul\":5054:5060   */\n  0x00\n    /* \"#utility.yul\":5101:5103   */\n  0x20\n    /* \"#utility.yul\":5096:5098   */\n  0x1f\n    /* \"#utility.yul\":5089:5094   */\n  dup4\n    /* \"#utility.yul\":5085:5099   */\n  add\n    /* \"#utility.yul\":5081:5104   */\n  div\n    /* \"#utility.yul\":5071:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5017:5110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5116:5223   */\ntag_74:\n    /* \"#utility.yul\":5160:5168   */\n  0x00\n    /* \"#utility.yul\":5210:5215   */\n  dup3\n    /* \"#utility.yul\":5204:5208   */\n  dup3\n    /* \"#utility.yul\":5200:5216   */\n  shl\n    /* \"#utility.yul\":5179:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5116:5223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5622   */\ntag_75:\n    /* \"#utility.yul\":5298:5304   */\n  0x00\n    /* \"#utility.yul\":5348:5349   */\n  0x08\n    /* \"#utility.yul\":5336:5346   */\n  dup4\n    /* \"#utility.yul\":5332:5350   */\n  mul\n    /* \"#utility.yul\":5371:5468   */\n  tag_154\n    /* \"#utility.yul\":5401:5467   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5390:5399   */\n  dup3\n    /* \"#utility.yul\":5371:5468   */\n  tag_74\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5489:5528   */\n  tag_155\n    /* \"#utility.yul\":5519:5527   */\n  dup7\n    /* \"#utility.yul\":5508:5517   */\n  dup4\n    /* \"#utility.yul\":5489:5528   */\n  tag_74\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5477:5528   */\n  swap6\n  pop\n    /* \"#utility.yul\":5561:5565   */\n  dup1\n    /* \"#utility.yul\":5557:5566   */\n  not\n    /* \"#utility.yul\":5550:5555   */\n  dup5\n    /* \"#utility.yul\":5546:5567   */\n  and\n    /* \"#utility.yul\":5537:5567   */\n  swap4\n  pop\n    /* \"#utility.yul\":5610:5614   */\n  dup1\n    /* \"#utility.yul\":5600:5608   */\n  dup7\n    /* \"#utility.yul\":5596:5615   */\n  and\n    /* \"#utility.yul\":5589:5594   */\n  dup5\n    /* \"#utility.yul\":5586:5616   */\n  or\n    /* \"#utility.yul\":5576:5616   */\n  swap3\n  pop\n    /* \"#utility.yul\":5305:5622   */\n  pop\n  pop\n    /* \"#utility.yul\":5229:5622   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5628:5705   */\ntag_76:\n    /* \"#utility.yul\":5665:5672   */\n  0x00\n    /* \"#utility.yul\":5694:5699   */\n  dup2\n    /* \"#utility.yul\":5683:5699   */\n  swap1\n  pop\n    /* \"#utility.yul\":5628:5705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5711:5771   */\ntag_77:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5765   */\n  dup2\n    /* \"#utility.yul\":5753:5765   */\n  swap1\n  pop\n    /* \"#utility.yul\":5711:5771   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5777:5919   */\ntag_78:\n    /* \"#utility.yul\":5827:5836   */\n  0x00\n    /* \"#utility.yul\":5860:5913   */\n  tag_159\n    /* \"#utility.yul\":5878:5912   */\n  tag_160\n    /* \"#utility.yul\":5887:5911   */\n  tag_161\n    /* \"#utility.yul\":5905:5910   */\n  dup5\n    /* \"#utility.yul\":5887:5911   */\n  tag_76\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5878:5912   */\n  tag_77\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5860:5913   */\n  tag_76\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5847:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5777:5919   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5925:6000   */\ntag_79:\n    /* \"#utility.yul\":5968:5971   */\n  0x00\n    /* \"#utility.yul\":5989:5994   */\n  dup2\n    /* \"#utility.yul\":5982:5994   */\n  swap1\n  pop\n    /* \"#utility.yul\":5925:6000   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6275   */\ntag_80:\n    /* \"#utility.yul\":6116:6155   */\n  tag_164\n    /* \"#utility.yul\":6147:6154   */\n  dup4\n    /* \"#utility.yul\":6116:6155   */\n  tag_78\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6177:6268   */\n  tag_165\n    /* \"#utility.yul\":6226:6267   */\n  tag_166\n    /* \"#utility.yul\":6250:6266   */\n  dup3\n    /* \"#utility.yul\":6226:6267   */\n  tag_79\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6218:6224   */\n  dup5\n    /* \"#utility.yul\":6211:6215   */\n  dup5\n    /* \"#utility.yul\":6205:6216   */\n  sload\n    /* \"#utility.yul\":6177:6268   */\n  tag_75\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6171:6175   */\n  dup3\n    /* \"#utility.yul\":6164:6269   */\n  sstore\n    /* \"#utility.yul\":6082:6275   */\n  pop\n    /* \"#utility.yul\":6006:6275   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6281:6354   */\ntag_81:\n    /* \"#utility.yul\":6326:6329   */\n  0x00\n    /* \"#utility.yul\":6281:6354   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6360:6549   */\ntag_82:\n    /* \"#utility.yul\":6437:6469   */\n  tag_169\n  tag_81\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6478:6543   */\n  tag_170\n    /* \"#utility.yul\":6536:6542   */\n  dup2\n    /* \"#utility.yul\":6528:6534   */\n  dup5\n    /* \"#utility.yul\":6522:6526   */\n  dup5\n    /* \"#utility.yul\":6478:6543   */\n  tag_80\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6413:6549   */\n  pop\n    /* \"#utility.yul\":6360:6549   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6741   */\ntag_83:\n    /* \"#utility.yul\":6615:6735   */\ntag_172:\n    /* \"#utility.yul\":6632:6635   */\n  dup2\n    /* \"#utility.yul\":6625:6630   */\n  dup2\n    /* \"#utility.yul\":6622:6636   */\n  lt\n    /* \"#utility.yul\":6615:6735   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":6686:6725   */\n  tag_175\n    /* \"#utility.yul\":6723:6724   */\n  0x00\n    /* \"#utility.yul\":6716:6721   */\n  dup3\n    /* \"#utility.yul\":6686:6725   */\n  tag_82\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6659:6660   */\n  0x01\n    /* \"#utility.yul\":6652:6657   */\n  dup2\n    /* \"#utility.yul\":6648:6661   */\n  add\n    /* \"#utility.yul\":6639:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6735   */\n  jump(tag_172)\ntag_174:\n    /* \"#utility.yul\":6555:6741   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6747:7290   */\ntag_84:\n    /* \"#utility.yul\":6848:6850   */\n  0x1f\n    /* \"#utility.yul\":6843:6846   */\n  dup3\n    /* \"#utility.yul\":6840:6851   */\n  gt\n    /* \"#utility.yul\":6837:7283   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":6882:6920   */\n  tag_178\n    /* \"#utility.yul\":6914:6919   */\n  dup2\n    /* \"#utility.yul\":6882:6920   */\n  tag_72\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6966:6995   */\n  tag_179\n    /* \"#utility.yul\":6984:6994   */\n  dup5\n    /* \"#utility.yul\":6966:6995   */\n  tag_73\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6956:6964   */\n  dup2\n    /* \"#utility.yul\":6952:6996   */\n  add\n    /* \"#utility.yul\":7149:7151   */\n  0x20\n    /* \"#utility.yul\":7137:7147   */\n  dup6\n    /* \"#utility.yul\":7134:7152   */\n  lt\n    /* \"#utility.yul\":7131:7180   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7170:7178   */\n  dup2\n    /* \"#utility.yul\":7155:7178   */\n  swap1\n  pop\n    /* \"#utility.yul\":7131:7180   */\ntag_180:\n    /* \"#utility.yul\":7193:7273   */\n  tag_181\n    /* \"#utility.yul\":7249:7271   */\n  tag_182\n    /* \"#utility.yul\":7267:7270   */\n  dup6\n    /* \"#utility.yul\":7249:7271   */\n  tag_73\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7239:7247   */\n  dup4\n    /* \"#utility.yul\":7235:7272   */\n  add\n    /* \"#utility.yul\":7222:7233   */\n  dup3\n    /* \"#utility.yul\":7193:7273   */\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6852:7283   */\n  pop\n  pop\n    /* \"#utility.yul\":6837:7283   */\ntag_177:\n    /* \"#utility.yul\":6747:7290   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7296:7413   */\ntag_85:\n    /* \"#utility.yul\":7350:7358   */\n  0x00\n    /* \"#utility.yul\":7400:7405   */\n  dup3\n    /* \"#utility.yul\":7394:7398   */\n  dup3\n    /* \"#utility.yul\":7390:7406   */\n  shr\n    /* \"#utility.yul\":7369:7406   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7413   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7588   */\ntag_86:\n    /* \"#utility.yul\":7463:7469   */\n  0x00\n    /* \"#utility.yul\":7496:7547   */\n  tag_185\n    /* \"#utility.yul\":7544:7545   */\n  0x00\n    /* \"#utility.yul\":7540:7546   */\n  not\n    /* \"#utility.yul\":7532:7537   */\n  dup5\n    /* \"#utility.yul\":7529:7530   */\n  0x08\n    /* \"#utility.yul\":7525:7538   */\n  mul\n    /* \"#utility.yul\":7496:7547   */\n  tag_85\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7492:7548   */\n  not\n    /* \"#utility.yul\":7577:7581   */\n  dup1\n    /* \"#utility.yul\":7571:7575   */\n  dup4\n    /* \"#utility.yul\":7567:7582   */\n  and\n    /* \"#utility.yul\":7557:7582   */\n  swap2\n  pop\n    /* \"#utility.yul\":7470:7588   */\n  pop\n    /* \"#utility.yul\":7419:7588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7593:7888   */\ntag_87:\n    /* \"#utility.yul\":7669:7673   */\n  0x00\n    /* \"#utility.yul\":7815:7844   */\n  tag_187\n    /* \"#utility.yul\":7840:7843   */\n  dup4\n    /* \"#utility.yul\":7834:7838   */\n  dup4\n    /* \"#utility.yul\":7815:7844   */\n  tag_86\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7807:7844   */\n  swap2\n  pop\n    /* \"#utility.yul\":7877:7880   */\n  dup3\n    /* \"#utility.yul\":7874:7875   */\n  0x02\n    /* \"#utility.yul\":7870:7881   */\n  mul\n    /* \"#utility.yul\":7864:7868   */\n  dup3\n    /* \"#utility.yul\":7861:7882   */\n  or\n    /* \"#utility.yul\":7853:7882   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7893:9288   */\ntag_11:\n    /* \"#utility.yul\":8010:8047   */\n  tag_189\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8010:8047   */\n  tag_69\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8112:8130   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8104:8110   */\n  dup2\n    /* \"#utility.yul\":8101:8131   */\n  gt\n    /* \"#utility.yul\":8098:8154   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":8134:8152   */\n  tag_191\n  tag_58\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8098:8154   */\ntag_190:\n    /* \"#utility.yul\":8178:8216   */\n  tag_192\n    /* \"#utility.yul\":8210:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8215   */\n  sload\n    /* \"#utility.yul\":8178:8216   */\n  tag_71\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8263:8330   */\n  tag_193\n    /* \"#utility.yul\":8323:8329   */\n  dup3\n    /* \"#utility.yul\":8315:8321   */\n  dup3\n    /* \"#utility.yul\":8309:8313   */\n  dup6\n    /* \"#utility.yul\":8263:8330   */\n  tag_84\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8357:8358   */\n  0x00\n    /* \"#utility.yul\":8381:8385   */\n  0x20\n    /* \"#utility.yul\":8368:8385   */\n  swap1\n  pop\n    /* \"#utility.yul\":8413:8415   */\n  0x1f\n    /* \"#utility.yul\":8405:8411   */\n  dup4\n    /* \"#utility.yul\":8402:8416   */\n  gt\n    /* \"#utility.yul\":8430:8431   */\n  0x01\n    /* \"#utility.yul\":8425:9043   */\n  dup2\n  eq\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9087:9088   */\n  0x00\n    /* \"#utility.yul\":9104:9110   */\n  dup5\n    /* \"#utility.yul\":9101:9178   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9153:9162   */\n  dup3\n    /* \"#utility.yul\":9148:9151   */\n  dup8\n    /* \"#utility.yul\":9144:9163   */\n  add\n    /* \"#utility.yul\":9138:9164   */\n  mload\n    /* \"#utility.yul\":9129:9164   */\n  swap1\n  pop\n    /* \"#utility.yul\":9101:9178   */\ntag_196:\n    /* \"#utility.yul\":9204:9271   */\n  tag_197\n    /* \"#utility.yul\":9264:9270   */\n  dup6\n    /* \"#utility.yul\":9257:9262   */\n  dup3\n    /* \"#utility.yul\":9204:9271   */\n  tag_87\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9198:9202   */\n  dup7\n    /* \"#utility.yul\":9191:9272   */\n  sstore\n    /* \"#utility.yul\":9060:9282   */\n  pop\n    /* \"#utility.yul\":8395:9282   */\n  jump(tag_194)\n    /* \"#utility.yul\":8425:9043   */\ntag_195:\n    /* \"#utility.yul\":8477:8481   */\n  0x1f\n    /* \"#utility.yul\":8473:8482   */\n  not\n    /* \"#utility.yul\":8465:8471   */\n  dup5\n    /* \"#utility.yul\":8461:8483   */\n  and\n    /* \"#utility.yul\":8511:8548   */\n  tag_198\n    /* \"#utility.yul\":8543:8547   */\n  dup7\n    /* \"#utility.yul\":8511:8548   */\n  tag_72\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8570:8571   */\n  0x00\n    /* \"#utility.yul\":8584:8792   */\ntag_199:\n    /* \"#utility.yul\":8598:8605   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup2\n    /* \"#utility.yul\":8592:8606   */\n  lt\n    /* \"#utility.yul\":8584:8792   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8677:8686   */\n  dup5\n    /* \"#utility.yul\":8672:8675   */\n  dup10\n    /* \"#utility.yul\":8668:8687   */\n  add\n    /* \"#utility.yul\":8662:8688   */\n  mload\n    /* \"#utility.yul\":8654:8660   */\n  dup3\n    /* \"#utility.yul\":8647:8689   */\n  sstore\n    /* \"#utility.yul\":8728:8729   */\n  0x01\n    /* \"#utility.yul\":8720:8726   */\n  dup3\n    /* \"#utility.yul\":8716:8730   */\n  add\n    /* \"#utility.yul\":8706:8730   */\n  swap2\n  pop\n    /* \"#utility.yul\":8775:8777   */\n  0x20\n    /* \"#utility.yul\":8764:8773   */\n  dup6\n    /* \"#utility.yul\":8760:8778   */\n  add\n    /* \"#utility.yul\":8747:8778   */\n  swap5\n  pop\n    /* \"#utility.yul\":8621:8625   */\n  0x20\n    /* \"#utility.yul\":8618:8619   */\n  dup2\n    /* \"#utility.yul\":8614:8626   */\n  add\n    /* \"#utility.yul\":8609:8626   */\n  swap1\n  pop\n    /* \"#utility.yul\":8584:8792   */\n  jump(tag_199)\ntag_201:\n    /* \"#utility.yul\":8820:8826   */\n  dup7\n    /* \"#utility.yul\":8811:8818   */\n  dup4\n    /* \"#utility.yul\":8808:8827   */\n  lt\n    /* \"#utility.yul\":8805:8984   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8878:8887   */\n  dup5\n    /* \"#utility.yul\":8873:8876   */\n  dup10\n    /* \"#utility.yul\":8869:8888   */\n  add\n    /* \"#utility.yul\":8863:8889   */\n  mload\n    /* \"#utility.yul\":8921:8969   */\n  tag_203\n    /* \"#utility.yul\":8963:8967   */\n  0x1f\n    /* \"#utility.yul\":8955:8961   */\n  dup10\n    /* \"#utility.yul\":8951:8968   */\n  and\n    /* \"#utility.yul\":8940:8949   */\n  dup3\n    /* \"#utility.yul\":8921:8969   */\n  tag_86\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8913:8919   */\n  dup4\n    /* \"#utility.yul\":8906:8970   */\n  sstore\n    /* \"#utility.yul\":8828:8984   */\n  pop\n    /* \"#utility.yul\":8805:8984   */\ntag_202:\n    /* \"#utility.yul\":9030:9031   */\n  0x01\n    /* \"#utility.yul\":9026:9027   */\n  0x02\n    /* \"#utility.yul\":9018:9024   */\n  dup9\n    /* \"#utility.yul\":9014:9028   */\n  mul\n    /* \"#utility.yul\":9010:9032   */\n  add\n    /* \"#utility.yul\":9004:9008   */\n  dup9\n    /* \"#utility.yul\":8997:9033   */\n  sstore\n    /* \"#utility.yul\":8432:9043   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8395:9282   */\ntag_194:\n  pop\n    /* \"#utility.yul\":7985:9288   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7893:9288   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9294:9412   */\ntag_88:\n    /* \"#utility.yul\":9381:9405   */\n  tag_205\n    /* \"#utility.yul\":9399:9404   */\n  dup2\n    /* \"#utility.yul\":9381:9405   */\n  tag_66\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9376:9379   */\n  dup3\n    /* \"#utility.yul\":9369:9406   */\n  mstore\n    /* \"#utility.yul\":9294:9412   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9418:9640   */\ntag_17:\n    /* \"#utility.yul\":9511:9515   */\n  0x00\n    /* \"#utility.yul\":9549:9551   */\n  0x20\n    /* \"#utility.yul\":9538:9547   */\n  dup3\n    /* \"#utility.yul\":9534:9552   */\n  add\n    /* \"#utility.yul\":9526:9552   */\n  swap1\n  pop\n    /* \"#utility.yul\":9562:9633   */\n  tag_207\n    /* \"#utility.yul\":9630:9631   */\n  0x00\n    /* \"#utility.yul\":9619:9628   */\n  dup4\n    /* \"#utility.yul\":9615:9632   */\n  add\n    /* \"#utility.yul\":9606:9612   */\n  dup5\n    /* \"#utility.yul\":9562:9633   */\n  tag_88\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9418:9640   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9646:9826   */\ntag_89:\n    /* \"#utility.yul\":9694:9771   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9691:9692   */\n  0x00\n    /* \"#utility.yul\":9684:9772   */\n  mstore\n    /* \"#utility.yul\":9791:9795   */\n  0x11\n    /* \"#utility.yul\":9788:9789   */\n  0x04\n    /* \"#utility.yul\":9781:9796   */\n  mstore\n    /* \"#utility.yul\":9815:9819   */\n  0x24\n    /* \"#utility.yul\":9812:9813   */\n  0x00\n    /* \"#utility.yul\":9805:9820   */\n  revert\n    /* \"#utility.yul\":9832:9934   */\ntag_90:\n    /* \"#utility.yul\":9874:9882   */\n  0x00\n    /* \"#utility.yul\":9921:9926   */\n  dup2\n    /* \"#utility.yul\":9918:9919   */\n  0x01\n    /* \"#utility.yul\":9914:9927   */\n  shr\n    /* \"#utility.yul\":9893:9927   */\n  swap1\n  pop\n    /* \"#utility.yul\":9832:9934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9940:10788   */\ntag_91:\n    /* \"#utility.yul\":10001:10006   */\n  0x00\n    /* \"#utility.yul\":10008:10012   */\n  dup1\n    /* \"#utility.yul\":10032:10038   */\n  dup3\n    /* \"#utility.yul\":10023:10038   */\n  swap2\n  pop\n    /* \"#utility.yul\":10056:10061   */\n  dup4\n    /* \"#utility.yul\":10047:10061   */\n  swap1\n  pop\n    /* \"#utility.yul\":10070:10782   */\ntag_211:\n    /* \"#utility.yul\":10091:10092   */\n  0x01\n    /* \"#utility.yul\":10081:10089   */\n  dup6\n    /* \"#utility.yul\":10078:10093   */\n  gt\n    /* \"#utility.yul\":10070:10782   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":10186:10190   */\n  dup1\n    /* \"#utility.yul\":10181:10184   */\n  dup7\n    /* \"#utility.yul\":10177:10191   */\n  div\n    /* \"#utility.yul\":10171:10175   */\n  dup2\n    /* \"#utility.yul\":10168:10192   */\n  gt\n    /* \"#utility.yul\":10165:10215   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":10195:10213   */\n  tag_215\n  tag_89\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10165:10215   */\ntag_214:\n    /* \"#utility.yul\":10245:10246   */\n  0x01\n    /* \"#utility.yul\":10235:10243   */\n  dup6\n    /* \"#utility.yul\":10231:10247   */\n  and\n    /* \"#utility.yul\":10228:10679   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":10660:10664   */\n  dup1\n    /* \"#utility.yul\":10653:10658   */\n  dup3\n    /* \"#utility.yul\":10649:10665   */\n  mul\n    /* \"#utility.yul\":10640:10665   */\n  swap2\n  pop\n    /* \"#utility.yul\":10228:10679   */\ntag_216:\n    /* \"#utility.yul\":10710:10714   */\n  dup1\n    /* \"#utility.yul\":10704:10708   */\n  dup2\n    /* \"#utility.yul\":10700:10715   */\n  mul\n    /* \"#utility.yul\":10692:10715   */\n  swap1\n  pop\n    /* \"#utility.yul\":10740:10772   */\n  tag_217\n    /* \"#utility.yul\":10763:10771   */\n  dup6\n    /* \"#utility.yul\":10740:10772   */\n  tag_90\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10728:10772   */\n  swap5\n  pop\n    /* \"#utility.yul\":10070:10782   */\n  jump(tag_211)\ntag_213:\n    /* \"#utility.yul\":9940:10788   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10794:11867   */\ntag_92:\n    /* \"#utility.yul\":10848:10853   */\n  0x00\n    /* \"#utility.yul\":11039:11047   */\n  dup3\n    /* \"#utility.yul\":11029:11069   */\n  tag_219\n  jumpi\n    /* \"#utility.yul\":11060:11061   */\n  0x01\n    /* \"#utility.yul\":11051:11061   */\n  swap1\n  pop\n    /* \"#utility.yul\":11062:11067   */\n  jump(tag_218)\n    /* \"#utility.yul\":11029:11069   */\ntag_219:\n    /* \"#utility.yul\":11088:11092   */\n  dup2\n    /* \"#utility.yul\":11078:11114   */\n  tag_220\n  jumpi\n    /* \"#utility.yul\":11105:11106   */\n  0x00\n    /* \"#utility.yul\":11096:11106   */\n  swap1\n  pop\n    /* \"#utility.yul\":11107:11112   */\n  jump(tag_218)\n    /* \"#utility.yul\":11078:11114   */\ntag_220:\n    /* \"#utility.yul\":11174:11178   */\n  dup2\n    /* \"#utility.yul\":11222:11223   */\n  0x01\n    /* \"#utility.yul\":11217:11244   */\n  dup2\n  eq\n  tag_222\n  jumpi\n    /* \"#utility.yul\":11258:11259   */\n  0x02\n    /* \"#utility.yul\":11253:11444   */\n  dup2\n  eq\n  tag_223\n  jumpi\n    /* \"#utility.yul\":11167:11444   */\n  jump(tag_221)\n    /* \"#utility.yul\":11217:11244   */\ntag_222:\n    /* \"#utility.yul\":11235:11236   */\n  0x01\n    /* \"#utility.yul\":11226:11236   */\n  swap2\n  pop\n    /* \"#utility.yul\":11237:11242   */\n  pop\n  jump(tag_218)\n    /* \"#utility.yul\":11253:11444   */\ntag_223:\n    /* \"#utility.yul\":11298:11301   */\n  0xff\n    /* \"#utility.yul\":11288:11296   */\n  dup5\n    /* \"#utility.yul\":11285:11302   */\n  gt\n    /* \"#utility.yul\":11282:11325   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":11305:11323   */\n  tag_225\n  tag_89\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11282:11325   */\ntag_224:\n    /* \"#utility.yul\":11354:11362   */\n  dup4\n    /* \"#utility.yul\":11351:11352   */\n  0x02\n    /* \"#utility.yul\":11347:11363   */\n  exp\n    /* \"#utility.yul\":11338:11363   */\n  swap2\n  pop\n    /* \"#utility.yul\":11389:11392   */\n  dup5\n    /* \"#utility.yul\":11382:11387   */\n  dup3\n    /* \"#utility.yul\":11379:11393   */\n  gt\n    /* \"#utility.yul\":11376:11416   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":11396:11414   */\n  tag_227\n  tag_89\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11376:11416   */\ntag_226:\n    /* \"#utility.yul\":11429:11434   */\n  pop\n  jump(tag_218)\n    /* \"#utility.yul\":11167:11444   */\ntag_221:\n  pop\n    /* \"#utility.yul\":11553:11555   */\n  0x20\n    /* \"#utility.yul\":11543:11551   */\n  dup4\n    /* \"#utility.yul\":11540:11556   */\n  lt\n    /* \"#utility.yul\":11534:11537   */\n  0x0133\n    /* \"#utility.yul\":11528:11532   */\n  dup4\n    /* \"#utility.yul\":11525:11538   */\n  lt\n    /* \"#utility.yul\":11521:11557   */\n  and\n    /* \"#utility.yul\":11503:11505   */\n  0x4e\n    /* \"#utility.yul\":11493:11501   */\n  dup5\n    /* \"#utility.yul\":11490:11506   */\n  lt\n    /* \"#utility.yul\":11485:11487   */\n  0x0b\n    /* \"#utility.yul\":11479:11483   */\n  dup5\n    /* \"#utility.yul\":11476:11488   */\n  lt\n    /* \"#utility.yul\":11472:11507   */\n  and\n    /* \"#utility.yul\":11456:11567   */\n  or\n    /* \"#utility.yul\":11453:11699   */\n  iszero\n  tag_228\n  jumpi\n    /* \"#utility.yul\":11609:11617   */\n  dup3\n    /* \"#utility.yul\":11603:11607   */\n  dup3\n    /* \"#utility.yul\":11599:11618   */\n  exp\n    /* \"#utility.yul\":11590:11618   */\n  swap1\n  pop\n    /* \"#utility.yul\":11644:11647   */\n  dup4\n    /* \"#utility.yul\":11637:11642   */\n  dup2\n    /* \"#utility.yul\":11634:11648   */\n  gt\n    /* \"#utility.yul\":11631:11671   */\n  iszero\n  tag_229\n  jumpi\n    /* \"#utility.yul\":11651:11669   */\n  tag_230\n  tag_89\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":11631:11671   */\ntag_229:\n    /* \"#utility.yul\":11684:11689   */\n  jump(tag_218)\n    /* \"#utility.yul\":11453:11699   */\ntag_228:\n    /* \"#utility.yul\":11724:11766   */\n  tag_231\n    /* \"#utility.yul\":11762:11765   */\n  dup5\n    /* \"#utility.yul\":11752:11760   */\n  dup5\n    /* \"#utility.yul\":11746:11750   */\n  dup5\n    /* \"#utility.yul\":11743:11744   */\n  0x01\n    /* \"#utility.yul\":11724:11766   */\n  tag_91\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11709:11766   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11798:11802   */\n  dup2\n    /* \"#utility.yul\":11793:11796   */\n  dup5\n    /* \"#utility.yul\":11789:11803   */\n  div\n    /* \"#utility.yul\":11782:11787   */\n  dup2\n    /* \"#utility.yul\":11779:11804   */\n  gt\n    /* \"#utility.yul\":11776:11827   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":11807:11825   */\n  tag_233\n  tag_89\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11776:11827   */\ntag_232:\n    /* \"#utility.yul\":11856:11860   */\n  dup2\n    /* \"#utility.yul\":11849:11854   */\n  dup2\n    /* \"#utility.yul\":11845:11861   */\n  mul\n    /* \"#utility.yul\":11836:11861   */\n  swap1\n  pop\n    /* \"#utility.yul\":10794:11867   */\ntag_218:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11873:11959   */\ntag_93:\n    /* \"#utility.yul\":11908:11915   */\n  0x00\n    /* \"#utility.yul\":11948:11952   */\n  0xff\n    /* \"#utility.yul\":11941:11946   */\n  dup3\n    /* \"#utility.yul\":11937:11953   */\n  and\n    /* \"#utility.yul\":11926:11953   */\n  swap1\n  pop\n    /* \"#utility.yul\":11873:11959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11965:12246   */\ntag_28:\n    /* \"#utility.yul\":12023:12028   */\n  0x00\n    /* \"#utility.yul\":12047:12070   */\n  tag_236\n    /* \"#utility.yul\":12065:12069   */\n  dup3\n    /* \"#utility.yul\":12047:12070   */\n  tag_76\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12039:12070   */\n  swap2\n  pop\n    /* \"#utility.yul\":12091:12116   */\n  tag_237\n    /* \"#utility.yul\":12107:12115   */\n  dup4\n    /* \"#utility.yul\":12091:12116   */\n  tag_93\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":12079:12116   */\n  swap3\n  pop\n    /* \"#utility.yul\":12135:12239   */\n  tag_238\n    /* \"#utility.yul\":12172:12238   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12162:12170   */\n  dup5\n    /* \"#utility.yul\":12156:12160   */\n  dup5\n    /* \"#utility.yul\":12135:12239   */\n  tag_92\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12126:12239   */\n  swap1\n  pop\n    /* \"#utility.yul\":11965:12246   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12252:12662   */\ntag_30:\n    /* \"#utility.yul\":12292:12299   */\n  0x00\n    /* \"#utility.yul\":12315:12335   */\n  tag_240\n    /* \"#utility.yul\":12333:12334   */\n  dup3\n    /* \"#utility.yul\":12315:12335   */\n  tag_76\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12310:12335   */\n  swap2\n  pop\n    /* \"#utility.yul\":12349:12369   */\n  tag_241\n    /* \"#utility.yul\":12367:12368   */\n  dup4\n    /* \"#utility.yul\":12349:12369   */\n  tag_76\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":12344:12369   */\n  swap3\n  pop\n    /* \"#utility.yul\":12404:12405   */\n  dup3\n    /* \"#utility.yul\":12401:12402   */\n  dup3\n    /* \"#utility.yul\":12397:12406   */\n  mul\n    /* \"#utility.yul\":12426:12456   */\n  tag_242\n    /* \"#utility.yul\":12444:12455   */\n  dup2\n    /* \"#utility.yul\":12426:12456   */\n  tag_76\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12415:12456   */\n  swap2\n  pop\n    /* \"#utility.yul\":12605:12606   */\n  dup3\n    /* \"#utility.yul\":12596:12603   */\n  dup3\n    /* \"#utility.yul\":12592:12607   */\n  div\n    /* \"#utility.yul\":12589:12590   */\n  dup5\n    /* \"#utility.yul\":12586:12608   */\n  eq\n    /* \"#utility.yul\":12566:12567   */\n  dup4\n    /* \"#utility.yul\":12559:12568   */\n  iszero\n    /* \"#utility.yul\":12539:12622   */\n  or\n    /* \"#utility.yul\":12516:12655   */\n  tag_243\n  jumpi\n    /* \"#utility.yul\":12635:12653   */\n  tag_244\n  tag_89\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12516:12655   */\ntag_243:\n    /* \"#utility.yul\":12300:12662   */\n  pop\n    /* \"#utility.yul\":12252:12662   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12668:12859   */\ntag_43:\n    /* \"#utility.yul\":12708:12711   */\n  0x00\n    /* \"#utility.yul\":12727:12747   */\n  tag_246\n    /* \"#utility.yul\":12745:12746   */\n  dup3\n    /* \"#utility.yul\":12727:12747   */\n  tag_76\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12722:12747   */\n  swap2\n  pop\n    /* \"#utility.yul\":12761:12781   */\n  tag_247\n    /* \"#utility.yul\":12779:12780   */\n  dup4\n    /* \"#utility.yul\":12761:12781   */\n  tag_76\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":12756:12781   */\n  swap3\n  pop\n    /* \"#utility.yul\":12804:12805   */\n  dup3\n    /* \"#utility.yul\":12801:12802   */\n  dup3\n    /* \"#utility.yul\":12797:12806   */\n  add\n    /* \"#utility.yul\":12790:12806   */\n  swap1\n  pop\n    /* \"#utility.yul\":12825:12828   */\n  dup1\n    /* \"#utility.yul\":12822:12823   */\n  dup3\n    /* \"#utility.yul\":12819:12829   */\n  gt\n    /* \"#utility.yul\":12816:12852   */\n  iszero\n  tag_248\n  jumpi\n    /* \"#utility.yul\":12832:12850   */\n  tag_249\n  tag_89\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12816:12852   */\ntag_248:\n    /* \"#utility.yul\":12668:12859   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12865:12983   */\ntag_94:\n    /* \"#utility.yul\":12952:12976   */\n  tag_251\n    /* \"#utility.yul\":12970:12975   */\n  dup2\n    /* \"#utility.yul\":12952:12976   */\n  tag_76\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":12947:12950   */\n  dup3\n    /* \"#utility.yul\":12940:12977   */\n  mstore\n    /* \"#utility.yul\":12865:12983   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12989:13431   */\ntag_47:\n    /* \"#utility.yul\":13138:13142   */\n  0x00\n    /* \"#utility.yul\":13176:13178   */\n  0x60\n    /* \"#utility.yul\":13165:13174   */\n  dup3\n    /* \"#utility.yul\":13161:13179   */\n  add\n    /* \"#utility.yul\":13153:13179   */\n  swap1\n  pop\n    /* \"#utility.yul\":13189:13260   */\n  tag_253\n    /* \"#utility.yul\":13257:13258   */\n  0x00\n    /* \"#utility.yul\":13246:13255   */\n  dup4\n    /* \"#utility.yul\":13242:13259   */\n  add\n    /* \"#utility.yul\":13233:13239   */\n  dup7\n    /* \"#utility.yul\":13189:13260   */\n  tag_88\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":13270:13342   */\n  tag_254\n    /* \"#utility.yul\":13338:13340   */\n  0x20\n    /* \"#utility.yul\":13327:13336   */\n  dup4\n    /* \"#utility.yul\":13323:13341   */\n  add\n    /* \"#utility.yul\":13314:13320   */\n  dup6\n    /* \"#utility.yul\":13270:13342   */\n  tag_94\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":13352:13424   */\n  tag_255\n    /* \"#utility.yul\":13420:13422   */\n  0x40\n    /* \"#utility.yul\":13409:13418   */\n  dup4\n    /* \"#utility.yul\":13405:13423   */\n  add\n    /* \"#utility.yul\":13396:13402   */\n  dup5\n    /* \"#utility.yul\":13352:13424   */\n  tag_94\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":12989:13431   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13437:13659   */\ntag_51:\n    /* \"#utility.yul\":13530:13534   */\n  0x00\n    /* \"#utility.yul\":13568:13570   */\n  0x20\n    /* \"#utility.yul\":13557:13566   */\n  dup3\n    /* \"#utility.yul\":13553:13571   */\n  add\n    /* \"#utility.yul\":13545:13571   */\n  swap1\n  pop\n    /* \"#utility.yul\":13581:13652   */\n  tag_257\n    /* \"#utility.yul\":13649:13650   */\n  0x00\n    /* \"#utility.yul\":13638:13647   */\n  dup4\n    /* \"#utility.yul\":13634:13651   */\n  add\n    /* \"#utility.yul\":13625:13631   */\n  dup5\n    /* \"#utility.yul\":13581:13652   */\n  tag_94\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":13437:13659   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Signs 2/SignsToken.sol\":416:10443  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Signs 2/SignsToken.sol\":416:10443  contract SignToken is ERC20, Pausable, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x77d3550b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe95850df\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xef9ecc1d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9b493e0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xca525485\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x77d3550b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9d55fba7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa3262ea2\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x5e182096\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x5e182096\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x74612f19\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ec48cf7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2fcdc5fd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":10194:10440  function getApprovalInfo(address owner) external view returns (... */\n    tag_6:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":9953:10182  function transferFrom(address from, address to, uint256 amount)... */\n    tag_7:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":8013:8250  function updateSignsNFTContract(address _newAddress) external onlyOwner {... */\n    tag_8:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":8805:8872  function unpause() external onlyOwner {... */\n    tag_10:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":2612:3214  function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"Signs 2/SignsToken.sol\":9417:9669  function updateCommissionTreasury(address newTreasury) external onlyOwner {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"Signs 2/SignsToken.sol\":587:619  uint256 public commissionPercent */\n    tag_16:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":8734:8797  function pause() external onlyOwner {... */\n    tag_17:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":9023:9290  function updateCommission(uint256 newCommissionPercent) external onlyOwner {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"Signs 2/SignsToken.sol\":515:546  address public signsNFTContract */\n    tag_21:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":9738:9945  function transfer(address to, uint256 amount) ... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":3393:4119  function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_23:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"Signs 2/SignsToken.sol\":827:874  mapping(uint256 => uint256) public signBalances */\n    tag_24:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":667:700  address public commissionTreasury */\n    tag_26:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Signs 2/SignsToken.sol\":5135:7888  function payWage(... */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":10194:10440  function getApprovalInfo(address owner) external view returns (... */\n    tag_51:\n        /* \"Signs 2/SignsToken.sol\":10267:10282  uint256 balance */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":10293:10318  uint256 contractAllowance */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":10359:10375  balanceOf(owner) */\n      tag_145\n        /* \"Signs 2/SignsToken.sol\":10369:10374  owner */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":10359:10368  balanceOf */\n      tag_77\n        /* \"Signs 2/SignsToken.sol\":10359:10375  balanceOf(owner) */\n      jump\t// in\n    tag_145:\n        /* \"Signs 2/SignsToken.sol\":10390:10421  allowance(owner, address(this)) */\n      tag_146\n        /* \"Signs 2/SignsToken.sol\":10400:10405  owner */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10415:10419  this */\n      address\n        /* \"Signs 2/SignsToken.sol\":10390:10399  allowance */\n      tag_117\n        /* \"Signs 2/SignsToken.sol\":10390:10421  allowance(owner, address(this)) */\n      jump\t// in\n    tag_146:\n        /* \"Signs 2/SignsToken.sol\":10337:10432  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Signs 2/SignsToken.sol\":10194:10440  function getApprovalInfo(address owner) external view returns (... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9953:10182  function transferFrom(address from, address to, uint256 amount)... */\n    tag_57:\n        /* \"Signs 2/SignsToken.sol\":10109:10113  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_148:\n        /* \"Signs 2/SignsToken.sol\":10138:10174  super.transferFrom(from, to, amount) */\n      tag_151\n        /* \"Signs 2/SignsToken.sol\":10157:10161  from */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10163:10165  to */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10167:10173  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":10138:10156  super.transferFrom */\n      tag_152\n        /* \"Signs 2/SignsToken.sol\":10138:10174  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_151:\n        /* \"Signs 2/SignsToken.sol\":10131:10174  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":9953:10182  function transferFrom(address from, address to, uint256 amount)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8013:8250  function updateSignsNFTContract(address _newAddress) external onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"Signs 2/SignsToken.sol\":8123:8124  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8100:8125  _newAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":8100:8111  _newAddress */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":8100:8125  _newAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Signs 2/SignsToken.sol\":8096:8154  if (_newAddress == address(0)) revert InvalidNFTContract() */\n      tag_157\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":8134:8154  InvalidNFTContract() */\n      mload(0x40)\n      0xf8af67e500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":8096:8154  if (_newAddress == address(0)) revert InvalidNFTContract() */\n    tag_157:\n        /* \"Signs 2/SignsToken.sol\":8184:8195  _newAddress */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":8165:8181  signsNFTContract */\n      0x07\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8165:8195  signsNFTContract = _newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":8211:8242  NFTContractUpdated(_newAddress) */\n      0xf2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9\n        /* \"Signs 2/SignsToken.sol\":8230:8241  _newAddress */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":8211:8242  NFTContractUpdated(_newAddress) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":8013:8250  function updateSignsNFTContract(address _newAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8805:8872  function unpause() external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"Signs 2/SignsToken.sol\":8854:8864  _unpause() */\n      tag_163\n        /* \"Signs 2/SignsToken.sol\":8854:8862  _unpause */\n      tag_164\n        /* \"Signs 2/SignsToken.sol\":8854:8864  _unpause() */\n      jump\t// in\n    tag_163:\n        /* \"Signs 2/SignsToken.sol\":8805:8872  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":2612:3214  function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_170\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_170:\n        /* \"Signs 2/SignsToken.sol\":2733:2734  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":2723:2729  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":2723:2734  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":2719:2758  if (amount == 0) revert InvalidAmount() */\n      tag_172\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":2743:2758  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":2719:2758  if (amount == 0) revert InvalidAmount() */\n    tag_172:\n        /* \"Signs 2/SignsToken.sol\":2779:2793  address sender */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":2796:2806  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":2779:2806  address sender = msg.sender */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":2960:2972  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":2975:3009  transfer(signsNFTContract, amount) */\n      tag_173\n        /* \"Signs 2/SignsToken.sol\":2984:3000  signsNFTContract */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3002:3008  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":2975:2983  transfer */\n      tag_105\n        /* \"Signs 2/SignsToken.sol\":2975:3009  transfer(signsNFTContract, amount) */\n      jump\t// in\n    tag_173:\n        /* \"Signs 2/SignsToken.sol\":2960:3009  bool success = transfer(signsNFTContract, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":3028:3035  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3020:3061  require(success, \"Token transfer failed\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Signs 2/SignsToken.sol\":3139:3145  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":3114:3126  signBalances */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":3114:3135  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3127:3134  tokenId */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":3114:3135  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3114:3145  signBalances[tokenId] += amount */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":3190:3197  tokenId */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":3171:3206  SignBalanceCharged(tokenId, amount) */\n      0x577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd\n        /* \"Signs 2/SignsToken.sol\":3199:3205  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3171:3206  SignBalanceCharged(tokenId, amount) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":2708:3214  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_180\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_180:\n        /* \"Signs 2/SignsToken.sol\":2612:3214  function chargeSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9417:9669  function updateCommissionTreasury(address newTreasury) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"Signs 2/SignsToken.sol\":9529:9530  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":9506:9531  newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":9506:9517  newTreasury */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9506:9531  newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Signs 2/SignsToken.sol\":9502:9564  if (newTreasury == address(0)) revert InvalidTreasuryAddress() */\n      tag_191\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":9540:9564  InvalidTreasuryAddress() */\n      mload(0x40)\n      0xcfe2ea6300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":9502:9564  if (newTreasury == address(0)) revert InvalidTreasuryAddress() */\n    tag_191:\n        /* \"Signs 2/SignsToken.sol\":9596:9607  newTreasury */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":9575:9593  commissionTreasury */\n      0x09\n      0x00\n        /* \"Signs 2/SignsToken.sol\":9575:9607  commissionTreasury = newTreasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":9623:9661  CommissionTreasuryUpdated(newTreasury) */\n      0x4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f\n        /* \"Signs 2/SignsToken.sol\":9649:9660  newTreasury */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9623:9661  CommissionTreasuryUpdated(newTreasury) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":9417:9669  function updateCommissionTreasury(address newTreasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":587:619  uint256 public commissionPercent */\n    tag_85:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8734:8797  function pause() external onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"Signs 2/SignsToken.sol\":8781:8789  _pause() */\n      tag_196\n        /* \"Signs 2/SignsToken.sol\":8781:8787  _pause */\n      tag_197\n        /* \"Signs 2/SignsToken.sol\":8781:8789  _pause() */\n      jump\t// in\n    tag_196:\n        /* \"Signs 2/SignsToken.sol\":8734:8797  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_133\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_133\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9023:9290  function updateCommission(uint256 newCommissionPercent) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"Signs 2/SignsToken.sol\":771:776  10000 */\n      0x2710\n        /* \"Signs 2/SignsToken.sol\":9113:9133  newCommissionPercent */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9113:9148  newCommissionPercent > BASIS_POINTS */\n      gt\n        /* \"Signs 2/SignsToken.sol\":9109:9176  if (newCommissionPercent > BASIS_POINTS) revert InvalidCommission() */\n      iszero\n      tag_208\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":9157:9176  InvalidCommission() */\n      mload(0x40)\n      0xdc81db8500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":9109:9176  if (newCommissionPercent > BASIS_POINTS) revert InvalidCommission() */\n    tag_208:\n        /* \"Signs 2/SignsToken.sol\":9207:9227  newCommissionPercent */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":9187:9204  commissionPercent */\n      0x08\n        /* \"Signs 2/SignsToken.sol\":9187:9227  commissionPercent = newCommissionPercent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":9243:9282  CommissionUpdated(newCommissionPercent) */\n      0x13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e\n        /* \"Signs 2/SignsToken.sol\":9261:9281  newCommissionPercent */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":9243:9282  CommissionUpdated(newCommissionPercent) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Signs 2/SignsToken.sol\":9023:9290  function updateCommission(uint256 newCommissionPercent) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":515:546  address public signsNFTContract */\n    tag_101:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":9738:9945  function transfer(address to, uint256 amount) ... */\n    tag_105:\n        /* \"Signs 2/SignsToken.sol\":9881:9885  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_211\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_211:\n        /* \"Signs 2/SignsToken.sol\":9911:9937  super.transfer(to, amount) */\n      tag_213\n        /* \"Signs 2/SignsToken.sol\":9926:9928  to */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":9930:9936  amount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":9911:9925  super.transfer */\n      tag_214\n        /* \"Signs 2/SignsToken.sol\":9911:9937  super.transfer(to, amount) */\n      jump\t// in\n    tag_213:\n        /* \"Signs 2/SignsToken.sol\":9904:9937  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":9738:9945  function transfer(address to, uint256 amount) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":3393:4119  function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_216\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_218\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_218:\n        /* \"Signs 2/SignsToken.sol\":3549:3582  _isSignOwner(msg.sender, tokenId) */\n      tag_220\n        /* \"Signs 2/SignsToken.sol\":3562:3572  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3574:3581  tokenId */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":3549:3561  _isSignOwner */\n      tag_221\n        /* \"Signs 2/SignsToken.sol\":3549:3582  _isSignOwner(msg.sender, tokenId) */\n      jump\t// in\n    tag_220:\n        /* \"Signs 2/SignsToken.sol\":3544:3610  if (!_isSignOwner(msg.sender, tokenId)) revert UnauthorizedOwner() */\n      tag_222\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3591:3610  UnauthorizedOwner() */\n      mload(0x40)\n      0xde271cf500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3544:3610  if (!_isSignOwner(msg.sender, tokenId)) revert UnauthorizedOwner() */\n    tag_222:\n        /* \"Signs 2/SignsToken.sol\":3645:3646  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3635:3641  amount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":3635:3646  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":3631:3670  if (amount == 0) revert InvalidAmount() */\n      tag_223\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3655:3670  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3631:3670  if (amount == 0) revert InvalidAmount() */\n    tag_223:\n        /* \"Signs 2/SignsToken.sol\":3709:3715  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3685:3697  signBalances */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":3685:3706  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3698:3705  tokenId */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3685:3706  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":3685:3715  signBalances[tokenId] < amount */\n      lt\n        /* \"Signs 2/SignsToken.sol\":3681:3749  if (signBalances[tokenId] < amount) revert InsufficientSignBalance() */\n      iszero\n      tag_224\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":3724:3749  InsufficientSignBalance() */\n      mload(0x40)\n      0xa77130ef00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":3681:3749  if (signBalances[tokenId] < amount) revert InsufficientSignBalance() */\n    tag_224:\n        /* \"Signs 2/SignsToken.sol\":3838:3844  amount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":3813:3825  signBalances */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":3813:3834  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3826:3833  tokenId */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3813:3834  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3813:3844  signBalances[tokenId] -= amount */\n      dup3\n      dup3\n      sload\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":3925:3937  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":3940:3990  transferFrom(signsNFTContract, msg.sender, amount) */\n      tag_227\n        /* \"Signs 2/SignsToken.sol\":3953:3969  signsNFTContract */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":3971:3981  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":3983:3989  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":3940:3952  transferFrom */\n      tag_57\n        /* \"Signs 2/SignsToken.sol\":3940:3990  transferFrom(signsNFTContract, msg.sender, amount) */\n      jump\t// in\n    tag_227:\n        /* \"Signs 2/SignsToken.sol\":3925:3990  bool success = transferFrom(signsNFTContract, msg.sender, amount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":4009:4016  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":4001:4036  require(success, \"Transfer failed\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"Signs 2/SignsToken.sol\":4092:4102  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":4062:4111  SignBalanceWithdrawn(tokenId, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":4083:4090  tokenId */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":4062:4111  SignBalanceWithdrawn(tokenId, msg.sender, amount) */\n      0x4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb\n        /* \"Signs 2/SignsToken.sol\":4104:4110  amount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":4062:4111  SignBalanceWithdrawn(tokenId, msg.sender, amount) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":3491:4119  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_232\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_232:\n        /* \"Signs 2/SignsToken.sol\":3393:4119  function withdrawSignBalance(uint256 tokenId, uint256 amount) external nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":827:874  mapping(uint256 => uint256) public signBalances */\n    tag_112:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":667:700  address public commissionTreasury */\n    tag_120:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":5135:7888  function payWage(... */\n    tag_125:\n        /* \"Signs 2/SignsToken.sol\":5294:5318  WagePaymentResult memory */\n      tag_234\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"Signs 2/SignsToken.sol\":2370:2386  signsNFTContract */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":2356:2386  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":2356:2366  msg.sender */\n      caller\n        /* \"Signs 2/SignsToken.sol\":2356:2386  msg.sender != signsNFTContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Signs 2/SignsToken.sol\":2352:2415  if (msg.sender != signsNFTContract) revert UnauthorizedCaller() */\n      tag_237\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":2395:2415  UnauthorizedCaller() */\n      mload(0x40)\n      0x5c427cd900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":2352:2415  if (msg.sender != signsNFTContract) revert UnauthorizedCaller() */\n    tag_237:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_239\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_241\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_241:\n        /* \"Signs 2/SignsToken.sol\":5345:5346  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5335:5341  amount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5335:5346  amount == 0 */\n      sub\n        /* \"Signs 2/SignsToken.sol\":5331:5370  if (amount == 0) revert InvalidAmount() */\n      tag_243\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":5355:5370  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Signs 2/SignsToken.sol\":5331:5370  if (amount == 0) revert InvalidAmount() */\n    tag_243:\n        /* \"Signs 2/SignsToken.sol\":5391:5413  uint256 currentBalance */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5416:5428  signBalances */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":5416:5437  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5429:5436  tokenId */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":5416:5437  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Signs 2/SignsToken.sol\":5391:5437  uint256 currentBalance = signBalances[tokenId] */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5448:5466  bool isFullPayment */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5487:5493  amount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":5469:5483  currentBalance */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5469:5493  currentBalance >= amount */\n      lt\n      iszero\n        /* \"Signs 2/SignsToken.sol\":5448:5493  bool isFullPayment = currentBalance >= amount */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5504:5525  uint256 paymentAmount */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5536:5560  uint256 commissionAmount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":5713:5726  isFullPayment */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":5709:7684  if (isFullPayment) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":771:776  10000 */\n      0x2710\n        /* \"Signs 2/SignsToken.sol\":5809:5826  commissionPercent */\n      sload(0x08)\n        /* \"Signs 2/SignsToken.sol\":5800:5806  amount */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":5800:5826  amount * commissionPercent */\n      tag_245\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"Signs 2/SignsToken.sol\":5799:5842  (amount * commissionPercent) / BASIS_POINTS */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"Signs 2/SignsToken.sol\":5780:5842  commissionAmount = (amount * commissionPercent) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":5882:5898  commissionAmount */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":5873:5879  amount */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":5873:5898  amount - commissionAmount */\n      tag_249\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_249:\n        /* \"Signs 2/SignsToken.sol\":5857:5898  paymentAmount = amount - commissionAmount */\n      swap2\n      pop\n        /* \"Signs 2/SignsToken.sol\":6016:6022  amount */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":5999:6013  currentBalance */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":5999:6022  currentBalance - amount */\n      tag_250\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_250:\n        /* \"Signs 2/SignsToken.sol\":5975:5987  signBalances */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":5975:5996  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":5988:5995  tokenId */\n      dup11\n        /* \"Signs 2/SignsToken.sol\":5975:5996  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":5975:6022  signBalances[tokenId] = currentBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":6133:6134  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6114:6130  commissionAmount */\n      dup2\n        /* \"Signs 2/SignsToken.sol\":6114:6134  commissionAmount > 0 */\n      gt\n        /* \"Signs 2/SignsToken.sol\":6110:6496  if (commissionAmount > 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":6269:6291  bool commissionSuccess */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6294:6340  transfer(commissionTreasury, commissionAmount) */\n      tag_252\n        /* \"Signs 2/SignsToken.sol\":6303:6321  commissionTreasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":6323:6339  commissionAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6294:6302  transfer */\n      tag_105\n        /* \"Signs 2/SignsToken.sol\":6294:6340  transfer(commissionTreasury, commissionAmount) */\n      jump\t// in\n    tag_252:\n        /* \"Signs 2/SignsToken.sol\":6269:6340  bool commissionSuccess = transfer(commissionTreasury, commissionAmount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":6367:6384  commissionSuccess */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6359:6415  require(commissionSuccess, \"Commission transfer failed\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"Signs 2/SignsToken.sol\":6454:6461  tokenId */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":6439:6480  CommissionPaid(tokenId, commissionAmount) */\n      0xacfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d5277\n        /* \"Signs 2/SignsToken.sol\":6463:6479  commissionAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6439:6480  CommissionPaid(tokenId, commissionAmount) */\n      mload(0x40)\n      tag_256\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":6136:6496  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":6110:6496  if (commissionAmount > 0) {... */\n    tag_251:\n        /* \"Signs 2/SignsToken.sol\":6674:6686  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6689:6721  transfer(carrier, paymentAmount) */\n      tag_257\n        /* \"Signs 2/SignsToken.sol\":6698:6705  carrier */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":6707:6720  paymentAmount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":6689:6697  transfer */\n      tag_105\n        /* \"Signs 2/SignsToken.sol\":6689:6721  transfer(carrier, paymentAmount) */\n      jump\t// in\n    tag_257:\n        /* \"Signs 2/SignsToken.sol\":6674:6721  bool success = transfer(carrier, paymentAmount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":6744:6751  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":6736:6776  require(success, \"Wage transfer failed\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"Signs 2/SignsToken.sol\":6828:6835  carrier */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":6810:6851  WagePaid(tokenId, carrier, paymentAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":6819:6826  tokenId */\n      dup10\n        /* \"Signs 2/SignsToken.sol\":6810:6851  WagePaid(tokenId, carrier, paymentAmount) */\n      0x4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca\n        /* \"Signs 2/SignsToken.sol\":6837:6850  paymentAmount */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":6810:6851  WagePaid(tokenId, carrier, paymentAmount) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":5728:6863  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":5709:7684  if (isFullPayment) {... */\n      jump(tag_262)\n    tag_244:\n        /* \"Signs 2/SignsToken.sol\":6952:6966  currentBalance */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":6936:6966  paymentAmount = currentBalance */\n      swap2\n      pop\n        /* \"Signs 2/SignsToken.sol\":7000:7001  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":6981:7001  commissionAmount = 0 */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":7101:7102  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7077:7089  signBalances */\n      0x0a\n        /* \"Signs 2/SignsToken.sol\":7077:7098  signBalances[tokenId] */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7090:7097  tokenId */\n      dup11\n        /* \"Signs 2/SignsToken.sol\":7077:7098  signBalances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Signs 2/SignsToken.sol\":7077:7102  signBalances[tokenId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":7151:7152  0 */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7135:7148  paymentAmount */\n      dup3\n        /* \"Signs 2/SignsToken.sol\":7135:7152  paymentAmount > 0 */\n      gt\n        /* \"Signs 2/SignsToken.sol\":7131:7592  if (paymentAmount > 0) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"Signs 2/SignsToken.sol\":7348:7360  bool success */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":7363:7395  transfer(carrier, paymentAmount) */\n      tag_264\n        /* \"Signs 2/SignsToken.sol\":7372:7379  carrier */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":7381:7394  paymentAmount */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":7363:7371  transfer */\n      tag_105\n        /* \"Signs 2/SignsToken.sol\":7363:7395  transfer(carrier, paymentAmount) */\n      jump\t// in\n    tag_264:\n        /* \"Signs 2/SignsToken.sol\":7348:7395  bool success = transfer(carrier, paymentAmount) */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":7422:7429  success */\n      dup1\n        /* \"Signs 2/SignsToken.sol\":7414:7462  require(success, \"Partial wage transfer failed\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"Signs 2/SignsToken.sol\":7529:7536  carrier */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":7504:7576  PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Signs 2/SignsToken.sol\":7520:7527  tokenId */\n      dup10\n        /* \"Signs 2/SignsToken.sol\":7504:7576  PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount) */\n      0x5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb5243290\n        /* \"Signs 2/SignsToken.sol\":7538:7551  paymentAmount */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":7562:7575  paymentAmount */\n      dup7\n        /* \"Signs 2/SignsToken.sol\":7553:7559  amount */\n      dup12\n        /* \"Signs 2/SignsToken.sol\":7553:7575  amount - paymentAmount */\n      tag_268\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_268:\n        /* \"Signs 2/SignsToken.sol\":7504:7576  PartialWagePaid(tokenId, carrier, paymentAmount, amount - paymentAmount) */\n      mload(0x40)\n      tag_269\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Signs 2/SignsToken.sol\":7154:7592  {... */\n      pop\n        /* \"Signs 2/SignsToken.sol\":7131:7592  if (paymentAmount > 0) {... */\n    tag_263:\n        /* \"Signs 2/SignsToken.sol\":7640:7647  tokenId */\n      dup8\n        /* \"Signs 2/SignsToken.sol\":7625:7672  LowSignBalance(tokenId, currentBalance, amount) */\n      0x574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f\n        /* \"Signs 2/SignsToken.sol\":7649:7663  currentBalance */\n      dup6\n        /* \"Signs 2/SignsToken.sol\":7665:7671  amount */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":7625:7672  LowSignBalance(tokenId, currentBalance, amount) */\n      mload(0x40)\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Signs 2/SignsToken.sol\":5709:7684  if (isFullPayment) {... */\n    tag_262:\n        /* \"Signs 2/SignsToken.sol\":7711:7880  WagePaymentResult({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Signs 2/SignsToken.sol\":7756:7769  paymentAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7711:7880  WagePaymentResult({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Signs 2/SignsToken.sol\":7808:7821  paymentAmount */\n      dup4\n        /* \"Signs 2/SignsToken.sol\":7799:7805  amount */\n      dup9\n        /* \"Signs 2/SignsToken.sol\":7799:7821  amount - paymentAmount */\n      tag_271\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_271:\n        /* \"Signs 2/SignsToken.sol\":7711:7880  WagePaymentResult({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Signs 2/SignsToken.sol\":7855:7868  isFullPayment */\n      dup5\n        /* \"Signs 2/SignsToken.sol\":7854:7868  !isFullPayment */\n      iszero\n        /* \"Signs 2/SignsToken.sol\":7711:7880  WagePaymentResult({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Signs 2/SignsToken.sol\":7704:7880  return WagePaymentResult({... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_272\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_272:\n        /* \"Signs 2/SignsToken.sol\":5135:7888  function payWage(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_284\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_69\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_296\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_301\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_302\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_305\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_313\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_315\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Signs 2/SignsToken.sol\":8409:8690  function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {... */\n    tag_221:\n        /* \"Signs 2/SignsToken.sol\":8486:8490  bool */\n      0x00\n        /* \"Signs 2/SignsToken.sol\":8638:8642  true */\n      0x01\n        /* \"Signs 2/SignsToken.sol\":8631:8642  return true */\n      swap1\n      pop\n        /* \"Signs 2/SignsToken.sol\":8409:8690  function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_327\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_343\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_69\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap1\n      tag_346\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_344:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_349\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_349:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_350)\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_354)\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_355\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_235:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_356:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_357:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_358:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_359:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_360:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_405\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_356\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":711:782   */\n      tag_406\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_357\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_407\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_358\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":881:910   */\n      tag_408\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_359\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_37:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_410\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_360\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_362:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_364:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_365:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_416\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_364\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_366:\n        /* \"#utility.yul\":1876:1900   */\n      tag_418\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_365\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_419:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_367:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_421\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_366\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_368:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_369:\n        /* \"#utility.yul\":2232:2256   */\n      tag_424\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_368\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_425:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_370:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_427\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_369\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_40:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_430\n      tag_362\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2525:2644   */\n    tag_429:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_431\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_367\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_432\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_370\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_371:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_372:\n        /* \"#utility.yul\":3089:3110   */\n      tag_435\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_371\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_43:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_437\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_372\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_373:\n        /* \"#utility.yul\":3426:3450   */\n      tag_439\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_368\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_47:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_441\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_373\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_50:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_444\n      tag_362\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3767:3886   */\n    tag_443:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_445\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_367\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4358   */\n    tag_53:\n        /* \"#utility.yul\":4147:4151   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x40\n        /* \"#utility.yul\":4174:4183   */\n      dup3\n        /* \"#utility.yul\":4170:4188   */\n      add\n        /* \"#utility.yul\":4162:4188   */\n      swap1\n      pop\n        /* \"#utility.yul\":4198:4269   */\n      tag_447\n        /* \"#utility.yul\":4266:4267   */\n      0x00\n        /* \"#utility.yul\":4255:4264   */\n      dup4\n        /* \"#utility.yul\":4251:4268   */\n      add\n        /* \"#utility.yul\":4242:4248   */\n      dup6\n        /* \"#utility.yul\":4198:4269   */\n      tag_373\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4279:4351   */\n      tag_448\n        /* \"#utility.yul\":4347:4349   */\n      0x20\n        /* \"#utility.yul\":4336:4345   */\n      dup4\n        /* \"#utility.yul\":4332:4350   */\n      add\n        /* \"#utility.yul\":4323:4329   */\n      dup5\n        /* \"#utility.yul\":4279:4351   */\n      tag_373\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4026:4358   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4983   */\n    tag_56:\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4449:4455   */\n      dup1\n        /* \"#utility.yul\":4457:4463   */\n      0x00\n        /* \"#utility.yul\":4506:4508   */\n      0x60\n        /* \"#utility.yul\":4494:4503   */\n      dup5\n        /* \"#utility.yul\":4485:4492   */\n      dup7\n        /* \"#utility.yul\":4481:4504   */\n      sub\n        /* \"#utility.yul\":4477:4509   */\n      slt\n        /* \"#utility.yul\":4474:4593   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4512:4591   */\n      tag_451\n      tag_362\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4474:4593   */\n    tag_450:\n        /* \"#utility.yul\":4632:4633   */\n      0x00\n        /* \"#utility.yul\":4657:4710   */\n      tag_452\n        /* \"#utility.yul\":4702:4709   */\n      dup7\n        /* \"#utility.yul\":4693:4699   */\n      dup3\n        /* \"#utility.yul\":4682:4691   */\n      dup8\n        /* \"#utility.yul\":4678:4700   */\n      add\n        /* \"#utility.yul\":4657:4710   */\n      tag_367\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4647:4710   */\n      swap4\n      pop\n        /* \"#utility.yul\":4603:4720   */\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4785:4838   */\n      tag_453\n        /* \"#utility.yul\":4830:4837   */\n      dup7\n        /* \"#utility.yul\":4821:4827   */\n      dup3\n        /* \"#utility.yul\":4810:4819   */\n      dup8\n        /* \"#utility.yul\":4806:4828   */\n      add\n        /* \"#utility.yul\":4785:4838   */\n      tag_367\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4775:4838   */\n      swap3\n      pop\n        /* \"#utility.yul\":4730:4848   */\n      pop\n        /* \"#utility.yul\":4887:4889   */\n      0x40\n        /* \"#utility.yul\":4913:4966   */\n      tag_454\n        /* \"#utility.yul\":4958:4965   */\n      dup7\n        /* \"#utility.yul\":4949:4955   */\n      dup3\n        /* \"#utility.yul\":4938:4947   */\n      dup8\n        /* \"#utility.yul\":4934:4956   */\n      add\n        /* \"#utility.yul\":4913:4966   */\n      tag_370\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4903:4966   */\n      swap2\n      pop\n        /* \"#utility.yul\":4858:4976   */\n      pop\n        /* \"#utility.yul\":4364:4983   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4989:5075   */\n    tag_374:\n        /* \"#utility.yul\":5024:5031   */\n      0x00\n        /* \"#utility.yul\":5064:5068   */\n      0xff\n        /* \"#utility.yul\":5057:5062   */\n      dup3\n        /* \"#utility.yul\":5053:5069   */\n      and\n        /* \"#utility.yul\":5042:5069   */\n      swap1\n      pop\n        /* \"#utility.yul\":4989:5075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5193   */\n    tag_375:\n        /* \"#utility.yul\":5164:5186   */\n      tag_457\n        /* \"#utility.yul\":5180:5185   */\n      dup2\n        /* \"#utility.yul\":5164:5186   */\n      tag_374\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5159:5162   */\n      dup3\n        /* \"#utility.yul\":5152:5187   */\n      mstore\n        /* \"#utility.yul\":5081:5193   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5199:5413   */\n    tag_65:\n        /* \"#utility.yul\":5288:5292   */\n      0x00\n        /* \"#utility.yul\":5326:5328   */\n      0x20\n        /* \"#utility.yul\":5315:5324   */\n      dup3\n        /* \"#utility.yul\":5311:5329   */\n      add\n        /* \"#utility.yul\":5303:5329   */\n      swap1\n      pop\n        /* \"#utility.yul\":5339:5406   */\n      tag_459\n        /* \"#utility.yul\":5403:5404   */\n      0x00\n        /* \"#utility.yul\":5392:5401   */\n      dup4\n        /* \"#utility.yul\":5388:5405   */\n      add\n        /* \"#utility.yul\":5379:5385   */\n      dup5\n        /* \"#utility.yul\":5339:5406   */\n      tag_375\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5199:5413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5419:5893   */\n    tag_73:\n        /* \"#utility.yul\":5487:5493   */\n      0x00\n        /* \"#utility.yul\":5495:5501   */\n      dup1\n        /* \"#utility.yul\":5544:5546   */\n      0x40\n        /* \"#utility.yul\":5532:5541   */\n      dup4\n        /* \"#utility.yul\":5523:5530   */\n      dup6\n        /* \"#utility.yul\":5519:5542   */\n      sub\n        /* \"#utility.yul\":5515:5547   */\n      slt\n        /* \"#utility.yul\":5512:5631   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5550:5629   */\n      tag_462\n      tag_362\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5512:5631   */\n    tag_461:\n        /* \"#utility.yul\":5670:5671   */\n      0x00\n        /* \"#utility.yul\":5695:5748   */\n      tag_463\n        /* \"#utility.yul\":5740:5747   */\n      dup6\n        /* \"#utility.yul\":5731:5737   */\n      dup3\n        /* \"#utility.yul\":5720:5729   */\n      dup7\n        /* \"#utility.yul\":5716:5738   */\n      add\n        /* \"#utility.yul\":5695:5748   */\n      tag_370\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5685:5748   */\n      swap3\n      pop\n        /* \"#utility.yul\":5641:5758   */\n      pop\n        /* \"#utility.yul\":5797:5799   */\n      0x20\n        /* \"#utility.yul\":5823:5876   */\n      tag_464\n        /* \"#utility.yul\":5868:5875   */\n      dup6\n        /* \"#utility.yul\":5859:5865   */\n      dup3\n        /* \"#utility.yul\":5848:5857   */\n      dup7\n        /* \"#utility.yul\":5844:5866   */\n      add\n        /* \"#utility.yul\":5823:5876   */\n      tag_370\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":5813:5876   */\n      swap2\n      pop\n        /* \"#utility.yul\":5768:5886   */\n      pop\n        /* \"#utility.yul\":5419:5893   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_376:\n        /* \"#utility.yul\":5986:6010   */\n      tag_466\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_365\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6245   */\n    tag_92:\n        /* \"#utility.yul\":6116:6120   */\n      0x00\n        /* \"#utility.yul\":6154:6156   */\n      0x20\n        /* \"#utility.yul\":6143:6152   */\n      dup3\n        /* \"#utility.yul\":6139:6157   */\n      add\n        /* \"#utility.yul\":6131:6157   */\n      swap1\n      pop\n        /* \"#utility.yul\":6167:6238   */\n      tag_468\n        /* \"#utility.yul\":6235:6236   */\n      0x00\n        /* \"#utility.yul\":6224:6233   */\n      dup4\n        /* \"#utility.yul\":6220:6237   */\n      add\n        /* \"#utility.yul\":6211:6217   */\n      dup5\n        /* \"#utility.yul\":6167:6238   */\n      tag_376\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6023:6245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6251:6580   */\n    tag_98:\n        /* \"#utility.yul\":6310:6316   */\n      0x00\n        /* \"#utility.yul\":6359:6361   */\n      0x20\n        /* \"#utility.yul\":6347:6356   */\n      dup3\n        /* \"#utility.yul\":6338:6345   */\n      dup5\n        /* \"#utility.yul\":6334:6357   */\n      sub\n        /* \"#utility.yul\":6330:6362   */\n      slt\n        /* \"#utility.yul\":6327:6446   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6365:6444   */\n      tag_471\n      tag_362\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6327:6446   */\n    tag_470:\n        /* \"#utility.yul\":6485:6486   */\n      0x00\n        /* \"#utility.yul\":6510:6563   */\n      tag_472\n        /* \"#utility.yul\":6555:6562   */\n      dup5\n        /* \"#utility.yul\":6546:6552   */\n      dup3\n        /* \"#utility.yul\":6535:6544   */\n      dup6\n        /* \"#utility.yul\":6531:6553   */\n      add\n        /* \"#utility.yul\":6510:6563   */\n      tag_370\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6500:6563   */\n      swap2\n      pop\n        /* \"#utility.yul\":6456:6573   */\n      pop\n        /* \"#utility.yul\":6251:6580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6586:7060   */\n    tag_116:\n        /* \"#utility.yul\":6654:6660   */\n      0x00\n        /* \"#utility.yul\":6662:6668   */\n      dup1\n        /* \"#utility.yul\":6711:6713   */\n      0x40\n        /* \"#utility.yul\":6699:6708   */\n      dup4\n        /* \"#utility.yul\":6690:6697   */\n      dup6\n        /* \"#utility.yul\":6686:6709   */\n      sub\n        /* \"#utility.yul\":6682:6714   */\n      slt\n        /* \"#utility.yul\":6679:6798   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6717:6796   */\n      tag_475\n      tag_362\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6679:6798   */\n    tag_474:\n        /* \"#utility.yul\":6837:6838   */\n      0x00\n        /* \"#utility.yul\":6862:6915   */\n      tag_476\n        /* \"#utility.yul\":6907:6914   */\n      dup6\n        /* \"#utility.yul\":6898:6904   */\n      dup3\n        /* \"#utility.yul\":6887:6896   */\n      dup7\n        /* \"#utility.yul\":6883:6905   */\n      add\n        /* \"#utility.yul\":6862:6915   */\n      tag_367\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6852:6915   */\n      swap3\n      pop\n        /* \"#utility.yul\":6808:6925   */\n      pop\n        /* \"#utility.yul\":6964:6966   */\n      0x20\n        /* \"#utility.yul\":6990:7043   */\n      tag_477\n        /* \"#utility.yul\":7035:7042   */\n      dup6\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7015:7024   */\n      dup7\n        /* \"#utility.yul\":7011:7033   */\n      add\n        /* \"#utility.yul\":6990:7043   */\n      tag_367\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6980:7043   */\n      swap2\n      pop\n        /* \"#utility.yul\":6935:7053   */\n      pop\n        /* \"#utility.yul\":6586:7060   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7066:7685   */\n    tag_124:\n        /* \"#utility.yul\":7143:7149   */\n      0x00\n        /* \"#utility.yul\":7151:7157   */\n      dup1\n        /* \"#utility.yul\":7159:7165   */\n      0x00\n        /* \"#utility.yul\":7208:7210   */\n      0x60\n        /* \"#utility.yul\":7196:7205   */\n      dup5\n        /* \"#utility.yul\":7187:7194   */\n      dup7\n        /* \"#utility.yul\":7183:7206   */\n      sub\n        /* \"#utility.yul\":7179:7211   */\n      slt\n        /* \"#utility.yul\":7176:7295   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":7214:7293   */\n      tag_480\n      tag_362\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7176:7295   */\n    tag_479:\n        /* \"#utility.yul\":7334:7335   */\n      0x00\n        /* \"#utility.yul\":7359:7412   */\n      tag_481\n        /* \"#utility.yul\":7404:7411   */\n      dup7\n        /* \"#utility.yul\":7395:7401   */\n      dup3\n        /* \"#utility.yul\":7384:7393   */\n      dup8\n        /* \"#utility.yul\":7380:7402   */\n      add\n        /* \"#utility.yul\":7359:7412   */\n      tag_370\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7349:7412   */\n      swap4\n      pop\n        /* \"#utility.yul\":7305:7422   */\n      pop\n        /* \"#utility.yul\":7461:7463   */\n      0x20\n        /* \"#utility.yul\":7487:7540   */\n      tag_482\n        /* \"#utility.yul\":7532:7539   */\n      dup7\n        /* \"#utility.yul\":7523:7529   */\n      dup3\n        /* \"#utility.yul\":7512:7521   */\n      dup8\n        /* \"#utility.yul\":7508:7530   */\n      add\n        /* \"#utility.yul\":7487:7540   */\n      tag_367\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7477:7540   */\n      swap3\n      pop\n        /* \"#utility.yul\":7432:7550   */\n      pop\n        /* \"#utility.yul\":7589:7591   */\n      0x40\n        /* \"#utility.yul\":7615:7668   */\n      tag_483\n        /* \"#utility.yul\":7660:7667   */\n      dup7\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup8\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_370\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7605:7668   */\n      swap2\n      pop\n        /* \"#utility.yul\":7560:7678   */\n      pop\n        /* \"#utility.yul\":7066:7685   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7691:7799   */\n    tag_377:\n        /* \"#utility.yul\":7768:7792   */\n      tag_485\n        /* \"#utility.yul\":7786:7791   */\n      dup2\n        /* \"#utility.yul\":7768:7792   */\n      tag_368\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7763:7766   */\n      dup3\n        /* \"#utility.yul\":7756:7793   */\n      mstore\n        /* \"#utility.yul\":7691:7799   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7805:7904   */\n    tag_378:\n        /* \"#utility.yul\":7876:7897   */\n      tag_487\n        /* \"#utility.yul\":7891:7896   */\n      dup2\n        /* \"#utility.yul\":7876:7897   */\n      tag_371\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7871:7874   */\n      dup3\n        /* \"#utility.yul\":7864:7898   */\n      mstore\n        /* \"#utility.yul\":7805:7904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7990:8712   */\n    tag_379:\n        /* \"#utility.yul\":8157:8161   */\n      0x60\n        /* \"#utility.yul\":8152:8155   */\n      dup3\n        /* \"#utility.yul\":8148:8162   */\n      add\n        /* \"#utility.yul\":8250:8254   */\n      0x00\n        /* \"#utility.yul\":8243:8248   */\n      dup3\n        /* \"#utility.yul\":8239:8255   */\n      add\n        /* \"#utility.yul\":8233:8256   */\n      mload\n        /* \"#utility.yul\":8269:8332   */\n      tag_489\n        /* \"#utility.yul\":8326:8330   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup6\n        /* \"#utility.yul\":8317:8331   */\n      add\n        /* \"#utility.yul\":8303:8315   */\n      dup3\n        /* \"#utility.yul\":8269:8332   */\n      tag_377\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8172:8342   */\n      pop\n        /* \"#utility.yul\":8433:8437   */\n      0x20\n        /* \"#utility.yul\":8426:8431   */\n      dup3\n        /* \"#utility.yul\":8422:8438   */\n      add\n        /* \"#utility.yul\":8416:8439   */\n      mload\n        /* \"#utility.yul\":8452:8515   */\n      tag_490\n        /* \"#utility.yul\":8509:8513   */\n      0x20\n        /* \"#utility.yul\":8504:8507   */\n      dup6\n        /* \"#utility.yul\":8500:8514   */\n      add\n        /* \"#utility.yul\":8486:8498   */\n      dup3\n        /* \"#utility.yul\":8452:8515   */\n      tag_377\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8352:8525   */\n      pop\n        /* \"#utility.yul\":8619:8623   */\n      0x40\n        /* \"#utility.yul\":8612:8617   */\n      dup3\n        /* \"#utility.yul\":8608:8624   */\n      add\n        /* \"#utility.yul\":8602:8625   */\n      mload\n        /* \"#utility.yul\":8638:8695   */\n      tag_491\n        /* \"#utility.yul\":8689:8693   */\n      0x40\n        /* \"#utility.yul\":8684:8687   */\n      dup6\n        /* \"#utility.yul\":8680:8694   */\n      add\n        /* \"#utility.yul\":8666:8678   */\n      dup3\n        /* \"#utility.yul\":8638:8695   */\n      tag_378\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8535:8705   */\n      pop\n        /* \"#utility.yul\":8126:8712   */\n      pop\n        /* \"#utility.yul\":7990:8712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8718:9080   */\n    tag_127:\n        /* \"#utility.yul\":8881:8885   */\n      0x00\n        /* \"#utility.yul\":8919:8921   */\n      0x60\n        /* \"#utility.yul\":8908:8917   */\n      dup3\n        /* \"#utility.yul\":8904:8922   */\n      add\n        /* \"#utility.yul\":8896:8922   */\n      swap1\n      pop\n        /* \"#utility.yul\":8932:9073   */\n      tag_493\n        /* \"#utility.yul\":9070:9071   */\n      0x00\n        /* \"#utility.yul\":9059:9068   */\n      dup4\n        /* \"#utility.yul\":9055:9072   */\n      add\n        /* \"#utility.yul\":9046:9052   */\n      dup5\n        /* \"#utility.yul\":8932:9073   */\n      tag_379\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8718:9080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9086:9266   */\n    tag_380:\n        /* \"#utility.yul\":9134:9211   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9131:9132   */\n      0x00\n        /* \"#utility.yul\":9124:9212   */\n      mstore\n        /* \"#utility.yul\":9231:9235   */\n      0x22\n        /* \"#utility.yul\":9228:9229   */\n      0x04\n        /* \"#utility.yul\":9221:9236   */\n      mstore\n        /* \"#utility.yul\":9255:9259   */\n      0x24\n        /* \"#utility.yul\":9252:9253   */\n      0x00\n        /* \"#utility.yul\":9245:9260   */\n      revert\n        /* \"#utility.yul\":9272:9592   */\n    tag_133:\n        /* \"#utility.yul\":9316:9322   */\n      0x00\n        /* \"#utility.yul\":9353:9354   */\n      0x02\n        /* \"#utility.yul\":9347:9351   */\n      dup3\n        /* \"#utility.yul\":9343:9355   */\n      div\n        /* \"#utility.yul\":9333:9355   */\n      swap1\n      pop\n        /* \"#utility.yul\":9400:9401   */\n      0x01\n        /* \"#utility.yul\":9394:9398   */\n      dup3\n        /* \"#utility.yul\":9390:9402   */\n      and\n        /* \"#utility.yul\":9421:9439   */\n      dup1\n        /* \"#utility.yul\":9411:9492   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":9477:9481   */\n      0x7f\n        /* \"#utility.yul\":9469:9475   */\n      dup3\n        /* \"#utility.yul\":9465:9482   */\n      and\n        /* \"#utility.yul\":9455:9482   */\n      swap2\n      pop\n        /* \"#utility.yul\":9411:9492   */\n    tag_496:\n        /* \"#utility.yul\":9539:9541   */\n      0x20\n        /* \"#utility.yul\":9531:9537   */\n      dup3\n        /* \"#utility.yul\":9528:9542   */\n      lt\n        /* \"#utility.yul\":9508:9526   */\n      dup2\n        /* \"#utility.yul\":9505:9543   */\n      sub\n        /* \"#utility.yul\":9502:9586   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":9558:9576   */\n      tag_498\n      tag_380\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9502:9586   */\n    tag_497:\n        /* \"#utility.yul\":9323:9592   */\n      pop\n        /* \"#utility.yul\":9272:9592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9598:9769   */\n    tag_381:\n        /* \"#utility.yul\":9738:9761   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":9734:9735   */\n      0x00\n        /* \"#utility.yul\":9726:9732   */\n      dup3\n        /* \"#utility.yul\":9722:9736   */\n      add\n        /* \"#utility.yul\":9715:9762   */\n      mstore\n        /* \"#utility.yul\":9598:9769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9775:10141   */\n    tag_382:\n        /* \"#utility.yul\":9917:9920   */\n      0x00\n        /* \"#utility.yul\":9938:10005   */\n      tag_501\n        /* \"#utility.yul\":10002:10004   */\n      0x15\n        /* \"#utility.yul\":9997:10000   */\n      dup4\n        /* \"#utility.yul\":9938:10005   */\n      tag_357\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9931:10005   */\n      swap2\n      pop\n        /* \"#utility.yul\":10014:10107   */\n      tag_502\n        /* \"#utility.yul\":10103:10106   */\n      dup3\n        /* \"#utility.yul\":10014:10107   */\n      tag_381\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10132:10134   */\n      0x20\n        /* \"#utility.yul\":10127:10130   */\n      dup3\n        /* \"#utility.yul\":10123:10135   */\n      add\n        /* \"#utility.yul\":10116:10135   */\n      swap1\n      pop\n        /* \"#utility.yul\":9775:10141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10147:10566   */\n    tag_176:\n        /* \"#utility.yul\":10313:10317   */\n      0x00\n        /* \"#utility.yul\":10351:10353   */\n      0x20\n        /* \"#utility.yul\":10340:10349   */\n      dup3\n        /* \"#utility.yul\":10336:10354   */\n      add\n        /* \"#utility.yul\":10328:10354   */\n      swap1\n      pop\n        /* \"#utility.yul\":10400:10409   */\n      dup2\n        /* \"#utility.yul\":10394:10398   */\n      dup2\n        /* \"#utility.yul\":10390:10410   */\n      sub\n        /* \"#utility.yul\":10386:10387   */\n      0x00\n        /* \"#utility.yul\":10375:10384   */\n      dup4\n        /* \"#utility.yul\":10371:10388   */\n      add\n        /* \"#utility.yul\":10364:10411   */\n      mstore\n        /* \"#utility.yul\":10428:10559   */\n      tag_504\n        /* \"#utility.yul\":10554:10558   */\n      dup2\n        /* \"#utility.yul\":10428:10559   */\n      tag_382\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":10420:10559   */\n      swap1\n      pop\n        /* \"#utility.yul\":10147:10566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10572:10752   */\n    tag_383:\n        /* \"#utility.yul\":10620:10697   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10617:10618   */\n      0x00\n        /* \"#utility.yul\":10610:10698   */\n      mstore\n        /* \"#utility.yul\":10717:10721   */\n      0x11\n        /* \"#utility.yul\":10714:10715   */\n      0x04\n        /* \"#utility.yul\":10707:10722   */\n      mstore\n        /* \"#utility.yul\":10741:10745   */\n      0x24\n        /* \"#utility.yul\":10738:10739   */\n      0x00\n        /* \"#utility.yul\":10731:10746   */\n      revert\n        /* \"#utility.yul\":10758:10949   */\n    tag_178:\n        /* \"#utility.yul\":10798:10801   */\n      0x00\n        /* \"#utility.yul\":10817:10837   */\n      tag_507\n        /* \"#utility.yul\":10835:10836   */\n      dup3\n        /* \"#utility.yul\":10817:10837   */\n      tag_368\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10812:10837   */\n      swap2\n      pop\n        /* \"#utility.yul\":10851:10871   */\n      tag_508\n        /* \"#utility.yul\":10869:10870   */\n      dup4\n        /* \"#utility.yul\":10851:10871   */\n      tag_368\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10846:10871   */\n      swap3\n      pop\n        /* \"#utility.yul\":10894:10895   */\n      dup3\n        /* \"#utility.yul\":10891:10892   */\n      dup3\n        /* \"#utility.yul\":10887:10896   */\n      add\n        /* \"#utility.yul\":10880:10896   */\n      swap1\n      pop\n        /* \"#utility.yul\":10915:10918   */\n      dup1\n        /* \"#utility.yul\":10912:10913   */\n      dup3\n        /* \"#utility.yul\":10909:10919   */\n      gt\n        /* \"#utility.yul\":10906:10942   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":10922:10940   */\n      tag_510\n      tag_383\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10906:10942   */\n    tag_509:\n        /* \"#utility.yul\":10758:10949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10955:11149   */\n    tag_226:\n        /* \"#utility.yul\":10995:10999   */\n      0x00\n        /* \"#utility.yul\":11015:11035   */\n      tag_512\n        /* \"#utility.yul\":11033:11034   */\n      dup3\n        /* \"#utility.yul\":11015:11035   */\n      tag_368\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11010:11035   */\n      swap2\n      pop\n        /* \"#utility.yul\":11049:11069   */\n      tag_513\n        /* \"#utility.yul\":11067:11068   */\n      dup4\n        /* \"#utility.yul\":11049:11069   */\n      tag_368\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":11044:11069   */\n      swap3\n      pop\n        /* \"#utility.yul\":11093:11094   */\n      dup3\n        /* \"#utility.yul\":11090:11091   */\n      dup3\n        /* \"#utility.yul\":11086:11095   */\n      sub\n        /* \"#utility.yul\":11078:11095   */\n      swap1\n      pop\n        /* \"#utility.yul\":11117:11118   */\n      dup2\n        /* \"#utility.yul\":11111:11115   */\n      dup2\n        /* \"#utility.yul\":11108:11119   */\n      gt\n        /* \"#utility.yul\":11105:11142   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":11122:11140   */\n      tag_515\n      tag_383\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11105:11142   */\n    tag_514:\n        /* \"#utility.yul\":10955:11149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11155:11320   */\n    tag_384:\n        /* \"#utility.yul\":11295:11312   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":11291:11292   */\n      0x00\n        /* \"#utility.yul\":11283:11289   */\n      dup3\n        /* \"#utility.yul\":11279:11293   */\n      add\n        /* \"#utility.yul\":11272:11313   */\n      mstore\n        /* \"#utility.yul\":11155:11320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11692   */\n    tag_385:\n        /* \"#utility.yul\":11468:11471   */\n      0x00\n        /* \"#utility.yul\":11489:11556   */\n      tag_518\n        /* \"#utility.yul\":11553:11555   */\n      0x0f\n        /* \"#utility.yul\":11548:11551   */\n      dup4\n        /* \"#utility.yul\":11489:11556   */\n      tag_357\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11482:11556   */\n      swap2\n      pop\n        /* \"#utility.yul\":11565:11658   */\n      tag_519\n        /* \"#utility.yul\":11654:11657   */\n      dup3\n        /* \"#utility.yul\":11565:11658   */\n      tag_384\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11683:11685   */\n      0x20\n        /* \"#utility.yul\":11678:11681   */\n      dup3\n        /* \"#utility.yul\":11674:11686   */\n      add\n        /* \"#utility.yul\":11667:11686   */\n      swap1\n      pop\n        /* \"#utility.yul\":11326:11692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11698:12117   */\n    tag_230:\n        /* \"#utility.yul\":11864:11868   */\n      0x00\n        /* \"#utility.yul\":11902:11904   */\n      0x20\n        /* \"#utility.yul\":11891:11900   */\n      dup3\n        /* \"#utility.yul\":11887:11905   */\n      add\n        /* \"#utility.yul\":11879:11905   */\n      swap1\n      pop\n        /* \"#utility.yul\":11951:11960   */\n      dup2\n        /* \"#utility.yul\":11945:11949   */\n      dup2\n        /* \"#utility.yul\":11941:11961   */\n      sub\n        /* \"#utility.yul\":11937:11938   */\n      0x00\n        /* \"#utility.yul\":11926:11935   */\n      dup4\n        /* \"#utility.yul\":11922:11939   */\n      add\n        /* \"#utility.yul\":11915:11962   */\n      mstore\n        /* \"#utility.yul\":11979:12110   */\n      tag_521\n        /* \"#utility.yul\":12105:12109   */\n      dup2\n        /* \"#utility.yul\":11979:12110   */\n      tag_385\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11971:12110   */\n      swap1\n      pop\n        /* \"#utility.yul\":11698:12117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12123:12533   */\n    tag_246:\n        /* \"#utility.yul\":12163:12170   */\n      0x00\n        /* \"#utility.yul\":12186:12206   */\n      tag_523\n        /* \"#utility.yul\":12204:12205   */\n      dup3\n        /* \"#utility.yul\":12186:12206   */\n      tag_368\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12181:12206   */\n      swap2\n      pop\n        /* \"#utility.yul\":12220:12240   */\n      tag_524\n        /* \"#utility.yul\":12238:12239   */\n      dup4\n        /* \"#utility.yul\":12220:12240   */\n      tag_368\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12215:12240   */\n      swap3\n      pop\n        /* \"#utility.yul\":12275:12276   */\n      dup3\n        /* \"#utility.yul\":12272:12273   */\n      dup3\n        /* \"#utility.yul\":12268:12277   */\n      mul\n        /* \"#utility.yul\":12297:12327   */\n      tag_525\n        /* \"#utility.yul\":12315:12326   */\n      dup2\n        /* \"#utility.yul\":12297:12327   */\n      tag_368\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":12286:12327   */\n      swap2\n      pop\n        /* \"#utility.yul\":12476:12477   */\n      dup3\n        /* \"#utility.yul\":12467:12474   */\n      dup3\n        /* \"#utility.yul\":12463:12478   */\n      div\n        /* \"#utility.yul\":12460:12461   */\n      dup5\n        /* \"#utility.yul\":12457:12479   */\n      eq\n        /* \"#utility.yul\":12437:12438   */\n      dup4\n        /* \"#utility.yul\":12430:12439   */\n      iszero\n        /* \"#utility.yul\":12410:12493   */\n      or\n        /* \"#utility.yul\":12387:12526   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":12506:12524   */\n      tag_527\n      tag_383\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12387:12526   */\n    tag_526:\n        /* \"#utility.yul\":12171:12533   */\n      pop\n        /* \"#utility.yul\":12123:12533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12539:12719   */\n    tag_386:\n        /* \"#utility.yul\":12587:12664   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12584:12585   */\n      0x00\n        /* \"#utility.yul\":12577:12665   */\n      mstore\n        /* \"#utility.yul\":12684:12688   */\n      0x12\n        /* \"#utility.yul\":12681:12682   */\n      0x04\n        /* \"#utility.yul\":12674:12689   */\n      mstore\n        /* \"#utility.yul\":12708:12712   */\n      0x24\n        /* \"#utility.yul\":12705:12706   */\n      0x00\n        /* \"#utility.yul\":12698:12713   */\n      revert\n        /* \"#utility.yul\":12725:12910   */\n    tag_248:\n        /* \"#utility.yul\":12765:12766   */\n      0x00\n        /* \"#utility.yul\":12782:12802   */\n      tag_530\n        /* \"#utility.yul\":12800:12801   */\n      dup3\n        /* \"#utility.yul\":12782:12802   */\n      tag_368\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12777:12802   */\n      swap2\n      pop\n        /* \"#utility.yul\":12816:12836   */\n      tag_531\n        /* \"#utility.yul\":12834:12835   */\n      dup4\n        /* \"#utility.yul\":12816:12836   */\n      tag_368\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12811:12836   */\n      swap3\n      pop\n        /* \"#utility.yul\":12855:12856   */\n      dup3\n        /* \"#utility.yul\":12845:12880   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":12860:12878   */\n      tag_533\n      tag_386\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12845:12880   */\n    tag_532:\n        /* \"#utility.yul\":12902:12903   */\n      dup3\n        /* \"#utility.yul\":12899:12900   */\n      dup3\n        /* \"#utility.yul\":12895:12904   */\n      div\n        /* \"#utility.yul\":12890:12904   */\n      swap1\n      pop\n        /* \"#utility.yul\":12725:12910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12916:13092   */\n    tag_387:\n        /* \"#utility.yul\":13056:13084   */\n      0x436f6d6d697373696f6e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":13052:13053   */\n      0x00\n        /* \"#utility.yul\":13044:13050   */\n      dup3\n        /* \"#utility.yul\":13040:13054   */\n      add\n        /* \"#utility.yul\":13033:13085   */\n      mstore\n        /* \"#utility.yul\":12916:13092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13098:13464   */\n    tag_388:\n        /* \"#utility.yul\":13240:13243   */\n      0x00\n        /* \"#utility.yul\":13261:13328   */\n      tag_536\n        /* \"#utility.yul\":13325:13327   */\n      0x1a\n        /* \"#utility.yul\":13320:13323   */\n      dup4\n        /* \"#utility.yul\":13261:13328   */\n      tag_357\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":13254:13328   */\n      swap2\n      pop\n        /* \"#utility.yul\":13337:13430   */\n      tag_537\n        /* \"#utility.yul\":13426:13429   */\n      dup3\n        /* \"#utility.yul\":13337:13430   */\n      tag_387\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":13455:13457   */\n      0x20\n        /* \"#utility.yul\":13450:13453   */\n      dup3\n        /* \"#utility.yul\":13446:13458   */\n      add\n        /* \"#utility.yul\":13439:13458   */\n      swap1\n      pop\n        /* \"#utility.yul\":13098:13464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13470:13889   */\n    tag_255:\n        /* \"#utility.yul\":13636:13640   */\n      0x00\n        /* \"#utility.yul\":13674:13676   */\n      0x20\n        /* \"#utility.yul\":13663:13672   */\n      dup3\n        /* \"#utility.yul\":13659:13677   */\n      add\n        /* \"#utility.yul\":13651:13677   */\n      swap1\n      pop\n        /* \"#utility.yul\":13723:13732   */\n      dup2\n        /* \"#utility.yul\":13717:13721   */\n      dup2\n        /* \"#utility.yul\":13713:13733   */\n      sub\n        /* \"#utility.yul\":13709:13710   */\n      0x00\n        /* \"#utility.yul\":13698:13707   */\n      dup4\n        /* \"#utility.yul\":13694:13711   */\n      add\n        /* \"#utility.yul\":13687:13734   */\n      mstore\n        /* \"#utility.yul\":13751:13882   */\n      tag_539\n        /* \"#utility.yul\":13877:13881   */\n      dup2\n        /* \"#utility.yul\":13751:13882   */\n      tag_388\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13743:13882   */\n      swap1\n      pop\n        /* \"#utility.yul\":13470:13889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13895:14065   */\n    tag_389:\n        /* \"#utility.yul\":14035:14057   */\n      0x57616765207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":14031:14032   */\n      0x00\n        /* \"#utility.yul\":14023:14029   */\n      dup3\n        /* \"#utility.yul\":14019:14033   */\n      add\n        /* \"#utility.yul\":14012:14058   */\n      mstore\n        /* \"#utility.yul\":13895:14065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14071:14437   */\n    tag_390:\n        /* \"#utility.yul\":14213:14216   */\n      0x00\n        /* \"#utility.yul\":14234:14301   */\n      tag_542\n        /* \"#utility.yul\":14298:14300   */\n      0x14\n        /* \"#utility.yul\":14293:14296   */\n      dup4\n        /* \"#utility.yul\":14234:14301   */\n      tag_357\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14227:14301   */\n      swap2\n      pop\n        /* \"#utility.yul\":14310:14403   */\n      tag_543\n        /* \"#utility.yul\":14399:14402   */\n      dup3\n        /* \"#utility.yul\":14310:14403   */\n      tag_389\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14428:14430   */\n      0x20\n        /* \"#utility.yul\":14423:14426   */\n      dup3\n        /* \"#utility.yul\":14419:14431   */\n      add\n        /* \"#utility.yul\":14412:14431   */\n      swap1\n      pop\n        /* \"#utility.yul\":14071:14437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14443:14862   */\n    tag_260:\n        /* \"#utility.yul\":14609:14613   */\n      0x00\n        /* \"#utility.yul\":14647:14649   */\n      0x20\n        /* \"#utility.yul\":14636:14645   */\n      dup3\n        /* \"#utility.yul\":14632:14650   */\n      add\n        /* \"#utility.yul\":14624:14650   */\n      swap1\n      pop\n        /* \"#utility.yul\":14696:14705   */\n      dup2\n        /* \"#utility.yul\":14690:14694   */\n      dup2\n        /* \"#utility.yul\":14686:14706   */\n      sub\n        /* \"#utility.yul\":14682:14683   */\n      0x00\n        /* \"#utility.yul\":14671:14680   */\n      dup4\n        /* \"#utility.yul\":14667:14684   */\n      add\n        /* \"#utility.yul\":14660:14707   */\n      mstore\n        /* \"#utility.yul\":14724:14855   */\n      tag_545\n        /* \"#utility.yul\":14850:14854   */\n      dup2\n        /* \"#utility.yul\":14724:14855   */\n      tag_390\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14716:14855   */\n      swap1\n      pop\n        /* \"#utility.yul\":14443:14862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14868:15046   */\n    tag_391:\n        /* \"#utility.yul\":15008:15038   */\n      0x5061727469616c2077616765207472616e73666572206661696c656400000000\n        /* \"#utility.yul\":15004:15005   */\n      0x00\n        /* \"#utility.yul\":14996:15002   */\n      dup3\n        /* \"#utility.yul\":14992:15006   */\n      add\n        /* \"#utility.yul\":14985:15039   */\n      mstore\n        /* \"#utility.yul\":14868:15046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15052:15418   */\n    tag_392:\n        /* \"#utility.yul\":15194:15197   */\n      0x00\n        /* \"#utility.yul\":15215:15282   */\n      tag_548\n        /* \"#utility.yul\":15279:15281   */\n      0x1c\n        /* \"#utility.yul\":15274:15277   */\n      dup4\n        /* \"#utility.yul\":15215:15282   */\n      tag_357\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15208:15282   */\n      swap2\n      pop\n        /* \"#utility.yul\":15291:15384   */\n      tag_549\n        /* \"#utility.yul\":15380:15383   */\n      dup3\n        /* \"#utility.yul\":15291:15384   */\n      tag_391\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15409:15411   */\n      0x20\n        /* \"#utility.yul\":15404:15407   */\n      dup3\n        /* \"#utility.yul\":15400:15412   */\n      add\n        /* \"#utility.yul\":15393:15412   */\n      swap1\n      pop\n        /* \"#utility.yul\":15052:15418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15424:15843   */\n    tag_267:\n        /* \"#utility.yul\":15590:15594   */\n      0x00\n        /* \"#utility.yul\":15628:15630   */\n      0x20\n        /* \"#utility.yul\":15617:15626   */\n      dup3\n        /* \"#utility.yul\":15613:15631   */\n      add\n        /* \"#utility.yul\":15605:15631   */\n      swap1\n      pop\n        /* \"#utility.yul\":15677:15686   */\n      dup2\n        /* \"#utility.yul\":15671:15675   */\n      dup2\n        /* \"#utility.yul\":15667:15687   */\n      sub\n        /* \"#utility.yul\":15663:15664   */\n      0x00\n        /* \"#utility.yul\":15652:15661   */\n      dup4\n        /* \"#utility.yul\":15648:15665   */\n      add\n        /* \"#utility.yul\":15641:15688   */\n      mstore\n        /* \"#utility.yul\":15705:15836   */\n      tag_551\n        /* \"#utility.yul\":15831:15835   */\n      dup2\n        /* \"#utility.yul\":15705:15836   */\n      tag_392\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15697:15836   */\n      swap1\n      pop\n        /* \"#utility.yul\":15424:15843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15849:16015   */\n    tag_393:\n        /* \"#utility.yul\":15989:16007   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":15985:15986   */\n      0x00\n        /* \"#utility.yul\":15977:15983   */\n      dup3\n        /* \"#utility.yul\":15973:15987   */\n      add\n        /* \"#utility.yul\":15966:16008   */\n      mstore\n        /* \"#utility.yul\":15849:16015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16021:16387   */\n    tag_394:\n        /* \"#utility.yul\":16163:16166   */\n      0x00\n        /* \"#utility.yul\":16184:16251   */\n      tag_554\n        /* \"#utility.yul\":16248:16250   */\n      0x10\n        /* \"#utility.yul\":16243:16246   */\n      dup4\n        /* \"#utility.yul\":16184:16251   */\n      tag_357\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16177:16251   */\n      swap2\n      pop\n        /* \"#utility.yul\":16260:16353   */\n      tag_555\n        /* \"#utility.yul\":16349:16352   */\n      dup3\n        /* \"#utility.yul\":16260:16353   */\n      tag_393\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16378:16380   */\n      0x20\n        /* \"#utility.yul\":16373:16376   */\n      dup3\n        /* \"#utility.yul\":16369:16381   */\n      add\n        /* \"#utility.yul\":16362:16381   */\n      swap1\n      pop\n        /* \"#utility.yul\":16021:16387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16393:16812   */\n    tag_287:\n        /* \"#utility.yul\":16559:16563   */\n      0x00\n        /* \"#utility.yul\":16597:16599   */\n      0x20\n        /* \"#utility.yul\":16586:16595   */\n      dup3\n        /* \"#utility.yul\":16582:16600   */\n      add\n        /* \"#utility.yul\":16574:16600   */\n      swap1\n      pop\n        /* \"#utility.yul\":16646:16655   */\n      dup2\n        /* \"#utility.yul\":16640:16644   */\n      dup2\n        /* \"#utility.yul\":16636:16656   */\n      sub\n        /* \"#utility.yul\":16632:16633   */\n      0x00\n        /* \"#utility.yul\":16621:16630   */\n      dup4\n        /* \"#utility.yul\":16617:16634   */\n      add\n        /* \"#utility.yul\":16610:16657   */\n      mstore\n        /* \"#utility.yul\":16674:16805   */\n      tag_557\n        /* \"#utility.yul\":16800:16804   */\n      dup2\n        /* \"#utility.yul\":16674:16805   */\n      tag_394\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":16666:16805   */\n      swap1\n      pop\n        /* \"#utility.yul\":16393:16812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16818:16999   */\n    tag_395:\n        /* \"#utility.yul\":16958:16991   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":16954:16955   */\n      0x00\n        /* \"#utility.yul\":16946:16952   */\n      dup3\n        /* \"#utility.yul\":16942:16956   */\n      add\n        /* \"#utility.yul\":16935:16992   */\n      mstore\n        /* \"#utility.yul\":16818:16999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17005:17371   */\n    tag_396:\n        /* \"#utility.yul\":17147:17150   */\n      0x00\n        /* \"#utility.yul\":17168:17235   */\n      tag_560\n        /* \"#utility.yul\":17232:17234   */\n      0x1f\n        /* \"#utility.yul\":17227:17230   */\n      dup4\n        /* \"#utility.yul\":17168:17235   */\n      tag_357\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":17161:17235   */\n      swap2\n      pop\n        /* \"#utility.yul\":17244:17337   */\n      tag_561\n        /* \"#utility.yul\":17333:17336   */\n      dup3\n        /* \"#utility.yul\":17244:17337   */\n      tag_395\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17362:17364   */\n      0x20\n        /* \"#utility.yul\":17357:17360   */\n      dup3\n        /* \"#utility.yul\":17353:17365   */\n      add\n        /* \"#utility.yul\":17346:17365   */\n      swap1\n      pop\n        /* \"#utility.yul\":17005:17371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17377:17796   */\n    tag_309:\n        /* \"#utility.yul\":17543:17547   */\n      0x00\n        /* \"#utility.yul\":17581:17583   */\n      0x20\n        /* \"#utility.yul\":17570:17579   */\n      dup3\n        /* \"#utility.yul\":17566:17584   */\n      add\n        /* \"#utility.yul\":17558:17584   */\n      swap1\n      pop\n        /* \"#utility.yul\":17630:17639   */\n      dup2\n        /* \"#utility.yul\":17624:17628   */\n      dup2\n        /* \"#utility.yul\":17620:17640   */\n      sub\n        /* \"#utility.yul\":17616:17617   */\n      0x00\n        /* \"#utility.yul\":17605:17614   */\n      dup4\n        /* \"#utility.yul\":17601:17618   */\n      add\n        /* \"#utility.yul\":17594:17641   */\n      mstore\n        /* \"#utility.yul\":17658:17789   */\n      tag_563\n        /* \"#utility.yul\":17784:17788   */\n      dup2\n        /* \"#utility.yul\":17658:17789   */\n      tag_396\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17650:17789   */\n      swap1\n      pop\n        /* \"#utility.yul\":17377:17796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17802:18244   */\n    tag_333:\n        /* \"#utility.yul\":17951:17955   */\n      0x00\n        /* \"#utility.yul\":17989:17991   */\n      0x60\n        /* \"#utility.yul\":17978:17987   */\n      dup3\n        /* \"#utility.yul\":17974:17992   */\n      add\n        /* \"#utility.yul\":17966:17992   */\n      swap1\n      pop\n        /* \"#utility.yul\":18002:18073   */\n      tag_565\n        /* \"#utility.yul\":18070:18071   */\n      0x00\n        /* \"#utility.yul\":18059:18068   */\n      dup4\n        /* \"#utility.yul\":18055:18072   */\n      add\n        /* \"#utility.yul\":18046:18052   */\n      dup7\n        /* \"#utility.yul\":18002:18073   */\n      tag_376\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18083:18155   */\n      tag_566\n        /* \"#utility.yul\":18151:18153   */\n      0x20\n        /* \"#utility.yul\":18140:18149   */\n      dup4\n        /* \"#utility.yul\":18136:18154   */\n      add\n        /* \"#utility.yul\":18127:18133   */\n      dup6\n        /* \"#utility.yul\":18083:18155   */\n      tag_373\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":18165:18237   */\n      tag_567\n        /* \"#utility.yul\":18233:18235   */\n      0x40\n        /* \"#utility.yul\":18222:18231   */\n      dup4\n        /* \"#utility.yul\":18218:18236   */\n      add\n        /* \"#utility.yul\":18209:18215   */\n      dup5\n        /* \"#utility.yul\":18165:18237   */\n      tag_373\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17802:18244   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18250:18420   */\n    tag_397:\n        /* \"#utility.yul\":18390:18412   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":18386:18387   */\n      0x00\n        /* \"#utility.yul\":18378:18384   */\n      dup3\n        /* \"#utility.yul\":18374:18388   */\n      add\n        /* \"#utility.yul\":18367:18413   */\n      mstore\n        /* \"#utility.yul\":18250:18420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18426:18792   */\n    tag_398:\n        /* \"#utility.yul\":18568:18571   */\n      0x00\n        /* \"#utility.yul\":18589:18656   */\n      tag_570\n        /* \"#utility.yul\":18653:18655   */\n      0x14\n        /* \"#utility.yul\":18648:18651   */\n      dup4\n        /* \"#utility.yul\":18589:18656   */\n      tag_357\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":18582:18656   */\n      swap2\n      pop\n        /* \"#utility.yul\":18665:18758   */\n      tag_571\n        /* \"#utility.yul\":18754:18757   */\n      dup3\n        /* \"#utility.yul\":18665:18758   */\n      tag_397\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":18783:18785   */\n      0x20\n        /* \"#utility.yul\":18778:18781   */\n      dup3\n        /* \"#utility.yul\":18774:18786   */\n      add\n        /* \"#utility.yul\":18767:18786   */\n      swap1\n      pop\n        /* \"#utility.yul\":18426:18792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18798:19217   */\n    tag_346:\n        /* \"#utility.yul\":18964:18968   */\n      0x00\n        /* \"#utility.yul\":19002:19004   */\n      0x20\n        /* \"#utility.yul\":18991:19000   */\n      dup3\n        /* \"#utility.yul\":18987:19005   */\n      add\n        /* \"#utility.yul\":18979:19005   */\n      swap1\n      pop\n        /* \"#utility.yul\":19051:19060   */\n      dup2\n        /* \"#utility.yul\":19045:19049   */\n      dup2\n        /* \"#utility.yul\":19041:19061   */\n      sub\n        /* \"#utility.yul\":19037:19038   */\n      0x00\n        /* \"#utility.yul\":19026:19035   */\n      dup4\n        /* \"#utility.yul\":19022:19039   */\n      add\n        /* \"#utility.yul\":19015:19062   */\n      mstore\n        /* \"#utility.yul\":19079:19210   */\n      tag_573\n        /* \"#utility.yul\":19205:19209   */\n      dup2\n        /* \"#utility.yul\":19079:19210   */\n      tag_398\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19071:19210   */\n      swap1\n      pop\n        /* \"#utility.yul\":18798:19217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b9c9f8ee8c697360ab460de192a3a85ee1ba861ba6fe6faafd0645f006a8922a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1253": {
									"entryPoint": null,
									"id": 1253,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 855,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 650,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 988,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 847,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13662:9",
										"nodeType": "YulBlock",
										"src": "0:13662:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:77:9",
													"nodeType": "YulBlock",
													"src": "1672:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:9"
																},
																"nativeSrc": "1683:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:9"
															},
															"nativeSrc": "1683:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:9"
																},
																"nativeSrc": "1715:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:9"
															},
															"nativeSrc": "1715:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:139:9"
											},
											{
												"body": {
													"nativeSrc": "1850:339:9",
													"nodeType": "YulBlock",
													"src": "1850:339:9",
													"statements": [
														{
															"nativeSrc": "1860:75:9",
															"nodeType": "YulAssignment",
															"src": "1860:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:9"
																		},
																		"nativeSrc": "1885:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:9"
																},
																"nativeSrc": "1869:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																},
																"nativeSrc": "1944:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:9"
															},
															"nativeSrc": "1944:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:9"
														},
														{
															"nativeSrc": "1974:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:9"
																},
																"nativeSrc": "1985:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:9",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:9",
																"nodeType": "YulBlock",
																"src": "2039:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:9"
																			},
																			"nativeSrc": "2041:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:9"
																		},
																		"nativeSrc": "2041:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:9"
																		},
																		"nativeSrc": "2016:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:9"
																},
																"nativeSrc": "2013:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:9"
															},
															"nativeSrc": "2010:112:9",
															"nodeType": "YulIf",
															"src": "2010:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:9"
																},
																"nativeSrc": "2131:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:9"
															},
															"nativeSrc": "2131:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:9",
														"nodeType": "YulTypedName",
														"src": "1823:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:9",
														"nodeType": "YulTypedName",
														"src": "1828:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:9",
														"nodeType": "YulTypedName",
														"src": "1836:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:9",
														"nodeType": "YulTypedName",
														"src": "1844:5:9",
														"type": ""
													}
												],
												"src": "1755:434:9"
											},
											{
												"body": {
													"nativeSrc": "2282:282:9",
													"nodeType": "YulBlock",
													"src": "2282:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:9",
																"nodeType": "YulBlock",
																"src": "2331:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:9"
																			},
																			"nativeSrc": "2333:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:9"
																		},
																		"nativeSrc": "2333:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:9"
																				},
																				"nativeSrc": "2306:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:9"
															},
															"nativeSrc": "2292:122:9",
															"nodeType": "YulIf",
															"src": "2292:122:9"
														},
														{
															"nativeSrc": "2423:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:9"
																},
																"nativeSrc": "2437:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:9",
															"nodeType": "YulAssignment",
															"src": "2459:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:9"
																		},
																		"nativeSrc": "2527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:9"
																},
																"nativeSrc": "2468:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:9",
														"nodeType": "YulTypedName",
														"src": "2260:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:9",
														"nodeType": "YulTypedName",
														"src": "2268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:9",
														"nodeType": "YulTypedName",
														"src": "2276:5:9",
														"type": ""
													}
												],
												"src": "2209:355:9"
											},
											{
												"body": {
													"nativeSrc": "2615:81:9",
													"nodeType": "YulBlock",
													"src": "2615:81:9",
													"statements": [
														{
															"nativeSrc": "2625:65:9",
															"nodeType": "YulAssignment",
															"src": "2625:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:9"
																},
																"nativeSrc": "2636:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:9",
														"nodeType": "YulTypedName",
														"src": "2597:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:9",
														"nodeType": "YulTypedName",
														"src": "2607:7:9",
														"type": ""
													}
												],
												"src": "2570:126:9"
											},
											{
												"body": {
													"nativeSrc": "2747:51:9",
													"nodeType": "YulBlock",
													"src": "2747:51:9",
													"statements": [
														{
															"nativeSrc": "2757:35:9",
															"nodeType": "YulAssignment",
															"src": "2757:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:9"
																},
																"nativeSrc": "2768:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:9",
														"nodeType": "YulTypedName",
														"src": "2729:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:9",
														"nodeType": "YulTypedName",
														"src": "2739:7:9",
														"type": ""
													}
												],
												"src": "2702:96:9"
											},
											{
												"body": {
													"nativeSrc": "2847:79:9",
													"nodeType": "YulBlock",
													"src": "2847:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:9",
																"nodeType": "YulBlock",
																"src": "2904:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:9"
																			},
																			"nativeSrc": "2906:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:9"
																		},
																		"nativeSrc": "2906:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:9"
																				},
																				"nativeSrc": "2877:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:9"
																		},
																		"nativeSrc": "2867:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:9"
																},
																"nativeSrc": "2860:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:9"
															},
															"nativeSrc": "2857:63:9",
															"nodeType": "YulIf",
															"src": "2857:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:9",
														"nodeType": "YulTypedName",
														"src": "2840:5:9",
														"type": ""
													}
												],
												"src": "2804:122:9"
											},
											{
												"body": {
													"nativeSrc": "2995:80:9",
													"nodeType": "YulBlock",
													"src": "2995:80:9",
													"statements": [
														{
															"nativeSrc": "3005:22:9",
															"nodeType": "YulAssignment",
															"src": "3005:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:9"
																},
																"nativeSrc": "3014:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:9"
																},
																"nativeSrc": "3036:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:9"
															},
															"nativeSrc": "3036:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:9",
														"nodeType": "YulTypedName",
														"src": "2973:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:9",
														"nodeType": "YulTypedName",
														"src": "2981:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:9",
														"nodeType": "YulTypedName",
														"src": "2989:5:9",
														"type": ""
													}
												],
												"src": "2932:143:9"
											},
											{
												"body": {
													"nativeSrc": "3229:1018:9",
													"nodeType": "YulBlock",
													"src": "3229:1018:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3276:83:9",
																"nodeType": "YulBlock",
																"src": "3276:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3278:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3278:77:9"
																			},
																			"nativeSrc": "3278:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3278:79:9"
																		},
																		"nativeSrc": "3278:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3278:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:9"
																		},
																		"nativeSrc": "3246:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3271:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:9"
																},
																"nativeSrc": "3242:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3242:33:9"
															},
															"nativeSrc": "3239:120:9",
															"nodeType": "YulIf",
															"src": "3239:120:9"
														},
														{
															"nativeSrc": "3369:291:9",
															"nodeType": "YulBlock",
															"src": "3369:291:9",
															"statements": [
																{
																	"nativeSrc": "3384:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3384:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3408:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3408:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3419:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3419:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3404:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3404:3:9"
																				},
																				"nativeSrc": "3404:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3404:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3398:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3398:5:9"
																		},
																		"nativeSrc": "3398:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3388:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3388:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3469:83:9",
																		"nodeType": "YulBlock",
																		"src": "3469:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3471:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3471:77:9"
																					},
																					"nativeSrc": "3471:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3471:79:9"
																				},
																				"nativeSrc": "3471:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3471:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3441:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3441:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3449:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3449:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3438:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:9"
																		},
																		"nativeSrc": "3438:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:30:9"
																	},
																	"nativeSrc": "3435:117:9",
																	"nodeType": "YulIf",
																	"src": "3435:117:9"
																},
																{
																	"nativeSrc": "3566:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3566:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3622:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3622:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3633:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3633:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3618:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3618:3:9"
																				},
																				"nativeSrc": "3618:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3618:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3642:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3642:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3576:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3576:41:9"
																		},
																		"nativeSrc": "3576:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3576:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3566:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3566:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3670:292:9",
															"nodeType": "YulBlock",
															"src": "3670:292:9",
															"statements": [
																{
																	"nativeSrc": "3685:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3685:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3709:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3709:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3720:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3720:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3705:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3705:3:9"
																				},
																				"nativeSrc": "3705:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3699:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3699:5:9"
																		},
																		"nativeSrc": "3699:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3699:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3689:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3689:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3771:83:9",
																		"nodeType": "YulBlock",
																		"src": "3771:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3773:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3773:77:9"
																					},
																					"nativeSrc": "3773:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3773:79:9"
																				},
																				"nativeSrc": "3773:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3773:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3743:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3743:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3751:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3751:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3740:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3740:2:9"
																		},
																		"nativeSrc": "3740:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:30:9"
																	},
																	"nativeSrc": "3737:117:9",
																	"nodeType": "YulIf",
																	"src": "3737:117:9"
																},
																{
																	"nativeSrc": "3868:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3868:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3924:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3924:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3935:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3935:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3920:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3920:3:9"
																				},
																				"nativeSrc": "3920:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3920:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3944:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3944:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3878:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3878:41:9"
																		},
																		"nativeSrc": "3878:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3868:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3868:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3972:129:9",
															"nodeType": "YulBlock",
															"src": "3972:129:9",
															"statements": [
																{
																	"nativeSrc": "3987:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3987:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4001:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3991:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3991:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4017:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4017:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4063:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4063:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4074:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4074:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4059:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:9"
																				},
																				"nativeSrc": "4059:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4083:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4083:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4027:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4027:31:9"
																		},
																		"nativeSrc": "4027:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4017:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4017:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4111:129:9",
															"nodeType": "YulBlock",
															"src": "4111:129:9",
															"statements": [
																{
																	"nativeSrc": "4126:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4126:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4140:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4130:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4130:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4156:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4156:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4202:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4202:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4213:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4213:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4198:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4198:3:9"
																				},
																				"nativeSrc": "4198:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4198:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4222:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4222:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4166:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4166:31:9"
																		},
																		"nativeSrc": "4166:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4166:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4156:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4156:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory",
												"nativeSrc": "3081:1166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3175:9:9",
														"nodeType": "YulTypedName",
														"src": "3175:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3186:7:9",
														"nodeType": "YulTypedName",
														"src": "3186:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3198:6:9",
														"nodeType": "YulTypedName",
														"src": "3198:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3206:6:9",
														"nodeType": "YulTypedName",
														"src": "3206:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3214:6:9",
														"nodeType": "YulTypedName",
														"src": "3214:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3222:6:9",
														"nodeType": "YulTypedName",
														"src": "3222:6:9",
														"type": ""
													}
												],
												"src": "3081:1166:9"
											},
											{
												"body": {
													"nativeSrc": "4312:40:9",
													"nodeType": "YulBlock",
													"src": "4312:40:9",
													"statements": [
														{
															"nativeSrc": "4323:22:9",
															"nodeType": "YulAssignment",
															"src": "4323:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4333:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:9"
																},
																"nativeSrc": "4333:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4323:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4253:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4295:5:9",
														"nodeType": "YulTypedName",
														"src": "4295:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4305:6:9",
														"nodeType": "YulTypedName",
														"src": "4305:6:9",
														"type": ""
													}
												],
												"src": "4253:99:9"
											},
											{
												"body": {
													"nativeSrc": "4386:152:9",
													"nodeType": "YulBlock",
													"src": "4386:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:77:9",
																		"nodeType": "YulLiteral",
																		"src": "4406:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:9"
																},
																"nativeSrc": "4396:88:9",
																"nodeType": "YulFunctionCall",
																"src": "4396:88:9"
															},
															"nativeSrc": "4396:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "4396:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4493:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:9"
																},
																"nativeSrc": "4493:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:9"
															},
															"nativeSrc": "4493:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4527:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4517:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:9"
																},
																"nativeSrc": "4517:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4517:15:9"
															},
															"nativeSrc": "4517:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4517:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4358:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:180:9"
											},
											{
												"body": {
													"nativeSrc": "4595:269:9",
													"nodeType": "YulBlock",
													"src": "4595:269:9",
													"statements": [
														{
															"nativeSrc": "4605:22:9",
															"nodeType": "YulAssignment",
															"src": "4605:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4619:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4615:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:9"
																},
																"nativeSrc": "4615:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4615:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4605:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:9"
																}
															]
														},
														{
															"nativeSrc": "4636:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4636:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4666:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4662:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:9"
																},
																"nativeSrc": "4662:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4662:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4640:18:9",
																	"nodeType": "YulTypedName",
																	"src": "4640:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:51:9",
																"nodeType": "YulBlock",
																"src": "4713:51:9",
																"statements": [
																	{
																		"nativeSrc": "4727:27:9",
																		"nodeType": "YulAssignment",
																		"src": "4727:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4741:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4741:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4749:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4737:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4737:3:9"
																			},
																			"nativeSrc": "4737:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4737:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4693:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "4693:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:9"
																},
																"nativeSrc": "4686:26:9",
																"nodeType": "YulFunctionCall",
																"src": "4686:26:9"
															},
															"nativeSrc": "4683:81:9",
															"nodeType": "YulIf",
															"src": "4683:81:9"
														},
														{
															"body": {
																"nativeSrc": "4816:42:9",
																"nodeType": "YulBlock",
																"src": "4816:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4830:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4830:16:9"
																			},
																			"nativeSrc": "4830:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4830:18:9"
																		},
																		"nativeSrc": "4830:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4830:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:9"
																		},
																		"nativeSrc": "4800:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:9"
																},
																"nativeSrc": "4777:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:9"
															},
															"nativeSrc": "4774:84:9",
															"nodeType": "YulIf",
															"src": "4774:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4544:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4579:4:9",
														"nodeType": "YulTypedName",
														"src": "4579:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4588:6:9",
														"nodeType": "YulTypedName",
														"src": "4588:6:9",
														"type": ""
													}
												],
												"src": "4544:320:9"
											},
											{
												"body": {
													"nativeSrc": "4924:87:9",
													"nodeType": "YulBlock",
													"src": "4924:87:9",
													"statements": [
														{
															"nativeSrc": "4934:11:9",
															"nodeType": "YulAssignment",
															"src": "4934:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "4942:3:9",
																"nodeType": "YulIdentifier",
																"src": "4942:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:9"
																},
																"nativeSrc": "4955:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4955:14:9"
															},
															"nativeSrc": "4955:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "4955:14:9"
														},
														{
															"nativeSrc": "4978:26:9",
															"nodeType": "YulAssignment",
															"src": "4978:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4986:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4986:9:9"
																},
																"nativeSrc": "4986:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4978:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4870:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4911:3:9",
														"nodeType": "YulTypedName",
														"src": "4911:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4919:4:9",
														"nodeType": "YulTypedName",
														"src": "4919:4:9",
														"type": ""
													}
												],
												"src": "4870:141:9"
											},
											{
												"body": {
													"nativeSrc": "5061:49:9",
													"nodeType": "YulBlock",
													"src": "5061:49:9",
													"statements": [
														{
															"nativeSrc": "5071:33:9",
															"nodeType": "YulAssignment",
															"src": "5071:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5089:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5089:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:9"
																		},
																		"nativeSrc": "5085:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5081:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:9"
																},
																"nativeSrc": "5081:23:9",
																"nodeType": "YulFunctionCall",
																"src": "5081:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5071:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5017:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5044:5:9",
														"nodeType": "YulTypedName",
														"src": "5044:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5054:6:9",
														"nodeType": "YulTypedName",
														"src": "5054:6:9",
														"type": ""
													}
												],
												"src": "5017:93:9"
											},
											{
												"body": {
													"nativeSrc": "5169:54:9",
													"nodeType": "YulBlock",
													"src": "5169:54:9",
													"statements": [
														{
															"nativeSrc": "5179:37:9",
															"nodeType": "YulAssignment",
															"src": "5179:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5204:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5210:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5210:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5200:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:9"
																},
																"nativeSrc": "5200:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5200:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5179:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5179:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5116:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5144:4:9",
														"nodeType": "YulTypedName",
														"src": "5144:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5150:5:9",
														"nodeType": "YulTypedName",
														"src": "5150:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5160:8:9",
														"nodeType": "YulTypedName",
														"src": "5160:8:9",
														"type": ""
													}
												],
												"src": "5116:107:9"
											},
											{
												"body": {
													"nativeSrc": "5305:317:9",
													"nodeType": "YulBlock",
													"src": "5305:317:9",
													"statements": [
														{
															"nativeSrc": "5315:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5336:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "5336:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5332:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:9"
																},
																"nativeSrc": "5332:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5332:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5319:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5319:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5359:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5359:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5390:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5390:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:66:9",
																		"nodeType": "YulLiteral",
																		"src": "5401:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5371:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5371:18:9"
																},
																"nativeSrc": "5371:97:9",
																"nodeType": "YulFunctionCall",
																"src": "5371:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5363:4:9",
																	"nodeType": "YulTypedName",
																	"src": "5363:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5477:51:9",
															"nodeType": "YulAssignment",
															"src": "5477:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5508:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5519:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "5519:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5489:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5489:18:9"
																},
																"nativeSrc": "5489:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5489:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5477:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5477:8:9"
																}
															]
														},
														{
															"nativeSrc": "5537:30:9",
															"nodeType": "YulAssignment",
															"src": "5537:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5561:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:9"
																		},
																		"nativeSrc": "5557:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5546:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:9"
																},
																"nativeSrc": "5546:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5546:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5537:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5537:5:9"
																}
															]
														},
														{
															"nativeSrc": "5576:40:9",
															"nodeType": "YulAssignment",
															"src": "5576:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5589:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5589:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5600:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "5600:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5610:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5610:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5596:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:9"
																		},
																		"nativeSrc": "5596:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5586:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5586:2:9"
																},
																"nativeSrc": "5586:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5586:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5229:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5266:5:9",
														"nodeType": "YulTypedName",
														"src": "5266:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5273:10:9",
														"nodeType": "YulTypedName",
														"src": "5273:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5285:8:9",
														"nodeType": "YulTypedName",
														"src": "5285:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5298:6:9",
														"nodeType": "YulTypedName",
														"src": "5298:6:9",
														"type": ""
													}
												],
												"src": "5229:393:9"
											},
											{
												"body": {
													"nativeSrc": "5673:32:9",
													"nodeType": "YulBlock",
													"src": "5673:32:9",
													"statements": [
														{
															"nativeSrc": "5683:16:9",
															"nodeType": "YulAssignment",
															"src": "5683:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "5694:5:9",
																"nodeType": "YulIdentifier",
																"src": "5694:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5683:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5628:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5655:5:9",
														"nodeType": "YulTypedName",
														"src": "5655:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5665:7:9",
														"nodeType": "YulTypedName",
														"src": "5665:7:9",
														"type": ""
													}
												],
												"src": "5628:77:9"
											},
											{
												"body": {
													"nativeSrc": "5743:28:9",
													"nodeType": "YulBlock",
													"src": "5743:28:9",
													"statements": [
														{
															"nativeSrc": "5753:12:9",
															"nodeType": "YulAssignment",
															"src": "5753:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5760:5:9",
																"nodeType": "YulIdentifier",
																"src": "5760:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5753:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5711:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:9",
														"nodeType": "YulTypedName",
														"src": "5729:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5739:3:9",
														"nodeType": "YulTypedName",
														"src": "5739:3:9",
														"type": ""
													}
												],
												"src": "5711:60:9"
											},
											{
												"body": {
													"nativeSrc": "5837:82:9",
													"nodeType": "YulBlock",
													"src": "5837:82:9",
													"statements": [
														{
															"nativeSrc": "5847:66:9",
															"nodeType": "YulAssignment",
															"src": "5847:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5887:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5887:17:9"
																				},
																				"nativeSrc": "5887:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5878:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5878:8:9"
																		},
																		"nativeSrc": "5878:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5860:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5860:17:9"
																},
																"nativeSrc": "5860:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5860:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5777:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:9",
														"nodeType": "YulTypedName",
														"src": "5817:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:9",
														"nodeType": "YulTypedName",
														"src": "5827:9:9",
														"type": ""
													}
												],
												"src": "5777:142:9"
											},
											{
												"body": {
													"nativeSrc": "5972:28:9",
													"nodeType": "YulBlock",
													"src": "5972:28:9",
													"statements": [
														{
															"nativeSrc": "5982:12:9",
															"nodeType": "YulAssignment",
															"src": "5982:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5989:5:9",
																"nodeType": "YulIdentifier",
																"src": "5989:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5982:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5925:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5958:5:9",
														"nodeType": "YulTypedName",
														"src": "5958:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5968:3:9",
														"nodeType": "YulTypedName",
														"src": "5968:3:9",
														"type": ""
													}
												],
												"src": "5925:75:9"
											},
											{
												"body": {
													"nativeSrc": "6082:193:9",
													"nodeType": "YulBlock",
													"src": "6082:193:9",
													"statements": [
														{
															"nativeSrc": "6092:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6092:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6147:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "6147:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6116:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6116:30:9"
																},
																"nativeSrc": "6116:39:9",
																"nodeType": "YulFunctionCall",
																"src": "6116:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6096:16:9",
																	"nodeType": "YulTypedName",
																	"src": "6096:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6171:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6171:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6211:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6211:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6205:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6205:5:9"
																				},
																				"nativeSrc": "6205:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6205:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6218:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6250:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "6250:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6226:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "6226:23:9"
																				},
																				"nativeSrc": "6226:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6177:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:27:9"
																		},
																		"nativeSrc": "6177:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6164:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:9"
																},
																"nativeSrc": "6164:105:9",
																"nodeType": "YulFunctionCall",
																"src": "6164:105:9"
															},
															"nativeSrc": "6164:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "6164:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6006:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6059:4:9",
														"nodeType": "YulTypedName",
														"src": "6059:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6065:6:9",
														"nodeType": "YulTypedName",
														"src": "6065:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6073:7:9",
														"nodeType": "YulTypedName",
														"src": "6073:7:9",
														"type": ""
													}
												],
												"src": "6006:269:9"
											},
											{
												"body": {
													"nativeSrc": "6330:24:9",
													"nodeType": "YulBlock",
													"src": "6330:24:9",
													"statements": [
														{
															"nativeSrc": "6340:8:9",
															"nodeType": "YulAssignment",
															"src": "6340:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6347:1:9",
																"nodeType": "YulLiteral",
																"src": "6347:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6281:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6326:3:9",
														"nodeType": "YulTypedName",
														"src": "6326:3:9",
														"type": ""
													}
												],
												"src": "6281:73:9"
											},
											{
												"body": {
													"nativeSrc": "6413:136:9",
													"nodeType": "YulBlock",
													"src": "6413:136:9",
													"statements": [
														{
															"nativeSrc": "6423:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6437:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6437:30:9"
																},
																"nativeSrc": "6437:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6522:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6522:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6528:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6536:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6478:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:9"
																},
																"nativeSrc": "6478:65:9",
																"nodeType": "YulFunctionCall",
																"src": "6478:65:9"
															},
															"nativeSrc": "6478:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "6478:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6360:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6399:4:9",
														"nodeType": "YulTypedName",
														"src": "6399:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6405:6:9",
														"nodeType": "YulTypedName",
														"src": "6405:6:9",
														"type": ""
													}
												],
												"src": "6360:189:9"
											},
											{
												"body": {
													"nativeSrc": "6605:136:9",
													"nodeType": "YulBlock",
													"src": "6605:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6672:63:9",
																"nodeType": "YulBlock",
																"src": "6672:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6716:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6716:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6686:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "6686:29:9"
																			},
																			"nativeSrc": "6686:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:39:9"
																		},
																		"nativeSrc": "6686:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6625:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6632:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6622:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6622:2:9"
																},
																"nativeSrc": "6622:14:9",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:9"
															},
															"nativeSrc": "6615:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6637:26:9",
																"nodeType": "YulBlock",
																"src": "6637:26:9",
																"statements": [
																	{
																		"nativeSrc": "6639:22:9",
																		"nodeType": "YulAssignment",
																		"src": "6639:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6652:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6652:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6659:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6659:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6648:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6648:3:9"
																			},
																			"nativeSrc": "6648:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6639:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6619:2:9",
																"nodeType": "YulBlock",
																"src": "6619:2:9",
																"statements": []
															},
															"src": "6615:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6555:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6593:5:9",
														"nodeType": "YulTypedName",
														"src": "6593:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6600:3:9",
														"nodeType": "YulTypedName",
														"src": "6600:3:9",
														"type": ""
													}
												],
												"src": "6555:186:9"
											},
											{
												"body": {
													"nativeSrc": "6826:464:9",
													"nodeType": "YulBlock",
													"src": "6826:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:431:9",
																"nodeType": "YulBlock",
																"src": "6852:431:9",
																"statements": [
																	{
																		"nativeSrc": "6866:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6866:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6914:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6914:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6882:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "6882:31:9"
																			},
																			"nativeSrc": "6882:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6870:8:9",
																				"nodeType": "YulTypedName",
																				"src": "6870:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6933:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6956:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "6956:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6984:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6984:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6966:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "6966:17:9"
																					},
																					"nativeSrc": "6966:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6966:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6952:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6952:3:9"
																			},
																			"nativeSrc": "6952:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6937:11:9",
																				"nodeType": "YulTypedName",
																				"src": "6937:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7153:27:9",
																			"nodeType": "YulBlock",
																			"src": "7153:27:9",
																			"statements": [
																				{
																					"nativeSrc": "7155:23:9",
																					"nodeType": "YulAssignment",
																					"src": "7155:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7170:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "7170:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7155:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "7155:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7137:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "7137:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7149:2:9",
																					"nodeType": "YulLiteral",
																					"src": "7149:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7134:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "7134:2:9"
																			},
																			"nativeSrc": "7134:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7134:18:9"
																		},
																		"nativeSrc": "7131:49:9",
																		"nodeType": "YulIf",
																		"src": "7131:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7222:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "7222:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7239:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "7239:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7267:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7267:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7249:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "7249:17:9"
																							},
																							"nativeSrc": "7249:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7249:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7235:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7235:3:9"
																					},
																					"nativeSrc": "7235:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7235:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7193:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "7193:28:9"
																			},
																			"nativeSrc": "7193:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7193:80:9"
																		},
																		"nativeSrc": "7193:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6843:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:9"
																},
																"nativeSrc": "6840:11:9",
																"nodeType": "YulFunctionCall",
																"src": "6840:11:9"
															},
															"nativeSrc": "6837:446:9",
															"nodeType": "YulIf",
															"src": "6837:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6747:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6802:5:9",
														"nodeType": "YulTypedName",
														"src": "6802:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6809:3:9",
														"nodeType": "YulTypedName",
														"src": "6809:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6814:10:9",
														"nodeType": "YulTypedName",
														"src": "6814:10:9",
														"type": ""
													}
												],
												"src": "6747:543:9"
											},
											{
												"body": {
													"nativeSrc": "7359:54:9",
													"nodeType": "YulBlock",
													"src": "7359:54:9",
													"statements": [
														{
															"nativeSrc": "7369:37:9",
															"nodeType": "YulAssignment",
															"src": "7369:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7394:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7394:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7400:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7400:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7390:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:9"
																},
																"nativeSrc": "7390:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7390:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7369:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7296:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7334:4:9",
														"nodeType": "YulTypedName",
														"src": "7334:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7340:5:9",
														"nodeType": "YulTypedName",
														"src": "7340:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7350:8:9",
														"nodeType": "YulTypedName",
														"src": "7350:8:9",
														"type": ""
													}
												],
												"src": "7296:117:9"
											},
											{
												"body": {
													"nativeSrc": "7470:118:9",
													"nodeType": "YulBlock",
													"src": "7470:118:9",
													"statements": [
														{
															"nativeSrc": "7480:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7480:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7529:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7529:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7532:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7532:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7525:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7525:3:9"
																				},
																				"nativeSrc": "7525:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7525:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7544:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7544:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7540:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:9"
																				},
																				"nativeSrc": "7540:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7496:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "7496:28:9"
																		},
																		"nativeSrc": "7496:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7492:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:9"
																},
																"nativeSrc": "7492:56:9",
																"nodeType": "YulFunctionCall",
																"src": "7492:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7484:4:9",
																	"nodeType": "YulTypedName",
																	"src": "7484:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7557:25:9",
															"nodeType": "YulAssignment",
															"src": "7557:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7571:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7571:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7577:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7577:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7567:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:9"
																},
																"nativeSrc": "7567:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7567:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7557:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7419:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7447:4:9",
														"nodeType": "YulTypedName",
														"src": "7447:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7453:5:9",
														"nodeType": "YulTypedName",
														"src": "7453:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7463:6:9",
														"nodeType": "YulTypedName",
														"src": "7463:6:9",
														"type": ""
													}
												],
												"src": "7419:169:9"
											},
											{
												"body": {
													"nativeSrc": "7674:214:9",
													"nodeType": "YulBlock",
													"src": "7674:214:9",
													"statements": [
														{
															"nativeSrc": "7807:37:9",
															"nodeType": "YulAssignment",
															"src": "7807:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7834:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7840:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7815:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7815:18:9"
																},
																"nativeSrc": "7815:29:9",
																"nodeType": "YulFunctionCall",
																"src": "7815:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7807:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:9"
																}
															]
														},
														{
															"nativeSrc": "7853:29:9",
															"nodeType": "YulAssignment",
															"src": "7853:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7864:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7877:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7870:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:9"
																		},
																		"nativeSrc": "7870:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7861:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7861:2:9"
																},
																"nativeSrc": "7861:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7861:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7853:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7593:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7655:4:9",
														"nodeType": "YulTypedName",
														"src": "7655:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7661:3:9",
														"nodeType": "YulTypedName",
														"src": "7661:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7669:4:9",
														"nodeType": "YulTypedName",
														"src": "7669:4:9",
														"type": ""
													}
												],
												"src": "7593:295:9"
											},
											{
												"body": {
													"nativeSrc": "7985:1303:9",
													"nodeType": "YulBlock",
													"src": "7985:1303:9",
													"statements": [
														{
															"nativeSrc": "7996:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8043:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8010:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "8010:32:9"
																},
																"nativeSrc": "8010:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8010:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8000:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8132:22:9",
																"nodeType": "YulBlock",
																"src": "8132:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8134:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8134:16:9"
																			},
																			"nativeSrc": "8134:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8134:18:9"
																		},
																		"nativeSrc": "8134:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8134:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8104:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8112:18:9",
																		"nodeType": "YulLiteral",
																		"src": "8112:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8101:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8101:2:9"
																},
																"nativeSrc": "8101:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8101:30:9"
															},
															"nativeSrc": "8098:56:9",
															"nodeType": "YulIf",
															"src": "8098:56:9"
														},
														{
															"nativeSrc": "8164:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8164:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8210:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8210:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8204:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8204:5:9"
																		},
																		"nativeSrc": "8204:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8178:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "8178:25:9"
																},
																"nativeSrc": "8178:38:9",
																"nodeType": "YulFunctionCall",
																"src": "8178:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8168:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8168:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8309:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8309:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8315:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8323:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8263:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "8263:45:9"
																},
																"nativeSrc": "8263:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8263:67:9"
															},
															"nativeSrc": "8263:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "8263:67:9"
														},
														{
															"nativeSrc": "8340:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8340:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8357:1:9",
																"nodeType": "YulLiteral",
																"src": "8357:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8344:9:9",
																	"nodeType": "YulTypedName",
																	"src": "8344:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8368:17:9",
															"nodeType": "YulAssignment",
															"src": "8368:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8381:4:9",
																"nodeType": "YulLiteral",
																"src": "8381:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8368:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "8368:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8432:611:9",
																		"nodeType": "YulBlock",
																		"src": "8432:611:9",
																		"statements": [
																			{
																				"nativeSrc": "8446:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8446:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8465:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8465:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8477:4:9",
																									"nodeType": "YulLiteral",
																									"src": "8477:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8473:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8473:3:9"
																							},
																							"nativeSrc": "8473:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8473:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8461:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:9"
																					},
																					"nativeSrc": "8461:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8450:7:9",
																						"nodeType": "YulTypedName",
																						"src": "8450:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8497:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8497:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8543:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8543:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8511:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "8511:31:9"
																					},
																					"nativeSrc": "8511:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8511:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8501:6:9",
																						"nodeType": "YulTypedName",
																						"src": "8501:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8561:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8570:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8570:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8565:1:9",
																						"nodeType": "YulTypedName",
																						"src": "8565:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8629:163:9",
																					"nodeType": "YulBlock",
																					"src": "8629:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8654:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8654:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8672:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "8672:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8677:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "8677:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8668:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8668:3:9"
																												},
																												"nativeSrc": "8668:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8668:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8662:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "8662:5:9"
																										},
																										"nativeSrc": "8662:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8662:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8647:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8647:6:9"
																								},
																								"nativeSrc": "8647:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8647:42:9"
																							},
																							"nativeSrc": "8647:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8647:42:9"
																						},
																						{
																							"nativeSrc": "8706:24:9",
																							"nodeType": "YulAssignment",
																							"src": "8706:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8720:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8720:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8728:1:9",
																										"nodeType": "YulLiteral",
																										"src": "8728:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8716:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8716:3:9"
																								},
																								"nativeSrc": "8716:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8706:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8706:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8747:31:9",
																							"nodeType": "YulAssignment",
																							"src": "8747:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8764:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "8764:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8775:2:9",
																										"nodeType": "YulLiteral",
																										"src": "8775:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8760:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8760:3:9"
																								},
																								"nativeSrc": "8760:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8760:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8747:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "8747:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8595:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "8595:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8598:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8598:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8592:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8592:2:9"
																					},
																					"nativeSrc": "8592:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8592:14:9"
																				},
																				"nativeSrc": "8584:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8607:21:9",
																					"nodeType": "YulBlock",
																					"src": "8607:21:9",
																					"statements": [
																						{
																							"nativeSrc": "8609:17:9",
																							"nodeType": "YulAssignment",
																							"src": "8609:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8618:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "8618:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8621:4:9",
																										"nodeType": "YulLiteral",
																										"src": "8621:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8614:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8614:3:9"
																								},
																								"nativeSrc": "8614:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8614:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8609:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "8609:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8588:3:9",
																					"nodeType": "YulBlock",
																					"src": "8588:3:9",
																					"statements": []
																				},
																				"src": "8584:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "8828:156:9",
																					"nodeType": "YulBlock",
																					"src": "8828:156:9",
																					"statements": [
																						{
																							"nativeSrc": "8846:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8846:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8873:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8873:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8878:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8878:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8869:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8869:3:9"
																										},
																										"nativeSrc": "8869:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8869:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8863:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8863:5:9"
																								},
																								"nativeSrc": "8863:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8863:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8850:9:9",
																									"nodeType": "YulTypedName",
																									"src": "8850:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8913:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8913:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8940:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8940:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8955:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "8955:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8963:4:9",
																														"nodeType": "YulLiteral",
																														"src": "8963:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8951:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8951:3:9"
																												},
																												"nativeSrc": "8951:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8951:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8921:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "8921:18:9"
																										},
																										"nativeSrc": "8921:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8921:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8906:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8906:6:9"
																								},
																								"nativeSrc": "8906:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8906:64:9"
																							},
																							"nativeSrc": "8906:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8906:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8811:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8811:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8820:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8820:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8808:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8808:2:9"
																					},
																					"nativeSrc": "8808:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:19:9"
																				},
																				"nativeSrc": "8805:179:9",
																				"nodeType": "YulIf",
																				"src": "8805:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9004:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9004:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9018:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "9018:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9026:1:9",
																											"nodeType": "YulLiteral",
																											"src": "9026:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9014:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "9014:3:9"
																									},
																									"nativeSrc": "9014:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "9014:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9030:1:9",
																									"nodeType": "YulLiteral",
																									"src": "9030:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9010:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "9010:3:9"
																							},
																							"nativeSrc": "9010:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9010:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8997:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:9"
																					},
																					"nativeSrc": "8997:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8997:36:9"
																				},
																				"nativeSrc": "8997:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8997:36:9"
																			}
																		]
																	},
																	"nativeSrc": "8425:618:9",
																	"nodeType": "YulCase",
																	"src": "8425:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9060:222:9",
																		"nodeType": "YulBlock",
																		"src": "9060:222:9",
																		"statements": [
																			{
																				"nativeSrc": "9074:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9074:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9087:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9078:5:9",
																						"nodeType": "YulTypedName",
																						"src": "9078:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9111:67:9",
																					"nodeType": "YulBlock",
																					"src": "9111:67:9",
																					"statements": [
																						{
																							"nativeSrc": "9129:35:9",
																							"nodeType": "YulAssignment",
																							"src": "9129:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9148:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "9148:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9153:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9153:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9144:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "9144:3:9"
																										},
																										"nativeSrc": "9144:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9144:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9138:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9138:5:9"
																								},
																								"nativeSrc": "9138:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9138:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9129:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9129:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9104:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9104:6:9"
																				},
																				"nativeSrc": "9101:77:9",
																				"nodeType": "YulIf",
																				"src": "9101:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9198:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9198:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9257:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9257:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9264:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9264:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9204:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "9204:52:9"
																							},
																							"nativeSrc": "9204:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9204:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9191:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:9"
																					},
																					"nativeSrc": "9191:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9191:81:9"
																				},
																				"nativeSrc": "9191:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9191:81:9"
																			}
																		]
																	},
																	"nativeSrc": "9052:230:9",
																	"nodeType": "YulCase",
																	"src": "9052:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8405:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8402:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:9"
																},
																"nativeSrc": "8402:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8402:14:9"
															},
															"nativeSrc": "8395:887:9",
															"nodeType": "YulSwitch",
															"src": "8395:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7893:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7974:4:9",
														"nodeType": "YulTypedName",
														"src": "7974:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7980:3:9",
														"nodeType": "YulTypedName",
														"src": "7980:3:9",
														"type": ""
													}
												],
												"src": "7893:1395:9"
											},
											{
												"body": {
													"nativeSrc": "9359:53:9",
													"nodeType": "YulBlock",
													"src": "9359:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9376:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9376:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9399:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9399:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9381:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "9381:17:9"
																		},
																		"nativeSrc": "9381:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:9"
																},
																"nativeSrc": "9369:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9369:37:9"
															},
															"nativeSrc": "9369:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9369:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9294:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9347:5:9",
														"nodeType": "YulTypedName",
														"src": "9347:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9354:3:9",
														"nodeType": "YulTypedName",
														"src": "9354:3:9",
														"type": ""
													}
												],
												"src": "9294:118:9"
											},
											{
												"body": {
													"nativeSrc": "9516:124:9",
													"nodeType": "YulBlock",
													"src": "9516:124:9",
													"statements": [
														{
															"nativeSrc": "9526:26:9",
															"nodeType": "YulAssignment",
															"src": "9526:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9538:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9538:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9549:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9549:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9534:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:9"
																},
																"nativeSrc": "9534:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9534:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9526:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9526:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9606:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9606:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9619:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9619:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9630:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9630:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9615:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9615:3:9"
																		},
																		"nativeSrc": "9615:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9562:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9562:43:9"
																},
																"nativeSrc": "9562:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9562:71:9"
															},
															"nativeSrc": "9562:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9562:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9418:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9488:9:9",
														"nodeType": "YulTypedName",
														"src": "9488:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9500:6:9",
														"nodeType": "YulTypedName",
														"src": "9500:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9511:4:9",
														"nodeType": "YulTypedName",
														"src": "9511:4:9",
														"type": ""
													}
												],
												"src": "9418:222:9"
											},
											{
												"body": {
													"nativeSrc": "9674:152:9",
													"nodeType": "YulBlock",
													"src": "9674:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9691:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9691:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9694:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9694:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9684:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:9"
																},
																"nativeSrc": "9684:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9684:88:9"
															},
															"nativeSrc": "9684:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9684:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9788:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9788:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9791:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9791:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:9"
																},
																"nativeSrc": "9781:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9781:15:9"
															},
															"nativeSrc": "9781:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9781:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9812:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9812:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9815:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9815:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9805:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9805:6:9"
																},
																"nativeSrc": "9805:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9805:15:9"
															},
															"nativeSrc": "9805:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9805:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9646:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9646:180:9"
											},
											{
												"body": {
													"nativeSrc": "9883:51:9",
													"nodeType": "YulBlock",
													"src": "9883:51:9",
													"statements": [
														{
															"nativeSrc": "9893:34:9",
															"nodeType": "YulAssignment",
															"src": "9893:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9918:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9918:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9921:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9921:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9914:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9914:3:9"
																},
																"nativeSrc": "9914:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9914:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9893:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "9893:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9832:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9864:5:9",
														"nodeType": "YulTypedName",
														"src": "9864:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9874:8:9",
														"nodeType": "YulTypedName",
														"src": "9874:8:9",
														"type": ""
													}
												],
												"src": "9832:102:9"
											},
											{
												"body": {
													"nativeSrc": "10013:775:9",
													"nodeType": "YulBlock",
													"src": "10013:775:9",
													"statements": [
														{
															"nativeSrc": "10023:15:9",
															"nodeType": "YulAssignment",
															"src": "10023:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "10032:6:9",
																"nodeType": "YulIdentifier",
																"src": "10032:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10023:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10023:5:9"
																}
															]
														},
														{
															"nativeSrc": "10047:14:9",
															"nodeType": "YulAssignment",
															"src": "10047:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "10056:5:9",
																"nodeType": "YulIdentifier",
																"src": "10056:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10047:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10047:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10105:677:9",
																"nodeType": "YulBlock",
																"src": "10105:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10193:22:9",
																			"nodeType": "YulBlock",
																			"src": "10193:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10195:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "10195:16:9"
																						},
																						"nativeSrc": "10195:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10195:18:9"
																					},
																					"nativeSrc": "10195:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "10195:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10171:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10171:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10181:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10181:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10186:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "10186:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10177:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "10177:3:9"
																					},
																					"nativeSrc": "10177:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "10177:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10168:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "10168:2:9"
																			},
																			"nativeSrc": "10168:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10168:24:9"
																		},
																		"nativeSrc": "10165:50:9",
																		"nodeType": "YulIf",
																		"src": "10165:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "10260:419:9",
																			"nodeType": "YulBlock",
																			"src": "10260:419:9",
																			"statements": [
																				{
																					"nativeSrc": "10640:25:9",
																					"nodeType": "YulAssignment",
																					"src": "10640:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10653:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "10653:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10660:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "10660:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10649:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10649:3:9"
																						},
																						"nativeSrc": "10649:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10649:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10640:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "10640:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10235:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "10235:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10245:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10245:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10231:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10231:3:9"
																			},
																			"nativeSrc": "10231:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10231:16:9"
																		},
																		"nativeSrc": "10228:451:9",
																		"nodeType": "YulIf",
																		"src": "10228:451:9"
																	},
																	{
																		"nativeSrc": "10692:23:9",
																		"nodeType": "YulAssignment",
																		"src": "10692:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10704:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10704:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10710:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10710:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10700:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10700:3:9"
																			},
																			"nativeSrc": "10700:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10700:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10692:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10692:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10728:44:9",
																		"nodeType": "YulAssignment",
																		"src": "10728:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10763:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "10763:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10740:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "10740:22:9"
																			},
																			"nativeSrc": "10740:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10740:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10728:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "10728:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10081:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10081:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10091:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10091:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10078:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10078:2:9"
																},
																"nativeSrc": "10078:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10078:15:9"
															},
															"nativeSrc": "10070:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10094:2:9",
																"nodeType": "YulBlock",
																"src": "10094:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "10074:3:9",
																"nodeType": "YulBlock",
																"src": "10074:3:9",
																"statements": []
															},
															"src": "10070:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9940:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9968:6:9",
														"nodeType": "YulTypedName",
														"src": "9968:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9976:5:9",
														"nodeType": "YulTypedName",
														"src": "9976:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9983:8:9",
														"nodeType": "YulTypedName",
														"src": "9983:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9993:3:9",
														"nodeType": "YulTypedName",
														"src": "9993:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10001:5:9",
														"nodeType": "YulTypedName",
														"src": "10001:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "10008:4:9",
														"nodeType": "YulTypedName",
														"src": "10008:4:9",
														"type": ""
													}
												],
												"src": "9940:848:9"
											},
											{
												"body": {
													"nativeSrc": "10854:1013:9",
													"nodeType": "YulBlock",
													"src": "10854:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "11049:20:9",
																"nodeType": "YulBlock",
																"src": "11049:20:9",
																"statements": [
																	{
																		"nativeSrc": "11051:10:9",
																		"nodeType": "YulAssignment",
																		"src": "11051:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11060:1:9",
																			"nodeType": "YulLiteral",
																			"src": "11060:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11051:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11051:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11062:5:9",
																		"nodeType": "YulLeave",
																		"src": "11062:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11039:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "11039:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11032:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11032:6:9"
																},
																"nativeSrc": "11032:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11032:16:9"
															},
															"nativeSrc": "11029:40:9",
															"nodeType": "YulIf",
															"src": "11029:40:9"
														},
														{
															"body": {
																"nativeSrc": "11094:20:9",
																"nodeType": "YulBlock",
																"src": "11094:20:9",
																"statements": [
																	{
																		"nativeSrc": "11096:10:9",
																		"nodeType": "YulAssignment",
																		"src": "11096:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11105:1:9",
																			"nodeType": "YulLiteral",
																			"src": "11105:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11096:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11107:5:9",
																		"nodeType": "YulLeave",
																		"src": "11107:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11088:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11088:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11081:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11081:6:9"
																},
																"nativeSrc": "11081:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11081:12:9"
															},
															"nativeSrc": "11078:36:9",
															"nodeType": "YulIf",
															"src": "11078:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11224:20:9",
																		"nodeType": "YulBlock",
																		"src": "11224:20:9",
																		"statements": [
																			{
																				"nativeSrc": "11226:10:9",
																				"nodeType": "YulAssignment",
																				"src": "11226:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11235:1:9",
																					"nodeType": "YulLiteral",
																					"src": "11235:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11226:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11226:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11237:5:9",
																				"nodeType": "YulLeave",
																				"src": "11237:5:9"
																			}
																		]
																	},
																	"nativeSrc": "11217:27:9",
																	"nodeType": "YulCase",
																	"src": "11217:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11222:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11222:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11268:176:9",
																		"nodeType": "YulBlock",
																		"src": "11268:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11303:22:9",
																					"nodeType": "YulBlock",
																					"src": "11303:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11305:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "11305:16:9"
																								},
																								"nativeSrc": "11305:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "11305:18:9"
																							},
																							"nativeSrc": "11305:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "11305:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11288:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "11288:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11298:3:9",
																							"nodeType": "YulLiteral",
																							"src": "11298:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11285:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "11285:2:9"
																					},
																					"nativeSrc": "11285:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "11285:17:9"
																				},
																				"nativeSrc": "11282:43:9",
																				"nodeType": "YulIf",
																				"src": "11282:43:9"
																			},
																			{
																				"nativeSrc": "11338:25:9",
																				"nodeType": "YulAssignment",
																				"src": "11338:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11351:1:9",
																							"nodeType": "YulLiteral",
																							"src": "11351:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11354:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "11354:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11347:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "11347:3:9"
																					},
																					"nativeSrc": "11347:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "11347:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11338:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11338:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11394:22:9",
																					"nodeType": "YulBlock",
																					"src": "11394:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11396:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "11396:16:9"
																								},
																								"nativeSrc": "11396:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "11396:18:9"
																							},
																							"nativeSrc": "11396:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "11396:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11382:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "11382:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11389:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "11389:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11379:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "11379:2:9"
																					},
																					"nativeSrc": "11379:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "11379:14:9"
																				},
																				"nativeSrc": "11376:40:9",
																				"nodeType": "YulIf",
																				"src": "11376:40:9"
																			},
																			{
																				"nativeSrc": "11429:5:9",
																				"nodeType": "YulLeave",
																				"src": "11429:5:9"
																			}
																		]
																	},
																	"nativeSrc": "11253:191:9",
																	"nodeType": "YulCase",
																	"src": "11253:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11258:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11258:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11174:4:9",
																"nodeType": "YulIdentifier",
																"src": "11174:4:9"
															},
															"nativeSrc": "11167:277:9",
															"nodeType": "YulSwitch",
															"src": "11167:277:9"
														},
														{
															"body": {
																"nativeSrc": "11576:123:9",
																"nodeType": "YulBlock",
																"src": "11576:123:9",
																"statements": [
																	{
																		"nativeSrc": "11590:28:9",
																		"nodeType": "YulAssignment",
																		"src": "11590:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11603:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "11603:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11609:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "11609:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11599:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11599:3:9"
																			},
																			"nativeSrc": "11599:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11599:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11590:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11590:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11649:22:9",
																			"nodeType": "YulBlock",
																			"src": "11649:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11651:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "11651:16:9"
																						},
																						"nativeSrc": "11651:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "11651:18:9"
																					},
																					"nativeSrc": "11651:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "11651:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11637:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "11637:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11644:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "11644:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11634:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "11634:2:9"
																			},
																			"nativeSrc": "11634:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11634:14:9"
																		},
																		"nativeSrc": "11631:40:9",
																		"nodeType": "YulIf",
																		"src": "11631:40:9"
																	},
																	{
																		"nativeSrc": "11684:5:9",
																		"nodeType": "YulLeave",
																		"src": "11684:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11479:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "11479:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11485:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11485:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11476:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11476:2:9"
																				},
																				"nativeSrc": "11476:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11476:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11493:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "11493:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11503:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11503:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11490:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11490:2:9"
																				},
																				"nativeSrc": "11490:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11490:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11472:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11472:3:9"
																		},
																		"nativeSrc": "11472:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11472:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11528:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "11528:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11534:3:9",
																						"nodeType": "YulLiteral",
																						"src": "11534:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11525:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11525:2:9"
																				},
																				"nativeSrc": "11525:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11525:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11543:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "11543:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11553:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11553:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11540:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11540:2:9"
																				},
																				"nativeSrc": "11540:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11540:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11521:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11521:3:9"
																		},
																		"nativeSrc": "11521:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11521:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11456:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11456:2:9"
																},
																"nativeSrc": "11456:111:9",
																"nodeType": "YulFunctionCall",
																"src": "11456:111:9"
															},
															"nativeSrc": "11453:246:9",
															"nodeType": "YulIf",
															"src": "11453:246:9"
														},
														{
															"nativeSrc": "11709:57:9",
															"nodeType": "YulAssignment",
															"src": "11709:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11743:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11743:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11746:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11746:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11752:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "11752:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11762:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11762:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11724:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "11724:18:9"
																},
																"nativeSrc": "11724:42:9",
																"nodeType": "YulFunctionCall",
																"src": "11724:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11709:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11709:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "11716:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11716:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11805:22:9",
																"nodeType": "YulBlock",
																"src": "11805:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11807:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11807:16:9"
																			},
																			"nativeSrc": "11807:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11807:18:9"
																		},
																		"nativeSrc": "11807:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11807:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11782:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11782:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11793:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11793:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11798:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11798:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:9"
																		},
																		"nativeSrc": "11789:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11789:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11779:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11779:2:9"
																},
																"nativeSrc": "11779:25:9",
																"nodeType": "YulFunctionCall",
																"src": "11779:25:9"
															},
															"nativeSrc": "11776:51:9",
															"nodeType": "YulIf",
															"src": "11776:51:9"
														},
														{
															"nativeSrc": "11836:25:9",
															"nodeType": "YulAssignment",
															"src": "11836:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11849:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11849:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11856:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11856:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11845:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11845:3:9"
																},
																"nativeSrc": "11845:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11845:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11836:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11836:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10794:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10824:4:9",
														"nodeType": "YulTypedName",
														"src": "10824:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10830:8:9",
														"nodeType": "YulTypedName",
														"src": "10830:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10840:3:9",
														"nodeType": "YulTypedName",
														"src": "10840:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10848:5:9",
														"nodeType": "YulTypedName",
														"src": "10848:5:9",
														"type": ""
													}
												],
												"src": "10794:1073:9"
											},
											{
												"body": {
													"nativeSrc": "11916:43:9",
													"nodeType": "YulBlock",
													"src": "11916:43:9",
													"statements": [
														{
															"nativeSrc": "11926:27:9",
															"nodeType": "YulAssignment",
															"src": "11926:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11941:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11941:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11948:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11948:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11937:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11937:3:9"
																},
																"nativeSrc": "11937:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11937:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11926:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "11926:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "11873:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11898:5:9",
														"nodeType": "YulTypedName",
														"src": "11898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11908:7:9",
														"nodeType": "YulTypedName",
														"src": "11908:7:9",
														"type": ""
													}
												],
												"src": "11873:86:9"
											},
											{
												"body": {
													"nativeSrc": "12029:217:9",
													"nodeType": "YulBlock",
													"src": "12029:217:9",
													"statements": [
														{
															"nativeSrc": "12039:31:9",
															"nodeType": "YulAssignment",
															"src": "12039:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12065:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12065:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12047:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12047:17:9"
																},
																"nativeSrc": "12047:23:9",
																"nodeType": "YulFunctionCall",
																"src": "12047:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12039:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12039:4:9"
																}
															]
														},
														{
															"nativeSrc": "12079:37:9",
															"nodeType": "YulAssignment",
															"src": "12079:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12107:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "12107:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12091:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "12091:15:9"
																},
																"nativeSrc": "12091:25:9",
																"nodeType": "YulFunctionCall",
																"src": "12091:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12079:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "12079:8:9"
																}
															]
														},
														{
															"nativeSrc": "12126:113:9",
															"nodeType": "YulAssignment",
															"src": "12126:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12156:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12156:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12162:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "12162:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12172:66:9",
																		"nodeType": "YulLiteral",
																		"src": "12172:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12135:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "12135:20:9"
																},
																"nativeSrc": "12135:104:9",
																"nodeType": "YulFunctionCall",
																"src": "12135:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12126:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12126:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11965:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12004:4:9",
														"nodeType": "YulTypedName",
														"src": "12004:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12010:8:9",
														"nodeType": "YulTypedName",
														"src": "12010:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12023:5:9",
														"nodeType": "YulTypedName",
														"src": "12023:5:9",
														"type": ""
													}
												],
												"src": "11965:281:9"
											},
											{
												"body": {
													"nativeSrc": "12300:362:9",
													"nodeType": "YulBlock",
													"src": "12300:362:9",
													"statements": [
														{
															"nativeSrc": "12310:25:9",
															"nodeType": "YulAssignment",
															"src": "12310:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12333:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12333:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12315:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12315:17:9"
																},
																"nativeSrc": "12315:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12315:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12310:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12310:1:9"
																}
															]
														},
														{
															"nativeSrc": "12344:25:9",
															"nodeType": "YulAssignment",
															"src": "12344:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12367:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12367:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12349:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12349:17:9"
																},
																"nativeSrc": "12349:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12349:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12344:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12344:1:9"
																}
															]
														},
														{
															"nativeSrc": "12378:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12378:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12401:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12401:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12404:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12404:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12397:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12397:3:9"
																},
																"nativeSrc": "12397:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12397:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12382:11:9",
																	"nodeType": "YulTypedName",
																	"src": "12382:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12415:41:9",
															"nodeType": "YulAssignment",
															"src": "12415:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12444:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "12444:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12426:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12426:17:9"
																},
																"nativeSrc": "12426:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12426:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12415:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12415:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12633:22:9",
																"nodeType": "YulBlock",
																"src": "12633:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12635:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12635:16:9"
																			},
																			"nativeSrc": "12635:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12635:18:9"
																		},
																		"nativeSrc": "12635:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12635:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12566:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12566:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12559:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "12559:6:9"
																				},
																				"nativeSrc": "12559:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12559:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12589:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12589:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12596:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "12596:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12605:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "12605:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12592:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12592:3:9"
																						},
																						"nativeSrc": "12592:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12592:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12586:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "12586:2:9"
																				},
																				"nativeSrc": "12586:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12586:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12539:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12539:2:9"
																		},
																		"nativeSrc": "12539:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12539:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12519:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12519:6:9"
																},
																"nativeSrc": "12519:113:9",
																"nodeType": "YulFunctionCall",
																"src": "12519:113:9"
															},
															"nativeSrc": "12516:139:9",
															"nodeType": "YulIf",
															"src": "12516:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12252:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12283:1:9",
														"nodeType": "YulTypedName",
														"src": "12283:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12286:1:9",
														"nodeType": "YulTypedName",
														"src": "12286:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12292:7:9",
														"nodeType": "YulTypedName",
														"src": "12292:7:9",
														"type": ""
													}
												],
												"src": "12252:410:9"
											},
											{
												"body": {
													"nativeSrc": "12712:147:9",
													"nodeType": "YulBlock",
													"src": "12712:147:9",
													"statements": [
														{
															"nativeSrc": "12722:25:9",
															"nodeType": "YulAssignment",
															"src": "12722:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12745:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12745:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12727:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12727:17:9"
																},
																"nativeSrc": "12727:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12727:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12722:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12722:1:9"
																}
															]
														},
														{
															"nativeSrc": "12756:25:9",
															"nodeType": "YulAssignment",
															"src": "12756:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12779:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12779:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12761:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12761:17:9"
																},
																"nativeSrc": "12761:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12761:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12756:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12756:1:9"
																}
															]
														},
														{
															"nativeSrc": "12790:16:9",
															"nodeType": "YulAssignment",
															"src": "12790:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12801:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12801:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12804:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12804:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12797:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12797:3:9"
																},
																"nativeSrc": "12797:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12797:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12790:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12790:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12830:22:9",
																"nodeType": "YulBlock",
																"src": "12830:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12832:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12832:16:9"
																			},
																			"nativeSrc": "12832:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12832:18:9"
																		},
																		"nativeSrc": "12832:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12832:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12822:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12822:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12825:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12825:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12819:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12819:2:9"
																},
																"nativeSrc": "12819:10:9",
																"nodeType": "YulFunctionCall",
																"src": "12819:10:9"
															},
															"nativeSrc": "12816:36:9",
															"nodeType": "YulIf",
															"src": "12816:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12668:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12699:1:9",
														"nodeType": "YulTypedName",
														"src": "12699:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12702:1:9",
														"nodeType": "YulTypedName",
														"src": "12702:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12708:3:9",
														"nodeType": "YulTypedName",
														"src": "12708:3:9",
														"type": ""
													}
												],
												"src": "12668:191:9"
											},
											{
												"body": {
													"nativeSrc": "12930:53:9",
													"nodeType": "YulBlock",
													"src": "12930:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12947:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12947:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12970:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12970:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12952:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "12952:17:9"
																		},
																		"nativeSrc": "12952:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12952:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12940:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12940:6:9"
																},
																"nativeSrc": "12940:37:9",
																"nodeType": "YulFunctionCall",
																"src": "12940:37:9"
															},
															"nativeSrc": "12940:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "12940:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12865:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12918:5:9",
														"nodeType": "YulTypedName",
														"src": "12918:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12925:3:9",
														"nodeType": "YulTypedName",
														"src": "12925:3:9",
														"type": ""
													}
												],
												"src": "12865:118:9"
											},
											{
												"body": {
													"nativeSrc": "13143:288:9",
													"nodeType": "YulBlock",
													"src": "13143:288:9",
													"statements": [
														{
															"nativeSrc": "13153:26:9",
															"nodeType": "YulAssignment",
															"src": "13153:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13165:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13165:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13176:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13176:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13161:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13161:3:9"
																},
																"nativeSrc": "13161:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13161:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13153:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13153:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13233:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13233:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13246:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13246:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13257:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13257:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13242:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:9"
																		},
																		"nativeSrc": "13242:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13242:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13189:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13189:43:9"
																},
																"nativeSrc": "13189:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13189:71:9"
															},
															"nativeSrc": "13189:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13189:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13314:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13314:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13327:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13327:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13338:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13338:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13323:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13323:3:9"
																		},
																		"nativeSrc": "13323:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13323:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13270:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13270:43:9"
																},
																"nativeSrc": "13270:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13270:72:9"
															},
															"nativeSrc": "13270:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13270:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13396:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13396:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13409:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13409:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13420:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13420:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13405:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13405:3:9"
																		},
																		"nativeSrc": "13405:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13405:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13352:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13352:43:9"
																},
																"nativeSrc": "13352:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13352:72:9"
															},
															"nativeSrc": "13352:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13352:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12989:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13099:9:9",
														"nodeType": "YulTypedName",
														"src": "13099:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13111:6:9",
														"nodeType": "YulTypedName",
														"src": "13111:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13119:6:9",
														"nodeType": "YulTypedName",
														"src": "13119:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13127:6:9",
														"nodeType": "YulTypedName",
														"src": "13127:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13138:4:9",
														"nodeType": "YulTypedName",
														"src": "13138:4:9",
														"type": ""
													}
												],
												"src": "12989:442:9"
											},
											{
												"body": {
													"nativeSrc": "13535:124:9",
													"nodeType": "YulBlock",
													"src": "13535:124:9",
													"statements": [
														{
															"nativeSrc": "13545:26:9",
															"nodeType": "YulAssignment",
															"src": "13545:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13557:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13557:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13568:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13568:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13553:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13553:3:9"
																},
																"nativeSrc": "13553:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13553:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13545:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13545:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13625:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13625:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13638:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13638:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13649:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13649:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13634:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13634:3:9"
																		},
																		"nativeSrc": "13634:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13634:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13581:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13581:43:9"
																},
																"nativeSrc": "13581:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13581:71:9"
															},
															"nativeSrc": "13581:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13581:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13437:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13507:9:9",
														"nodeType": "YulTypedName",
														"src": "13507:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13519:6:9",
														"nodeType": "YulTypedName",
														"src": "13519:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13530:4:9",
														"nodeType": "YulTypedName",
														"src": "13530:4:9",
														"type": ""
													}
												],
												"src": "13437:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516131f93803806131f98339818101604052810190610031919061079c565b33848481600390816100439190610a45565b5080600490816100539190610a45565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d69190610b23565b60405180910390fd5b6100ee8161028a60201b60201c565b5060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361015c576040517ff8af67e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c1576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101f46008819055506102813361025c61034f60201b60201c565b600a6102689190610ca4565b620f42406102769190610cee565b61035760201b60201c565b50505050610dbf565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103c7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103be9190610b23565b60405180910390fd5b6103d85f83836103dc60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042c578060025f8282546104209190610d2f565b925050819055506104fa565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104b5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104ac93929190610d71565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610541578060025f828254039250508190555061058b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105e89190610da6565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106548261060e565b810181811067ffffffffffffffff821117156106735761067261061e565b5b80604052505050565b5f6106856105f5565b9050610691828261064b565b919050565b5f67ffffffffffffffff8211156106b0576106af61061e565b5b6106b98261060e565b9050602081019050919050565b8281835e5f83830152505050565b5f6106e66106e184610696565b61067c565b9050828152602081018484840111156107025761070161060a565b5b61070d8482856106c6565b509392505050565b5f82601f83011261072957610728610606565b5b81516107398482602086016106d4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61076b82610742565b9050919050565b61077b81610761565b8114610785575f80fd5b50565b5f8151905061079681610772565b92915050565b5f805f80608085870312156107b4576107b36105fe565b5b5f85015167ffffffffffffffff8111156107d1576107d0610602565b5b6107dd87828801610715565b945050602085015167ffffffffffffffff8111156107fe576107fd610602565b5b61080a87828801610715565b935050604061081b87828801610788565b925050606061082c87828801610788565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061088657607f821691505b60208210810361089957610898610842565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108c0565b61090586836108c0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61094961094461093f8461091d565b610926565b61091d565b9050919050565b5f819050919050565b6109628361092f565b61097661096e82610950565b8484546108cc565b825550505050565b5f90565b61098a61097e565b610995818484610959565b505050565b5b818110156109b8576109ad5f82610982565b60018101905061099b565b5050565b601f8211156109fd576109ce8161089f565b6109d7846108b1565b810160208510156109e6578190505b6109fa6109f2856108b1565b83018261099a565b50505b505050565b5f82821c905092915050565b5f610a1d5f1984600802610a02565b1980831691505092915050565b5f610a358383610a0e565b9150826002028217905092915050565b610a4e82610838565b67ffffffffffffffff811115610a6757610a6661061e565b5b610a71825461086f565b610a7c8282856109bc565b5f60209050601f831160018114610aad575f8415610a9b578287015190505b610aa58582610a2a565b865550610b0c565b601f198416610abb8661089f565b5f5b82811015610ae257848901518255600182019150602085019450602081019050610abd565b86831015610aff5784890151610afb601f891682610a0e565b8355505b6001600288020188555050505b505050505050565b610b1d81610761565b82525050565b5f602082019050610b365f830184610b14565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610bbe57808604811115610b9a57610b99610b3c565b5b6001851615610ba95780820291505b8081029050610bb785610b69565b9450610b7e565b94509492505050565b5f82610bd65760019050610c91565b81610be3575f9050610c91565b8160018114610bf95760028114610c0357610c32565b6001915050610c91565b60ff841115610c1557610c14610b3c565b5b8360020a915084821115610c2c57610c2b610b3c565b5b50610c91565b5060208310610133831016604e8410600b8410161715610c675782820a905083811115610c6257610c61610b3c565b5b610c91565b610c748484846001610b75565b92509050818404811115610c8b57610c8a610b3c565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610cae8261091d565b9150610cb983610c98565b9250610ce67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610bc7565b905092915050565b5f610cf88261091d565b9150610d038361091d565b9250828202610d118161091d565b91508282048414831517610d2857610d27610b3c565b5b5092915050565b5f610d398261091d565b9150610d448361091d565b9250828201905080821115610d5c57610d5b610b3c565b5b92915050565b610d6b8161091d565b82525050565b5f606082019050610d845f830186610b14565b610d916020830185610d62565b610d9e6040830184610d62565b949350505050565b5f602082019050610db95f830184610d62565b92915050565b61242d80610dcc5f395ff3fe608060405234801561000f575f80fd5b506004361061018c575f3560e01c806377d3550b116100dc578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e1461044b578063e95850df1461047b578063ef9ecc1d14610499578063f2fde38b146104c95761018c565b8063a9059cbb146103cf578063a9b493e0146103ff578063ca5254851461041b5761018c565b806377d3550b146103315780638456cb591461034f5780638da5cb5b1461035957806395d89b41146103775780639d55fba714610395578063a3262ea2146103b15761018c565b8063313ce567116101495780635e182096116101235780635e182096146102bf57806370a08231146102db578063715018a61461030b57806374612f19146103155761018c565b8063313ce567146102795780633f4ba83a146102975780635c975abb146102a15761018c565b806306fdde0314610190578063095ea7b3146101ae57806318160ddd146101de5780631ec48cf7146101fc57806323b872dd1461022d5780632fcdc5fd1461025d575b5f80fd5b6101986104e5565b6040516101a59190611b3e565b60405180910390f35b6101c860048036038101906101c39190611bef565b610575565b6040516101d59190611c47565b60405180910390f35b6101e6610597565b6040516101f39190611c6f565b60405180910390f35b61021660048036038101906102119190611c88565b6105a0565b604051610224929190611cb3565b60405180910390f35b61024760048036038101906102429190611cda565b6105be565b6040516102549190611c47565b60405180910390f35b61027760048036038101906102729190611c88565b6105db565b005b6102816106c2565b60405161028e9190611d45565b60405180910390f35b61029f6106ca565b005b6102a96106dc565b6040516102b69190611c47565b60405180910390f35b6102d960048036038101906102d49190611d5e565b6106f1565b005b6102f560048036038101906102f09190611c88565b610819565b6040516103029190611c6f565b60405180910390f35b61031361085e565b005b61032f600480360381019061032a9190611c88565b610871565b005b610339610958565b6040516103469190611c6f565b60405180910390f35b61035761095e565b005b610361610970565b60405161036e9190611dab565b60405180910390f35b61037f610999565b60405161038c9190611b3e565b60405180910390f35b6103af60048036038101906103aa9190611dc4565b610a29565b005b6103b9610aae565b6040516103c69190611dab565b60405180910390f35b6103e960048036038101906103e49190611bef565b610ad3565b6040516103f69190611c47565b60405180910390f35b61041960048036038101906104149190611d5e565b610aee565b005b61043560048036038101906104309190611dc4565b610cb4565b6040516104429190611c6f565b60405180910390f35b61046560048036038101906104609190611def565b610cc9565b6040516104729190611c6f565b60405180910390f35b610483610d4b565b6040516104909190611dab565b60405180910390f35b6104b360048036038101906104ae9190611e2d565b610d70565b6040516104c09190611edb565b60405180910390f35b6104e360048036038101906104de9190611c88565b611151565b005b6060600380546104f490611f21565b80601f016020809104026020016040519081016040528092919081815260200182805461052090611f21565b801561056b5780601f106105425761010080835404028352916020019161056b565b820191905f5260205f20905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b5f8061057f6111d5565b905061058c8185856111dc565b600191505092915050565b5f600254905090565b5f806105ab83610819565b6105b58430610cc9565b91509150915091565b5f6105c76111ee565b6105d2848484611238565b90509392505050565b6105e3611266565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610648576040517ff8af67e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9816040516106b79190611dab565b60405180910390a150565b5f6012905090565b6106d2611266565b6106da6112ed565b565b5f60055f9054906101000a900460ff16905090565b6106f961134e565b6107016111ee565b5f810361073a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3390505f61076a60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ad3565b9050806107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611f9b565b60405180910390fd5b82600a5f8681526020019081526020015f205f8282546107cc9190611fe6565b92505081905550837f577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd846040516108039190611c6f565b60405180910390a2505061081561139d565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610866611266565b61086f5f6113a7565b565b610879611266565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108de576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f8160405161094d9190611dab565b60405180910390a150565b60085481565b610966611266565b61096e61146c565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109a890611f21565b80601f01602080910402602001604051908101604052809291908181526020018280546109d490611f21565b8015610a1f5780601f106109f657610100808354040283529160200191610a1f565b820191905f5260205f20905b815481529060010190602001808311610a0257829003601f168201915b5050505050905090565b610a31611266565b612710811115610a6d576040517fdc81db8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008819055507f13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e81604051610aa39190611c6f565b60405180910390a150565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610adc6111ee565b610ae683836114ce565b905092915050565b610af661134e565b610afe6111ee565b610b0833836114f0565b610b3e576040517fde271cf500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610b77576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a5f8481526020019081526020015f20541015610bc2576040517fa77130ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a5f8481526020019081526020015f205f828254610be29190612019565b925050819055505f610c1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846105be565b905080610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90612096565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16837f4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb84604051610c9f9190611c6f565b60405180910390a350610cb061139d565b5050565b600a602052805f5260405f205f915090505481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d78611aae565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dfe576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e0661134e565b610e0e6111ee565b5f8203610e47576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600a5f8681526020019081526020015f205490505f8382101590505f8082156110095761271060085487610e7c91906120b4565b610e869190612122565b90508086610e949190612019565b91508584610ea29190612019565b600a5f8a81526020019081526020015f20819055505f811115610f67575f610eeb60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610ad3565b905080610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f249061219c565b60405180910390fd5b887facfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d527783604051610f5d9190611c6f565b60405180910390a2505b5f610f728884610ad3565b905080610fb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fab90612204565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca85604051610ffb9190611c6f565b60405180910390a350611113565b8391505f90505f600a5f8a81526020019081526020015f20819055505f8211156110d8575f6110388884610ad3565b90508061107a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110719061226c565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb524329085868b6110c09190612019565b6040516110ce929190611cb3565b60405180910390a3505b877f574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f858860405161110a929190611cb3565b60405180910390a25b604051806060016040528083815260200183886111309190612019565b81526020018415151581525094505050505061114a61139d565b9392505050565b611159611266565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111c9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111c09190611dab565b60405180910390fd5b6111d2816113a7565b50565b5f33905090565b6111e983838360016114fb565b505050565b6111f66106dc565b15611236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122d906122d4565b60405180910390fd5b565b5f806112426111d5565b905061124f8582856116ca565b61125a85858561175c565b60019150509392505050565b61126e6111d5565b73ffffffffffffffffffffffffffffffffffffffff1661128c610970565b73ffffffffffffffffffffffffffffffffffffffff16146112eb576112af6111d5565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112e29190611dab565b60405180910390fd5b565b6112f561184c565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113376111d5565b6040516113449190611dab565b60405180910390a1565b600260065403611393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138a9061233c565b60405180910390fd5b6002600681905550565b6001600681905550565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114746111ee565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114b76111d5565b6040516114c49190611dab565b60405180910390a1565b5f806114d86111d5565b90506114e581858561175c565b600191505092915050565b5f6001905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361156b575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115629190611dab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115db575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115d29190611dab565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156116c4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116bb9190611c6f565b60405180910390a35b50505050565b5f6116d58484610cc9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117565781811015611747578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161173e9392919061235a565b60405180910390fd5b61175584848484035f6114fb565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117cc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117c39190611dab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361183c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118339190611dab565b60405180910390fd5b611847838383611895565b505050565b6118546106dc565b611893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188a906123d9565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118e5578060025f8282546118d99190611fe6565b925050819055506119b3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561196e578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119659392919061235a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119fa578060025f8282540392505081905550611a44565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611aa19190611c6f565b60405180910390a3505050565b60405180606001604052805f81526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b1082611ace565b611b1a8185611ad8565b9350611b2a818560208601611ae8565b611b3381611af6565b840191505092915050565b5f6020820190508181035f830152611b568184611b06565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b8b82611b62565b9050919050565b611b9b81611b81565b8114611ba5575f80fd5b50565b5f81359050611bb681611b92565b92915050565b5f819050919050565b611bce81611bbc565b8114611bd8575f80fd5b50565b5f81359050611be981611bc5565b92915050565b5f8060408385031215611c0557611c04611b5e565b5b5f611c1285828601611ba8565b9250506020611c2385828601611bdb565b9150509250929050565b5f8115159050919050565b611c4181611c2d565b82525050565b5f602082019050611c5a5f830184611c38565b92915050565b611c6981611bbc565b82525050565b5f602082019050611c825f830184611c60565b92915050565b5f60208284031215611c9d57611c9c611b5e565b5b5f611caa84828501611ba8565b91505092915050565b5f604082019050611cc65f830185611c60565b611cd36020830184611c60565b9392505050565b5f805f60608486031215611cf157611cf0611b5e565b5b5f611cfe86828701611ba8565b9350506020611d0f86828701611ba8565b9250506040611d2086828701611bdb565b9150509250925092565b5f60ff82169050919050565b611d3f81611d2a565b82525050565b5f602082019050611d585f830184611d36565b92915050565b5f8060408385031215611d7457611d73611b5e565b5b5f611d8185828601611bdb565b9250506020611d9285828601611bdb565b9150509250929050565b611da581611b81565b82525050565b5f602082019050611dbe5f830184611d9c565b92915050565b5f60208284031215611dd957611dd8611b5e565b5b5f611de684828501611bdb565b91505092915050565b5f8060408385031215611e0557611e04611b5e565b5b5f611e1285828601611ba8565b9250506020611e2385828601611ba8565b9150509250929050565b5f805f60608486031215611e4457611e43611b5e565b5b5f611e5186828701611bdb565b9350506020611e6286828701611ba8565b9250506040611e7386828701611bdb565b9150509250925092565b611e8681611bbc565b82525050565b611e9581611c2d565b82525050565b606082015f820151611eaf5f850182611e7d565b506020820151611ec26020850182611e7d565b506040820151611ed56040850182611e8c565b50505050565b5f606082019050611eee5f830184611e9b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f3857607f821691505b602082108103611f4b57611f4a611ef4565b5b50919050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f611f85601583611ad8565b9150611f9082611f51565b602082019050919050565b5f6020820190508181035f830152611fb281611f79565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ff082611bbc565b9150611ffb83611bbc565b925082820190508082111561201357612012611fb9565b5b92915050565b5f61202382611bbc565b915061202e83611bbc565b925082820390508181111561204657612045611fb9565b5b92915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612080600f83611ad8565b915061208b8261204c565b602082019050919050565b5f6020820190508181035f8301526120ad81612074565b9050919050565b5f6120be82611bbc565b91506120c983611bbc565b92508282026120d781611bbc565b915082820484148315176120ee576120ed611fb9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61212c82611bbc565b915061213783611bbc565b925082612147576121466120f5565b5b828204905092915050565b7f436f6d6d697373696f6e207472616e73666572206661696c65640000000000005f82015250565b5f612186601a83611ad8565b915061219182612152565b602082019050919050565b5f6020820190508181035f8301526121b38161217a565b9050919050565b7f57616765207472616e73666572206661696c65640000000000000000000000005f82015250565b5f6121ee601483611ad8565b91506121f9826121ba565b602082019050919050565b5f6020820190508181035f83015261221b816121e2565b9050919050565b7f5061727469616c2077616765207472616e73666572206661696c6564000000005f82015250565b5f612256601c83611ad8565b915061226182612222565b602082019050919050565b5f6020820190508181035f8301526122838161224a565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6122be601083611ad8565b91506122c98261228a565b602082019050919050565b5f6020820190508181035f8301526122eb816122b2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612326601f83611ad8565b9150612331826122f2565b602082019050919050565b5f6020820190508181035f8301526123538161231a565b9050919050565b5f60608201905061236d5f830186611d9c565b61237a6020830185611c60565b6123876040830184611c60565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6123c3601483611ad8565b91506123ce8261238f565b602082019050919050565b5f6020820190508181035f8301526123f0816123b7565b905091905056fea2646970667358221220b9c9f8ee8c697360ab460de192a3a85ee1ba861ba6fe6faafd0645f006a8922a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x31F9 CODESIZE SUB DUP1 PUSH2 0x31F9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x79C JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x28A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8AF67E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x281 CALLER PUSH2 0x25C PUSH2 0x34F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xCA4 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x357 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D8 PUSH0 DUP4 DUP4 PUSH2 0x3DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0xD2F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4FA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x541 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x58B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x654 DUP3 PUSH2 0x60E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x673 JUMPI PUSH2 0x672 PUSH2 0x61E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x685 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x691 DUP3 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6AF PUSH2 0x61E JUMP JUMPDEST JUMPDEST PUSH2 0x6B9 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E6 PUSH2 0x6E1 DUP5 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x702 JUMPI PUSH2 0x701 PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH2 0x70D DUP5 DUP3 DUP6 PUSH2 0x6C6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x606 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x739 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x76B DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH2 0x761 JUMP JUMPDEST DUP2 EQ PUSH2 0x785 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x796 DUP2 PUSH2 0x772 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x7B3 PUSH2 0x5FE JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D0 PUSH2 0x602 JUMP JUMPDEST JUMPDEST PUSH2 0x7DD DUP8 DUP3 DUP9 ADD PUSH2 0x715 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x602 JUMP JUMPDEST JUMPDEST PUSH2 0x80A DUP8 DUP3 DUP9 ADD PUSH2 0x715 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x81B DUP8 DUP3 DUP9 ADD PUSH2 0x788 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x82C DUP8 DUP3 DUP9 ADD PUSH2 0x788 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x886 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x899 JUMPI PUSH2 0x898 PUSH2 0x842 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8FB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x905 DUP7 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x949 PUSH2 0x944 PUSH2 0x93F DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x962 DUP4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x976 PUSH2 0x96E DUP3 PUSH2 0x950 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8CC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x98A PUSH2 0x97E JUMP JUMPDEST PUSH2 0x995 DUP2 DUP5 DUP5 PUSH2 0x959 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9AD PUSH0 DUP3 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x99B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9FD JUMPI PUSH2 0x9CE DUP2 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x9D7 DUP5 PUSH2 0x8B1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9E6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9FA PUSH2 0x9F2 DUP6 PUSH2 0x8B1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x99A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA02 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA35 DUP4 DUP4 PUSH2 0xA0E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4E DUP3 PUSH2 0x838 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA66 PUSH2 0x61E JUMP JUMPDEST JUMPDEST PUSH2 0xA71 DUP3 SLOAD PUSH2 0x86F JUMP JUMPDEST PUSH2 0xA7C DUP3 DUP3 DUP6 PUSH2 0x9BC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAAD JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA9B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAA5 DUP6 DUP3 PUSH2 0xA2A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xABB DUP7 PUSH2 0x89F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAE2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAFF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAFB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA0E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0x761 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB36 PUSH0 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xBBE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xBA9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xBB7 DUP6 PUSH2 0xB69 JUMP JUMPDEST SWAP5 POP PUSH2 0xB7E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBD6 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC91 JUMP JUMPDEST DUP2 PUSH2 0xBE3 JUMPI PUSH0 SWAP1 POP PUSH2 0xC91 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBF9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC03 JUMPI PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC91 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xC2C JUMPI PUSH2 0xC2B PUSH2 0xB3C JUMP JUMPDEST JUMPDEST POP PUSH2 0xC91 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC67 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC62 JUMPI PUSH2 0xC61 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC74 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB75 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xB3C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCAE DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP4 PUSH2 0xC98 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCF8 DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xD03 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD11 DUP2 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD28 JUMPI PUSH2 0xD27 PUSH2 0xB3C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD39 DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xD44 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD5C JUMPI PUSH2 0xD5B PUSH2 0xB3C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0x91D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD84 PUSH0 DUP4 ADD DUP7 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xD9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD62 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xD62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x242D DUP1 PUSH2 0xDCC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77D3550B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xE95850DF EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xEF9ECC1D EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4C9 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xA9B493E0 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xCA525485 EQ PUSH2 0x41B JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x77D3550B EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x9D55FBA7 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xA3262EA2 EQ PUSH2 0x3B1 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5E182096 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x5E182096 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x74612F19 EQ PUSH2 0x315 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A1 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1EC48CF7 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x2FCDC5FD EQ PUSH2 0x25D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x85E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x95E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x361 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B9 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4F4 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x520 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x542 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x57F PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x58C DUP2 DUP6 DUP6 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AB DUP4 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x5B5 DUP5 ADDRESS PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x5C7 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x5D2 DUP5 DUP5 DUP5 PUSH2 0x1238 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0x1266 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8AF67E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF2610996D245D9B77E4FF84C2174EEA0B76FB44C422218404F66E28816D78FB9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x12ED JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F9 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x701 PUSH2 0x11EE JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x76A PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x577DFADB80AB9A5336C633F3FA5F59C296D18A29AA6AE9E4598762748E1F4AFD DUP5 PUSH1 0x40 MLOAD PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x815 PUSH2 0x139D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x866 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x86F PUSH0 PUSH2 0x13A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x879 PUSH2 0x1266 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4422C0C4B301436298CCE7DE4B586B1E044E671D0EFBFEB88689161EBD95DD4F DUP2 PUSH1 0x40 MLOAD PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x966 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x146C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA31 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC81DB8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x13F60DD2B588490608C3FF1932A3DAEB4087F3D5AF04B97E5C2A16B5B4C0302E DUP2 PUSH1 0x40 MLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xADC PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xAE6 DUP4 DUP4 PUSH2 0x14CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x134E JUMP JUMPDEST PUSH2 0xAFE PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xB08 CALLER DUP4 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0xDE271CF500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA77130EF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xC16 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4F SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x4E073DD16EEC477FBB059BDA1F0796F0D06EEBC4C53568E3E77A4084228FD4EB DUP5 PUSH1 0x40 MLOAD PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCB0 PUSH2 0x139D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD78 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE06 PUSH2 0x134E JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x11EE JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP4 DUP3 LT ISZERO SWAP1 POP PUSH0 DUP1 DUP3 ISZERO PUSH2 0x1009 JUMPI PUSH2 0x2710 PUSH1 0x8 SLOAD DUP8 PUSH2 0xE7C SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH2 0xE94 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST SWAP2 POP DUP6 DUP5 PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH0 PUSH2 0xEEB PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH32 0xACFA15EBE340982FEF95D43AAFC25D741382D7928A00055A209274FA615D5277 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH0 PUSH2 0xF72 DUP9 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAB SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x4C3044279DAEA82275BC16A26600FE0C196CB65422B138C02DC86FB861B174CA DUP6 PUSH1 0x40 MLOAD PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1113 JUMP JUMPDEST DUP4 SWAP2 POP PUSH0 SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT ISZERO PUSH2 0x10D8 JUMPI PUSH0 PUSH2 0x1038 DUP9 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x5D16C483BEE69284681447FE545192ACC0F537A2CD7C2CD35593A1EDB5243290 DUP6 DUP7 DUP12 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10CE SWAP3 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST DUP8 PUSH32 0x574264649C9D702F91C09E683982319DA6546E5CFEE0A4898A3BD6BF1C63042F DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x110A SWAP3 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP9 PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO DUP2 MSTORE POP SWAP5 POP POP POP POP POP PUSH2 0x114A PUSH2 0x139D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1159 PUSH2 0x1266 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D2 DUP2 PUSH2 0x13A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11F6 PUSH2 0x6DC JUMP JUMPDEST ISZERO PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122D SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1242 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x124F DUP6 DUP3 DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x125A DUP6 DUP6 DUP6 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x126E PUSH2 0x11D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128C PUSH2 0x970 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12EB JUMPI PUSH2 0x12AF PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x12F5 PUSH2 0x184C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1337 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1474 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14B7 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14D8 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x14E5 DUP2 DUP6 DUP6 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x156B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D2 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x16C4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D5 DUP5 DUP5 PUSH2 0xCC9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1756 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1747 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1755 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x183C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1833 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1847 DUP4 DUP4 DUP4 PUSH2 0x1895 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1854 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x1893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x19B3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x196E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1965 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19FA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A44 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B10 DUP3 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B1A DUP2 DUP6 PUSH2 0x1AD8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1B33 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 DUP5 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8B DUP3 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9B DUP2 PUSH2 0x1B81 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB6 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCE DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE9 DUP2 PUSH2 0x1BC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C12 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C23 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C41 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C5A PUSH0 DUP4 ADD DUP5 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C69 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C82 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CAA DUP5 DUP3 DUP6 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CC6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x1CD3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CF0 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFE DUP7 DUP3 DUP8 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D0F DUP7 DUP3 DUP8 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D20 DUP7 DUP3 DUP8 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3F DUP2 PUSH2 0x1D2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D58 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D74 JUMPI PUSH2 0x1D73 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D81 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D92 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA5 DUP2 PUSH2 0x1B81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBE PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD9 JUMPI PUSH2 0x1DD8 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E12 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E23 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E51 DUP7 DUP3 DUP8 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E62 DUP7 DUP3 DUP8 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E73 DUP7 DUP3 DUP8 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E95 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1EAF PUSH0 DUP6 ADD DUP3 PUSH2 0x1E7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1EC2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1E7D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1ED5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1E8C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EEE PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F4B JUMPI PUSH2 0x1F4A PUSH2 0x1EF4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F85 PUSH1 0x15 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F90 DUP3 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB2 DUP2 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FF0 DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2013 JUMPI PUSH2 0x2012 PUSH2 0x1FB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2023 DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x202E DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1FB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2080 PUSH1 0xF DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x208B DUP3 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AD DUP2 PUSH2 0x2074 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20BE DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x20C9 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20D7 DUP2 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x1FB9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x212C DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2137 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x20F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697373696F6E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2186 PUSH1 0x1A DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2191 DUP3 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21B3 DUP2 PUSH2 0x217A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616765207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21EE PUSH1 0x14 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F9 DUP3 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x221B DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061727469616C2077616765207472616E73666572206661696C656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2256 PUSH1 0x1C DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2261 DUP3 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2283 DUP2 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22BE PUSH1 0x10 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C9 DUP3 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2326 PUSH1 0x1F DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2331 DUP3 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2353 DUP2 PUSH2 0x231A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x236D PUSH0 DUP4 ADD DUP7 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x237A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x2387 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C60 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C3 PUSH1 0x14 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x23CE DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F0 DUP2 PUSH2 0x23B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xC9 0xF8 0xEE DUP13 PUSH10 0x7360AB460DE192A3A85E 0xE1 0xBA DUP7 SHL 0xA6 INVALID PUSH16 0xAAFD0645F006A8922A64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "416:10027:8:-:0;;;1709:582;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1890:10;1868:4;1874:6;1675:5:4;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;1946:1:8::2;1917:31;;:17;:31;;::::0;1913:64:::2;;1957:20;;;;;;;;;;;;;;1913:64;2023:1;1992:33;;:19;:33;;::::0;1988:70:::2;;2034:24;;;;;;;;;;;;;;1988:70;2098:17;2079:16;;:36;;;;;;;;;;;;;;;;;;2147:19;2126:18;;:40;;;;;;;;;;;;;;;;;;2197:3;2177:17;:23;;;;2238:45;2244:10;2272;:8;;;:10;;:::i;:::-;2268:2;:14;;;;:::i;:::-;2256:9;:26;;;;:::i;:::-;2238:5;;;:45;;:::i;:::-;1709:582:::0;;;;416:10027;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1166::-;3198:6;3206;3214;3222;3271:3;3259:9;3250:7;3246:23;3242:33;3239:120;;;3278:79;;:::i;:::-;3239:120;3419:1;3408:9;3404:17;3398:24;3449:18;3441:6;3438:30;3435:117;;;3471:79;;:::i;:::-;3435:117;3576:74;3642:7;3633:6;3622:9;3618:22;3576:74;:::i;:::-;3566:84;;3369:291;3720:2;3709:9;3705:18;3699:25;3751:18;3743:6;3740:30;3737:117;;;3773:79;;:::i;:::-;3737:117;3878:74;3944:7;3935:6;3924:9;3920:22;3878:74;:::i;:::-;3868:84;;3670:292;4001:2;4027:64;4083:7;4074:6;4063:9;4059:22;4027:64;:::i;:::-;4017:74;;3972:129;4140:2;4166:64;4222:7;4213:6;4202:9;4198:22;4166:64;:::i;:::-;4156:74;;4111:129;3081:1166;;;;;;;:::o;4253:99::-;4305:6;4339:5;4333:12;4323:22;;4253:99;;;:::o;4358:180::-;4406:77;4403:1;4396:88;4503:4;4500:1;4493:15;4527:4;4524:1;4517:15;4544:320;4588:6;4625:1;4619:4;4615:12;4605:22;;4672:1;4666:4;4662:12;4693:18;4683:81;;4749:4;4741:6;4737:17;4727:27;;4683:81;4811:2;4803:6;4800:14;4780:18;4777:38;4774:84;;4830:18;;:::i;:::-;4774:84;4595:269;4544:320;;;:::o;4870:141::-;4919:4;4942:3;4934:11;;4965:3;4962:1;4955:14;4999:4;4996:1;4986:18;4978:26;;4870:141;;;:::o;5017:93::-;5054:6;5101:2;5096;5089:5;5085:14;5081:23;5071:33;;5017:93;;;:::o;5116:107::-;5160:8;5210:5;5204:4;5200:16;5179:37;;5116:107;;;;:::o;5229:393::-;5298:6;5348:1;5336:10;5332:18;5371:97;5401:66;5390:9;5371:97;:::i;:::-;5489:39;5519:8;5508:9;5489:39;:::i;:::-;5477:51;;5561:4;5557:9;5550:5;5546:21;5537:30;;5610:4;5600:8;5596:19;5589:5;5586:30;5576:40;;5305:317;;5229:393;;;;;:::o;5628:77::-;5665:7;5694:5;5683:16;;5628:77;;;:::o;5711:60::-;5739:3;5760:5;5753:12;;5711:60;;;:::o;5777:142::-;5827:9;5860:53;5878:34;5887:24;5905:5;5887:24;:::i;:::-;5878:34;:::i;:::-;5860:53;:::i;:::-;5847:66;;5777:142;;;:::o;5925:75::-;5968:3;5989:5;5982:12;;5925:75;;;:::o;6006:269::-;6116:39;6147:7;6116:39;:::i;:::-;6177:91;6226:41;6250:16;6226:41;:::i;:::-;6218:6;6211:4;6205:11;6177:91;:::i;:::-;6171:4;6164:105;6082:193;6006:269;;;:::o;6281:73::-;6326:3;6281:73;:::o;6360:189::-;6437:32;;:::i;:::-;6478:65;6536:6;6528;6522:4;6478:65;:::i;:::-;6413:136;6360:189;;:::o;6555:186::-;6615:120;6632:3;6625:5;6622:14;6615:120;;;6686:39;6723:1;6716:5;6686:39;:::i;:::-;6659:1;6652:5;6648:13;6639:22;;6615:120;;;6555:186;;:::o;6747:543::-;6848:2;6843:3;6840:11;6837:446;;;6882:38;6914:5;6882:38;:::i;:::-;6966:29;6984:10;6966:29;:::i;:::-;6956:8;6952:44;7149:2;7137:10;7134:18;7131:49;;;7170:8;7155:23;;7131:49;7193:80;7249:22;7267:3;7249:22;:::i;:::-;7239:8;7235:37;7222:11;7193:80;:::i;:::-;6852:431;;6837:446;6747:543;;;:::o;7296:117::-;7350:8;7400:5;7394:4;7390:16;7369:37;;7296:117;;;;:::o;7419:169::-;7463:6;7496:51;7544:1;7540:6;7532:5;7529:1;7525:13;7496:51;:::i;:::-;7492:56;7577:4;7571;7567:15;7557:25;;7470:118;7419:169;;;;:::o;7593:295::-;7669:4;7815:29;7840:3;7834:4;7815:29;:::i;:::-;7807:37;;7877:3;7874:1;7870:11;7864:4;7861:21;7853:29;;7593:295;;;;:::o;7893:1395::-;8010:37;8043:3;8010:37;:::i;:::-;8112:18;8104:6;8101:30;8098:56;;;8134:18;;:::i;:::-;8098:56;8178:38;8210:4;8204:11;8178:38;:::i;:::-;8263:67;8323:6;8315;8309:4;8263:67;:::i;:::-;8357:1;8381:4;8368:17;;8413:2;8405:6;8402:14;8430:1;8425:618;;;;9087:1;9104:6;9101:77;;;9153:9;9148:3;9144:19;9138:26;9129:35;;9101:77;9204:67;9264:6;9257:5;9204:67;:::i;:::-;9198:4;9191:81;9060:222;8395:887;;8425:618;8477:4;8473:9;8465:6;8461:22;8511:37;8543:4;8511:37;:::i;:::-;8570:1;8584:208;8598:7;8595:1;8592:14;8584:208;;;8677:9;8672:3;8668:19;8662:26;8654:6;8647:42;8728:1;8720:6;8716:14;8706:24;;8775:2;8764:9;8760:18;8747:31;;8621:4;8618:1;8614:12;8609:17;;8584:208;;;8820:6;8811:7;8808:19;8805:179;;;8878:9;8873:3;8869:19;8863:26;8921:48;8963:4;8955:6;8951:17;8940:9;8921:48;:::i;:::-;8913:6;8906:64;8828:156;8805:179;9030:1;9026;9018:6;9014:14;9010:22;9004:4;8997:36;8432:611;;;8395:887;;7985:1303;;;7893:1395;;:::o;9294:118::-;9381:24;9399:5;9381:24;:::i;:::-;9376:3;9369:37;9294:118;;:::o;9418:222::-;9511:4;9549:2;9538:9;9534:18;9526:26;;9562:71;9630:1;9619:9;9615:17;9606:6;9562:71;:::i;:::-;9418:222;;;;:::o;9646:180::-;9694:77;9691:1;9684:88;9791:4;9788:1;9781:15;9815:4;9812:1;9805:15;9832:102;9874:8;9921:5;9918:1;9914:13;9893:34;;9832:102;;;:::o;9940:848::-;10001:5;10008:4;10032:6;10023:15;;10056:5;10047:14;;10070:712;10091:1;10081:8;10078:15;10070:712;;;10186:4;10181:3;10177:14;10171:4;10168:24;10165:50;;;10195:18;;:::i;:::-;10165:50;10245:1;10235:8;10231:16;10228:451;;;10660:4;10653:5;10649:16;10640:25;;10228:451;10710:4;10704;10700:15;10692:23;;10740:32;10763:8;10740:32;:::i;:::-;10728:44;;10070:712;;;9940:848;;;;;;;:::o;10794:1073::-;10848:5;11039:8;11029:40;;11060:1;11051:10;;11062:5;;11029:40;11088:4;11078:36;;11105:1;11096:10;;11107:5;;11078:36;11174:4;11222:1;11217:27;;;;11258:1;11253:191;;;;11167:277;;11217:27;11235:1;11226:10;;11237:5;;;11253:191;11298:3;11288:8;11285:17;11282:43;;;11305:18;;:::i;:::-;11282:43;11354:8;11351:1;11347:16;11338:25;;11389:3;11382:5;11379:14;11376:40;;;11396:18;;:::i;:::-;11376:40;11429:5;;;11167:277;;11553:2;11543:8;11540:16;11534:3;11528:4;11525:13;11521:36;11503:2;11493:8;11490:16;11485:2;11479:4;11476:12;11472:35;11456:111;11453:246;;;11609:8;11603:4;11599:19;11590:28;;11644:3;11637:5;11634:14;11631:40;;;11651:18;;:::i;:::-;11631:40;11684:5;;11453:246;11724:42;11762:3;11752:8;11746:4;11743:1;11724:42;:::i;:::-;11709:57;;;;11798:4;11793:3;11789:14;11782:5;11779:25;11776:51;;;11807:18;;:::i;:::-;11776:51;11856:4;11849:5;11845:16;11836:25;;10794:1073;;;;;;:::o;11873:86::-;11908:7;11948:4;11941:5;11937:16;11926:27;;11873:86;;;:::o;11965:281::-;12023:5;12047:23;12065:4;12047:23;:::i;:::-;12039:31;;12091:25;12107:8;12091:25;:::i;:::-;12079:37;;12135:104;12172:66;12162:8;12156:4;12135:104;:::i;:::-;12126:113;;11965:281;;;;:::o;12252:410::-;12292:7;12315:20;12333:1;12315:20;:::i;:::-;12310:25;;12349:20;12367:1;12349:20;:::i;:::-;12344:25;;12404:1;12401;12397:9;12426:30;12444:11;12426:30;:::i;:::-;12415:41;;12605:1;12596:7;12592:15;12589:1;12586:22;12566:1;12559:9;12539:83;12516:139;;12635:18;;:::i;:::-;12516:139;12300:362;12252:410;;;;:::o;12668:191::-;12708:3;12727:20;12745:1;12727:20;:::i;:::-;12722:25;;12761:20;12779:1;12761:20;:::i;:::-;12756:25;;12804:1;12801;12797:9;12790:16;;12825:3;12822:1;12819:10;12816:36;;;12832:18;;:::i;:::-;12816:36;12668:191;;;;:::o;12865:118::-;12952:24;12970:5;12952:24;:::i;:::-;12947:3;12940:37;12865:118;;:::o;12989:442::-;13138:4;13176:2;13165:9;13161:18;13153:26;;13189:71;13257:1;13246:9;13242:17;13233:6;13189:71;:::i;:::-;13270:72;13338:2;13327:9;13323:18;13314:6;13270:72;:::i;:::-;13352;13420:2;13409:9;13405:18;13396:6;13352:72;:::i;:::-;12989:442;;;;;;:::o;13437:222::-;13530:4;13568:2;13557:9;13553:18;13545:26;;13581:71;13649:1;13638:9;13634:17;13625:6;13581:71;:::i;:::-;13437:222;;;;:::o;416:10027:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_863": {
									"entryPoint": 4572,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 5371,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4710,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isSignOwner_1612": {
									"entryPoint": 5360,
									"id": 1612,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1088": {
									"entryPoint": 4565,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": 5021,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 4942,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_375": {
									"entryPoint": 5228,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 4590,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 6220,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_971": {
									"entryPoint": 5834,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5031,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 5980,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 4845,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 6293,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_599": {
									"entryPoint": 3273,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 1397,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": 2073,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@chargeSignBalance_1313": {
									"entryPoint": 1777,
									"id": 1313,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@commissionPercent_1125": {
									"entryPoint": 2392,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@commissionTreasury_1127": {
									"entryPoint": 3403,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 1730,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getApprovalInfo_1744": {
									"entryPoint": 1440,
									"id": 1744,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@name_518": {
									"entryPoint": 1253,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2416,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1621": {
									"entryPoint": 2398,
									"id": 1621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 1756,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payWage_1572": {
									"entryPoint": 3440,
									"id": 1572,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2142,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signBalances_1134": {
									"entryPoint": 3252,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signsNFTContract_1123": {
									"entryPoint": 2734,
									"id": 1123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_527": {
									"entryPoint": 2457,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_545": {
									"entryPoint": 1431,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1722": {
									"entryPoint": 1470,
									"id": 1722,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_655": {
									"entryPoint": 4664,
									"id": 655,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4433,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1700": {
									"entryPoint": 2771,
									"id": 1700,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_582": {
									"entryPoint": 5326,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1630": {
									"entryPoint": 1738,
									"id": 1630,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCommissionTreasury_1681": {
									"entryPoint": 2161,
									"id": 1681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCommission_1654": {
									"entryPoint": 2601,
									"id": 1654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSignsNFTContract_1599": {
									"entryPoint": 1499,
									"id": 1599,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawSignBalance_1379": {
									"entryPoint": 2798,
									"id": 1379,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 7725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 7820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_WagePaymentResult_$1387_memory_ptr_to_t_struct$_WagePaymentResult_$1387_memory_ptr_fromStack": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_WagePaymentResult_$1387_memory_ptr__to_t_struct$_WagePaymentResult_$1387_memory_ptr__fromStack_reversed": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19220:9",
										"nodeType": "YulBlock",
										"src": "0:19220:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3757:263:9",
													"nodeType": "YulBlock",
													"src": "3757:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:9",
																"nodeType": "YulBlock",
																"src": "3803:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:9"
																			},
																			"nativeSrc": "3805:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:9"
																		},
																		"nativeSrc": "3805:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:9"
																		},
																		"nativeSrc": "3774:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:9"
																},
																"nativeSrc": "3770:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:9"
															},
															"nativeSrc": "3767:119:9",
															"nodeType": "YulIf",
															"src": "3767:119:9"
														},
														{
															"nativeSrc": "3896:117:9",
															"nodeType": "YulBlock",
															"src": "3896:117:9",
															"statements": [
																{
																	"nativeSrc": "3911:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:9"
																				},
																				"nativeSrc": "3971:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3950:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:9"
																		},
																		"nativeSrc": "3950:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3691:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:9",
														"nodeType": "YulTypedName",
														"src": "3727:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:9",
														"nodeType": "YulTypedName",
														"src": "3738:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:9",
														"nodeType": "YulTypedName",
														"src": "3750:6:9",
														"type": ""
													}
												],
												"src": "3691:329:9"
											},
											{
												"body": {
													"nativeSrc": "4152:206:9",
													"nodeType": "YulBlock",
													"src": "4152:206:9",
													"statements": [
														{
															"nativeSrc": "4162:26:9",
															"nodeType": "YulAssignment",
															"src": "4162:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4174:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4174:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4170:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4170:3:9"
																},
																"nativeSrc": "4170:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4170:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4162:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4162:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4242:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4255:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4266:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4266:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4251:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:9"
																		},
																		"nativeSrc": "4251:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4251:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4198:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4198:43:9"
																},
																"nativeSrc": "4198:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4198:71:9"
															},
															"nativeSrc": "4198:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4198:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4323:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4323:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4336:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4347:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:9"
																		},
																		"nativeSrc": "4332:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4279:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4279:43:9"
																},
																"nativeSrc": "4279:72:9",
																"nodeType": "YulFunctionCall",
																"src": "4279:72:9"
															},
															"nativeSrc": "4279:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "4279:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4026:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4116:9:9",
														"nodeType": "YulTypedName",
														"src": "4116:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:9",
														"nodeType": "YulTypedName",
														"src": "4128:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4136:6:9",
														"nodeType": "YulTypedName",
														"src": "4136:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4147:4:9",
														"nodeType": "YulTypedName",
														"src": "4147:4:9",
														"type": ""
													}
												],
												"src": "4026:332:9"
											},
											{
												"body": {
													"nativeSrc": "4464:519:9",
													"nodeType": "YulBlock",
													"src": "4464:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4510:83:9",
																"nodeType": "YulBlock",
																"src": "4510:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4512:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4512:77:9"
																			},
																			"nativeSrc": "4512:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4512:79:9"
																		},
																		"nativeSrc": "4512:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4512:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4485:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4485:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4494:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4494:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4481:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4481:3:9"
																		},
																		"nativeSrc": "4481:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4481:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4506:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4477:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:9"
																},
																"nativeSrc": "4477:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4477:32:9"
															},
															"nativeSrc": "4474:119:9",
															"nodeType": "YulIf",
															"src": "4474:119:9"
														},
														{
															"nativeSrc": "4603:117:9",
															"nodeType": "YulBlock",
															"src": "4603:117:9",
															"statements": [
																{
																	"nativeSrc": "4618:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4618:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4632:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4632:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4622:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4622:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4647:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4647:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4682:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4682:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4693:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4693:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4678:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4678:3:9"
																				},
																				"nativeSrc": "4678:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4678:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4702:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4702:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4657:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4657:20:9"
																		},
																		"nativeSrc": "4657:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4657:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4647:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4647:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4730:118:9",
															"nodeType": "YulBlock",
															"src": "4730:118:9",
															"statements": [
																{
																	"nativeSrc": "4745:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4745:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4759:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4749:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4749:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4775:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4775:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4810:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4810:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4821:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4821:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4806:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4806:3:9"
																				},
																				"nativeSrc": "4806:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4806:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4830:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4830:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4785:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4785:20:9"
																		},
																		"nativeSrc": "4785:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4785:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4775:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4775:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4858:118:9",
															"nodeType": "YulBlock",
															"src": "4858:118:9",
															"statements": [
																{
																	"nativeSrc": "4873:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4873:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4887:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4887:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4877:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4877:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4903:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4903:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4938:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4938:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4949:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4949:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4934:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4934:3:9"
																				},
																				"nativeSrc": "4934:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4934:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4958:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4958:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4913:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4913:20:9"
																		},
																		"nativeSrc": "4913:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4903:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4903:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4364:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4418:9:9",
														"nodeType": "YulTypedName",
														"src": "4418:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4429:7:9",
														"nodeType": "YulTypedName",
														"src": "4429:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4441:6:9",
														"nodeType": "YulTypedName",
														"src": "4441:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4449:6:9",
														"nodeType": "YulTypedName",
														"src": "4449:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4457:6:9",
														"nodeType": "YulTypedName",
														"src": "4457:6:9",
														"type": ""
													}
												],
												"src": "4364:619:9"
											},
											{
												"body": {
													"nativeSrc": "5032:43:9",
													"nodeType": "YulBlock",
													"src": "5032:43:9",
													"statements": [
														{
															"nativeSrc": "5042:27:9",
															"nodeType": "YulAssignment",
															"src": "5042:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5057:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5057:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5064:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5064:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5053:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5053:3:9"
																},
																"nativeSrc": "5053:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5053:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5042:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5042:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4989:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5014:5:9",
														"nodeType": "YulTypedName",
														"src": "5014:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5024:7:9",
														"nodeType": "YulTypedName",
														"src": "5024:7:9",
														"type": ""
													}
												],
												"src": "4989:86:9"
											},
											{
												"body": {
													"nativeSrc": "5142:51:9",
													"nodeType": "YulBlock",
													"src": "5142:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5159:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5159:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5180:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5180:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5164:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:15:9"
																		},
																		"nativeSrc": "5164:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5152:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5152:6:9"
																},
																"nativeSrc": "5152:35:9",
																"nodeType": "YulFunctionCall",
																"src": "5152:35:9"
															},
															"nativeSrc": "5152:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "5152:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5081:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5130:5:9",
														"nodeType": "YulTypedName",
														"src": "5130:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5137:3:9",
														"nodeType": "YulTypedName",
														"src": "5137:3:9",
														"type": ""
													}
												],
												"src": "5081:112:9"
											},
											{
												"body": {
													"nativeSrc": "5293:120:9",
													"nodeType": "YulBlock",
													"src": "5293:120:9",
													"statements": [
														{
															"nativeSrc": "5303:26:9",
															"nodeType": "YulAssignment",
															"src": "5303:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5315:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5326:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5311:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5311:3:9"
																},
																"nativeSrc": "5311:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5311:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5303:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5303:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5379:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5379:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5392:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5392:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5403:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5403:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5388:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5388:3:9"
																		},
																		"nativeSrc": "5388:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5339:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "5339:39:9"
																},
																"nativeSrc": "5339:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5339:67:9"
															},
															"nativeSrc": "5339:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5339:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5199:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5265:9:9",
														"nodeType": "YulTypedName",
														"src": "5265:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5277:6:9",
														"nodeType": "YulTypedName",
														"src": "5277:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5288:4:9",
														"nodeType": "YulTypedName",
														"src": "5288:4:9",
														"type": ""
													}
												],
												"src": "5199:214:9"
											},
											{
												"body": {
													"nativeSrc": "5502:391:9",
													"nodeType": "YulBlock",
													"src": "5502:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5548:83:9",
																"nodeType": "YulBlock",
																"src": "5548:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5550:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5550:77:9"
																			},
																			"nativeSrc": "5550:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5550:79:9"
																		},
																		"nativeSrc": "5550:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5550:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5523:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5523:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5532:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5532:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5519:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5519:3:9"
																		},
																		"nativeSrc": "5519:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5519:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5544:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5544:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5515:3:9"
																},
																"nativeSrc": "5515:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5515:32:9"
															},
															"nativeSrc": "5512:119:9",
															"nodeType": "YulIf",
															"src": "5512:119:9"
														},
														{
															"nativeSrc": "5641:117:9",
															"nodeType": "YulBlock",
															"src": "5641:117:9",
															"statements": [
																{
																	"nativeSrc": "5656:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5656:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5670:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5660:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5660:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5685:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5685:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5720:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5720:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5731:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5731:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5716:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5716:3:9"
																				},
																				"nativeSrc": "5716:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5716:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5740:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5740:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5695:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5695:20:9"
																		},
																		"nativeSrc": "5695:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5695:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5685:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5685:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5768:118:9",
															"nodeType": "YulBlock",
															"src": "5768:118:9",
															"statements": [
																{
																	"nativeSrc": "5783:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5783:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5797:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5797:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5787:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5787:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5813:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5813:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5848:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5848:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5859:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5859:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5844:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5844:3:9"
																				},
																				"nativeSrc": "5844:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5844:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5868:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5868:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5823:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5823:20:9"
																		},
																		"nativeSrc": "5823:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5813:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5813:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5419:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5464:9:9",
														"nodeType": "YulTypedName",
														"src": "5464:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5475:7:9",
														"nodeType": "YulTypedName",
														"src": "5475:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5487:6:9",
														"nodeType": "YulTypedName",
														"src": "5487:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5495:6:9",
														"nodeType": "YulTypedName",
														"src": "5495:6:9",
														"type": ""
													}
												],
												"src": "5419:474:9"
											},
											{
												"body": {
													"nativeSrc": "5964:53:9",
													"nodeType": "YulBlock",
													"src": "5964:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5981:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6004:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5986:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:9"
																		},
																		"nativeSrc": "5986:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5974:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:9"
																},
																"nativeSrc": "5974:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5974:37:9"
															},
															"nativeSrc": "5974:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5899:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:9",
														"nodeType": "YulTypedName",
														"src": "5952:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5959:3:9",
														"nodeType": "YulTypedName",
														"src": "5959:3:9",
														"type": ""
													}
												],
												"src": "5899:118:9"
											},
											{
												"body": {
													"nativeSrc": "6121:124:9",
													"nodeType": "YulBlock",
													"src": "6121:124:9",
													"statements": [
														{
															"nativeSrc": "6131:26:9",
															"nodeType": "YulAssignment",
															"src": "6131:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6143:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6143:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6154:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6154:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6139:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:9"
																},
																"nativeSrc": "6139:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6139:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6131:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6131:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6211:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6211:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6224:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6224:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6235:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6235:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:9"
																		},
																		"nativeSrc": "6220:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6220:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6167:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6167:43:9"
																},
																"nativeSrc": "6167:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6167:71:9"
															},
															"nativeSrc": "6167:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6167:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6023:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6093:9:9",
														"nodeType": "YulTypedName",
														"src": "6093:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6105:6:9",
														"nodeType": "YulTypedName",
														"src": "6105:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6116:4:9",
														"nodeType": "YulTypedName",
														"src": "6116:4:9",
														"type": ""
													}
												],
												"src": "6023:222:9"
											},
											{
												"body": {
													"nativeSrc": "6317:263:9",
													"nodeType": "YulBlock",
													"src": "6317:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6363:83:9",
																"nodeType": "YulBlock",
																"src": "6363:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6365:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6365:77:9"
																			},
																			"nativeSrc": "6365:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6365:79:9"
																		},
																		"nativeSrc": "6365:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6365:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6338:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6338:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6347:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6347:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6334:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:9"
																		},
																		"nativeSrc": "6334:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6334:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6359:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6359:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6330:3:9"
																},
																"nativeSrc": "6330:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6330:32:9"
															},
															"nativeSrc": "6327:119:9",
															"nodeType": "YulIf",
															"src": "6327:119:9"
														},
														{
															"nativeSrc": "6456:117:9",
															"nodeType": "YulBlock",
															"src": "6456:117:9",
															"statements": [
																{
																	"nativeSrc": "6471:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6471:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6485:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6485:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6475:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6475:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6500:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6500:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6535:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6535:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6546:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6546:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6531:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6531:3:9"
																				},
																				"nativeSrc": "6531:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6531:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6510:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6510:20:9"
																		},
																		"nativeSrc": "6510:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6500:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6500:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6251:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6287:9:9",
														"nodeType": "YulTypedName",
														"src": "6287:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6298:7:9",
														"nodeType": "YulTypedName",
														"src": "6298:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6310:6:9",
														"nodeType": "YulTypedName",
														"src": "6310:6:9",
														"type": ""
													}
												],
												"src": "6251:329:9"
											},
											{
												"body": {
													"nativeSrc": "6669:391:9",
													"nodeType": "YulBlock",
													"src": "6669:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6715:83:9",
																"nodeType": "YulBlock",
																"src": "6715:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6717:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6717:77:9"
																			},
																			"nativeSrc": "6717:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6717:79:9"
																		},
																		"nativeSrc": "6717:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6717:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6690:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6690:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6699:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6686:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:9"
																		},
																		"nativeSrc": "6686:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6686:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6711:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6711:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6682:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6682:3:9"
																},
																"nativeSrc": "6682:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6682:32:9"
															},
															"nativeSrc": "6679:119:9",
															"nodeType": "YulIf",
															"src": "6679:119:9"
														},
														{
															"nativeSrc": "6808:117:9",
															"nodeType": "YulBlock",
															"src": "6808:117:9",
															"statements": [
																{
																	"nativeSrc": "6823:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6823:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6837:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6837:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6827:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6827:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6852:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6852:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6887:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6887:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6898:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6898:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6883:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6883:3:9"
																				},
																				"nativeSrc": "6883:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6883:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6907:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6907:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6862:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6862:20:9"
																		},
																		"nativeSrc": "6862:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6862:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6852:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6852:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6935:118:9",
															"nodeType": "YulBlock",
															"src": "6935:118:9",
															"statements": [
																{
																	"nativeSrc": "6950:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6950:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6964:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6964:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6954:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6954:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6980:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6980:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7015:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7015:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7026:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7026:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7011:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7011:3:9"
																				},
																				"nativeSrc": "7011:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7011:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7035:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7035:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6990:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6990:20:9"
																		},
																		"nativeSrc": "6990:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6990:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6980:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6980:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6586:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6631:9:9",
														"nodeType": "YulTypedName",
														"src": "6631:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6642:7:9",
														"nodeType": "YulTypedName",
														"src": "6642:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6654:6:9",
														"nodeType": "YulTypedName",
														"src": "6654:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:9",
														"nodeType": "YulTypedName",
														"src": "6662:6:9",
														"type": ""
													}
												],
												"src": "6586:474:9"
											},
											{
												"body": {
													"nativeSrc": "7166:519:9",
													"nodeType": "YulBlock",
													"src": "7166:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7212:83:9",
																"nodeType": "YulBlock",
																"src": "7212:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7214:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7214:77:9"
																			},
																			"nativeSrc": "7214:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7214:79:9"
																		},
																		"nativeSrc": "7214:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7214:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7187:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7187:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7196:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7196:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7183:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:9"
																		},
																		"nativeSrc": "7183:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7208:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7208:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7179:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7179:3:9"
																},
																"nativeSrc": "7179:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7179:32:9"
															},
															"nativeSrc": "7176:119:9",
															"nodeType": "YulIf",
															"src": "7176:119:9"
														},
														{
															"nativeSrc": "7305:117:9",
															"nodeType": "YulBlock",
															"src": "7305:117:9",
															"statements": [
																{
																	"nativeSrc": "7320:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7320:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7334:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7334:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7324:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7324:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7349:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7349:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7384:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7384:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7395:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7395:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7380:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7380:3:9"
																				},
																				"nativeSrc": "7380:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7380:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7404:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7404:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7359:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7359:20:9"
																		},
																		"nativeSrc": "7359:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7359:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7349:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7349:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7432:118:9",
															"nodeType": "YulBlock",
															"src": "7432:118:9",
															"statements": [
																{
																	"nativeSrc": "7447:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7447:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7461:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7461:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7451:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7451:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7477:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7477:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7512:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7512:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7523:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7523:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7508:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7508:3:9"
																				},
																				"nativeSrc": "7508:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7508:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7532:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7532:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7487:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7487:20:9"
																		},
																		"nativeSrc": "7487:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7477:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7477:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7560:118:9",
															"nodeType": "YulBlock",
															"src": "7560:118:9",
															"statements": [
																{
																	"nativeSrc": "7575:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7575:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7589:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7579:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7579:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7605:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7605:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7640:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7651:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7636:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:9"
																				},
																				"nativeSrc": "7636:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7660:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7615:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:9"
																		},
																		"nativeSrc": "7615:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7605:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "7066:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7120:9:9",
														"nodeType": "YulTypedName",
														"src": "7120:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7131:7:9",
														"nodeType": "YulTypedName",
														"src": "7131:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7143:6:9",
														"nodeType": "YulTypedName",
														"src": "7143:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7151:6:9",
														"nodeType": "YulTypedName",
														"src": "7151:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7159:6:9",
														"nodeType": "YulTypedName",
														"src": "7159:6:9",
														"type": ""
													}
												],
												"src": "7066:619:9"
											},
											{
												"body": {
													"nativeSrc": "7746:53:9",
													"nodeType": "YulBlock",
													"src": "7746:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7763:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7786:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7786:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7768:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7768:17:9"
																		},
																		"nativeSrc": "7768:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7768:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7756:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7756:6:9"
																},
																"nativeSrc": "7756:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7756:37:9"
															},
															"nativeSrc": "7756:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7756:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7691:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7734:5:9",
														"nodeType": "YulTypedName",
														"src": "7734:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7741:3:9",
														"nodeType": "YulTypedName",
														"src": "7741:3:9",
														"type": ""
													}
												],
												"src": "7691:108:9"
											},
											{
												"body": {
													"nativeSrc": "7854:50:9",
													"nodeType": "YulBlock",
													"src": "7854:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7871:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7871:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7891:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7891:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "7876:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "7876:14:9"
																		},
																		"nativeSrc": "7876:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7876:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7864:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:9"
																},
																"nativeSrc": "7864:34:9",
																"nodeType": "YulFunctionCall",
																"src": "7864:34:9"
															},
															"nativeSrc": "7864:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "7864:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "7805:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7842:5:9",
														"nodeType": "YulTypedName",
														"src": "7842:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7849:3:9",
														"nodeType": "YulTypedName",
														"src": "7849:3:9",
														"type": ""
													}
												],
												"src": "7805:99:9"
											},
											{
												"body": {
													"nativeSrc": "8126:586:9",
													"nodeType": "YulBlock",
													"src": "8126:586:9",
													"statements": [
														{
															"nativeSrc": "8136:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8136:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8152:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8152:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8157:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8157:4:9",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8148:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:9"
																},
																"nativeSrc": "8148:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8148:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "8140:4:9",
																	"nodeType": "YulTypedName",
																	"src": "8140:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8172:170:9",
															"nodeType": "YulBlock",
															"src": "8172:170:9",
															"statements": [
																{
																	"nativeSrc": "8213:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8213:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8243:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8243:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8250:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8250:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8239:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8239:3:9"
																				},
																				"nativeSrc": "8239:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8239:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8233:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8233:5:9"
																		},
																		"nativeSrc": "8233:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8233:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8217:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8217:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8303:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8303:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8321:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8321:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8326:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8326:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8317:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8317:3:9"
																				},
																				"nativeSrc": "8317:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8317:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8269:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8269:33:9"
																		},
																		"nativeSrc": "8269:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:63:9"
																	},
																	"nativeSrc": "8269:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8269:63:9"
																}
															]
														},
														{
															"nativeSrc": "8352:173:9",
															"nodeType": "YulBlock",
															"src": "8352:173:9",
															"statements": [
																{
																	"nativeSrc": "8396:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8396:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8426:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8426:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8433:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8433:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8422:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8422:3:9"
																				},
																				"nativeSrc": "8422:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8422:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8416:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8416:5:9"
																		},
																		"nativeSrc": "8416:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8416:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8400:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8400:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8486:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8486:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8504:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8504:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8509:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8509:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8500:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8500:3:9"
																				},
																				"nativeSrc": "8500:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8500:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8452:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8452:33:9"
																		},
																		"nativeSrc": "8452:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8452:63:9"
																	},
																	"nativeSrc": "8452:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8452:63:9"
																}
															]
														},
														{
															"nativeSrc": "8535:170:9",
															"nodeType": "YulBlock",
															"src": "8535:170:9",
															"statements": [
																{
																	"nativeSrc": "8582:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8582:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8612:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8612:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8619:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8619:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8608:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8608:3:9"
																				},
																				"nativeSrc": "8608:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8608:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8602:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8602:5:9"
																		},
																		"nativeSrc": "8602:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8586:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8586:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8666:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8666:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8684:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8684:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8689:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8689:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8680:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8680:3:9"
																				},
																				"nativeSrc": "8680:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8680:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "8638:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "8638:27:9"
																		},
																		"nativeSrc": "8638:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:57:9"
																	},
																	"nativeSrc": "8638:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8638:57:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_WagePaymentResult_$1387_memory_ptr_to_t_struct$_WagePaymentResult_$1387_memory_ptr_fromStack",
												"nativeSrc": "7990:722:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8113:5:9",
														"nodeType": "YulTypedName",
														"src": "8113:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8120:3:9",
														"nodeType": "YulTypedName",
														"src": "8120:3:9",
														"type": ""
													}
												],
												"src": "7990:722:9"
											},
											{
												"body": {
													"nativeSrc": "8886:194:9",
													"nodeType": "YulBlock",
													"src": "8886:194:9",
													"statements": [
														{
															"nativeSrc": "8896:26:9",
															"nodeType": "YulAssignment",
															"src": "8896:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8908:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8908:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8919:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8919:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8904:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8904:3:9"
																},
																"nativeSrc": "8904:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8904:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8896:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8896:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9046:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9046:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9059:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9059:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9070:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9070:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9055:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9055:3:9"
																		},
																		"nativeSrc": "9055:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9055:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_WagePaymentResult_$1387_memory_ptr_to_t_struct$_WagePaymentResult_$1387_memory_ptr_fromStack",
																	"nativeSrc": "8932:113:9",
																	"nodeType": "YulIdentifier",
																	"src": "8932:113:9"
																},
																"nativeSrc": "8932:141:9",
																"nodeType": "YulFunctionCall",
																"src": "8932:141:9"
															},
															"nativeSrc": "8932:141:9",
															"nodeType": "YulExpressionStatement",
															"src": "8932:141:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_WagePaymentResult_$1387_memory_ptr__to_t_struct$_WagePaymentResult_$1387_memory_ptr__fromStack_reversed",
												"nativeSrc": "8718:362:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8858:9:9",
														"nodeType": "YulTypedName",
														"src": "8858:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8870:6:9",
														"nodeType": "YulTypedName",
														"src": "8870:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8881:4:9",
														"nodeType": "YulTypedName",
														"src": "8881:4:9",
														"type": ""
													}
												],
												"src": "8718:362:9"
											},
											{
												"body": {
													"nativeSrc": "9114:152:9",
													"nodeType": "YulBlock",
													"src": "9114:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9131:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9131:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9134:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9134:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9124:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:9"
																},
																"nativeSrc": "9124:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9124:88:9"
															},
															"nativeSrc": "9124:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9124:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9228:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9228:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9231:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9231:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9221:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:9"
																},
																"nativeSrc": "9221:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9221:15:9"
															},
															"nativeSrc": "9221:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9221:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9252:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9252:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9255:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9255:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9245:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9245:6:9"
																},
																"nativeSrc": "9245:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9245:15:9"
															},
															"nativeSrc": "9245:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9245:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9086:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9086:180:9"
											},
											{
												"body": {
													"nativeSrc": "9323:269:9",
													"nodeType": "YulBlock",
													"src": "9323:269:9",
													"statements": [
														{
															"nativeSrc": "9333:22:9",
															"nodeType": "YulAssignment",
															"src": "9333:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9347:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9347:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9353:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9353:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9343:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9343:3:9"
																},
																"nativeSrc": "9343:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9343:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9333:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9333:6:9"
																}
															]
														},
														{
															"nativeSrc": "9364:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9364:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9394:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9394:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9400:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9400:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9390:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9390:3:9"
																},
																"nativeSrc": "9390:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9390:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9368:18:9",
																	"nodeType": "YulTypedName",
																	"src": "9368:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9441:51:9",
																"nodeType": "YulBlock",
																"src": "9441:51:9",
																"statements": [
																	{
																		"nativeSrc": "9455:27:9",
																		"nodeType": "YulAssignment",
																		"src": "9455:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9469:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9469:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9477:4:9",
																					"nodeType": "YulLiteral",
																					"src": "9477:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9465:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9465:3:9"
																			},
																			"nativeSrc": "9465:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9465:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9455:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9455:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9421:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9421:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9414:6:9"
																},
																"nativeSrc": "9414:26:9",
																"nodeType": "YulFunctionCall",
																"src": "9414:26:9"
															},
															"nativeSrc": "9411:81:9",
															"nodeType": "YulIf",
															"src": "9411:81:9"
														},
														{
															"body": {
																"nativeSrc": "9544:42:9",
																"nodeType": "YulBlock",
																"src": "9544:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9558:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9558:16:9"
																			},
																			"nativeSrc": "9558:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9558:18:9"
																		},
																		"nativeSrc": "9558:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9558:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9508:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9508:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9539:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9539:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9528:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9528:2:9"
																		},
																		"nativeSrc": "9528:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9528:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9505:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9505:2:9"
																},
																"nativeSrc": "9505:38:9",
																"nodeType": "YulFunctionCall",
																"src": "9505:38:9"
															},
															"nativeSrc": "9502:84:9",
															"nodeType": "YulIf",
															"src": "9502:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9272:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9307:4:9",
														"nodeType": "YulTypedName",
														"src": "9307:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9316:6:9",
														"nodeType": "YulTypedName",
														"src": "9316:6:9",
														"type": ""
													}
												],
												"src": "9272:320:9"
											},
											{
												"body": {
													"nativeSrc": "9704:65:9",
													"nodeType": "YulBlock",
													"src": "9704:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9726:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9726:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9734:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9734:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9722:3:9"
																		},
																		"nativeSrc": "9722:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9722:14:9"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9738:23:9",
																		"nodeType": "YulLiteral",
																		"src": "9738:23:9",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9715:6:9"
																},
																"nativeSrc": "9715:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9715:47:9"
															},
															"nativeSrc": "9715:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9715:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "9598:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9696:6:9",
														"nodeType": "YulTypedName",
														"src": "9696:6:9",
														"type": ""
													}
												],
												"src": "9598:171:9"
											},
											{
												"body": {
													"nativeSrc": "9921:220:9",
													"nodeType": "YulBlock",
													"src": "9921:220:9",
													"statements": [
														{
															"nativeSrc": "9931:74:9",
															"nodeType": "YulAssignment",
															"src": "9931:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9997:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9997:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10002:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10002:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9938:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9938:58:9"
																},
																"nativeSrc": "9938:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9938:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9931:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9931:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10103:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10103:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "10014:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10014:88:9"
																},
																"nativeSrc": "10014:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10014:93:9"
															},
															"nativeSrc": "10014:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10014:93:9"
														},
														{
															"nativeSrc": "10116:19:9",
															"nodeType": "YulAssignment",
															"src": "10116:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10127:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10127:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10132:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10123:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10123:3:9"
																},
																"nativeSrc": "10123:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10123:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10116:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10116:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9775:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9909:3:9",
														"nodeType": "YulTypedName",
														"src": "9909:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9917:3:9",
														"nodeType": "YulTypedName",
														"src": "9917:3:9",
														"type": ""
													}
												],
												"src": "9775:366:9"
											},
											{
												"body": {
													"nativeSrc": "10318:248:9",
													"nodeType": "YulBlock",
													"src": "10318:248:9",
													"statements": [
														{
															"nativeSrc": "10328:26:9",
															"nodeType": "YulAssignment",
															"src": "10328:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10340:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10340:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10351:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10351:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10336:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:9"
																},
																"nativeSrc": "10336:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10336:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10328:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10328:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10375:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10375:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10386:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10386:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10371:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10371:3:9"
																		},
																		"nativeSrc": "10371:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10371:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10394:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10394:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10400:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10400:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10390:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10390:3:9"
																		},
																		"nativeSrc": "10390:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10390:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10364:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10364:6:9"
																},
																"nativeSrc": "10364:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10364:47:9"
															},
															"nativeSrc": "10364:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10364:47:9"
														},
														{
															"nativeSrc": "10420:139:9",
															"nodeType": "YulAssignment",
															"src": "10420:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10554:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10554:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10428:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10428:124:9"
																},
																"nativeSrc": "10428:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10428:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10420:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10420:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10147:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10298:9:9",
														"nodeType": "YulTypedName",
														"src": "10298:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10313:4:9",
														"nodeType": "YulTypedName",
														"src": "10313:4:9",
														"type": ""
													}
												],
												"src": "10147:419:9"
											},
											{
												"body": {
													"nativeSrc": "10600:152:9",
													"nodeType": "YulBlock",
													"src": "10600:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10617:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10617:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10620:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10620:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10610:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:9"
																},
																"nativeSrc": "10610:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10610:88:9"
															},
															"nativeSrc": "10610:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10610:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10714:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10714:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10717:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10717:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10707:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:9"
																},
																"nativeSrc": "10707:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10707:15:9"
															},
															"nativeSrc": "10707:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10707:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10738:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10741:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10741:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10731:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10731:6:9"
																},
																"nativeSrc": "10731:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10731:15:9"
															},
															"nativeSrc": "10731:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10731:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10572:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10572:180:9"
											},
											{
												"body": {
													"nativeSrc": "10802:147:9",
													"nodeType": "YulBlock",
													"src": "10802:147:9",
													"statements": [
														{
															"nativeSrc": "10812:25:9",
															"nodeType": "YulAssignment",
															"src": "10812:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10835:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10835:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10817:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10817:17:9"
																},
																"nativeSrc": "10817:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10817:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10812:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10812:1:9"
																}
															]
														},
														{
															"nativeSrc": "10846:25:9",
															"nodeType": "YulAssignment",
															"src": "10846:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10869:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10869:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10851:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10851:17:9"
																},
																"nativeSrc": "10851:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10851:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10846:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10846:1:9"
																}
															]
														},
														{
															"nativeSrc": "10880:16:9",
															"nodeType": "YulAssignment",
															"src": "10880:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10891:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10891:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10894:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10894:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10887:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10887:3:9"
																},
																"nativeSrc": "10887:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10887:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10880:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10880:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10920:22:9",
																"nodeType": "YulBlock",
																"src": "10920:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10922:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10922:16:9"
																			},
																			"nativeSrc": "10922:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10922:18:9"
																		},
																		"nativeSrc": "10922:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10922:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10912:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10912:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10915:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10915:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10909:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10909:2:9"
																},
																"nativeSrc": "10909:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10909:10:9"
															},
															"nativeSrc": "10906:36:9",
															"nodeType": "YulIf",
															"src": "10906:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10758:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10789:1:9",
														"nodeType": "YulTypedName",
														"src": "10789:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10792:1:9",
														"nodeType": "YulTypedName",
														"src": "10792:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10798:3:9",
														"nodeType": "YulTypedName",
														"src": "10798:3:9",
														"type": ""
													}
												],
												"src": "10758:191:9"
											},
											{
												"body": {
													"nativeSrc": "11000:149:9",
													"nodeType": "YulBlock",
													"src": "11000:149:9",
													"statements": [
														{
															"nativeSrc": "11010:25:9",
															"nodeType": "YulAssignment",
															"src": "11010:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11033:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11033:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11015:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11015:17:9"
																},
																"nativeSrc": "11015:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11015:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11010:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11010:1:9"
																}
															]
														},
														{
															"nativeSrc": "11044:25:9",
															"nodeType": "YulAssignment",
															"src": "11044:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11067:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11067:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11049:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11049:17:9"
																},
																"nativeSrc": "11049:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11049:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11044:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11044:1:9"
																}
															]
														},
														{
															"nativeSrc": "11078:17:9",
															"nodeType": "YulAssignment",
															"src": "11078:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11090:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11090:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11093:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11093:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11086:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11086:3:9"
																},
																"nativeSrc": "11086:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11086:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11078:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11078:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11120:22:9",
																"nodeType": "YulBlock",
																"src": "11120:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11122:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11122:16:9"
																			},
																			"nativeSrc": "11122:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11122:18:9"
																		},
																		"nativeSrc": "11122:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11122:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11111:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11111:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11117:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11117:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11108:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11108:2:9"
																},
																"nativeSrc": "11108:11:9",
																"nodeType": "YulFunctionCall",
																"src": "11108:11:9"
															},
															"nativeSrc": "11105:37:9",
															"nodeType": "YulIf",
															"src": "11105:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10955:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10986:1:9",
														"nodeType": "YulTypedName",
														"src": "10986:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10989:1:9",
														"nodeType": "YulTypedName",
														"src": "10989:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10995:4:9",
														"nodeType": "YulTypedName",
														"src": "10995:4:9",
														"type": ""
													}
												],
												"src": "10955:194:9"
											},
											{
												"body": {
													"nativeSrc": "11261:59:9",
													"nodeType": "YulBlock",
													"src": "11261:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11283:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11283:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11291:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11291:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11279:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:9"
																		},
																		"nativeSrc": "11279:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11279:14:9"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "11295:17:9",
																		"nodeType": "YulLiteral",
																		"src": "11295:17:9",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:9"
																},
																"nativeSrc": "11272:41:9",
																"nodeType": "YulFunctionCall",
																"src": "11272:41:9"
															},
															"nativeSrc": "11272:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "11272:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "11155:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11253:6:9",
														"nodeType": "YulTypedName",
														"src": "11253:6:9",
														"type": ""
													}
												],
												"src": "11155:165:9"
											},
											{
												"body": {
													"nativeSrc": "11472:220:9",
													"nodeType": "YulBlock",
													"src": "11472:220:9",
													"statements": [
														{
															"nativeSrc": "11482:74:9",
															"nodeType": "YulAssignment",
															"src": "11482:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11548:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11548:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11553:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11553:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11489:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11489:58:9"
																},
																"nativeSrc": "11489:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11489:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11482:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11482:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11654:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11654:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "11565:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11565:88:9"
																},
																"nativeSrc": "11565:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11565:93:9"
															},
															"nativeSrc": "11565:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11565:93:9"
														},
														{
															"nativeSrc": "11667:19:9",
															"nodeType": "YulAssignment",
															"src": "11667:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11678:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11678:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11683:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11683:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11674:3:9"
																},
																"nativeSrc": "11674:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11674:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11667:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11326:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11460:3:9",
														"nodeType": "YulTypedName",
														"src": "11460:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11468:3:9",
														"nodeType": "YulTypedName",
														"src": "11468:3:9",
														"type": ""
													}
												],
												"src": "11326:366:9"
											},
											{
												"body": {
													"nativeSrc": "11869:248:9",
													"nodeType": "YulBlock",
													"src": "11869:248:9",
													"statements": [
														{
															"nativeSrc": "11879:26:9",
															"nodeType": "YulAssignment",
															"src": "11879:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11891:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11891:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11902:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11887:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11887:3:9"
																},
																"nativeSrc": "11887:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11887:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11879:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11879:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11926:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11926:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11937:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11937:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11922:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11922:3:9"
																		},
																		"nativeSrc": "11922:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11922:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11945:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11945:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11941:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11941:3:9"
																		},
																		"nativeSrc": "11941:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11941:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11915:6:9"
																},
																"nativeSrc": "11915:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11915:47:9"
															},
															"nativeSrc": "11915:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11915:47:9"
														},
														{
															"nativeSrc": "11971:139:9",
															"nodeType": "YulAssignment",
															"src": "11971:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12105:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12105:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11979:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11979:124:9"
																},
																"nativeSrc": "11979:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11979:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11971:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11971:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11698:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11849:9:9",
														"nodeType": "YulTypedName",
														"src": "11849:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11864:4:9",
														"nodeType": "YulTypedName",
														"src": "11864:4:9",
														"type": ""
													}
												],
												"src": "11698:419:9"
											},
											{
												"body": {
													"nativeSrc": "12171:362:9",
													"nodeType": "YulBlock",
													"src": "12171:362:9",
													"statements": [
														{
															"nativeSrc": "12181:25:9",
															"nodeType": "YulAssignment",
															"src": "12181:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12204:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12204:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12186:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12186:17:9"
																},
																"nativeSrc": "12186:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12186:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12181:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12181:1:9"
																}
															]
														},
														{
															"nativeSrc": "12215:25:9",
															"nodeType": "YulAssignment",
															"src": "12215:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12238:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12238:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12220:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12220:17:9"
																},
																"nativeSrc": "12220:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12220:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12215:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12215:1:9"
																}
															]
														},
														{
															"nativeSrc": "12249:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12249:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12272:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12272:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12275:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12275:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12268:3:9"
																},
																"nativeSrc": "12268:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12268:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12253:11:9",
																	"nodeType": "YulTypedName",
																	"src": "12253:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12286:41:9",
															"nodeType": "YulAssignment",
															"src": "12286:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12315:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "12315:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12297:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12297:17:9"
																},
																"nativeSrc": "12297:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12297:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12286:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12286:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12504:22:9",
																"nodeType": "YulBlock",
																"src": "12504:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12506:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12506:16:9"
																			},
																			"nativeSrc": "12506:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12506:18:9"
																		},
																		"nativeSrc": "12506:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12506:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12437:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12437:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12430:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "12430:6:9"
																				},
																				"nativeSrc": "12430:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12430:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12460:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12460:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12467:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "12467:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12476:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "12476:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12463:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12463:3:9"
																						},
																						"nativeSrc": "12463:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12463:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12457:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "12457:2:9"
																				},
																				"nativeSrc": "12457:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12457:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12410:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12410:2:9"
																		},
																		"nativeSrc": "12410:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12410:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12390:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12390:6:9"
																},
																"nativeSrc": "12390:113:9",
																"nodeType": "YulFunctionCall",
																"src": "12390:113:9"
															},
															"nativeSrc": "12387:139:9",
															"nodeType": "YulIf",
															"src": "12387:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12123:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12154:1:9",
														"nodeType": "YulTypedName",
														"src": "12154:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12157:1:9",
														"nodeType": "YulTypedName",
														"src": "12157:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12163:7:9",
														"nodeType": "YulTypedName",
														"src": "12163:7:9",
														"type": ""
													}
												],
												"src": "12123:410:9"
											},
											{
												"body": {
													"nativeSrc": "12567:152:9",
													"nodeType": "YulBlock",
													"src": "12567:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12584:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12584:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12587:77:9",
																		"nodeType": "YulLiteral",
																		"src": "12587:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12577:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12577:6:9"
																},
																"nativeSrc": "12577:88:9",
																"nodeType": "YulFunctionCall",
																"src": "12577:88:9"
															},
															"nativeSrc": "12577:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "12577:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12681:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12681:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12684:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12684:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12674:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12674:6:9"
																},
																"nativeSrc": "12674:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12674:15:9"
															},
															"nativeSrc": "12674:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12674:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12705:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12705:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12708:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12708:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12698:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12698:6:9"
																},
																"nativeSrc": "12698:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12698:15:9"
															},
															"nativeSrc": "12698:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12698:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12539:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "12539:180:9"
											},
											{
												"body": {
													"nativeSrc": "12767:143:9",
													"nodeType": "YulBlock",
													"src": "12767:143:9",
													"statements": [
														{
															"nativeSrc": "12777:25:9",
															"nodeType": "YulAssignment",
															"src": "12777:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12800:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12800:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12782:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12782:17:9"
																},
																"nativeSrc": "12782:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12782:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12777:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12777:1:9"
																}
															]
														},
														{
															"nativeSrc": "12811:25:9",
															"nodeType": "YulAssignment",
															"src": "12811:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12834:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12834:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12816:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12816:17:9"
																},
																"nativeSrc": "12816:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12816:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12811:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12811:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12858:22:9",
																"nodeType": "YulBlock",
																"src": "12858:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12860:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12860:16:9"
																			},
																			"nativeSrc": "12860:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12860:18:9"
																		},
																		"nativeSrc": "12860:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12860:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12855:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12855:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12848:6:9"
																},
																"nativeSrc": "12848:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12848:9:9"
															},
															"nativeSrc": "12845:35:9",
															"nodeType": "YulIf",
															"src": "12845:35:9"
														},
														{
															"nativeSrc": "12890:14:9",
															"nodeType": "YulAssignment",
															"src": "12890:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12899:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12899:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12902:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12902:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12895:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12895:3:9"
																},
																"nativeSrc": "12895:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12895:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12890:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12890:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12725:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12756:1:9",
														"nodeType": "YulTypedName",
														"src": "12756:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12759:1:9",
														"nodeType": "YulTypedName",
														"src": "12759:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12765:1:9",
														"nodeType": "YulTypedName",
														"src": "12765:1:9",
														"type": ""
													}
												],
												"src": "12725:185:9"
											},
											{
												"body": {
													"nativeSrc": "13022:70:9",
													"nodeType": "YulBlock",
													"src": "13022:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13044:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13044:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13052:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13052:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13040:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:9"
																		},
																		"nativeSrc": "13040:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13040:14:9"
																	},
																	{
																		"hexValue": "436f6d6d697373696f6e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13056:28:9",
																		"nodeType": "YulLiteral",
																		"src": "13056:28:9",
																		"type": "",
																		"value": "Commission transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13033:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13033:6:9"
																},
																"nativeSrc": "13033:52:9",
																"nodeType": "YulFunctionCall",
																"src": "13033:52:9"
															},
															"nativeSrc": "13033:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "13033:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
												"nativeSrc": "12916:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13014:6:9",
														"nodeType": "YulTypedName",
														"src": "13014:6:9",
														"type": ""
													}
												],
												"src": "12916:176:9"
											},
											{
												"body": {
													"nativeSrc": "13244:220:9",
													"nodeType": "YulBlock",
													"src": "13244:220:9",
													"statements": [
														{
															"nativeSrc": "13254:74:9",
															"nodeType": "YulAssignment",
															"src": "13254:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13320:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13320:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13325:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13325:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13261:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13261:58:9"
																},
																"nativeSrc": "13261:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13261:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13254:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13254:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13426:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13426:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																	"nativeSrc": "13337:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13337:88:9"
																},
																"nativeSrc": "13337:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13337:93:9"
															},
															"nativeSrc": "13337:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13337:93:9"
														},
														{
															"nativeSrc": "13439:19:9",
															"nodeType": "YulAssignment",
															"src": "13439:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13450:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13450:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13455:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13455:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13446:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13446:3:9"
																},
																"nativeSrc": "13446:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13446:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13439:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13439:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13098:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13232:3:9",
														"nodeType": "YulTypedName",
														"src": "13232:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13240:3:9",
														"nodeType": "YulTypedName",
														"src": "13240:3:9",
														"type": ""
													}
												],
												"src": "13098:366:9"
											},
											{
												"body": {
													"nativeSrc": "13641:248:9",
													"nodeType": "YulBlock",
													"src": "13641:248:9",
													"statements": [
														{
															"nativeSrc": "13651:26:9",
															"nodeType": "YulAssignment",
															"src": "13651:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13663:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13663:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13674:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13674:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13659:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13659:3:9"
																},
																"nativeSrc": "13659:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13659:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13651:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13651:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13698:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13709:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13709:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13694:3:9"
																		},
																		"nativeSrc": "13694:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13694:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13717:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13717:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13723:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13723:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13713:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13713:3:9"
																		},
																		"nativeSrc": "13713:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13713:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13687:6:9"
																},
																"nativeSrc": "13687:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13687:47:9"
															},
															"nativeSrc": "13687:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13687:47:9"
														},
														{
															"nativeSrc": "13743:139:9",
															"nodeType": "YulAssignment",
															"src": "13743:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13877:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13877:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13751:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13751:124:9"
																},
																"nativeSrc": "13751:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13751:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13743:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13743:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13470:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13621:9:9",
														"nodeType": "YulTypedName",
														"src": "13621:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13636:4:9",
														"nodeType": "YulTypedName",
														"src": "13636:4:9",
														"type": ""
													}
												],
												"src": "13470:419:9"
											},
											{
												"body": {
													"nativeSrc": "14001:64:9",
													"nodeType": "YulBlock",
													"src": "14001:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14023:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14023:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14031:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14031:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14019:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14019:3:9"
																		},
																		"nativeSrc": "14019:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14019:14:9"
																	},
																	{
																		"hexValue": "57616765207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14035:22:9",
																		"nodeType": "YulLiteral",
																		"src": "14035:22:9",
																		"type": "",
																		"value": "Wage transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14012:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14012:6:9"
																},
																"nativeSrc": "14012:46:9",
																"nodeType": "YulFunctionCall",
																"src": "14012:46:9"
															},
															"nativeSrc": "14012:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "14012:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
												"nativeSrc": "13895:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13993:6:9",
														"nodeType": "YulTypedName",
														"src": "13993:6:9",
														"type": ""
													}
												],
												"src": "13895:170:9"
											},
											{
												"body": {
													"nativeSrc": "14217:220:9",
													"nodeType": "YulBlock",
													"src": "14217:220:9",
													"statements": [
														{
															"nativeSrc": "14227:74:9",
															"nodeType": "YulAssignment",
															"src": "14227:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14293:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14293:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14298:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14298:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14234:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14234:58:9"
																},
																"nativeSrc": "14234:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14234:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14227:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14227:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14399:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14399:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
																	"nativeSrc": "14310:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14310:88:9"
																},
																"nativeSrc": "14310:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14310:93:9"
															},
															"nativeSrc": "14310:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14310:93:9"
														},
														{
															"nativeSrc": "14412:19:9",
															"nodeType": "YulAssignment",
															"src": "14412:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14423:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14423:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14428:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14428:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14419:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:9"
																},
																"nativeSrc": "14419:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14419:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14412:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14071:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14205:3:9",
														"nodeType": "YulTypedName",
														"src": "14205:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14213:3:9",
														"nodeType": "YulTypedName",
														"src": "14213:3:9",
														"type": ""
													}
												],
												"src": "14071:366:9"
											},
											{
												"body": {
													"nativeSrc": "14614:248:9",
													"nodeType": "YulBlock",
													"src": "14614:248:9",
													"statements": [
														{
															"nativeSrc": "14624:26:9",
															"nodeType": "YulAssignment",
															"src": "14624:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14636:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14636:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14647:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14647:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14632:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14632:3:9"
																},
																"nativeSrc": "14632:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14632:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14624:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14624:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14671:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14671:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14682:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14682:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14667:3:9"
																		},
																		"nativeSrc": "14667:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14667:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14690:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14690:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14696:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14696:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14686:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14686:3:9"
																		},
																		"nativeSrc": "14686:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14686:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14660:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14660:6:9"
																},
																"nativeSrc": "14660:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14660:47:9"
															},
															"nativeSrc": "14660:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14660:47:9"
														},
														{
															"nativeSrc": "14716:139:9",
															"nodeType": "YulAssignment",
															"src": "14716:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14850:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14850:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14724:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14724:124:9"
																},
																"nativeSrc": "14724:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14724:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14716:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14716:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14443:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14594:9:9",
														"nodeType": "YulTypedName",
														"src": "14594:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14609:4:9",
														"nodeType": "YulTypedName",
														"src": "14609:4:9",
														"type": ""
													}
												],
												"src": "14443:419:9"
											},
											{
												"body": {
													"nativeSrc": "14974:72:9",
													"nodeType": "YulBlock",
													"src": "14974:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14996:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14996:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15004:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15004:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14992:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14992:3:9"
																		},
																		"nativeSrc": "14992:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14992:14:9"
																	},
																	{
																		"hexValue": "5061727469616c2077616765207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15008:30:9",
																		"nodeType": "YulLiteral",
																		"src": "15008:30:9",
																		"type": "",
																		"value": "Partial wage transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14985:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14985:6:9"
																},
																"nativeSrc": "14985:54:9",
																"nodeType": "YulFunctionCall",
																"src": "14985:54:9"
															},
															"nativeSrc": "14985:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "14985:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
												"nativeSrc": "14868:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14966:6:9",
														"nodeType": "YulTypedName",
														"src": "14966:6:9",
														"type": ""
													}
												],
												"src": "14868:178:9"
											},
											{
												"body": {
													"nativeSrc": "15198:220:9",
													"nodeType": "YulBlock",
													"src": "15198:220:9",
													"statements": [
														{
															"nativeSrc": "15208:74:9",
															"nodeType": "YulAssignment",
															"src": "15208:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15274:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15274:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15279:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15279:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15215:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15215:58:9"
																},
																"nativeSrc": "15215:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15215:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15208:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15208:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15380:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15380:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
																	"nativeSrc": "15291:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15291:88:9"
																},
																"nativeSrc": "15291:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15291:93:9"
															},
															"nativeSrc": "15291:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15291:93:9"
														},
														{
															"nativeSrc": "15393:19:9",
															"nodeType": "YulAssignment",
															"src": "15393:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15404:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15404:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15409:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15409:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:9"
																},
																"nativeSrc": "15400:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15400:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15393:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15393:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15052:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15186:3:9",
														"nodeType": "YulTypedName",
														"src": "15186:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15194:3:9",
														"nodeType": "YulTypedName",
														"src": "15194:3:9",
														"type": ""
													}
												],
												"src": "15052:366:9"
											},
											{
												"body": {
													"nativeSrc": "15595:248:9",
													"nodeType": "YulBlock",
													"src": "15595:248:9",
													"statements": [
														{
															"nativeSrc": "15605:26:9",
															"nodeType": "YulAssignment",
															"src": "15605:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15617:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15617:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15628:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15628:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15613:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15613:3:9"
																},
																"nativeSrc": "15613:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15613:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15605:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15605:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15652:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15652:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15663:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15648:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15648:3:9"
																		},
																		"nativeSrc": "15648:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15648:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15671:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15671:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15677:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15677:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15667:3:9"
																		},
																		"nativeSrc": "15667:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15667:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15641:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15641:6:9"
																},
																"nativeSrc": "15641:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15641:47:9"
															},
															"nativeSrc": "15641:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15641:47:9"
														},
														{
															"nativeSrc": "15697:139:9",
															"nodeType": "YulAssignment",
															"src": "15697:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15831:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15831:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15705:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15705:124:9"
																},
																"nativeSrc": "15705:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15705:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15697:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15697:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15424:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15575:9:9",
														"nodeType": "YulTypedName",
														"src": "15575:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15590:4:9",
														"nodeType": "YulTypedName",
														"src": "15590:4:9",
														"type": ""
													}
												],
												"src": "15424:419:9"
											},
											{
												"body": {
													"nativeSrc": "15955:60:9",
													"nodeType": "YulBlock",
													"src": "15955:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15977:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15977:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15985:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15985:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15973:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15973:3:9"
																		},
																		"nativeSrc": "15973:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15973:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "15989:18:9",
																		"nodeType": "YulLiteral",
																		"src": "15989:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15966:6:9"
																},
																"nativeSrc": "15966:42:9",
																"nodeType": "YulFunctionCall",
																"src": "15966:42:9"
															},
															"nativeSrc": "15966:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "15966:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "15849:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15947:6:9",
														"nodeType": "YulTypedName",
														"src": "15947:6:9",
														"type": ""
													}
												],
												"src": "15849:166:9"
											},
											{
												"body": {
													"nativeSrc": "16167:220:9",
													"nodeType": "YulBlock",
													"src": "16167:220:9",
													"statements": [
														{
															"nativeSrc": "16177:74:9",
															"nodeType": "YulAssignment",
															"src": "16177:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16243:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16243:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16248:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16184:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16184:58:9"
																},
																"nativeSrc": "16184:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16184:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16177:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16177:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16349:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16349:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "16260:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16260:88:9"
																},
																"nativeSrc": "16260:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16260:93:9"
															},
															"nativeSrc": "16260:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16260:93:9"
														},
														{
															"nativeSrc": "16362:19:9",
															"nodeType": "YulAssignment",
															"src": "16362:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16373:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16373:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16378:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16378:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16369:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16369:3:9"
																},
																"nativeSrc": "16369:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16369:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16362:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16362:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16021:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16155:3:9",
														"nodeType": "YulTypedName",
														"src": "16155:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16163:3:9",
														"nodeType": "YulTypedName",
														"src": "16163:3:9",
														"type": ""
													}
												],
												"src": "16021:366:9"
											},
											{
												"body": {
													"nativeSrc": "16564:248:9",
													"nodeType": "YulBlock",
													"src": "16564:248:9",
													"statements": [
														{
															"nativeSrc": "16574:26:9",
															"nodeType": "YulAssignment",
															"src": "16574:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16586:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16586:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16597:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16597:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16582:3:9"
																},
																"nativeSrc": "16582:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16582:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16574:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16621:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16621:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16632:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16632:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16617:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16617:3:9"
																		},
																		"nativeSrc": "16617:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16617:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16640:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16640:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16646:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16646:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16636:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16636:3:9"
																		},
																		"nativeSrc": "16636:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16636:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16610:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16610:6:9"
																},
																"nativeSrc": "16610:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16610:47:9"
															},
															"nativeSrc": "16610:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16610:47:9"
														},
														{
															"nativeSrc": "16666:139:9",
															"nodeType": "YulAssignment",
															"src": "16666:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16800:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16800:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16674:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16674:124:9"
																},
																"nativeSrc": "16674:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16674:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16666:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16666:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16393:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16544:9:9",
														"nodeType": "YulTypedName",
														"src": "16544:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16559:4:9",
														"nodeType": "YulTypedName",
														"src": "16559:4:9",
														"type": ""
													}
												],
												"src": "16393:419:9"
											},
											{
												"body": {
													"nativeSrc": "16924:75:9",
													"nodeType": "YulBlock",
													"src": "16924:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16946:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16946:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16954:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16954:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16942:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16942:3:9"
																		},
																		"nativeSrc": "16942:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16942:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "16958:33:9",
																		"nodeType": "YulLiteral",
																		"src": "16958:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16935:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16935:6:9"
																},
																"nativeSrc": "16935:57:9",
																"nodeType": "YulFunctionCall",
																"src": "16935:57:9"
															},
															"nativeSrc": "16935:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "16935:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "16818:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16916:6:9",
														"nodeType": "YulTypedName",
														"src": "16916:6:9",
														"type": ""
													}
												],
												"src": "16818:181:9"
											},
											{
												"body": {
													"nativeSrc": "17151:220:9",
													"nodeType": "YulBlock",
													"src": "17151:220:9",
													"statements": [
														{
															"nativeSrc": "17161:74:9",
															"nodeType": "YulAssignment",
															"src": "17161:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17227:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17227:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17232:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17232:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17168:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17168:58:9"
																},
																"nativeSrc": "17168:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17168:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17161:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17161:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17333:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17333:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "17244:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17244:88:9"
																},
																"nativeSrc": "17244:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17244:93:9"
															},
															"nativeSrc": "17244:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17244:93:9"
														},
														{
															"nativeSrc": "17346:19:9",
															"nodeType": "YulAssignment",
															"src": "17346:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17357:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17357:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17362:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17362:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17353:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17353:3:9"
																},
																"nativeSrc": "17353:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17353:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17346:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17346:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17005:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17139:3:9",
														"nodeType": "YulTypedName",
														"src": "17139:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17147:3:9",
														"nodeType": "YulTypedName",
														"src": "17147:3:9",
														"type": ""
													}
												],
												"src": "17005:366:9"
											},
											{
												"body": {
													"nativeSrc": "17548:248:9",
													"nodeType": "YulBlock",
													"src": "17548:248:9",
													"statements": [
														{
															"nativeSrc": "17558:26:9",
															"nodeType": "YulAssignment",
															"src": "17558:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17570:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17570:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17581:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17581:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17566:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17566:3:9"
																},
																"nativeSrc": "17566:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17566:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17558:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17558:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17605:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17605:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17616:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17616:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17601:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17601:3:9"
																		},
																		"nativeSrc": "17601:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17601:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17624:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17624:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17630:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17630:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17620:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17620:3:9"
																		},
																		"nativeSrc": "17620:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17620:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17594:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17594:6:9"
																},
																"nativeSrc": "17594:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17594:47:9"
															},
															"nativeSrc": "17594:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17594:47:9"
														},
														{
															"nativeSrc": "17650:139:9",
															"nodeType": "YulAssignment",
															"src": "17650:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17784:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17784:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17658:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17658:124:9"
																},
																"nativeSrc": "17658:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17658:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17650:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17650:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17377:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17528:9:9",
														"nodeType": "YulTypedName",
														"src": "17528:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17543:4:9",
														"nodeType": "YulTypedName",
														"src": "17543:4:9",
														"type": ""
													}
												],
												"src": "17377:419:9"
											},
											{
												"body": {
													"nativeSrc": "17956:288:9",
													"nodeType": "YulBlock",
													"src": "17956:288:9",
													"statements": [
														{
															"nativeSrc": "17966:26:9",
															"nodeType": "YulAssignment",
															"src": "17966:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17978:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17978:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17989:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17989:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17974:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17974:3:9"
																},
																"nativeSrc": "17974:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17974:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17966:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17966:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18046:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18046:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18059:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18059:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18070:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18070:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18055:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18055:3:9"
																		},
																		"nativeSrc": "18055:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18055:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18002:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18002:43:9"
																},
																"nativeSrc": "18002:71:9",
																"nodeType": "YulFunctionCall",
																"src": "18002:71:9"
															},
															"nativeSrc": "18002:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "18002:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18127:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18127:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18140:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18140:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18151:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18151:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18136:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18136:3:9"
																		},
																		"nativeSrc": "18136:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18136:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18083:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18083:43:9"
																},
																"nativeSrc": "18083:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18083:72:9"
															},
															"nativeSrc": "18083:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18083:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18209:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18209:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18222:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18222:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18233:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18233:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18218:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18218:3:9"
																		},
																		"nativeSrc": "18218:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18218:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18165:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18165:43:9"
																},
																"nativeSrc": "18165:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18165:72:9"
															},
															"nativeSrc": "18165:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18165:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17802:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17912:9:9",
														"nodeType": "YulTypedName",
														"src": "17912:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17924:6:9",
														"nodeType": "YulTypedName",
														"src": "17924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17932:6:9",
														"nodeType": "YulTypedName",
														"src": "17932:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17940:6:9",
														"nodeType": "YulTypedName",
														"src": "17940:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17951:4:9",
														"nodeType": "YulTypedName",
														"src": "17951:4:9",
														"type": ""
													}
												],
												"src": "17802:442:9"
											},
											{
												"body": {
													"nativeSrc": "18356:64:9",
													"nodeType": "YulBlock",
													"src": "18356:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18378:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18378:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18386:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18386:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18374:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18374:3:9"
																		},
																		"nativeSrc": "18374:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18374:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "18390:22:9",
																		"nodeType": "YulLiteral",
																		"src": "18390:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18367:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18367:6:9"
																},
																"nativeSrc": "18367:46:9",
																"nodeType": "YulFunctionCall",
																"src": "18367:46:9"
															},
															"nativeSrc": "18367:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "18367:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "18250:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18348:6:9",
														"nodeType": "YulTypedName",
														"src": "18348:6:9",
														"type": ""
													}
												],
												"src": "18250:170:9"
											},
											{
												"body": {
													"nativeSrc": "18572:220:9",
													"nodeType": "YulBlock",
													"src": "18572:220:9",
													"statements": [
														{
															"nativeSrc": "18582:74:9",
															"nodeType": "YulAssignment",
															"src": "18582:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18648:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18648:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18653:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18589:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18589:58:9"
																},
																"nativeSrc": "18589:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18589:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18582:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18754:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18754:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "18665:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18665:88:9"
																},
																"nativeSrc": "18665:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18665:93:9"
															},
															"nativeSrc": "18665:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18665:93:9"
														},
														{
															"nativeSrc": "18767:19:9",
															"nodeType": "YulAssignment",
															"src": "18767:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18778:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18778:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18783:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18783:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18774:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18774:3:9"
																},
																"nativeSrc": "18774:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18774:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18767:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18767:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18426:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18560:3:9",
														"nodeType": "YulTypedName",
														"src": "18560:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18568:3:9",
														"nodeType": "YulTypedName",
														"src": "18568:3:9",
														"type": ""
													}
												],
												"src": "18426:366:9"
											},
											{
												"body": {
													"nativeSrc": "18969:248:9",
													"nodeType": "YulBlock",
													"src": "18969:248:9",
													"statements": [
														{
															"nativeSrc": "18979:26:9",
															"nodeType": "YulAssignment",
															"src": "18979:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18991:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18991:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19002:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19002:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18987:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18987:3:9"
																},
																"nativeSrc": "18987:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18987:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18979:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18979:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19026:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19026:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19037:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19037:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19022:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19022:3:9"
																		},
																		"nativeSrc": "19022:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19022:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19045:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19045:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19051:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19051:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19041:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19041:3:9"
																		},
																		"nativeSrc": "19041:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19041:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19015:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19015:6:9"
																},
																"nativeSrc": "19015:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19015:47:9"
															},
															"nativeSrc": "19015:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19015:47:9"
														},
														{
															"nativeSrc": "19071:139:9",
															"nodeType": "YulAssignment",
															"src": "19071:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19205:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19205:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19079:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19079:124:9"
																},
																"nativeSrc": "19079:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19079:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19071:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19071:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18798:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18949:9:9",
														"nodeType": "YulTypedName",
														"src": "18949:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18964:4:9",
														"nodeType": "YulTypedName",
														"src": "18964:4:9",
														"type": ""
													}
												],
												"src": "18798:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct SignToken.WagePaymentResult -> struct SignToken.WagePaymentResult\n    function abi_encode_t_struct$_WagePaymentResult_$1387_memory_ptr_to_t_struct$_WagePaymentResult_$1387_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // paidAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // remainingWage\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // isPartialPayment\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_WagePaymentResult_$1387_memory_ptr__to_t_struct$_WagePaymentResult_$1387_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_WagePaymentResult_$1387_memory_ptr_to_t_struct$_WagePaymentResult_$1387_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Commission transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wage transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512(memPtr) {\n\n        mstore(add(memPtr, 0), \"Partial wage transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061018c575f3560e01c806377d3550b116100dc578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e1461044b578063e95850df1461047b578063ef9ecc1d14610499578063f2fde38b146104c95761018c565b8063a9059cbb146103cf578063a9b493e0146103ff578063ca5254851461041b5761018c565b806377d3550b146103315780638456cb591461034f5780638da5cb5b1461035957806395d89b41146103775780639d55fba714610395578063a3262ea2146103b15761018c565b8063313ce567116101495780635e182096116101235780635e182096146102bf57806370a08231146102db578063715018a61461030b57806374612f19146103155761018c565b8063313ce567146102795780633f4ba83a146102975780635c975abb146102a15761018c565b806306fdde0314610190578063095ea7b3146101ae57806318160ddd146101de5780631ec48cf7146101fc57806323b872dd1461022d5780632fcdc5fd1461025d575b5f80fd5b6101986104e5565b6040516101a59190611b3e565b60405180910390f35b6101c860048036038101906101c39190611bef565b610575565b6040516101d59190611c47565b60405180910390f35b6101e6610597565b6040516101f39190611c6f565b60405180910390f35b61021660048036038101906102119190611c88565b6105a0565b604051610224929190611cb3565b60405180910390f35b61024760048036038101906102429190611cda565b6105be565b6040516102549190611c47565b60405180910390f35b61027760048036038101906102729190611c88565b6105db565b005b6102816106c2565b60405161028e9190611d45565b60405180910390f35b61029f6106ca565b005b6102a96106dc565b6040516102b69190611c47565b60405180910390f35b6102d960048036038101906102d49190611d5e565b6106f1565b005b6102f560048036038101906102f09190611c88565b610819565b6040516103029190611c6f565b60405180910390f35b61031361085e565b005b61032f600480360381019061032a9190611c88565b610871565b005b610339610958565b6040516103469190611c6f565b60405180910390f35b61035761095e565b005b610361610970565b60405161036e9190611dab565b60405180910390f35b61037f610999565b60405161038c9190611b3e565b60405180910390f35b6103af60048036038101906103aa9190611dc4565b610a29565b005b6103b9610aae565b6040516103c69190611dab565b60405180910390f35b6103e960048036038101906103e49190611bef565b610ad3565b6040516103f69190611c47565b60405180910390f35b61041960048036038101906104149190611d5e565b610aee565b005b61043560048036038101906104309190611dc4565b610cb4565b6040516104429190611c6f565b60405180910390f35b61046560048036038101906104609190611def565b610cc9565b6040516104729190611c6f565b60405180910390f35b610483610d4b565b6040516104909190611dab565b60405180910390f35b6104b360048036038101906104ae9190611e2d565b610d70565b6040516104c09190611edb565b60405180910390f35b6104e360048036038101906104de9190611c88565b611151565b005b6060600380546104f490611f21565b80601f016020809104026020016040519081016040528092919081815260200182805461052090611f21565b801561056b5780601f106105425761010080835404028352916020019161056b565b820191905f5260205f20905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b5f8061057f6111d5565b905061058c8185856111dc565b600191505092915050565b5f600254905090565b5f806105ab83610819565b6105b58430610cc9565b91509150915091565b5f6105c76111ee565b6105d2848484611238565b90509392505050565b6105e3611266565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610648576040517ff8af67e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9816040516106b79190611dab565b60405180910390a150565b5f6012905090565b6106d2611266565b6106da6112ed565b565b5f60055f9054906101000a900460ff16905090565b6106f961134e565b6107016111ee565b5f810361073a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3390505f61076a60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ad3565b9050806107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611f9b565b60405180910390fd5b82600a5f8681526020019081526020015f205f8282546107cc9190611fe6565b92505081905550837f577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd846040516108039190611c6f565b60405180910390a2505061081561139d565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610866611266565b61086f5f6113a7565b565b610879611266565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108de576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f8160405161094d9190611dab565b60405180910390a150565b60085481565b610966611266565b61096e61146c565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109a890611f21565b80601f01602080910402602001604051908101604052809291908181526020018280546109d490611f21565b8015610a1f5780601f106109f657610100808354040283529160200191610a1f565b820191905f5260205f20905b815481529060010190602001808311610a0257829003601f168201915b5050505050905090565b610a31611266565b612710811115610a6d576040517fdc81db8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008819055507f13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e81604051610aa39190611c6f565b60405180910390a150565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610adc6111ee565b610ae683836114ce565b905092915050565b610af661134e565b610afe6111ee565b610b0833836114f0565b610b3e576040517fde271cf500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610b77576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a5f8481526020019081526020015f20541015610bc2576040517fa77130ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a5f8481526020019081526020015f205f828254610be29190612019565b925050819055505f610c1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846105be565b905080610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90612096565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16837f4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb84604051610c9f9190611c6f565b60405180910390a350610cb061139d565b5050565b600a602052805f5260405f205f915090505481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d78611aae565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dfe576040517f5c427cd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e0661134e565b610e0e6111ee565b5f8203610e47576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600a5f8681526020019081526020015f205490505f8382101590505f8082156110095761271060085487610e7c91906120b4565b610e869190612122565b90508086610e949190612019565b91508584610ea29190612019565b600a5f8a81526020019081526020015f20819055505f811115610f67575f610eeb60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610ad3565b905080610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f249061219c565b60405180910390fd5b887facfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d527783604051610f5d9190611c6f565b60405180910390a2505b5f610f728884610ad3565b905080610fb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fab90612204565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca85604051610ffb9190611c6f565b60405180910390a350611113565b8391505f90505f600a5f8a81526020019081526020015f20819055505f8211156110d8575f6110388884610ad3565b90508061107a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110719061226c565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16897f5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb524329085868b6110c09190612019565b6040516110ce929190611cb3565b60405180910390a3505b877f574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f858860405161110a929190611cb3565b60405180910390a25b604051806060016040528083815260200183886111309190612019565b81526020018415151581525094505050505061114a61139d565b9392505050565b611159611266565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111c9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111c09190611dab565b60405180910390fd5b6111d2816113a7565b50565b5f33905090565b6111e983838360016114fb565b505050565b6111f66106dc565b15611236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122d906122d4565b60405180910390fd5b565b5f806112426111d5565b905061124f8582856116ca565b61125a85858561175c565b60019150509392505050565b61126e6111d5565b73ffffffffffffffffffffffffffffffffffffffff1661128c610970565b73ffffffffffffffffffffffffffffffffffffffff16146112eb576112af6111d5565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112e29190611dab565b60405180910390fd5b565b6112f561184c565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113376111d5565b6040516113449190611dab565b60405180910390a1565b600260065403611393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138a9061233c565b60405180910390fd5b6002600681905550565b6001600681905550565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114746111ee565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114b76111d5565b6040516114c49190611dab565b60405180910390a1565b5f806114d86111d5565b90506114e581858561175c565b600191505092915050565b5f6001905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361156b575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115629190611dab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115db575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115d29190611dab565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156116c4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116bb9190611c6f565b60405180910390a35b50505050565b5f6116d58484610cc9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117565781811015611747578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161173e9392919061235a565b60405180910390fd5b61175584848484035f6114fb565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117cc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117c39190611dab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361183c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118339190611dab565b60405180910390fd5b611847838383611895565b505050565b6118546106dc565b611893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188a906123d9565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118e5578060025f8282546118d99190611fe6565b925050819055506119b3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561196e578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119659392919061235a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119fa578060025f8282540392505081905550611a44565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611aa19190611c6f565b60405180910390a3505050565b60405180606001604052805f81526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b1082611ace565b611b1a8185611ad8565b9350611b2a818560208601611ae8565b611b3381611af6565b840191505092915050565b5f6020820190508181035f830152611b568184611b06565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b8b82611b62565b9050919050565b611b9b81611b81565b8114611ba5575f80fd5b50565b5f81359050611bb681611b92565b92915050565b5f819050919050565b611bce81611bbc565b8114611bd8575f80fd5b50565b5f81359050611be981611bc5565b92915050565b5f8060408385031215611c0557611c04611b5e565b5b5f611c1285828601611ba8565b9250506020611c2385828601611bdb565b9150509250929050565b5f8115159050919050565b611c4181611c2d565b82525050565b5f602082019050611c5a5f830184611c38565b92915050565b611c6981611bbc565b82525050565b5f602082019050611c825f830184611c60565b92915050565b5f60208284031215611c9d57611c9c611b5e565b5b5f611caa84828501611ba8565b91505092915050565b5f604082019050611cc65f830185611c60565b611cd36020830184611c60565b9392505050565b5f805f60608486031215611cf157611cf0611b5e565b5b5f611cfe86828701611ba8565b9350506020611d0f86828701611ba8565b9250506040611d2086828701611bdb565b9150509250925092565b5f60ff82169050919050565b611d3f81611d2a565b82525050565b5f602082019050611d585f830184611d36565b92915050565b5f8060408385031215611d7457611d73611b5e565b5b5f611d8185828601611bdb565b9250506020611d9285828601611bdb565b9150509250929050565b611da581611b81565b82525050565b5f602082019050611dbe5f830184611d9c565b92915050565b5f60208284031215611dd957611dd8611b5e565b5b5f611de684828501611bdb565b91505092915050565b5f8060408385031215611e0557611e04611b5e565b5b5f611e1285828601611ba8565b9250506020611e2385828601611ba8565b9150509250929050565b5f805f60608486031215611e4457611e43611b5e565b5b5f611e5186828701611bdb565b9350506020611e6286828701611ba8565b9250506040611e7386828701611bdb565b9150509250925092565b611e8681611bbc565b82525050565b611e9581611c2d565b82525050565b606082015f820151611eaf5f850182611e7d565b506020820151611ec26020850182611e7d565b506040820151611ed56040850182611e8c565b50505050565b5f606082019050611eee5f830184611e9b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f3857607f821691505b602082108103611f4b57611f4a611ef4565b5b50919050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f611f85601583611ad8565b9150611f9082611f51565b602082019050919050565b5f6020820190508181035f830152611fb281611f79565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ff082611bbc565b9150611ffb83611bbc565b925082820190508082111561201357612012611fb9565b5b92915050565b5f61202382611bbc565b915061202e83611bbc565b925082820390508181111561204657612045611fb9565b5b92915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612080600f83611ad8565b915061208b8261204c565b602082019050919050565b5f6020820190508181035f8301526120ad81612074565b9050919050565b5f6120be82611bbc565b91506120c983611bbc565b92508282026120d781611bbc565b915082820484148315176120ee576120ed611fb9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61212c82611bbc565b915061213783611bbc565b925082612147576121466120f5565b5b828204905092915050565b7f436f6d6d697373696f6e207472616e73666572206661696c65640000000000005f82015250565b5f612186601a83611ad8565b915061219182612152565b602082019050919050565b5f6020820190508181035f8301526121b38161217a565b9050919050565b7f57616765207472616e73666572206661696c65640000000000000000000000005f82015250565b5f6121ee601483611ad8565b91506121f9826121ba565b602082019050919050565b5f6020820190508181035f83015261221b816121e2565b9050919050565b7f5061727469616c2077616765207472616e73666572206661696c6564000000005f82015250565b5f612256601c83611ad8565b915061226182612222565b602082019050919050565b5f6020820190508181035f8301526122838161224a565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6122be601083611ad8565b91506122c98261228a565b602082019050919050565b5f6020820190508181035f8301526122eb816122b2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612326601f83611ad8565b9150612331826122f2565b602082019050919050565b5f6020820190508181035f8301526123538161231a565b9050919050565b5f60608201905061236d5f830186611d9c565b61237a6020830185611c60565b6123876040830184611c60565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6123c3601483611ad8565b91506123ce8261238f565b602082019050919050565b5f6020820190508181035f8301526123f0816123b7565b905091905056fea2646970667358221220b9c9f8ee8c697360ab460de192a3a85ee1ba861ba6fe6faafd0645f006a8922a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77D3550B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xE95850DF EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xEF9ECC1D EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4C9 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xA9B493E0 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xCA525485 EQ PUSH2 0x41B JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x77D3550B EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x9D55FBA7 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xA3262EA2 EQ PUSH2 0x3B1 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5E182096 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x5E182096 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x74612F19 EQ PUSH2 0x315 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A1 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1EC48CF7 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x2FCDC5FD EQ PUSH2 0x25D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x85E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x95E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x361 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B9 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4F4 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x520 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x542 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x57F PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x58C DUP2 DUP6 DUP6 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AB DUP4 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x5B5 DUP5 ADDRESS PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x5C7 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x5D2 DUP5 DUP5 DUP5 PUSH2 0x1238 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0x1266 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8AF67E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF2610996D245D9B77E4FF84C2174EEA0B76FB44C422218404F66E28816D78FB9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x12ED JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F9 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x701 PUSH2 0x11EE JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x76A PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x577DFADB80AB9A5336C633F3FA5F59C296D18A29AA6AE9E4598762748E1F4AFD DUP5 PUSH1 0x40 MLOAD PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x815 PUSH2 0x139D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x866 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x86F PUSH0 PUSH2 0x13A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x879 PUSH2 0x1266 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4422C0C4B301436298CCE7DE4B586B1E044E671D0EFBFEB88689161EBD95DD4F DUP2 PUSH1 0x40 MLOAD PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x966 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x146C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA31 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC81DB8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x13F60DD2B588490608C3FF1932A3DAEB4087F3D5AF04B97E5C2A16B5B4C0302E DUP2 PUSH1 0x40 MLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xADC PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xAE6 DUP4 DUP4 PUSH2 0x14CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x134E JUMP JUMPDEST PUSH2 0xAFE PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xB08 CALLER DUP4 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0xDE271CF500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA77130EF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xC16 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4F SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x4E073DD16EEC477FBB059BDA1F0796F0D06EEBC4C53568E3E77A4084228FD4EB DUP5 PUSH1 0x40 MLOAD PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCB0 PUSH2 0x139D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD78 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C427CD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE06 PUSH2 0x134E JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x11EE JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP4 DUP3 LT ISZERO SWAP1 POP PUSH0 DUP1 DUP3 ISZERO PUSH2 0x1009 JUMPI PUSH2 0x2710 PUSH1 0x8 SLOAD DUP8 PUSH2 0xE7C SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH2 0xE94 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST SWAP2 POP DUP6 DUP5 PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH0 PUSH2 0xEEB PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH32 0xACFA15EBE340982FEF95D43AAFC25D741382D7928A00055A209274FA615D5277 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH0 PUSH2 0xF72 DUP9 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAB SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x4C3044279DAEA82275BC16A26600FE0C196CB65422B138C02DC86FB861B174CA DUP6 PUSH1 0x40 MLOAD PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1113 JUMP JUMPDEST DUP4 SWAP2 POP PUSH0 SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT ISZERO PUSH2 0x10D8 JUMPI PUSH0 PUSH2 0x1038 DUP9 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x5D16C483BEE69284681447FE545192ACC0F537A2CD7C2CD35593A1EDB5243290 DUP6 DUP7 DUP12 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10CE SWAP3 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST DUP8 PUSH32 0x574264649C9D702F91C09E683982319DA6546E5CFEE0A4898A3BD6BF1C63042F DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x110A SWAP3 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP9 PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO DUP2 MSTORE POP SWAP5 POP POP POP POP POP PUSH2 0x114A PUSH2 0x139D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1159 PUSH2 0x1266 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D2 DUP2 PUSH2 0x13A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11F6 PUSH2 0x6DC JUMP JUMPDEST ISZERO PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122D SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1242 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x124F DUP6 DUP3 DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x125A DUP6 DUP6 DUP6 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x126E PUSH2 0x11D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128C PUSH2 0x970 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12EB JUMPI PUSH2 0x12AF PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x12F5 PUSH2 0x184C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1337 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1474 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14B7 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14D8 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x14E5 DUP2 DUP6 DUP6 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x156B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D2 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x16C4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D5 DUP5 DUP5 PUSH2 0xCC9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1756 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1747 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1755 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x183C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1833 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1847 DUP4 DUP4 DUP4 PUSH2 0x1895 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1854 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x1893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x19B3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x196E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1965 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19FA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A44 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B10 DUP3 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B1A DUP2 DUP6 PUSH2 0x1AD8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1B33 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 DUP5 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8B DUP3 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9B DUP2 PUSH2 0x1B81 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB6 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCE DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE9 DUP2 PUSH2 0x1BC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C12 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C23 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C41 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C5A PUSH0 DUP4 ADD DUP5 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C69 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C82 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CAA DUP5 DUP3 DUP6 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CC6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x1CD3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CF0 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFE DUP7 DUP3 DUP8 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D0F DUP7 DUP3 DUP8 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D20 DUP7 DUP3 DUP8 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3F DUP2 PUSH2 0x1D2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D58 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D74 JUMPI PUSH2 0x1D73 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D81 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D92 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA5 DUP2 PUSH2 0x1B81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBE PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD9 JUMPI PUSH2 0x1DD8 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E12 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E23 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E51 DUP7 DUP3 DUP8 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E62 DUP7 DUP3 DUP8 ADD PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E73 DUP7 DUP3 DUP8 ADD PUSH2 0x1BDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E95 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1EAF PUSH0 DUP6 ADD DUP3 PUSH2 0x1E7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1EC2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1E7D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1ED5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1E8C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EEE PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F4B JUMPI PUSH2 0x1F4A PUSH2 0x1EF4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F85 PUSH1 0x15 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F90 DUP3 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB2 DUP2 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FF0 DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2013 JUMPI PUSH2 0x2012 PUSH2 0x1FB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2023 DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x202E DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1FB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2080 PUSH1 0xF DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x208B DUP3 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AD DUP2 PUSH2 0x2074 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20BE DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x20C9 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20D7 DUP2 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x1FB9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x212C DUP3 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2137 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x20F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697373696F6E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2186 PUSH1 0x1A DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2191 DUP3 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21B3 DUP2 PUSH2 0x217A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616765207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21EE PUSH1 0x14 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F9 DUP3 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x221B DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061727469616C2077616765207472616E73666572206661696C656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2256 PUSH1 0x1C DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2261 DUP3 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2283 DUP2 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22BE PUSH1 0x10 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C9 DUP3 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2326 PUSH1 0x1F DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2331 DUP3 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2353 DUP2 PUSH2 0x231A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x236D PUSH0 DUP4 ADD DUP7 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x237A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x2387 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C60 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C3 PUSH1 0x14 DUP4 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x23CE DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F0 DUP2 PUSH2 0x23B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xC9 0xF8 0xEE DUP13 PUSH10 0x7360AB460DE192A3A85E 0xE1 0xBA DUP7 SHL 0xA6 INVALID PUSH16 0xAAFD0645F006A8922A64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "416:10027:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10194:246:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;9953:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8013:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8805:67:8;;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2612:602:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;9417:252:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;587:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8734:63;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9023:267:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;515:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9738:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3393:726;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;667:33:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5135:2753;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:4;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;10194:246:8:-;10267:15;10293:25;10359:16;10369:5;10359:9;:16::i;:::-;10390:31;10400:5;10415:4;10390:9;:31::i;:::-;10337:95;;;;10194:246;;;:::o;9953:229::-;10109:4;1239:19:2;:17;:19::i;:::-;10138:36:8::1;10157:4;10163:2;10167:6;10138:18;:36::i;:::-;10131:43;;9953:229:::0;;;;;:::o;8013:237::-;1531:13:0;:11;:13::i;:::-;8123:1:8::1;8100:25;;:11;:25;;::::0;8096:58:::1;;8134:20;;;;;;;;;;;;;;8096:58;8184:11;8165:16;;:30;;;;;;;;;;;;;;;;;;8211:31;8230:11;8211:31;;;;;;:::i;:::-;;;;;;;;8013:237:::0;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;8805:67:8:-;1531:13:0;:11;:13::i;:::-;8854:10:8::1;:8;:10::i;:::-;8805:67::o:0;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2612:602:8:-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;2733:1:8::2;2723:6;:11:::0;2719:39:::2;;2743:15;;;;;;;;;;;;;;2719:39;2779:14;2796:10;2779:27;;2960:12;2975:34;2984:16;;;;;;;;;;;3002:6;2975:8;:34::i;:::-;2960:49;;3028:7;3020:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3139:6;3114:12;:21;3127:7;3114:21;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;3190:7;3171:35;3199:6;3171:35;;;;;;:::i;:::-;;;;;;;;2708:506;;2303:20:3::0;:18;:20::i;:::-;2612:602:8;;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;9417:252:8:-;1531:13:0;:11;:13::i;:::-;9529:1:8::1;9506:25;;:11;:25;;::::0;9502:62:::1;;9540:24;;;;;;;;;;;;;;9502:62;9596:11;9575:18;;:32;;;;;;;;;;;;;;;;;;9623:38;9649:11;9623:38;;;;;;:::i;:::-;;;;;;;;9417:252:::0;:::o;587:32::-;;;;:::o;8734:63::-;1531:13:0;:11;:13::i;:::-;8781:8:8::1;:6;:8::i;:::-;8734:63::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;9023:267:8:-;1531:13:0;:11;:13::i;:::-;771:5:8::1;9113:20;:35;9109:67;;;9157:19;;;;;;;;;;;;;;9109:67;9207:20;9187:17;:40;;;;9243:39;9261:20;9243:39;;;;;;:::i;:::-;;;;;;;;9023:267:::0;:::o;515:31::-;;;;;;;;;;;;;:::o;9738:207::-;9881:4;1239:19:2;:17;:19::i;:::-;9911:26:8::1;9926:2;9930:6;9911:14;:26::i;:::-;9904:33;;9738:207:::0;;;;:::o;3393:726::-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;3549:33:8::2;3562:10;3574:7;3549:12;:33::i;:::-;3544:66;;3591:19;;;;;;;;;;;;;;3544:66;3645:1;3635:6;:11:::0;3631:39:::2;;3655:15;;;;;;;;;;;;;;3631:39;3709:6;3685:12;:21;3698:7;3685:21;;;;;;;;;;;;:30;3681:68;;;3724:25;;;;;;;;;;;;;;3681:68;3838:6;3813:12;:21;3826:7;3813:21;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;3925:12;3940:50;3953:16;;;;;;;;;;;3971:10;3983:6;3940:12;:50::i;:::-;3925:65;;4009:7;4001:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;4092:10;4062:49;;4083:7;4062:49;4104:6;4062:49;;;;;;:::i;:::-;;;;;;;;3491:628;2303:20:3::0;:18;:20::i;:::-;3393:726:8;;:::o;827:47::-;;;;;;;;;;;;;;;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;667:33:8:-;;;;;;;;;;;;;:::o;5135:2753::-;5294:24;;:::i;:::-;2370:16;;;;;;;;;;;2356:30;;:10;:30;;;2352:63;;2395:20;;;;;;;;;;;;;;2352:63;2261:21:3::1;:19;:21::i;:::-;1239:19:2::2;:17;:19::i;:::-;5345:1:8::3;5335:6;:11:::0;5331:39:::3;;5355:15;;;;;;;;;;;;;;5331:39;5391:22;5416:12;:21;5429:7;5416:21;;;;;;;;;;;;5391:46;;5448:18;5487:6;5469:14;:24;;5448:45;;5504:21;5536:24:::0;5713:13:::3;5709:1975;;;771:5;5809:17;;5800:6;:26;;;;:::i;:::-;5799:43;;;;:::i;:::-;5780:62;;5882:16;5873:6;:25;;;;:::i;:::-;5857:41;;6016:6;5999:14;:23;;;;:::i;:::-;5975:12;:21;5988:7;5975:21;;;;;;;;;;;:47;;;;6133:1;6114:16;:20;6110:386;;;6269:22;6294:46;6303:18;;;;;;;;;;;6323:16;6294:8;:46::i;:::-;6269:71;;6367:17;6359:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;6454:7;6439:41;6463:16;6439:41;;;;;;:::i;:::-;;;;;;;;6136:360;6110:386;6674:12;6689:32;6698:7;6707:13;6689:8;:32::i;:::-;6674:47;;6744:7;6736:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;6828:7;6810:41;;6819:7;6810:41;6837:13;6810:41;;;;;;:::i;:::-;;;;;;;;5728:1135;5709:1975;;;6952:14;6936:30;;7000:1;6981:20;;7101:1;7077:12;:21;7090:7;7077:21;;;;;;;;;;;:25;;;;7151:1;7135:13;:17;7131:461;;;7348:12;7363:32;7372:7;7381:13;7363:8;:32::i;:::-;7348:47;;7422:7;7414:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7529:7;7504:72;;7520:7;7504:72;7538:13;7562;7553:6;:22;;;;:::i;:::-;7504:72;;;;;;;:::i;:::-;;;;;;;;7154:438;7131:461;7640:7;7625:47;7649:14;7665:6;7625:47;;;;;;;:::i;:::-;;;;;;;;5709:1975;7711:169;;;;;;;;7756:13;7711:169;;;;7808:13;7799:6;:22;;;;:::i;:::-;7711:169;;;;7855:13;7854:14;7711:169;;;;::::0;7704:176:::3;;;;;;2303:20:3::1;:18;:20::i;:::-;5135:2753:8::0;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;4776:244:4:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;8409:281:8:-;8486:4;8638;8631:11;;8409:281;;;;:::o;9701:432:4:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:332::-;4147:4;4185:2;4174:9;4170:18;4162:26;;4198:71;4266:1;4255:9;4251:17;4242:6;4198:71;:::i;:::-;4279:72;4347:2;4336:9;4332:18;4323:6;4279:72;:::i;:::-;4026:332;;;;;:::o;4364:619::-;4441:6;4449;4457;4506:2;4494:9;4485:7;4481:23;4477:32;4474:119;;;4512:79;;:::i;:::-;4474:119;4632:1;4657:53;4702:7;4693:6;4682:9;4678:22;4657:53;:::i;:::-;4647:63;;4603:117;4759:2;4785:53;4830:7;4821:6;4810:9;4806:22;4785:53;:::i;:::-;4775:63;;4730:118;4887:2;4913:53;4958:7;4949:6;4938:9;4934:22;4913:53;:::i;:::-;4903:63;;4858:118;4364:619;;;;;:::o;4989:86::-;5024:7;5064:4;5057:5;5053:16;5042:27;;4989:86;;;:::o;5081:112::-;5164:22;5180:5;5164:22;:::i;:::-;5159:3;5152:35;5081:112;;:::o;5199:214::-;5288:4;5326:2;5315:9;5311:18;5303:26;;5339:67;5403:1;5392:9;5388:17;5379:6;5339:67;:::i;:::-;5199:214;;;;:::o;5419:474::-;5487:6;5495;5544:2;5532:9;5523:7;5519:23;5515:32;5512:119;;;5550:79;;:::i;:::-;5512:119;5670:1;5695:53;5740:7;5731:6;5720:9;5716:22;5695:53;:::i;:::-;5685:63;;5641:117;5797:2;5823:53;5868:7;5859:6;5848:9;5844:22;5823:53;:::i;:::-;5813:63;;5768:118;5419:474;;;;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:222::-;6116:4;6154:2;6143:9;6139:18;6131:26;;6167:71;6235:1;6224:9;6220:17;6211:6;6167:71;:::i;:::-;6023:222;;;;:::o;6251:329::-;6310:6;6359:2;6347:9;6338:7;6334:23;6330:32;6327:119;;;6365:79;;:::i;:::-;6327:119;6485:1;6510:53;6555:7;6546:6;6535:9;6531:22;6510:53;:::i;:::-;6500:63;;6456:117;6251:329;;;;:::o;6586:474::-;6654:6;6662;6711:2;6699:9;6690:7;6686:23;6682:32;6679:119;;;6717:79;;:::i;:::-;6679:119;6837:1;6862:53;6907:7;6898:6;6887:9;6883:22;6862:53;:::i;:::-;6852:63;;6808:117;6964:2;6990:53;7035:7;7026:6;7015:9;7011:22;6990:53;:::i;:::-;6980:63;;6935:118;6586:474;;;;;:::o;7066:619::-;7143:6;7151;7159;7208:2;7196:9;7187:7;7183:23;7179:32;7176:119;;;7214:79;;:::i;:::-;7176:119;7334:1;7359:53;7404:7;7395:6;7384:9;7380:22;7359:53;:::i;:::-;7349:63;;7305:117;7461:2;7487:53;7532:7;7523:6;7512:9;7508:22;7487:53;:::i;:::-;7477:63;;7432:118;7589:2;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7560:118;7066:619;;;;;:::o;7691:108::-;7768:24;7786:5;7768:24;:::i;:::-;7763:3;7756:37;7691:108;;:::o;7805:99::-;7876:21;7891:5;7876:21;:::i;:::-;7871:3;7864:34;7805:99;;:::o;7990:722::-;8157:4;8152:3;8148:14;8250:4;8243:5;8239:16;8233:23;8269:63;8326:4;8321:3;8317:14;8303:12;8269:63;:::i;:::-;8172:170;8433:4;8426:5;8422:16;8416:23;8452:63;8509:4;8504:3;8500:14;8486:12;8452:63;:::i;:::-;8352:173;8619:4;8612:5;8608:16;8602:23;8638:57;8689:4;8684:3;8680:14;8666:12;8638:57;:::i;:::-;8535:170;8126:586;7990:722;;:::o;8718:362::-;8881:4;8919:2;8908:9;8904:18;8896:26;;8932:141;9070:1;9059:9;9055:17;9046:6;8932:141;:::i;:::-;8718:362;;;;:::o;9086:180::-;9134:77;9131:1;9124:88;9231:4;9228:1;9221:15;9255:4;9252:1;9245:15;9272:320;9316:6;9353:1;9347:4;9343:12;9333:22;;9400:1;9394:4;9390:12;9421:18;9411:81;;9477:4;9469:6;9465:17;9455:27;;9411:81;9539:2;9531:6;9528:14;9508:18;9505:38;9502:84;;9558:18;;:::i;:::-;9502:84;9323:269;9272:320;;;:::o;9598:171::-;9738:23;9734:1;9726:6;9722:14;9715:47;9598:171;:::o;9775:366::-;9917:3;9938:67;10002:2;9997:3;9938:67;:::i;:::-;9931:74;;10014:93;10103:3;10014:93;:::i;:::-;10132:2;10127:3;10123:12;10116:19;;9775:366;;;:::o;10147:419::-;10313:4;10351:2;10340:9;10336:18;10328:26;;10400:9;10394:4;10390:20;10386:1;10375:9;10371:17;10364:47;10428:131;10554:4;10428:131;:::i;:::-;10420:139;;10147:419;;;:::o;10572:180::-;10620:77;10617:1;10610:88;10717:4;10714:1;10707:15;10741:4;10738:1;10731:15;10758:191;10798:3;10817:20;10835:1;10817:20;:::i;:::-;10812:25;;10851:20;10869:1;10851:20;:::i;:::-;10846:25;;10894:1;10891;10887:9;10880:16;;10915:3;10912:1;10909:10;10906:36;;;10922:18;;:::i;:::-;10906:36;10758:191;;;;:::o;10955:194::-;10995:4;11015:20;11033:1;11015:20;:::i;:::-;11010:25;;11049:20;11067:1;11049:20;:::i;:::-;11044:25;;11093:1;11090;11086:9;11078:17;;11117:1;11111:4;11108:11;11105:37;;;11122:18;;:::i;:::-;11105:37;10955:194;;;;:::o;11155:165::-;11295:17;11291:1;11283:6;11279:14;11272:41;11155:165;:::o;11326:366::-;11468:3;11489:67;11553:2;11548:3;11489:67;:::i;:::-;11482:74;;11565:93;11654:3;11565:93;:::i;:::-;11683:2;11678:3;11674:12;11667:19;;11326:366;;;:::o;11698:419::-;11864:4;11902:2;11891:9;11887:18;11879:26;;11951:9;11945:4;11941:20;11937:1;11926:9;11922:17;11915:47;11979:131;12105:4;11979:131;:::i;:::-;11971:139;;11698:419;;;:::o;12123:410::-;12163:7;12186:20;12204:1;12186:20;:::i;:::-;12181:25;;12220:20;12238:1;12220:20;:::i;:::-;12215:25;;12275:1;12272;12268:9;12297:30;12315:11;12297:30;:::i;:::-;12286:41;;12476:1;12467:7;12463:15;12460:1;12457:22;12437:1;12430:9;12410:83;12387:139;;12506:18;;:::i;:::-;12387:139;12171:362;12123:410;;;;:::o;12539:180::-;12587:77;12584:1;12577:88;12684:4;12681:1;12674:15;12708:4;12705:1;12698:15;12725:185;12765:1;12782:20;12800:1;12782:20;:::i;:::-;12777:25;;12816:20;12834:1;12816:20;:::i;:::-;12811:25;;12855:1;12845:35;;12860:18;;:::i;:::-;12845:35;12902:1;12899;12895:9;12890:14;;12725:185;;;;:::o;12916:176::-;13056:28;13052:1;13044:6;13040:14;13033:52;12916:176;:::o;13098:366::-;13240:3;13261:67;13325:2;13320:3;13261:67;:::i;:::-;13254:74;;13337:93;13426:3;13337:93;:::i;:::-;13455:2;13450:3;13446:12;13439:19;;13098:366;;;:::o;13470:419::-;13636:4;13674:2;13663:9;13659:18;13651:26;;13723:9;13717:4;13713:20;13709:1;13698:9;13694:17;13687:47;13751:131;13877:4;13751:131;:::i;:::-;13743:139;;13470:419;;;:::o;13895:170::-;14035:22;14031:1;14023:6;14019:14;14012:46;13895:170;:::o;14071:366::-;14213:3;14234:67;14298:2;14293:3;14234:67;:::i;:::-;14227:74;;14310:93;14399:3;14310:93;:::i;:::-;14428:2;14423:3;14419:12;14412:19;;14071:366;;;:::o;14443:419::-;14609:4;14647:2;14636:9;14632:18;14624:26;;14696:9;14690:4;14686:20;14682:1;14671:9;14667:17;14660:47;14724:131;14850:4;14724:131;:::i;:::-;14716:139;;14443:419;;;:::o;14868:178::-;15008:30;15004:1;14996:6;14992:14;14985:54;14868:178;:::o;15052:366::-;15194:3;15215:67;15279:2;15274:3;15215:67;:::i;:::-;15208:74;;15291:93;15380:3;15291:93;:::i;:::-;15409:2;15404:3;15400:12;15393:19;;15052:366;;;:::o;15424:419::-;15590:4;15628:2;15617:9;15613:18;15605:26;;15677:9;15671:4;15667:20;15663:1;15652:9;15648:17;15641:47;15705:131;15831:4;15705:131;:::i;:::-;15697:139;;15424:419;;;:::o;15849:166::-;15989:18;15985:1;15977:6;15973:14;15966:42;15849:166;:::o;16021:366::-;16163:3;16184:67;16248:2;16243:3;16184:67;:::i;:::-;16177:74;;16260:93;16349:3;16260:93;:::i;:::-;16378:2;16373:3;16369:12;16362:19;;16021:366;;;:::o;16393:419::-;16559:4;16597:2;16586:9;16582:18;16574:26;;16646:9;16640:4;16636:20;16632:1;16621:9;16617:17;16610:47;16674:131;16800:4;16674:131;:::i;:::-;16666:139;;16393:419;;;:::o;16818:181::-;16958:33;16954:1;16946:6;16942:14;16935:57;16818:181;:::o;17005:366::-;17147:3;17168:67;17232:2;17227:3;17168:67;:::i;:::-;17161:74;;17244:93;17333:3;17244:93;:::i;:::-;17362:2;17357:3;17353:12;17346:19;;17005:366;;;:::o;17377:419::-;17543:4;17581:2;17570:9;17566:18;17558:26;;17630:9;17624:4;17620:20;17616:1;17605:9;17601:17;17594:47;17658:131;17784:4;17658:131;:::i;:::-;17650:139;;17377:419;;;:::o;17802:442::-;17951:4;17989:2;17978:9;17974:18;17966:26;;18002:71;18070:1;18059:9;18055:17;18046:6;18002:71;:::i;:::-;18083:72;18151:2;18140:9;18136:18;18127:6;18083:72;:::i;:::-;18165;18233:2;18222:9;18218:18;18209:6;18165:72;:::i;:::-;17802:442;;;;;;:::o;18250:170::-;18390:22;18386:1;18378:6;18374:14;18367:46;18250:170;:::o;18426:366::-;18568:3;18589:67;18653:2;18648:3;18589:67;:::i;:::-;18582:74;;18665:93;18754:3;18665:93;:::i;:::-;18783:2;18778:3;18774:12;18767:19;;18426:366;;;:::o;18798:419::-;18964:4;19002:2;18991:9;18987:18;18979:26;;19051:9;19045:4;19041:20;19037:1;19026:9;19022:17;19015:47;19079:131;19205:4;19079:131;:::i;:::-;19071:139;;18798:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1852200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"chargeSignBalance(uint256,uint256)": "infinite",
								"commissionPercent()": "2448",
								"commissionTreasury()": "2574",
								"decimals()": "384",
								"getApprovalInfo(address)": "infinite",
								"name()": "infinite",
								"owner()": "2633",
								"pause()": "infinite",
								"paused()": "2563",
								"payWage(uint256,address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"signBalances(uint256)": "infinite",
								"signsNFTContract()": "2641",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateCommission(uint256)": "infinite",
								"updateCommissionTreasury(address)": "infinite",
								"updateSignsNFTContract(address)": "infinite",
								"withdrawSignBalance(uint256,uint256)": "infinite"
							},
							"internal": {
								"_isSignOwner(address,uint256)": "29"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1709,
									"end": 2291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1890,
									"end": 1900,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1880,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 1947,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1917,
									"end": 1948,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1934,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1917,
									"end": 1948,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1948,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1977,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1913,
									"end": 1977,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "F8AF67E500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 1977,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1977,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1913,
									"end": 1977,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2023,
									"end": 2024,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1992,
									"end": 2025,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1992,
									"end": 2025,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2011,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2025,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1992,
									"end": 2025,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2025,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1988,
									"end": 2058,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1988,
									"end": 2058,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "CFE2EA6300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2058,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1988,
									"end": 2058,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1988,
									"end": 2058,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2115,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2079,
									"end": 2095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2115,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2147,
									"end": 2166,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2144,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2126,
									"end": 2144,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2126,
									"end": 2166,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2197,
									"end": 2200,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1F4"
								},
								{
									"begin": 2177,
									"end": 2194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2177,
									"end": 2200,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2177,
									"end": 2200,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2177,
									"end": 2200,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2177,
									"end": 2200,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2283,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2244,
									"end": 2254,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2272,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2272,
									"end": 2280,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 2272,
									"end": 2280,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2272,
									"end": 2280,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2272,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2272,
									"end": 2282,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2272,
									"end": 2282,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2272,
									"end": 2282,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2272,
									"end": 2282,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2270,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 2268,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2268,
									"end": 2282,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2282,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2268,
									"end": 2282,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2282,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2268,
									"end": 2282,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "F4240"
								},
								{
									"begin": 2256,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2256,
									"end": 2282,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2282,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2282,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2256,
									"end": 2282,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2282,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2256,
									"end": 2282,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2243,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2238,
									"end": 2243,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2243,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2283,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2283,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2283,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2238,
									"end": 2283,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 2291,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3259,
									"end": 3268,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3250,
									"end": 3257,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3269,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3242,
									"end": 3275,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 3278,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3408,
									"end": 3417,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3404,
									"end": 3421,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3398,
									"end": 3422,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3449,
									"end": 3467,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3441,
									"end": 3447,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3438,
									"end": 3468,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3471,
									"end": 3550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 3435,
									"end": 3552,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 3642,
									"end": 3649,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3622,
									"end": 3631,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3640,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3576,
									"end": 3650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 3576,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3566,
									"end": 3650,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3369,
									"end": 3660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3720,
									"end": 3722,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3709,
									"end": 3718,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3705,
									"end": 3723,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3724,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3743,
									"end": 3749,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3740,
									"end": 3770,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3773,
									"end": 3852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3773,
									"end": 3852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 3737,
									"end": 3854,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 3944,
									"end": 3951,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3924,
									"end": 3933,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3920,
									"end": 3942,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3878,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3868,
									"end": 3952,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3670,
									"end": 3962,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4001,
									"end": 4003,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 4083,
									"end": 4090,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4080,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4072,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4059,
									"end": 4081,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4027,
									"end": 4091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 4027,
									"end": 4091,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4101,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4140,
									"end": 4142,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 4222,
									"end": 4229,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4213,
									"end": 4219,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4202,
									"end": 4211,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4198,
									"end": 4220,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4166,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 4166,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4111,
									"end": 4240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 4247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4333,
									"end": 4345,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4253,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4406,
									"end": 4483,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4403,
									"end": 4404,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4484,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4527,
									"end": 4531,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4532,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4594,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4626,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4619,
									"end": 4623,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4615,
									"end": 4627,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4672,
									"end": 4673,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4662,
									"end": 4674,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4741,
									"end": 4747,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4737,
									"end": 4754,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4811,
									"end": 4813,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4800,
									"end": 4814,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4777,
									"end": 4815,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4830,
									"end": 4848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4595,
									"end": 4864,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4544,
									"end": 4864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4919,
									"end": 4923,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4945,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4965,
									"end": 4968,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4969,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4996,
									"end": 4997,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4870,
									"end": 5011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5054,
									"end": 5060,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5098,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5089,
									"end": 5094,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5085,
									"end": 5099,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5081,
									"end": 5104,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5017,
									"end": 5110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5160,
									"end": 5168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5215,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5216,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5349,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5332,
									"end": 5350,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 5401,
									"end": 5467,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5390,
									"end": 5399,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 5371,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5519,
									"end": 5527,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5508,
									"end": 5517,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 5489,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5561,
									"end": 5565,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5557,
									"end": 5566,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5550,
									"end": 5555,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5546,
									"end": 5567,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5610,
									"end": 5614,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5600,
									"end": 5608,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5596,
									"end": 5615,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5586,
									"end": 5616,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5665,
									"end": 5672,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5694,
									"end": 5699,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5628,
									"end": 5705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5765,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5711,
									"end": 5771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 5905,
									"end": 5910,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 5887,
									"end": 5911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 5878,
									"end": 5912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 5860,
									"end": 5913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5777,
									"end": 5919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5968,
									"end": 5971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5989,
									"end": 5994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5925,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 6147,
									"end": 6154,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 6116,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 6250,
									"end": 6266,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 6226,
									"end": 6267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6218,
									"end": 6224,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6215,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6205,
									"end": 6216,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6177,
									"end": 6268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6171,
									"end": 6175,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6164,
									"end": 6269,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6082,
									"end": 6275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6329,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6281,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 6437,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 6536,
									"end": 6542,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6528,
									"end": 6534,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 6478,
									"end": 6543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6413,
									"end": 6549,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6360,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6632,
									"end": 6635,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6625,
									"end": 6630,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6622,
									"end": 6636,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 6723,
									"end": 6724,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6721,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 6686,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6652,
									"end": 6657,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6848,
									"end": 6850,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6843,
									"end": 6846,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6851,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 6914,
									"end": 6919,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6882,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 6984,
									"end": 6994,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6966,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6956,
									"end": 6964,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6952,
									"end": 6996,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7149,
									"end": 7151,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7147,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7134,
									"end": 7152,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7170,
									"end": 7178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 7267,
									"end": 7270,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 7249,
									"end": 7271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7222,
									"end": 7233,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 7193,
									"end": 7273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6747,
									"end": 7290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7350,
									"end": 7358,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7394,
									"end": 7398,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7390,
									"end": 7406,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7296,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7546,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7532,
									"end": 7537,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7529,
									"end": 7530,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 7525,
									"end": 7538,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 7496,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7492,
									"end": 7548,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7577,
									"end": 7581,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7571,
									"end": 7575,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7567,
									"end": 7582,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7470,
									"end": 7588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 7840,
									"end": 7843,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7834,
									"end": 7838,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 7815,
									"end": 7844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7877,
									"end": 7880,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7874,
									"end": 7875,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7870,
									"end": 7881,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7861,
									"end": 7882,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 8010,
									"end": 8047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8112,
									"end": 8130,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8104,
									"end": 8110,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8101,
									"end": 8131,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 8134,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8215,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 8178,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 8323,
									"end": 8329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 8263,
									"end": 8330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "tag",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8402,
									"end": 8416,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8430,
									"end": 8431,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9087,
									"end": 9088,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9110,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9153,
									"end": 9162,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9148,
									"end": 9151,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 9144,
									"end": 9163,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9138,
									"end": 9164,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9264,
									"end": 9270,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 9204,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9198,
									"end": 9202,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9191,
									"end": 9272,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9060,
									"end": 9282,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8477,
									"end": 8481,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8465,
									"end": 8471,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8461,
									"end": 8483,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 8543,
									"end": 8547,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 8511,
									"end": 8548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8570,
									"end": 8571,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8592,
									"end": 8606,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8677,
									"end": 8686,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8672,
									"end": 8675,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8668,
									"end": 8687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8662,
									"end": 8688,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8654,
									"end": 8660,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8647,
									"end": 8689,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8728,
									"end": 8729,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8720,
									"end": 8726,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8716,
									"end": 8730,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8775,
									"end": 8777,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8764,
									"end": 8773,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8760,
									"end": 8778,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8618,
									"end": 8619,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8626,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8811,
									"end": 8818,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8878,
									"end": 8887,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8873,
									"end": 8876,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8869,
									"end": 8888,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8863,
									"end": 8889,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 8963,
									"end": 8967,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8955,
									"end": 8961,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8951,
									"end": 8968,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8940,
									"end": 8949,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 8921,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8913,
									"end": 8919,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8906,
									"end": 8970,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8828,
									"end": 8984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9030,
									"end": 9031,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 9018,
									"end": 9024,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9014,
									"end": 9028,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9010,
									"end": 9032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9004,
									"end": 9008,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8997,
									"end": 9033,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7893,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 9399,
									"end": 9404,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 9381,
									"end": 9405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9376,
									"end": 9379,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9369,
									"end": 9406,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9294,
									"end": 9412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9549,
									"end": 9551,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9538,
									"end": 9547,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9534,
									"end": 9552,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9628,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9615,
									"end": 9632,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9606,
									"end": 9612,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 9562,
									"end": 9633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9418,
									"end": 9640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9646,
									"end": 9826,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 9646,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9694,
									"end": 9771,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9691,
									"end": 9692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9684,
									"end": 9772,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9791,
									"end": 9795,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 9788,
									"end": 9789,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 9781,
									"end": 9796,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9815,
									"end": 9819,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 9812,
									"end": 9813,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9805,
									"end": 9820,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9874,
									"end": 9882,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9921,
									"end": 9926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9918,
									"end": 9919,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9914,
									"end": 9927,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 9893,
									"end": 9927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9893,
									"end": 9927,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9832,
									"end": 9934,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9832,
									"end": 9934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10001,
									"end": 10006,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10008,
									"end": 10012,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10032,
									"end": 10038,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10023,
									"end": 10038,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10023,
									"end": 10038,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10056,
									"end": 10061,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10047,
									"end": 10061,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10047,
									"end": 10061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "tag",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10091,
									"end": 10092,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10081,
									"end": 10089,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10078,
									"end": 10093,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10186,
									"end": 10190,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10181,
									"end": 10184,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10177,
									"end": 10191,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 10171,
									"end": 10175,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10168,
									"end": 10192,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 10195,
									"end": 10213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "tag",
									"source": 9,
									"value": "215"
								},
								{
									"begin": 10195,
									"end": 10213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "tag",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 10165,
									"end": 10215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10245,
									"end": 10246,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10235,
									"end": 10243,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10231,
									"end": 10247,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10660,
									"end": 10664,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10653,
									"end": 10658,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10649,
									"end": 10665,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 10640,
									"end": 10665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10640,
									"end": 10665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "tag",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 10228,
									"end": 10679,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10710,
									"end": 10714,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10704,
									"end": 10708,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10700,
									"end": 10715,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 10692,
									"end": 10715,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10692,
									"end": 10715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "217"
								},
								{
									"begin": 10763,
									"end": 10771,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 10740,
									"end": 10772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "tag",
									"source": 9,
									"value": "217"
								},
								{
									"begin": 10740,
									"end": 10772,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10772,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10772,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "tag",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 10070,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9940,
									"end": 10788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10848,
									"end": 10853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11039,
									"end": 11047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11060,
									"end": 11061,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11051,
									"end": 11061,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11051,
									"end": 11061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11062,
									"end": 11067,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11062,
									"end": 11067,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "tag",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 11029,
									"end": 11069,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11088,
									"end": 11092,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11105,
									"end": 11106,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11096,
									"end": 11106,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11096,
									"end": 11106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11107,
									"end": 11112,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11107,
									"end": 11112,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "tag",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 11078,
									"end": 11114,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11174,
									"end": 11178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11222,
									"end": 11223,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11258,
									"end": 11259,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "tag",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 11217,
									"end": 11244,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11235,
									"end": 11236,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11226,
									"end": 11236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11226,
									"end": 11236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11237,
									"end": 11242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11237,
									"end": 11242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11237,
									"end": 11242,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "tag",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 11253,
									"end": 11444,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11298,
									"end": 11301,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 11288,
									"end": 11296,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11285,
									"end": 11302,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "225"
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 11305,
									"end": 11323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "tag",
									"source": 9,
									"value": "225"
								},
								{
									"begin": 11305,
									"end": 11323,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "tag",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 11282,
									"end": 11325,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11354,
									"end": 11362,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11351,
									"end": 11352,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 11347,
									"end": 11363,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 11338,
									"end": 11363,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11338,
									"end": 11363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11389,
									"end": 11392,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11382,
									"end": 11387,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11379,
									"end": 11393,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 11396,
									"end": 11414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "tag",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 11396,
									"end": 11414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "tag",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 11376,
									"end": 11416,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11429,
									"end": 11434,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11429,
									"end": 11434,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11429,
									"end": 11434,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "tag",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11167,
									"end": 11444,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11553,
									"end": 11555,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11543,
									"end": 11551,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11540,
									"end": 11556,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11534,
									"end": 11537,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 11528,
									"end": 11532,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11525,
									"end": 11538,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11521,
									"end": 11557,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 11503,
									"end": 11505,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 11493,
									"end": 11501,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11490,
									"end": 11506,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11485,
									"end": 11487,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 11479,
									"end": 11483,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11476,
									"end": 11488,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11472,
									"end": 11507,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 11456,
									"end": 11567,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11609,
									"end": 11617,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11603,
									"end": 11607,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11599,
									"end": 11618,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 11590,
									"end": 11618,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11590,
									"end": 11618,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11644,
									"end": 11647,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11637,
									"end": 11642,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11634,
									"end": 11648,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 11651,
									"end": 11669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "tag",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 11651,
									"end": 11669,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "tag",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 11631,
									"end": 11671,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11684,
									"end": 11689,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 11684,
									"end": 11689,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "tag",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 11453,
									"end": 11699,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 11762,
									"end": 11765,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11752,
									"end": 11760,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11746,
									"end": 11750,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11743,
									"end": 11744,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 11724,
									"end": 11766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "tag",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 11724,
									"end": 11766,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11709,
									"end": 11766,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11798,
									"end": 11802,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11793,
									"end": 11796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11789,
									"end": 11803,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 11782,
									"end": 11787,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11779,
									"end": 11804,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "232"
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 11807,
									"end": 11825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "tag",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 11807,
									"end": 11825,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "tag",
									"source": 9,
									"value": "232"
								},
								{
									"begin": 11776,
									"end": 11827,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11856,
									"end": 11860,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11849,
									"end": 11854,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11845,
									"end": 11861,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 11836,
									"end": 11861,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11836,
									"end": 11861,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "tag",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10794,
									"end": 11867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11908,
									"end": 11915,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11948,
									"end": 11952,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 11941,
									"end": 11946,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11937,
									"end": 11953,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 11926,
									"end": 11953,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11926,
									"end": 11953,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11873,
									"end": 11959,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11873,
									"end": 11959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12023,
									"end": 12028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 12065,
									"end": 12069,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12047,
									"end": 12070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "tag",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 12047,
									"end": 12070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12039,
									"end": 12070,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12039,
									"end": 12070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 12107,
									"end": 12115,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 12091,
									"end": 12116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "tag",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 12091,
									"end": 12116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12079,
									"end": 12116,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12079,
									"end": 12116,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "238"
								},
								{
									"begin": 12172,
									"end": 12238,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12162,
									"end": 12170,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12156,
									"end": 12160,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 12135,
									"end": 12239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "tag",
									"source": 9,
									"value": "238"
								},
								{
									"begin": 12135,
									"end": 12239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12126,
									"end": 12239,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12126,
									"end": 12239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11965,
									"end": 12246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11965,
									"end": 12246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12292,
									"end": 12299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "240"
								},
								{
									"begin": 12333,
									"end": 12334,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12315,
									"end": 12335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "tag",
									"source": 9,
									"value": "240"
								},
								{
									"begin": 12315,
									"end": 12335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12310,
									"end": 12335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12310,
									"end": 12335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "241"
								},
								{
									"begin": 12367,
									"end": 12368,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12349,
									"end": 12369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "tag",
									"source": 9,
									"value": "241"
								},
								{
									"begin": 12349,
									"end": 12369,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12344,
									"end": 12369,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12344,
									"end": 12369,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12404,
									"end": 12405,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12401,
									"end": 12402,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12397,
									"end": 12406,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "242"
								},
								{
									"begin": 12444,
									"end": 12455,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12426,
									"end": 12456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "tag",
									"source": 9,
									"value": "242"
								},
								{
									"begin": 12426,
									"end": 12456,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12415,
									"end": 12456,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12415,
									"end": 12456,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12605,
									"end": 12606,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12596,
									"end": 12603,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12592,
									"end": 12607,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 12589,
									"end": 12590,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12586,
									"end": 12608,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 12566,
									"end": 12567,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12559,
									"end": 12568,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 12539,
									"end": 12622,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "243"
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 12635,
									"end": 12653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "tag",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 12635,
									"end": 12653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "tag",
									"source": 9,
									"value": "243"
								},
								{
									"begin": 12516,
									"end": 12655,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12300,
									"end": 12662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12252,
									"end": 12662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12252,
									"end": 12662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12708,
									"end": 12711,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 12745,
									"end": 12746,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12727,
									"end": 12747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "tag",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 12727,
									"end": 12747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12722,
									"end": 12747,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12722,
									"end": 12747,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 12779,
									"end": 12780,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12761,
									"end": 12781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "tag",
									"source": 9,
									"value": "247"
								},
								{
									"begin": 12761,
									"end": 12781,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12756,
									"end": 12781,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12756,
									"end": 12781,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12804,
									"end": 12805,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12801,
									"end": 12802,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12797,
									"end": 12806,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12790,
									"end": 12806,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12790,
									"end": 12806,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12825,
									"end": 12828,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 12822,
									"end": 12823,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12819,
									"end": 12829,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "248"
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "249"
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 12832,
									"end": 12850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "tag",
									"source": 9,
									"value": "249"
								},
								{
									"begin": 12832,
									"end": 12850,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "tag",
									"source": 9,
									"value": "248"
								},
								{
									"begin": 12816,
									"end": 12852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12668,
									"end": 12859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12668,
									"end": 12859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "251"
								},
								{
									"begin": 12970,
									"end": 12975,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 12952,
									"end": 12976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "tag",
									"source": 9,
									"value": "251"
								},
								{
									"begin": 12952,
									"end": 12976,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12947,
									"end": 12950,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12940,
									"end": 12977,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12865,
									"end": 12983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12865,
									"end": 12983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13138,
									"end": 13142,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13176,
									"end": 13178,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 13165,
									"end": 13174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13161,
									"end": 13179,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13153,
									"end": 13179,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13153,
									"end": 13179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "253"
								},
								{
									"begin": 13257,
									"end": 13258,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13246,
									"end": 13255,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13242,
									"end": 13259,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13233,
									"end": 13239,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 13189,
									"end": 13260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "tag",
									"source": 9,
									"value": "253"
								},
								{
									"begin": 13189,
									"end": 13260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 13338,
									"end": 13340,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13327,
									"end": 13336,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13323,
									"end": 13341,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13314,
									"end": 13320,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 13270,
									"end": 13342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "tag",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 13270,
									"end": 13342,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 13420,
									"end": 13422,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 13409,
									"end": 13418,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13405,
									"end": 13423,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13396,
									"end": 13402,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 13352,
									"end": 13424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "tag",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 13352,
									"end": 13424,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12989,
									"end": 13431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13530,
									"end": 13534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13568,
									"end": 13570,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13557,
									"end": 13566,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13553,
									"end": 13571,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13545,
									"end": 13571,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13545,
									"end": 13571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 13649,
									"end": 13650,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13638,
									"end": 13647,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13634,
									"end": 13651,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13625,
									"end": 13631,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 13581,
									"end": 13652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "tag",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 13581,
									"end": 13652,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13659,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13437,
									"end": 13659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 10443,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9c9f8ee8c697360ab460de192a3a85ee1ba861ba6fe6faafd0645f006a8922a64736f6c634300081a0033",
									".code": [
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "77D3550B"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "E95850DF"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "EF9ECC1D"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "A9B493E0"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "CA525485"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "77D3550B"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "9D55FBA7"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "A3262EA2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "5E182096"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "5E182096"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "74612F19"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "1EC48CF7"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "2FCDC5FD"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 416,
											"end": 10443,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 10194,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 10194,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 10194,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 9953,
											"end": 10182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 9953,
											"end": 10182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 9953,
											"end": 10182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 8013,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 8013,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 8805,
											"end": 8872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2612,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2612,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 9417,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 9417,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 587,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 587,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 8734,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 9023,
											"end": 9290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9023,
											"end": 9290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 515,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 515,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9738,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 9738,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 9738,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3393,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3393,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 667,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 667,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5135,
											"end": 7888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5135,
											"end": 7888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5135,
											"end": 7888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10359,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10359,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 10359,
											"end": 10375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10359,
											"end": 10375,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 10359,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10390,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 10400,
											"end": 10405,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 10390,
											"end": 10421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10390,
											"end": 10421,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 10390,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10157,
											"end": 10161,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10165,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10167,
											"end": 10173,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 10138,
											"end": 10174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10138,
											"end": 10174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10131,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10131,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 10182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8123,
											"end": 8124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8100,
											"end": 8125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8100,
											"end": 8125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8096,
											"end": 8154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F8AF67E500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8154,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8096,
											"end": 8154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 8165,
											"end": 8181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F2610996D245D9B77E4FF84C2174EEA0B76FB44C422218404F66E28816D78FB9"
										},
										{
											"begin": 8230,
											"end": 8241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 8211,
											"end": 8242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8242,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 8805,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8854,
											"end": 8864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 8854,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 8854,
											"end": 8864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8854,
											"end": 8864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 8854,
											"end": 8864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2719,
											"end": 2758,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2758,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2758,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2719,
											"end": 2758,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2806,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2806,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 2972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3009,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2984,
											"end": 3000,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3008,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2983,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2975,
											"end": 3009,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3009,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2975,
											"end": 3009,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 3009,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 3009,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3035,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3020,
											"end": 3061,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3020,
											"end": 3061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3145,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3134,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3114,
											"end": 3145,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3145,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "577DFADB80AB9A5336C633F3FA5F59C296D18A29AA6AE9E4598762748E1F4AFD"
										},
										{
											"begin": 3199,
											"end": 3205,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3171,
											"end": 3206,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3206,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3214,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 3214,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 3214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 9530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9506,
											"end": 9531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9517,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9506,
											"end": 9531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 9502,
											"end": 9564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "CFE2EA6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9564,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 9502,
											"end": 9564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9596,
											"end": 9607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 9575,
											"end": 9593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4422C0C4B301436298CCE7DE4B586B1E044E671D0EFBFEB88689161EBD95DD4F"
										},
										{
											"begin": 9649,
											"end": 9660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 9623,
											"end": 9661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9661,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 8734,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 8781,
											"end": 8787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 8781,
											"end": 8789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8781,
											"end": 8789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 8781,
											"end": 8789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 9113,
											"end": 9133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9148,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9176,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 9109,
											"end": 9176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DC81DB8500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 9109,
											"end": 9176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 9187,
											"end": 9227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9227,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9227,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13F60DD2B588490608C3FF1932A3DAEB4087F3D5AF04B97E5C2A16B5B4C0302E"
										},
										{
											"begin": 9261,
											"end": 9281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 9243,
											"end": 9282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9282,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 515,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9881,
											"end": 9885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 9926,
											"end": 9928,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9930,
											"end": 9936,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 9911,
											"end": 9937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 9911,
											"end": 9937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9904,
											"end": 9937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9904,
											"end": 9937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3582,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3562,
											"end": 3572,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3581,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3561,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3549,
											"end": 3582,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3582,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3549,
											"end": 3582,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3544,
											"end": 3610,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "DE271CF500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3610,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3544,
											"end": 3610,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3641,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3646,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3670,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3631,
											"end": 3670,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3670,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3670,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3631,
											"end": 3670,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 3715,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3705,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3706,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3715,
											"modifierDepth": 2,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3749,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3681,
											"end": 3749,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A77130EF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3749,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3749,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3681,
											"end": 3749,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 3844,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3833,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3813,
											"end": 3844,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3844,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3990,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3969,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3983,
											"end": 3989,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3940,
											"end": 3990,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3990,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3940,
											"end": 3990,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3990,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3990,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4016,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4001,
											"end": 4036,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4001,
											"end": 4036,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4102,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4090,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4E073DD16EEC477FBB059BDA1F0796F0D06EEBC4C53568E3E77A4084228FD4EB"
										},
										{
											"begin": 4104,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 4062,
											"end": 4111,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4111,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 4119,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 4119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 667,
											"end": 700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5294,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 5294,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5318,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5294,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2366,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2386,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2352,
											"end": 2415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "5C427CD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2415,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2352,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5346,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5341,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5346,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5370,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5331,
											"end": 5370,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5370,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5370,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5331,
											"end": 5370,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5413,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5428,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5436,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5437,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5437,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5437,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5493,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5483,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5493,
											"modifierDepth": 3,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5493,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5493,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5493,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5525,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5726,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 771,
											"end": 776,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 5809,
											"end": 5826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5809,
											"end": 5826,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5806,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5826,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5800,
											"end": 5826,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5826,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5826,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5800,
											"end": 5826,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5826,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5800,
											"end": 5826,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5842,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5799,
											"end": 5842,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5842,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5842,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5799,
											"end": 5842,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5842,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5799,
											"end": 5842,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5842,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5842,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5898,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5898,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5873,
											"end": 5898,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5898,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5898,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5873,
											"end": 5898,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5898,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5873,
											"end": 5898,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5898,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5898,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6016,
											"end": 6022,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6013,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6022,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5999,
											"end": 6022,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6022,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6022,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5999,
											"end": 6022,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6022,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5999,
											"end": 6022,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5987,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 5995,
											"modifierDepth": 3,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5996,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6022,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6022,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6022,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6022,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6134,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6130,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6114,
											"end": 6134,
											"modifierDepth": 3,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6110,
											"end": 6496,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6110,
											"end": 6496,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 6110,
											"end": 6496,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6291,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6340,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6339,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6302,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6294,
											"end": 6340,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6340,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6294,
											"end": 6340,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6340,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6340,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6384,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6359,
											"end": 6415,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6359,
											"end": 6415,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6454,
											"end": 6461,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "ACFA15EBE340982FEF95D43AAFC25D741382D7928A00055A209274FA615D5277"
										},
										{
											"begin": 6463,
											"end": 6479,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6439,
											"end": 6480,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6480,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6496,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6110,
											"end": 6496,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 6110,
											"end": 6496,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6674,
											"end": 6686,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6721,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6698,
											"end": 6705,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6720,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6697,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6689,
											"end": 6721,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6721,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6689,
											"end": 6721,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6674,
											"end": 6721,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6674,
											"end": 6721,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6751,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 6736,
											"end": 6776,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 6736,
											"end": 6776,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6835,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6819,
											"end": 6826,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4C3044279DAEA82275BC16A26600FE0C196CB65422B138C02DC86FB861B174CA"
										},
										{
											"begin": 6837,
											"end": 6850,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6810,
											"end": 6851,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6851,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 6863,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6966,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6966,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6966,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7000,
											"end": 7001,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 7001,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6981,
											"end": 7001,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7102,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7089,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7097,
											"modifierDepth": 3,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7098,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7102,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7102,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7102,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7102,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7151,
											"end": 7152,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7148,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7152,
											"modifierDepth": 3,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7592,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7592,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7131,
											"end": 7592,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7360,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7395,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7372,
											"end": 7379,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7381,
											"end": 7394,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7363,
											"end": 7371,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 7363,
											"end": 7395,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7363,
											"end": 7395,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7363,
											"end": 7395,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7395,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7395,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7422,
											"end": 7429,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 7414,
											"end": 7462,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 7414,
											"end": 7462,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7536,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7520,
											"end": 7527,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "5D16C483BEE69284681447FE545192ACC0F537A2CD7C2CD35593A1EDB5243290"
										},
										{
											"begin": 7538,
											"end": 7551,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7575,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7559,
											"modifierDepth": 3,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7575,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 7553,
											"end": 7575,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7575,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7575,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7553,
											"end": 7575,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7575,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 7553,
											"end": 7575,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7504,
											"end": 7576,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7504,
											"end": 7576,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7592,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7592,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7131,
											"end": 7592,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7647,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "574264649C9D702F91C09E683982319DA6546E5CFEE0A4898A3BD6BF1C63042F"
										},
										{
											"begin": 7649,
											"end": 7663,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7665,
											"end": 7671,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7625,
											"end": 7672,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7672,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5709,
											"end": 7684,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7756,
											"end": 7769,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7821,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7805,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7821,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 7799,
											"end": 7821,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7821,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7821,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7799,
											"end": 7821,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7821,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 7799,
											"end": 7821,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7868,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 7868,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7880,
											"modifierDepth": 3,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7880,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7880,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7880,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7880,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7880,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 7888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8409,
											"end": 8690,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8409,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8631,
											"end": 8642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8631,
											"end": 8642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8690,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4188,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4198,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 4198,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4279,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4504,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4509,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 4512,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 4474,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4691,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4657,
											"end": 4710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 4657,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4710,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 4830,
											"end": 4837,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4785,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 4785,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 4958,
											"end": 4965,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4947,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4913,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 4913,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4858,
											"end": 4976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4989,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5024,
											"end": 5031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5064,
											"end": 5068,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5069,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5069,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5193,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 5081,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 5180,
											"end": 5185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 5164,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5186,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 5164,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5413,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5199,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 5403,
											"end": 5404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5379,
											"end": 5385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 5339,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5406,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 5339,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5413,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5530,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5542,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5515,
											"end": 5547,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5512,
											"end": 5631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5512,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 5512,
											"end": 5631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5550,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 5550,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5550,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5550,
											"end": 5629,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 5550,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5512,
											"end": 5631,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 5512,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 5740,
											"end": 5747,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5695,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5695,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5695,
											"end": 5748,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 5695,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5748,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5641,
											"end": 5758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5797,
											"end": 5799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 5868,
											"end": 5875,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5823,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6245,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6023,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 6235,
											"end": 6236,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6220,
											"end": 6237,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6217,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6167,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6238,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 6167,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6580,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 6251,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6310,
											"end": 6316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6345,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6334,
											"end": 6357,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6362,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6446,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 6327,
											"end": 6446,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6365,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6446,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 6327,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6510,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6580,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6580,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 6713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6697,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6709,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 6714,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6717,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6887,
											"end": 6896,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6862,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6915,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7035,
											"end": 7042,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6990,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 7060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7157,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7196,
											"end": 7205,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7187,
											"end": 7194,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7179,
											"end": 7211,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7295,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7176,
											"end": 7295,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 7214,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7214,
											"end": 7293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7293,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 7214,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7295,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7176,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7334,
											"end": 7335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7359,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7395,
											"end": 7401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7359,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7359,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7359,
											"end": 7412,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7359,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7412,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7487,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7532,
											"end": 7539,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7521,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7487,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 7487,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7487,
											"end": 7540,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7487,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7477,
											"end": 7540,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7477,
											"end": 7540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7591,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7615,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7691,
											"end": 7799,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7691,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7786,
											"end": 7791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7768,
											"end": 7792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7792,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7768,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7691,
											"end": 7799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7691,
											"end": 7799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7691,
											"end": 7799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 7904,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 7805,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 7891,
											"end": 7896,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7876,
											"end": 7897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 7874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7898,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 7904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 7904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 7904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8712,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7990,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8157,
											"end": 8161,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8152,
											"end": 8155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8250,
											"end": 8254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8233,
											"end": 8256,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 8326,
											"end": 8330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8317,
											"end": 8331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8303,
											"end": 8315,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8269,
											"end": 8332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8332,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 8269,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8172,
											"end": 8342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8439,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8507,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8500,
											"end": 8514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8452,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8515,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 8452,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8602,
											"end": 8625,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 8689,
											"end": 8693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8687,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8680,
											"end": 8694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 8678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8638,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8695,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 8638,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8126,
											"end": 8712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 9080,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 8718,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8921,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8908,
											"end": 8917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 8932,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 8932,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 9080,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 9080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 9080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 9080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 9080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9086,
											"end": 9266,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9086,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9211,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9124,
											"end": 9212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9259,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9592,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9272,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9354,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9347,
											"end": 9351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9355,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9355,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9394,
											"end": 9398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9402,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 9411,
											"end": 9492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9481,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9469,
											"end": 9475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9455,
											"end": 9482,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9455,
											"end": 9482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9492,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 9411,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9531,
											"end": 9537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9528,
											"end": 9542,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9543,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9502,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 9502,
											"end": 9586,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9558,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9502,
											"end": 9586,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 9502,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9323,
											"end": 9592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9769,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 9598,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9738,
											"end": 9761,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 10141,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 9775,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9938,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 10002,
											"end": 10004,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 9997,
											"end": 10000,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9938,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9938,
											"end": 10005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9938,
											"end": 10005,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 9938,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 10005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 10005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 10103,
											"end": 10106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 10014,
											"end": 10107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10107,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 10014,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10123,
											"end": 10135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 10141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 10141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 10141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 10141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10566,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 10147,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10317,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10351,
											"end": 10353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10340,
											"end": 10349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10394,
											"end": 10398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 10410,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10375,
											"end": 10384,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10371,
											"end": 10388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10364,
											"end": 10411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10428,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 10554,
											"end": 10558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10428,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10428,
											"end": 10559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10428,
											"end": 10559,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 10428,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10572,
											"end": 10752,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10572,
											"end": 10752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10620,
											"end": 10697,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10717,
											"end": 10721,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10714,
											"end": 10715,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10707,
											"end": 10722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10949,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 10758,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 10835,
											"end": 10836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10817,
											"end": 10837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10837,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10851,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 10869,
											"end": 10870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10851,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10851,
											"end": 10871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10851,
											"end": 10871,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 10851,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10846,
											"end": 10871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10846,
											"end": 10871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10894,
											"end": 10895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10887,
											"end": 10896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10880,
											"end": 10896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10880,
											"end": 10896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10915,
											"end": 10918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10909,
											"end": 10919,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10922,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10949,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10955,
											"end": 11149,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 10955,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10995,
											"end": 10999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11015,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 11015,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11015,
											"end": 11035,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 11015,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 11035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 11035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 11067,
											"end": 11068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 11049,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11049,
											"end": 11069,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 11049,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11069,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11093,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11090,
											"end": 11091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11086,
											"end": 11095,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11078,
											"end": 11095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11078,
											"end": 11095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11117,
											"end": 11118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11119,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11142,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 11105,
											"end": 11142,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11122,
											"end": 11140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11142,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 11105,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10955,
											"end": 11149,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10955,
											"end": 11149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10955,
											"end": 11149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10955,
											"end": 11149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10955,
											"end": 11149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11320,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11155,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11295,
											"end": 11312,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11272,
											"end": 11313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11468,
											"end": 11471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 11553,
											"end": 11555,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11489,
											"end": 11556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11482,
											"end": 11556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11482,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 11654,
											"end": 11657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11565,
											"end": 11658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 11686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11326,
											"end": 11692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11864,
											"end": 11868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11891,
											"end": 11900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11887,
											"end": 11905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11879,
											"end": 11905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11879,
											"end": 11905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 11949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 11961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11926,
											"end": 11935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11922,
											"end": 11939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 12105,
											"end": 12109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11979,
											"end": 12110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11971,
											"end": 12110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11971,
											"end": 12110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 12117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12533,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 12123,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 12204,
											"end": 12205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 12186,
											"end": 12206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12206,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 12186,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 12238,
											"end": 12239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 12220,
											"end": 12240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12240,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12277,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 12315,
											"end": 12326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 12297,
											"end": 12327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12327,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 12297,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12476,
											"end": 12477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12463,
											"end": 12478,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12460,
											"end": 12461,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12457,
											"end": 12479,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12437,
											"end": 12438,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12430,
											"end": 12439,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12410,
											"end": 12493,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 12387,
											"end": 12526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 12506,
											"end": 12524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12526,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 12387,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12719,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12539,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12664,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12584,
											"end": 12585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12688,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12681,
											"end": 12682,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12674,
											"end": 12689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12708,
											"end": 12712,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12705,
											"end": 12706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12698,
											"end": 12713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12725,
											"end": 12910,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12725,
											"end": 12910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12782,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 12800,
											"end": 12801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12782,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 12782,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12782,
											"end": 12802,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 12782,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12816,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 12834,
											"end": 12835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12816,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 12816,
											"end": 12836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12816,
											"end": 12836,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 12816,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12811,
											"end": 12836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12811,
											"end": 12836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12855,
											"end": 12856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12845,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 12845,
											"end": 12880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12860,
											"end": 12878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12845,
											"end": 12880,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 12845,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12902,
											"end": 12903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12899,
											"end": 12900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12895,
											"end": 12904,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 12904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 12904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12725,
											"end": 12910,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12725,
											"end": 12910,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12725,
											"end": 12910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12725,
											"end": 12910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12725,
											"end": 12910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 13092,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12916,
											"end": 13092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13056,
											"end": 13084,
											"name": "PUSH",
											"source": 9,
											"value": "436F6D6D697373696F6E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 13052,
											"end": 13053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13040,
											"end": 13054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13033,
											"end": 13085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 13092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 13092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13464,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13098,
											"end": 13464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13261,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 13325,
											"end": 13327,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 13320,
											"end": 13323,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 13261,
											"end": 13328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13328,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 13261,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13254,
											"end": 13328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13254,
											"end": 13328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13337,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 13426,
											"end": 13429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13337,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13337,
											"end": 13430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13337,
											"end": 13430,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 13337,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13450,
											"end": 13453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13446,
											"end": 13458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13889,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13470,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13663,
											"end": 13672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13659,
											"end": 13677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 13677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 13677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13717,
											"end": 13721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13713,
											"end": 13733,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13709,
											"end": 13710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13694,
											"end": 13711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13687,
											"end": 13734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13751,
											"end": 13882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13751,
											"end": 13882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13751,
											"end": 13882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13751,
											"end": 13882,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 13751,
											"end": 13882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13743,
											"end": 13882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13743,
											"end": 13882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13895,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14057,
											"name": "PUSH",
											"source": 9,
											"value": "57616765207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 14031,
											"end": 14032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14019,
											"end": 14033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14012,
											"end": 14058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 14065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 14065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 14298,
											"end": 14300,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 14293,
											"end": 14296,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 14234,
											"end": 14301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14227,
											"end": 14301,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14227,
											"end": 14301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 14399,
											"end": 14402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 14310,
											"end": 14403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14428,
											"end": 14430,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14423,
											"end": 14426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14419,
											"end": 14431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14412,
											"end": 14431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14412,
											"end": 14431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14609,
											"end": 14613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14647,
											"end": 14649,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14636,
											"end": 14645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14632,
											"end": 14650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14696,
											"end": 14705,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14690,
											"end": 14694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14682,
											"end": 14683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14671,
											"end": 14680,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14667,
											"end": 14684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14660,
											"end": 14707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 14850,
											"end": 14854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 14724,
											"end": 14855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14716,
											"end": 14855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14716,
											"end": 14855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 14862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 15046,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 14868,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "5061727469616C2077616765207472616E73666572206661696C656400000000"
										},
										{
											"begin": 15004,
											"end": 15005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14996,
											"end": 15002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14992,
											"end": 15006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 15046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 15046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15418,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 15052,
											"end": 15418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 15279,
											"end": 15281,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 15274,
											"end": 15277,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 15215,
											"end": 15282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 15380,
											"end": 15383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 15291,
											"end": 15384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15384,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 15291,
											"end": 15384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15411,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15404,
											"end": 15407,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15400,
											"end": 15412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15393,
											"end": 15412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15393,
											"end": 15412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15843,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 15424,
											"end": 15843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15590,
											"end": 15594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15628,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15677,
											"end": 15686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15667,
											"end": 15687,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15663,
											"end": 15664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15652,
											"end": 15661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15648,
											"end": 15665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15641,
											"end": 15688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15705,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 15831,
											"end": 15835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15705,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 15705,
											"end": 15836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15705,
											"end": 15836,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 15705,
											"end": 15836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15697,
											"end": 15836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15697,
											"end": 15836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15849,
											"end": 16015,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 15849,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15989,
											"end": 16007,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 15985,
											"end": 15986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15977,
											"end": 15983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 15987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 16008,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15849,
											"end": 16015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15849,
											"end": 16015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16387,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 16021,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16163,
											"end": 16166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16184,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 16248,
											"end": 16250,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 16243,
											"end": 16246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16184,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 16184,
											"end": 16251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16184,
											"end": 16251,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 16184,
											"end": 16251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16177,
											"end": 16251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16177,
											"end": 16251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16260,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 16349,
											"end": 16352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16260,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 16260,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16260,
											"end": 16353,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 16260,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16373,
											"end": 16376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16369,
											"end": 16381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16362,
											"end": 16381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16362,
											"end": 16381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16812,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 16393,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16597,
											"end": 16599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16586,
											"end": 16595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16582,
											"end": 16600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16574,
											"end": 16600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16574,
											"end": 16600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16646,
											"end": 16655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16640,
											"end": 16644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16636,
											"end": 16656,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16632,
											"end": 16633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16617,
											"end": 16634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16610,
											"end": 16657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 16800,
											"end": 16804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 16674,
											"end": 16805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16805,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 16674,
											"end": 16805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16666,
											"end": 16805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16666,
											"end": 16805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16818,
											"end": 16999,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 16818,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16958,
											"end": 16991,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 16954,
											"end": 16955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16946,
											"end": 16952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16942,
											"end": 16956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 16992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16818,
											"end": 16999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16818,
											"end": 16999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17371,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 17005,
											"end": 17371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17147,
											"end": 17150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17168,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 17232,
											"end": 17234,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17227,
											"end": 17230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 17168,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17235,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 17168,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17161,
											"end": 17235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17161,
											"end": 17235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17244,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 17333,
											"end": 17336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17244,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 17244,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17244,
											"end": 17337,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 17244,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17362,
											"end": 17364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17357,
											"end": 17360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17346,
											"end": 17365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17346,
											"end": 17365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17543,
											"end": 17547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17581,
											"end": 17583,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17570,
											"end": 17579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17566,
											"end": 17584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17558,
											"end": 17584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17558,
											"end": 17584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17630,
											"end": 17639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17624,
											"end": 17628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17620,
											"end": 17640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17605,
											"end": 17614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17601,
											"end": 17618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17594,
											"end": 17641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 17784,
											"end": 17788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 17658,
											"end": 17789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17650,
											"end": 17789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17650,
											"end": 17789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17377,
											"end": 17796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17951,
											"end": 17955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17989,
											"end": 17991,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17978,
											"end": 17987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17974,
											"end": 17992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17966,
											"end": 17992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17966,
											"end": 17992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18002,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 18070,
											"end": 18071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18059,
											"end": 18068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18055,
											"end": 18072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18046,
											"end": 18052,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18002,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 18002,
											"end": 18073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18002,
											"end": 18073,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 18002,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 18151,
											"end": 18153,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18140,
											"end": 18149,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18136,
											"end": 18154,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18127,
											"end": 18133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 18083,
											"end": 18155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 18233,
											"end": 18235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18222,
											"end": 18231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18218,
											"end": 18236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18209,
											"end": 18215,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 18165,
											"end": 18237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18237,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 18165,
											"end": 18237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17802,
											"end": 18244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18250,
											"end": 18420,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 18250,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18390,
											"end": 18412,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 18386,
											"end": 18387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18374,
											"end": 18388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18367,
											"end": 18413,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18250,
											"end": 18420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18250,
											"end": 18420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18426,
											"end": 18792,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 18426,
											"end": 18792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18568,
											"end": 18571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18589,
											"end": 18656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 18653,
											"end": 18655,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 18648,
											"end": 18651,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18589,
											"end": 18656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 18589,
											"end": 18656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18589,
											"end": 18656,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 18589,
											"end": 18656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18582,
											"end": 18656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18582,
											"end": 18656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 18754,
											"end": 18757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 18665,
											"end": 18758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18758,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 18665,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18783,
											"end": 18785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18778,
											"end": 18781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18774,
											"end": 18786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18767,
											"end": 18786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18767,
											"end": 18786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18426,
											"end": 18792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18426,
											"end": 18792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18426,
											"end": 18792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18426,
											"end": 18792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18798,
											"end": 19217,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 18798,
											"end": 19217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18964,
											"end": 18968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19002,
											"end": 19004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18991,
											"end": 19000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18979,
											"end": 19005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18979,
											"end": 19005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19045,
											"end": 19049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19041,
											"end": 19061,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19037,
											"end": 19038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19026,
											"end": 19035,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19022,
											"end": 19039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19079,
											"end": 19210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 19205,
											"end": 19209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19079,
											"end": 19210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 19079,
											"end": 19210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19079,
											"end": 19210,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 19079,
											"end": 19210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19071,
											"end": 19210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19071,
											"end": 19210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18798,
											"end": 19217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18798,
											"end": 19217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18798,
											"end": 19217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18798,
											"end": 19217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Signs 2/SignsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"chargeSignBalance(uint256,uint256)": "5e182096",
							"commissionPercent()": "77d3550b",
							"commissionTreasury()": "e95850df",
							"decimals()": "313ce567",
							"getApprovalInfo(address)": "1ec48cf7",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"payWage(uint256,address,uint256)": "ef9ecc1d",
							"renounceOwnership()": "715018a6",
							"signBalances(uint256)": "ca525485",
							"signsNFTContract()": "a3262ea2",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateCommission(uint256)": "9d55fba7",
							"updateCommissionTreasury(address)": "74612f19",
							"updateSignsNFTContract(address)": "2fcdc5fd",
							"withdrawSignBalance(uint256,uint256)": "a9b493e0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_signsNFTContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_commissionTreasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSignBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNFTContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTreasuryAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CommissionPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"CommissionTreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCommissionPercent\",\"type\":\"uint256\"}],\"name\":\"CommissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requiredAmount\",\"type\":\"uint256\"}],\"name\":\"LowSignBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"NFTContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingUnpaid\",\"type\":\"uint256\"}],\"name\":\"PartialWagePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SignBalanceCharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SignBalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WagePaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"chargeSignBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getApprovalInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"carrier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payWage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingWage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPartialPayment\",\"type\":\"bool\"}],\"internalType\":\"struct SignToken.WagePaymentResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signsNFTContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCommissionPercent\",\"type\":\"uint256\"}],\"name\":\"updateCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateCommissionTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updateSignsNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawSignBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token for the Signs game economy, managing sign balances and wage payments\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"chargeSignBalance(uint256,uint256)\":{\"details\":\"Charges a sign's balance with tokens\",\"params\":{\"amount\":\"Amount of tokens to charge\",\"tokenId\":\"The ID of the sign to charge\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payWage(uint256,address,uint256)\":{\"details\":\"Pays wage to carrier from sign's balance, handles partial payments\",\"params\":{\"amount\":\"Amount of wage to pay\",\"carrier\":\"Address of the carrier to pay\",\"tokenId\":\"The ID of the sign\"},\"returns\":{\"_0\":\"result WagePaymentResult struct with payment details\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCommission(uint256)\":{\"details\":\"Updates the commission percentage\",\"params\":{\"newCommissionPercent\":\"New commission in basis points (1% = 100)\"}},\"updateCommissionTreasury(address)\":{\"details\":\"Updates the commission treasury address\",\"params\":{\"newTreasury\":\"New treasury address\"}},\"updateSignsNFTContract(address)\":{\"details\":\"Updates the SignsNFT contract address\",\"params\":{\"_newAddress\":\"New contract address\"}},\"withdrawSignBalance(uint256,uint256)\":{\"details\":\"Withdraws tokens from a sign's balance back to the owner\",\"params\":{\"amount\":\"Amount to withdraw\",\"tokenId\":\"The ID of the sign\"}}},\"title\":\"SignToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Signs 2/SignsToken.sol\":\"SignToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Signs 2/SignsToken.sol\":{\"keccak256\":\"0x63c0db7147c51489292d0795345b5e7c465cb6f7790cfc37892e7b1dae0c7daa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1654d40158ca8704e025b5dbcf2fdd59478fb7bd08bc8767ee259a1110c22a5e\",\"dweb:/ipfs/QmNYRQVueBwyxpZdASEKeEYeDky5bSthCG5u1r2yBoh4YB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 302,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1123,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "signsNFTContract",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1125,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "commissionPercent",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1127,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "commissionTreasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1134,
								"contract": "Signs 2/SignsToken.sol:SignToken",
								"label": "signBalances",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Signs 2/SignsToken.sol:76:9:\n   |\n76 |         address sender = msg.sender;\n   |         ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2793,
					"file": "Signs 2/SignsToken.sol",
					"start": 2779
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Signs 2/SignsToken.sol:216:27:\n    |\n216 |     function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\n    |                           ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8444,
					"file": "Signs 2/SignsToken.sol",
					"start": 8431
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Signs 2/SignsToken.sol:216:42:\n    |\n216 |     function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\n    |                                          ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8461,
					"file": "Signs 2/SignsToken.sol",
					"start": 8446
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> Signs 2/SignsToken.sol:216:5:\n    |\n216 |     function _isSignOwner(address owner, uint256 tokenId) internal view returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 8690,
					"file": "Signs 2/SignsToken.sol",
					"start": 8409
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1107,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1106
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1107,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1106
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1077,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1107,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1133:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1142:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1150:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 972,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 972,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 972,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 972,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 972,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 972,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 972,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 972,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 972,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 972,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 972,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 972,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 972,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 972,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 972,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 972,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 972,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1106:9788:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1050,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1050,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1050,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1050,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1050,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1050,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1051,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "306:6:6"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1076,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1076,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1076,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1106,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1106,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1106,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"Signs 2/SignsToken.sol": {
				"ast": {
					"absolutePath": "Signs 2/SignsToken.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						],
						"SignToken": [
							1745
						]
					},
					"id": 1746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 973,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 393,
							"src": "118:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 148,
							"src": "175:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 458,
							"src": "229:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "ERC20",
										"nameLocations": [
											"438:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "438:5:8"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "438:5:8"
								},
								{
									"baseName": {
										"id": 1116,
										"name": "Pausable",
										"nameLocations": [
											"445:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "445:8:8"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "445:8:8"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "Ownable",
										"nameLocations": [
											"455:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "455:7:8"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "455:7:8"
								},
								{
									"baseName": {
										"id": 1120,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"464:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "464:15:8"
									},
									"id": 1121,
									"nodeType": "InheritanceSpecifier",
									"src": "464:15:8"
								}
							],
							"canonicalName": "SignToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "295:119:8",
								"text": " @title SignToken\n @dev ERC20 token for the Signs game economy, managing sign balances and wage payments"
							},
							"fullyImplemented": true,
							"id": 1745,
							"linearizedBaseContracts": [
								1745,
								457,
								147,
								392,
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "SignToken",
							"nameLocation": "425:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a3262ea2",
									"id": 1123,
									"mutability": "mutable",
									"name": "signsNFTContract",
									"nameLocation": "530:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "515:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1122,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "77d3550b",
									"id": 1125,
									"mutability": "mutable",
									"name": "commissionPercent",
									"nameLocation": "602:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "587:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1124,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e95850df",
									"id": 1127,
									"mutability": "mutable",
									"name": "commissionTreasury",
									"nameLocation": "682:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "667:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1126,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "667:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1130,
									"mutability": "constant",
									"name": "BASIS_POINTS",
									"nameLocation": "756:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "731:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ca525485",
									"id": 1134,
									"mutability": "mutable",
									"name": "signBalances",
									"nameLocation": "862:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "827:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1133,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "835:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "827:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1132,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "846:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "577dfadb80ab9a5336c633f3fa5f59c296d18a29aa6ae9e4598762748e1f4afd",
									"id": 1140,
									"name": "SignBalanceCharged",
									"nameLocation": "931:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "966:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "950:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "983:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "975:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:41:8"
									},
									"src": "925:66:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4e073dd16eec477fbb059bda1f0796f0d06eebc4c53568e3e77a4084228fd4eb",
									"id": 1148,
									"name": "SignBalanceWithdrawn",
									"nameLocation": "1003:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1040:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1024:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1065:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1049:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1080:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1072:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:64:8"
									},
									"src": "997:91:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4c3044279daea82275bc16a26600fe0c196cb65422b138c02dc86fb861b174ca",
									"id": 1156,
									"name": "WagePaid",
									"nameLocation": "1100:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1125:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1109:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "1150:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1134:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1167:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1159:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:66:8"
									},
									"src": "1094:81:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb9",
									"id": 1160,
									"name": "NFTContractUpdated",
									"nameLocation": "1187:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1214:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1206:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:20:8"
									},
									"src": "1181:45:8"
								},
								{
									"anonymous": false,
									"eventSelector": "13f60dd2b588490608c3ff1932a3daeb4087f3d5af04b97e5c2a16b5b4c0302e",
									"id": 1164,
									"name": "CommissionUpdated",
									"nameLocation": "1238:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCommissionPercent",
												"nameLocation": "1264:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "1256:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:30:8"
									},
									"src": "1232:54:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4422c0c4b301436298cce7de4b586b1e044e671d0efbfeb88689161ebd95dd4f",
									"id": 1168,
									"name": "CommissionTreasuryUpdated",
									"nameLocation": "1298:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "1332:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1324:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:21:8"
									},
									"src": "1292:53:8"
								},
								{
									"anonymous": false,
									"eventSelector": "acfa15ebe340982fef95d43aafc25d741382d7928a00055a209274fa615d5277",
									"id": 1174,
									"name": "CommissionPaid",
									"nameLocation": "1357:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1388:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1372:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1405:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1397:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:41:8"
									},
									"src": "1351:62:8"
								},
								{
									"errorSelector": "5c427cd9",
									"id": 1176,
									"name": "UnauthorizedCaller",
									"nameLocation": "1446:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1464:2:8"
									},
									"src": "1440:27:8"
								},
								{
									"errorSelector": "dc81db85",
									"id": 1178,
									"name": "InvalidCommission",
									"nameLocation": "1479:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1496:2:8"
									},
									"src": "1473:26:8"
								},
								{
									"errorSelector": "cfe2ea63",
									"id": 1180,
									"name": "InvalidTreasuryAddress",
									"nameLocation": "1511:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1533:2:8"
									},
									"src": "1505:31:8"
								},
								{
									"errorSelector": "a77130ef",
									"id": 1182,
									"name": "InsufficientSignBalance",
									"nameLocation": "1548:23:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1571:2:8"
									},
									"src": "1542:32:8"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1184,
									"name": "InsufficientBalance",
									"nameLocation": "1586:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:2:8"
									},
									"src": "1580:28:8"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1186,
									"name": "InvalidAmount",
									"nameLocation": "1620:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:2:8"
									},
									"src": "1614:22:8"
								},
								{
									"errorSelector": "f8af67e5",
									"id": 1188,
									"name": "InvalidNFTContract",
									"nameLocation": "1648:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:2:8"
									},
									"src": "1642:27:8"
								},
								{
									"errorSelector": "de271cf5",
									"id": 1190,
									"name": "UnauthorizedOwner",
									"nameLocation": "1681:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1698:2:8"
									},
									"src": "1675:26:8"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "1902:389:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "_signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "1917:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1946:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1210,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1938:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1938:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1917:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "1913:64:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1215,
															"name": "InvalidNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "1957:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1957:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1217,
													"nodeType": "RevertStatement",
													"src": "1950:27:8"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1219,
														"name": "_commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "1992:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1220,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1992:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "1988:70:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1225,
															"name": "InvalidTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "2034:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2034:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1227,
													"nodeType": "RevertStatement",
													"src": "2027:31:8"
												}
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1229,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2079:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1230,
														"name": "_signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "2098:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2079:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "2079:36:8"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "2126:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1234,
														"name": "_commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "2147:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2126:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2126:40:8"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "commissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2177:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2197:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "2177:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2177:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2244:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2248:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2244:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f303030",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2256:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2268:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1246,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "2272:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2272:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2268:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2256:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "2238:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2238:45:8"
											}
										]
									},
									"id": 1253,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1201,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "1868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1202,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1194,
													"src": "1874:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1203,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1200,
												"name": "ERC20",
												"nameLocations": [
													"1862:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "1862:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1862:19:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1205,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1890:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1894:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1890:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1207,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1204,
												"name": "Ownable",
												"nameLocations": [
													"1882:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1882:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1882:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1745:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1731:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1774:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1760:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1760:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_signsNFTContract",
												"nameLocation": "1799:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1791:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_commissionTreasury",
												"nameLocation": "1835:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1827:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:141:8"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:0:8"
									},
									"scope": 1745,
									"src": "1709:582:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "2341:94:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1255,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2356:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2360:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2356:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1257,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2370:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2356:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "2352:63:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1259,
															"name": "UnauthorizedCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "2395:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2395:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1261,
													"nodeType": "RevertStatement",
													"src": "2388:27:8"
												}
											},
											{
												"id": 1263,
												"nodeType": "PlaceholderStatement",
												"src": "2426:1:8"
											}
										]
									},
									"id": 1265,
									"name": "onlySignsNFT",
									"nameLocation": "2326:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2338:2:8"
									},
									"src": "2317:118:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "2708:506:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "2723:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2733:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2723:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "2719:39:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1280,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2743:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2743:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1282,
													"nodeType": "RevertStatement",
													"src": "2736:22:8"
												}
											},
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2787:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1312,
														"src": "2779:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1284,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2779:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1288,
												"initialValue": {
													"expression": {
														"id": 1286,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2796:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2800:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2796:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2779:27:8"
											},
											{
												"assignments": [
													1290
												],
												"declarations": [
													{
														"constant": false,
														"id": 1290,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2965:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1312,
														"src": "2960:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1289,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2960:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"arguments": [
														{
															"id": 1292,
															"name": "signsNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2984:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3002:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1291,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1700
														],
														"referencedDeclaration": 1700,
														"src": "2975:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:49:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "3028:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3037:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3020:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "3020:41:8"
											},
											{
												"expression": {
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1301,
															"name": "signBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "3114:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1303,
														"indexExpression": {
															"id": 1302,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3127:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3114:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1304,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "3139:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3114:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "3114:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1308,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3190:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1309,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3199:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "SignBalanceCharged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3171:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "EmitStatement",
												"src": "3166:40:8"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "2443:163:8",
										"text": " @dev Charges a sign's balance with tokens\n @param tokenId The ID of the sign to charge\n @param amount Amount of tokens to charge"
									},
									"functionSelector": "5e182096",
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1272,
												"name": "nonReentrant",
												"nameLocations": [
													"2681:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "2681:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2681:12:8"
										},
										{
											"id": 1275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1274,
												"name": "whenNotPaused",
												"nameLocations": [
													"2694:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2694:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2694:13:8"
										}
									],
									"name": "chargeSignBalance",
									"nameLocation": "2621:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2647:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2639:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2664:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2656:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2638:33:8"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:0:8"
									},
									"scope": 1745,
									"src": "2612:602:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "3491:628:8",
										"statements": [
											{
												"condition": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3548:34:8",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1326,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3562:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3566:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3562:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1328,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "3574:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1325,
															"name": "_isSignOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "3549:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) view returns (bool)"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3549:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "3544:66:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1331,
															"name": "UnauthorizedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "3591:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1333,
													"nodeType": "RevertStatement",
													"src": "3584:26:8"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1335,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3635:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3645:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3635:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "3631:39:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1338,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "3655:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3655:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1340,
													"nodeType": "RevertStatement",
													"src": "3648:22:8"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1342,
															"name": "signBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "3685:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1344,
														"indexExpression": {
															"id": 1343,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "3698:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3685:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1345,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3709:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3685:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "IfStatement",
												"src": "3681:68:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1347,
															"name": "InsufficientSignBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "3724:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3724:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1349,
													"nodeType": "RevertStatement",
													"src": "3717:32:8"
												}
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1351,
															"name": "signBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "3813:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1353,
														"indexExpression": {
															"id": 1352,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "3826:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3813:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1354,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3838:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3813:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "3813:31:8"
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3930:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1378,
														"src": "3925:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1357,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3925:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "signsNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3953:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3971:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3975:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3971:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "3983:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1359,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1722
														],
														"referencedDeclaration": 1722,
														"src": "3940:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3925:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "4009:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4001:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "4001:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1372,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "4083:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1373,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4092:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4096:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4092:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1375,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "4104:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1371,
														"name": "SignBalanceWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "4062:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "EmitStatement",
												"src": "4057:54:8"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "3222:165:8",
										"text": " @dev Withdraws tokens from a sign's balance back to the owner\n @param tokenId The ID of the sign\n @param amount Amount to withdraw"
									},
									"functionSelector": "a9b493e0",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "nonReentrant",
												"nameLocations": [
													"3464:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "3464:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3464:12:8"
										},
										{
											"id": 1323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1322,
												"name": "whenNotPaused",
												"nameLocations": [
													"3477:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "3477:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3477:13:8"
										}
									],
									"name": "withdrawSignBalance",
									"nameLocation": "3402:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3430:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "3422:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3447:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "3439:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3421:33:8"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3491:0:8"
									},
									"scope": 1745,
									"src": "3393:726:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "SignToken.WagePaymentResult",
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "4127:205:8",
										"text": " @dev Pays wage to carrier from sign's balance\n @param tokenId The ID of the sign\n @param carrier Address of the carrier to pay\n @param amount Amount of wage to pay"
									},
									"id": 1387,
									"members": [
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "paidAmount",
											"nameLocation": "4382:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "4374:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1381,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4374:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "remainingWage",
											"nameLocation": "4438:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "4430:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1383,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4430:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "isPartialPayment",
											"nameLocation": "4486:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "4481:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1385,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4481:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WagePaymentResult",
									"nameLocation": "4345:17:8",
									"nodeType": "StructDefinition",
									"scope": 1745,
									"src": "4338:212:8",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "574264649c9d702f91c09e683982319da6546e5cfee0a4898a3bd6bf1c63042f",
									"id": 1395,
									"name": "LowSignBalance",
									"nameLocation": "4564:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4595:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4579:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "4612:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4604:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"indexed": false,
												"mutability": "mutable",
												"name": "requiredAmount",
												"nameLocation": "4636:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4628:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:73:8"
									},
									"src": "4558:94:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5d16c483bee69284681447fe545192acc0f537a2cd7c2cd35593a1edb5243290",
									"id": 1405,
									"name": "PartialWagePaid",
									"nameLocation": "4664:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4706:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4690:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"indexed": true,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "4741:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4725:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"indexed": false,
												"mutability": "mutable",
												"name": "paidAmount",
												"nameLocation": "4768:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4760:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4760:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"indexed": false,
												"mutability": "mutable",
												"name": "remainingUnpaid",
												"nameLocation": "4798:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4790:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4679:141:8"
									},
									"src": "4658:163:8"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "5320:2568:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "5335:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5345:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5335:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1430,
												"nodeType": "IfStatement",
												"src": "5331:39:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1427,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "5355:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5355:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1429,
													"nodeType": "RevertStatement",
													"src": "5348:22:8"
												}
											},
											{
												"assignments": [
													1432
												],
												"declarations": [
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "5399:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "5391:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5391:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1436,
												"initialValue": {
													"baseExpression": {
														"id": 1433,
														"name": "signBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "5416:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1435,
													"indexExpression": {
														"id": 1434,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "5429:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5416:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5391:46:8"
											},
											{
												"assignments": [
													1438
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "isFullPayment",
														"nameLocation": "5453:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "5448:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5448:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1442,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1439,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "5469:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1440,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "5487:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5469:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5448:45:8"
											},
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "paymentAmount",
														"nameLocation": "5512:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "5504:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5504:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"nodeType": "VariableDeclarationStatement",
												"src": "5504:21:8"
											},
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "commissionAmount",
														"nameLocation": "5544:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "5536:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5536:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"nodeType": "VariableDeclarationStatement",
												"src": "5536:24:8"
											},
											{
												"condition": {
													"id": 1449,
													"name": "isFullPayment",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1438,
													"src": "5713:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1560,
													"nodeType": "Block",
													"src": "6869:815:8",
													"statements": [
														{
															"expression": {
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1514,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "6936:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1515,
																	"name": "currentBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "6952:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6936:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1517,
															"nodeType": "ExpressionStatement",
															"src": "6936:30:8"
														},
														{
															"expression": {
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1518,
																	"name": "commissionAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "6981:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7000:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6981:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "6981:20:8"
														},
														{
															"expression": {
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1522,
																		"name": "signBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "7077:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1524,
																	"indexExpression": {
																		"id": 1523,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "7090:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7077:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7101:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7077:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1527,
															"nodeType": "ExpressionStatement",
															"src": "7077:25:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1528,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "7135:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7151:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7135:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1553,
															"nodeType": "IfStatement",
															"src": "7131:461:8",
															"trueBody": {
																"id": 1552,
																"nodeType": "Block",
																"src": "7154:438:8",
																"statements": [
																	{
																		"assignments": [
																			1532
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1532,
																				"mutability": "mutable",
																				"name": "success",
																				"nameLocation": "7353:7:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1552,
																				"src": "7348:12:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1531,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "7348:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1537,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1534,
																					"name": "carrier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7372:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1535,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "7381:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1533,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1700
																				],
																				"referencedDeclaration": 1700,
																				"src": "7363:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7363:32:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7348:47:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1539,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1532,
																					"src": "7422:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5061727469616c2077616765207472616e73666572206661696c6564",
																					"id": 1540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7431:30:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
																						"typeString": "literal_string \"Partial wage transfer failed\""
																					},
																					"value": "Partial wage transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_87f6a6d40239cca229d282cb2f478a1048950b663326c8cb5c7deb3a776e9512",
																						"typeString": "literal_string \"Partial wage transfer failed\""
																					}
																				],
																				"id": 1538,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7414:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7414:48:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1542,
																		"nodeType": "ExpressionStatement",
																		"src": "7414:48:8"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1544,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "7520:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1545,
																					"name": "carrier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "7529:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1546,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "7538:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1547,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1412,
																						"src": "7553:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1548,
																						"name": "paymentAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1444,
																						"src": "7562:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7553:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1543,
																				"name": "PartialWagePaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "7504:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,address,uint256,uint256)"
																				}
																			},
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:72:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1551,
																		"nodeType": "EmitStatement",
																		"src": "7499:77:8"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1555,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "7640:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1556,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "7649:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1557,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "7665:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1554,
																	"name": "LowSignBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "7625:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7625:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1559,
															"nodeType": "EmitStatement",
															"src": "7620:52:8"
														}
													]
												},
												"id": 1561,
												"nodeType": "IfStatement",
												"src": "5709:1975:8",
												"trueBody": {
													"id": 1513,
													"nodeType": "Block",
													"src": "5728:1135:8",
													"statements": [
														{
															"expression": {
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1450,
																	"name": "commissionAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "5780:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1451,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1412,
																					"src": "5800:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1452,
																					"name": "commissionPercent",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1125,
																					"src": "5809:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5800:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1454,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5799:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1455,
																		"name": "BASIS_POINTS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "5830:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5799:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5780:62:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "5780:62:8"
														},
														{
															"expression": {
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1459,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "5857:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1460,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "5873:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1461,
																		"name": "commissionAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5882:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5873:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5857:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1464,
															"nodeType": "ExpressionStatement",
															"src": "5857:41:8"
														},
														{
															"expression": {
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1465,
																		"name": "signBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "5975:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1467,
																	"indexExpression": {
																		"id": 1466,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "5988:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5975:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1468,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "5999:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1469,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "6016:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5999:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5975:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "5975:47:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1473,
																	"name": "commissionAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "6114:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6133:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6114:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1494,
															"nodeType": "IfStatement",
															"src": "6110:386:8",
															"trueBody": {
																"id": 1493,
																"nodeType": "Block",
																"src": "6136:360:8",
																"statements": [
																	{
																		"assignments": [
																			1477
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1477,
																				"mutability": "mutable",
																				"name": "commissionSuccess",
																				"nameLocation": "6274:17:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1493,
																				"src": "6269:22:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1476,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "6269:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1482,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1479,
																					"name": "commissionTreasury",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "6303:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1480,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "6323:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1478,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1700
																				],
																				"referencedDeclaration": 1700,
																				"src": "6294:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6294:46:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6269:71:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1484,
																					"name": "commissionSuccess",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1477,
																					"src": "6367:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "436f6d6d697373696f6e207472616e73666572206661696c6564",
																					"id": 1485,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6386:28:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																						"typeString": "literal_string \"Commission transfer failed\""
																					},
																					"value": "Commission transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																						"typeString": "literal_string \"Commission transfer failed\""
																					}
																				],
																				"id": 1483,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6359:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6359:56:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1487,
																		"nodeType": "ExpressionStatement",
																		"src": "6359:56:8"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1489,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "6454:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1490,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "6463:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1488,
																				"name": "CommissionPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1174,
																				"src": "6439:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6439:41:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1492,
																		"nodeType": "EmitStatement",
																		"src": "6434:46:8"
																	}
																]
															}
														},
														{
															"assignments": [
																1496
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1496,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "6679:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1513,
																	"src": "6674:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1495,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6674:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1501,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1498,
																		"name": "carrier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "6698:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1499,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "6707:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1497,
																	"name": "transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1700
																	],
																	"referencedDeclaration": 1700,
																	"src": "6689:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6689:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6674:47:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1503,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "6744:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "57616765207472616e73666572206661696c6564",
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6753:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
																			"typeString": "literal_string \"Wage transfer failed\""
																		},
																		"value": "Wage transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c0c48aa6075a1836c9331c1c5ec43d8442a4b07aecf313782b608f766589032f",
																			"typeString": "literal_string \"Wage transfer failed\""
																		}
																	],
																	"id": 1502,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6736:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6736:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "6736:40:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1508,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "6819:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1509,
																		"name": "carrier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "6828:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1510,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "6837:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1507,
																	"name": "WagePaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "6810:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6810:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1512,
															"nodeType": "EmitStatement",
															"src": "6805:46:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1563,
															"name": "paymentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "7756:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1564,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "7799:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1565,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "7808:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7799:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7854:14:8",
															"subExpression": {
																"id": 1567,
																"name": "isFullPayment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "7855:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1562,
														"name": "WagePaymentResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "7711:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_WagePaymentResult_$1387_storage_ptr_$",
															"typeString": "type(struct SignToken.WagePaymentResult storage pointer)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"7744:10:8",
														"7784:13:8",
														"7836:16:8"
													],
													"names": [
														"paidAmount",
														"remainingWage",
														"isPartialPayment"
													],
													"nodeType": "FunctionCall",
													"src": "7711:169:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WagePaymentResult_$1387_memory_ptr",
														"typeString": "struct SignToken.WagePaymentResult memory"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1570,
												"nodeType": "Return",
												"src": "7704:176:8"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "4829:300:8",
										"text": " @dev Pays wage to carrier from sign's balance, handles partial payments\n @param tokenId The ID of the sign\n @param carrier Address of the carrier to pay\n @param amount Amount of wage to pay\n @return result WagePaymentResult struct with payment details"
									},
									"functionSelector": "ef9ecc1d",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1415,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1414,
												"name": "onlySignsNFT",
												"nameLocations": [
													"5245:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1265,
												"src": "5245:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5245:12:8"
										},
										{
											"id": 1417,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1416,
												"name": "nonReentrant",
												"nameLocations": [
													"5258:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "5258:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5258:12:8"
										},
										{
											"id": 1419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1418,
												"name": "whenNotPaused",
												"nameLocations": [
													"5271:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5271:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5271:13:8"
										}
									],
									"name": "payWage",
									"nameLocation": "5144:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5170:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5162:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "carrier",
												"nameLocation": "5196:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5188:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5222:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5214:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5151:84:8"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5294:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WagePaymentResult_$1387_memory_ptr",
													"typeString": "struct SignToken.WagePaymentResult"
												},
												"typeName": {
													"id": 1421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1420,
														"name": "WagePaymentResult",
														"nameLocations": [
															"5294:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1387,
														"src": "5294:17:8"
													},
													"referencedDeclaration": 1387,
													"src": "5294:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WagePaymentResult_$1387_storage_ptr",
														"typeString": "struct SignToken.WagePaymentResult"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5293:26:8"
									},
									"scope": 1745,
									"src": "5135:2753:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "8085:165:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1580,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "8100:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8123:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8115:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8115:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8115:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8100:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "8096:58:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1586,
															"name": "InvalidNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "8134:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8134:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1588,
													"nodeType": "RevertStatement",
													"src": "8127:27:8"
												}
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1590,
														"name": "signsNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "8165:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1591,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "8184:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8165:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "8165:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1595,
															"name": "_newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "8230:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1594,
														"name": "NFTContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "8211:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8211:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "EmitStatement",
												"src": "8206:36:8"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "7896:111:8",
										"text": " @dev Updates the SignsNFT contract address\n @param _newAddress New contract address"
									},
									"functionSelector": "2fcdc5fd",
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1577,
												"name": "onlyOwner",
												"nameLocations": [
													"8075:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8075:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8075:9:8"
										}
									],
									"name": "updateSignsNFTContract",
									"nameLocation": "8022:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "_newAddress",
												"nameLocation": "8053:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "8045:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8045:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8044:21:8"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8085:0:8"
									},
									"scope": 1745,
									"src": "8013:237:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "8492:198:8",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8638:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1608,
												"id": 1610,
												"nodeType": "Return",
												"src": "8631:11:8"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "8258:145:8",
										"text": " @dev Checks if an address owns a specific sign\n @param owner Address to check\n @param tokenId Sign ID to check"
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSignOwner",
									"nameLocation": "8418:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8439:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "8431:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8454:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "8446:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8430:32:8"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "8486:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8486:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8485:6:8"
									},
									"scope": 1745,
									"src": "8409:281:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "8770:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1617,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "8781:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8781:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "8781:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1614,
												"name": "onlyOwner",
												"nameLocations": [
													"8760:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8760:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8760:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "8743:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8748:2:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:8"
									},
									"scope": 1745,
									"src": "8734:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "8843:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1626,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "8854:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8854:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "8854:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1623,
												"name": "onlyOwner",
												"nameLocations": [
													"8833:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8833:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8833:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "8814:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8821:2:8"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8843:0:8"
									},
									"scope": 1745,
									"src": "8805:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "9098:192:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1638,
														"name": "newCommissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "9113:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1639,
														"name": "BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "9136:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9113:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "IfStatement",
												"src": "9109:67:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1641,
															"name": "InvalidCommission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "9157:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9157:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1643,
													"nodeType": "RevertStatement",
													"src": "9150:26:8"
												}
											},
											{
												"expression": {
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "commissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "9187:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1646,
														"name": "newCommissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "9207:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9187:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "9187:40:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1650,
															"name": "newCommissionPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "9261:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1649,
														"name": "CommissionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "9243:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9243:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "EmitStatement",
												"src": "9238:44:8"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "8880:137:8",
										"text": " @dev Updates the commission percentage\n @param newCommissionPercent New commission in basis points (1% = 100)"
									},
									"functionSelector": "9d55fba7",
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1635,
												"name": "onlyOwner",
												"nameLocations": [
													"9088:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9088:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9088:9:8"
										}
									],
									"name": "updateCommission",
									"nameLocation": "9032:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "newCommissionPercent",
												"nameLocation": "9057:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "9049:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9049:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9048:30:8"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9098:0:8"
									},
									"scope": 1745,
									"src": "9023:267:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "9491:178:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1662,
														"name": "newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "9506:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9529:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9521:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9521:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9521:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9506:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1671,
												"nodeType": "IfStatement",
												"src": "9502:62:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1668,
															"name": "InvalidTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "9540:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9540:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1670,
													"nodeType": "RevertStatement",
													"src": "9533:31:8"
												}
											},
											{
												"expression": {
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1672,
														"name": "commissionTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "9575:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1673,
														"name": "newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "9596:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9575:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "9575:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1677,
															"name": "newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "9649:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1676,
														"name": "CommissionTreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "9623:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9623:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "EmitStatement",
												"src": "9618:43:8"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "9298:113:8",
										"text": " @dev Updates the commission treasury address\n @param newTreasury New treasury address"
									},
									"functionSelector": "74612f19",
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1659,
												"name": "onlyOwner",
												"nameLocations": [
													"9481:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9481:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9481:9:8"
										}
									],
									"name": "updateCommissionTreasury",
									"nameLocation": "9426:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "9459:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "9451:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9451:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9450:21:8"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9491:0:8"
									},
									"scope": 1745,
									"src": "9417:252:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "9893:52:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "9926:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "9930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1693,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "9911:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SignToken_$1745_$",
																"typeString": "type(contract super SignToken)"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9917:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "9911:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9911:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1698,
												"nodeType": "Return",
												"src": "9904:33:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1689,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1688,
												"name": "whenNotPaused",
												"nameLocations": [
													"9848:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "9848:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9848:13:8"
										}
									],
									"name": "transfer",
									"nameLocation": "9747:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1687,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9829:8:8"
									},
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9764:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "9756:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9756:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9776:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "9768:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9755:28:8"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "9881:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9881:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9880:6:8"
									},
									"scope": 1745,
									"src": "9738:207:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "10120:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "10157:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "10163:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "10167:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1714,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "10138:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SignToken_$1745_$",
																"typeString": "type(contract super SignToken)"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10144:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "10138:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1713,
												"id": 1720,
												"nodeType": "Return",
												"src": "10131:43:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1709,
												"name": "whenNotPaused",
												"nameLocations": [
													"10077:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "10077:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10077:13:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "9962:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1708,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10059:8:8"
									},
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9983:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "9975:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9975:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9997:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "9989:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10009:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "10001:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10001:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9974:42:8"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "10109:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10109:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10108:6:8"
									},
									"scope": 1745,
									"src": "9953:229:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "10326:114:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1732,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "10369:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1731,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "10359:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10359:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1735,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "10400:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1738,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10415:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SignToken_$1745",
																				"typeString": "contract SignToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SignToken_$1745",
																				"typeString": "contract SignToken"
																			}
																		],
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10407:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1736,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10407:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10407:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1734,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "10390:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10390:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1741,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10344:88:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1742,
												"nodeType": "Return",
												"src": "10337:95:8"
											}
										]
									},
									"functionSelector": "1ec48cf7",
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApprovalInfo",
									"nameLocation": "10203:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10227:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "10219:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10218:15:8"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "10275:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "10267:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "contractAllowance",
												"nameLocation": "10301:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "10293:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10293:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10256:69:8"
									},
									"scope": 1745,
									"src": "10194:246:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1746,
							"src": "416:10027:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1176,
								1178,
								1180,
								1182,
								1184,
								1186,
								1188,
								1190
							],
							"usedEvents": [
								24,
								295,
								300,
								984,
								993,
								1140,
								1148,
								1156,
								1160,
								1164,
								1168,
								1174,
								1395,
								1405
							]
						}
					],
					"src": "33:10410:8"
				},
				"id": 8
			}
		}
	}
}